import { Overlay } from '@angular/cdk/overlay';
import { ComponentPortal } from '@angular/cdk/portal';
import { Component, Input } from '@angular/core';
import { LightboxOverlayComponent } from './lightbox-overlay.component';
export class LightboxComponent {
    constructor(overlay) {
        this.overlay = overlay;
        this.imageUrls = new Array();
        this.forceFullscreen = false;
        this.forceShowNavButtons = false;
        this.imageSize = 'cover';
        this.autoPlay = false;
        this.autoPlayInterval = 5000;
        this.transitionDuration = 1000;
        this.transitionType = 'split';
        this.sizeX = 50.0;
        this.sizeY = 50.0;
        this.width = 0.5;
        this.intensity = 40.0;
    }
    ngOnInit() {
    }
    open(index = 0) {
        // Define settings of the overlay
        this.overlayRef = this.overlay.create({
            hasBackdrop: true,
            positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically(),
            scrollStrategy: this.overlay.scrollStrategies.block()
        });
        // Listen to backdrop event for detaching the overlay
        this.overlayRef.backdropClick().subscribe({
            next: () => { var _a; (_a = this.overlayRef) === null || _a === void 0 ? void 0 : _a.detach(); }
        });
        // Attach the LightboxOverlayComponent to the overlayRef instance
        const lightboxOverlayRef = this.overlayRef.attach(new ComponentPortal(LightboxOverlayComponent));
        // Pass data to the LightboxOverlayComponent
        lightboxOverlayRef.instance.overlayRef = this.overlayRef;
        lightboxOverlayRef.instance.imageUrls = this.imageUrls;
        lightboxOverlayRef.instance.forceFullscreen = this.forceFullscreen;
        lightboxOverlayRef.instance.forceShowNavButtons = this.forceShowNavButtons;
        lightboxOverlayRef.instance.imageSize = this.imageSize;
        lightboxOverlayRef.instance.autoPlay = this.autoPlay;
        lightboxOverlayRef.instance.autoPlayInterval = this.autoPlayInterval;
        lightboxOverlayRef.instance.transitionDuration = this.transitionDuration;
        lightboxOverlayRef.instance.transitionType = this.transitionType;
        lightboxOverlayRef.instance.sizeX = this.sizeX;
        lightboxOverlayRef.instance.sizeY = this.sizeY;
        lightboxOverlayRef.instance.width = this.width;
        lightboxOverlayRef.instance.intensity = this.intensity;
        lightboxOverlayRef.instance.startIndex = index;
    }
    close() {
        var _a;
        (_a = this.overlayRef) === null || _a === void 0 ? void 0 : _a.detach();
    }
}
LightboxComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-lightbox',
                template: ''
            },] }
];
LightboxComponent.ctorParameters = () => [
    { type: Overlay }
];
LightboxComponent.propDecorators = {
    imageUrls: [{ type: Input }],
    forceFullscreen: [{ type: Input }],
    forceShowNavButtons: [{ type: Input }],
    imageSize: [{ type: Input }],
    autoPlay: [{ type: Input }],
    autoPlayInterval: [{ type: Input }],
    transitionDuration: [{ type: Input }],
    transitionType: [{ type: Input }],
    sizeX: [{ type: Input }],
    sizeY: [{ type: Input }],
    width: [{ type: Input }],
    intensity: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHRib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWFjdXcvc3JjL2xpYi9saWdodGJveC9saWdodGJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBYyxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQU14RSxNQUFNLE9BQU8saUJBQWlCO0lBaUI1QixZQUFvQixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBZjNCLGNBQVMsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO1FBQ2hDLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1QixjQUFTLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIscUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUMxQixtQkFBYyxHQUFHLE9BQU8sQ0FBQztRQUN6QixVQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2IsVUFBSyxHQUFHLElBQUksQ0FBQztRQUNiLFVBQUssR0FBRyxHQUFHLENBQUM7UUFDWixjQUFTLEdBQUcsSUFBSSxDQUFDO0lBSWMsQ0FBQztJQUV6QyxRQUFRO0lBQ1IsQ0FBQztJQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQztRQUNaLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1lBQ3BDLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLGdCQUFnQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxRixjQUFjLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUU7U0FDdEQsQ0FBQyxDQUFDO1FBRUgscURBQXFEO1FBQ3JELElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ3hDLElBQUksRUFBRSxHQUFHLEVBQUUsV0FBRyxNQUFBLElBQUksQ0FBQyxVQUFVLDBDQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztTQUMzQyxDQUFDLENBQUM7UUFFSCxpRUFBaUU7UUFDakUsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGVBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7UUFFakcsNENBQTRDO1FBQzVDLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6RCxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDdkQsa0JBQWtCLENBQUMsUUFBUSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQ25FLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7UUFDM0Usa0JBQWtCLENBQUMsUUFBUSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3ZELGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyRCxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQ3JFLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDekUsa0JBQWtCLENBQUMsUUFBUSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQ2pFLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUMvQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDL0Msa0JBQWtCLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQy9DLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN2RCxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUNqRCxDQUFDO0lBRUQsS0FBSzs7UUFDSCxNQUFBLElBQUksQ0FBQyxVQUFVLDBDQUFFLE1BQU0sRUFBRSxDQUFDO0lBQzVCLENBQUM7OztZQTdERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQVJRLE9BQU87Ozt3QkFXYixLQUFLOzhCQUNMLEtBQUs7a0NBQ0wsS0FBSzt3QkFDTCxLQUFLO3VCQUNMLEtBQUs7K0JBQ0wsS0FBSztpQ0FDTCxLQUFLOzZCQUNMLEtBQUs7b0JBQ0wsS0FBSztvQkFDTCxLQUFLO29CQUNMLEtBQUs7d0JBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE92ZXJsYXksIE92ZXJsYXlSZWYgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDb21wb25lbnRQb3J0YWwgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTGlnaHRib3hPdmVybGF5Q29tcG9uZW50IH0gZnJvbSAnLi9saWdodGJveC1vdmVybGF5LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1saWdodGJveCcsXG4gIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBMaWdodGJveENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgaW1hZ2VVcmxzID0gbmV3IEFycmF5PHN0cmluZz4oKTtcbiAgQElucHV0KCkgZm9yY2VGdWxsc2NyZWVuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGZvcmNlU2hvd05hdkJ1dHRvbnMgPSBmYWxzZTtcbiAgQElucHV0KCkgaW1hZ2VTaXplID0gJ2NvdmVyJztcbiAgQElucHV0KCkgYXV0b1BsYXkgPSBmYWxzZTtcbiAgQElucHV0KCkgYXV0b1BsYXlJbnRlcnZhbCA9IDUwMDA7XG4gIEBJbnB1dCgpIHRyYW5zaXRpb25EdXJhdGlvbiA9IDEwMDA7XG4gIEBJbnB1dCgpIHRyYW5zaXRpb25UeXBlID0gJ3NwbGl0JztcbiAgQElucHV0KCkgc2l6ZVggPSA1MC4wO1xuICBASW5wdXQoKSBzaXplWSA9IDUwLjA7XG4gIEBJbnB1dCgpIHdpZHRoID0gMC41O1xuICBASW5wdXQoKSBpbnRlbnNpdHkgPSA0MC4wO1xuXG4gIHByaXZhdGUgb3ZlcmxheVJlZj86IE92ZXJsYXlSZWY7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBvdmVybGF5OiBPdmVybGF5KSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIG9wZW4oaW5kZXggPSAwKSB7XG4gICAgLy8gRGVmaW5lIHNldHRpbmdzIG9mIHRoZSBvdmVybGF5XG4gICAgdGhpcy5vdmVybGF5UmVmID0gdGhpcy5vdmVybGF5LmNyZWF0ZSh7XG4gICAgICBoYXNCYWNrZHJvcDogdHJ1ZSxcbiAgICAgIHBvc2l0aW9uU3RyYXRlZ3k6IHRoaXMub3ZlcmxheS5wb3NpdGlvbigpLmdsb2JhbCgpLmNlbnRlckhvcml6b250YWxseSgpLmNlbnRlclZlcnRpY2FsbHkoKSxcbiAgICAgIHNjcm9sbFN0cmF0ZWd5OiB0aGlzLm92ZXJsYXkuc2Nyb2xsU3RyYXRlZ2llcy5ibG9jaygpXG4gICAgfSk7XG5cbiAgICAvLyBMaXN0ZW4gdG8gYmFja2Ryb3AgZXZlbnQgZm9yIGRldGFjaGluZyB0aGUgb3ZlcmxheVxuICAgIHRoaXMub3ZlcmxheVJlZi5iYWNrZHJvcENsaWNrKCkuc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6ICgpID0+IHsgdGhpcy5vdmVybGF5UmVmPy5kZXRhY2goKTsgfVxuICAgIH0pO1xuXG4gICAgLy8gQXR0YWNoIHRoZSBMaWdodGJveE92ZXJsYXlDb21wb25lbnQgdG8gdGhlIG92ZXJsYXlSZWYgaW5zdGFuY2VcbiAgICBjb25zdCBsaWdodGJveE92ZXJsYXlSZWYgPSB0aGlzLm92ZXJsYXlSZWYuYXR0YWNoKG5ldyBDb21wb25lbnRQb3J0YWwoTGlnaHRib3hPdmVybGF5Q29tcG9uZW50KSk7XG5cbiAgICAvLyBQYXNzIGRhdGEgdG8gdGhlIExpZ2h0Ym94T3ZlcmxheUNvbXBvbmVudFxuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS5vdmVybGF5UmVmID0gdGhpcy5vdmVybGF5UmVmO1xuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS5pbWFnZVVybHMgPSB0aGlzLmltYWdlVXJscztcbiAgICBsaWdodGJveE92ZXJsYXlSZWYuaW5zdGFuY2UuZm9yY2VGdWxsc2NyZWVuID0gdGhpcy5mb3JjZUZ1bGxzY3JlZW47XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLmZvcmNlU2hvd05hdkJ1dHRvbnMgPSB0aGlzLmZvcmNlU2hvd05hdkJ1dHRvbnM7XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLmltYWdlU2l6ZSA9IHRoaXMuaW1hZ2VTaXplO1xuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS5hdXRvUGxheSA9IHRoaXMuYXV0b1BsYXk7XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLmF1dG9QbGF5SW50ZXJ2YWwgPSB0aGlzLmF1dG9QbGF5SW50ZXJ2YWw7XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRoaXMudHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS50cmFuc2l0aW9uVHlwZSA9IHRoaXMudHJhbnNpdGlvblR5cGU7XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLnNpemVYID0gdGhpcy5zaXplWDtcbiAgICBsaWdodGJveE92ZXJsYXlSZWYuaW5zdGFuY2Uuc2l6ZVkgPSB0aGlzLnNpemVZO1xuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS53aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgbGlnaHRib3hPdmVybGF5UmVmLmluc3RhbmNlLmludGVuc2l0eSA9IHRoaXMuaW50ZW5zaXR5O1xuICAgIGxpZ2h0Ym94T3ZlcmxheVJlZi5pbnN0YW5jZS5zdGFydEluZGV4ID0gaW5kZXg7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLm92ZXJsYXlSZWY/LmRldGFjaCgpO1xuICB9XG59XG4iXX0=