{"version":3,"file":"ngx-acuw.js","sources":["../../../projects/ngx-acuw/src/lib/image-as-particles/scripts/touch-texture.ts","../../../projects/ngx-acuw/src/lib/image-as-particles/scripts/shaders.ts","../../../projects/ngx-acuw/src/lib/tween/rxjs-tween.ts","../../../projects/ngx-acuw/src/lib/image-as-particles/image-as-particles.component.ts","../../../projects/ngx-acuw/src/lib/image-as-particles/image-as-particles.module.ts","../../../projects/ngx-acuw/src/lib/image-transition/shaders/imageTransitionShaders.ts","../../../projects/ngx-acuw/src/lib/image-transition/image-transition.component.ts","../../../projects/ngx-acuw/src/lib/image-transition/image-transition.module.ts","../../../projects/ngx-acuw/src/lib/lightbox/lightbox-overlay.component.ts","../../../projects/ngx-acuw/src/lib/lightbox/lightbox.component.ts","../../../projects/ngx-acuw/src/lib/lightbox/lightbox.module.ts","../../../projects/ngx-acuw/src/lib/controls/object-controls.ts","../../../projects/ngx-acuw/src/lib/carousel/carousel.component.ts","../../../projects/ngx-acuw/src/lib/carousel/carousel.module.ts","../../../projects/ngx-acuw/src/public-api.ts","../../../projects/ngx-acuw/src/ngx-acuw.ts"],"sourcesContent":["import { Texture } from 'three';\nimport { Trail } from './trail';\n\nexport class TouchTexture {\n  // Variables\n  private size: number;\n  private maxAge: number;\n  private radius: number;\n  private trail: Trail[];\n  private canvas!: HTMLCanvasElement;\n  private ctx!: CanvasRenderingContext2D;\n  public texture!: Texture;\n\n  constructor() {\n    this.size = 64;\n    this.maxAge = 120;\n    this.radius = 0.15;\n    this.trail = new Array<Trail>();\n\n    this.initTexture();\n  }\n\n  /**\n   * Initializes the texture for the touch area\n   */\n  initTexture(): void {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.texture = new Texture(this.canvas);\n\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  /**\n   * Updates the trail\n   */\n  update(): void {\n    this.clear();\n\n    // age points\n    this.trail.forEach((point, i) => {\n      point.age++;\n      // remove old\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    });\n\n    this.trail.forEach((point, i) => {\n      this.drawTouch(point);\n    });\n\n    this.texture.needsUpdate = true;\n  }\n\n  clear(): void {\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(px: number, py: number): void {\n    let force = 0;\n    const last = this.trail[this.trail.length - 1];\n    if (last) {\n      const dx = last.x - px;\n      const dy = last.y - py;\n      const dd = dx * dx + dy * dy;\n      force = Math.min(dd * 10000, 1);\n    }\n    this.trail.push({ x: px, y: py, age: 0, force });\n  }\n\n  drawTouch(point: Trail): void {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n\n    let intensity = 1;\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.easeOutSine(point.age / (this.maxAge * 0.3), 0, 1, 1);\n    } else {\n      intensity = this.easeOutSine(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7), 0, 1, 1);\n    }\n\n    intensity *= point.force;\n\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, radius * 0.25, pos.x, pos.y, radius);\n    grd.addColorStop(0, `rgba(255, 255, 255, 0.2)`);\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0.0)');\n\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n  private easeOutSine(t: number, b: number, c: number, d: number): number {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n}\n","export class Shaders {\n    particleVertex = `\n    // @author brunoimbrizi / http://brunoimbrizi.com\n\n    precision highp float;\n    #define GLSLIFY 1\n\n    attribute float pindex;\n    attribute vec3 position;\n    attribute vec3 offset;\n    attribute vec2 uv;\n    attribute float angle;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    uniform float uTime;\n    uniform float uRandom;\n    uniform float uDepth;\n    uniform float uSize;\n    uniform vec2 uTextureSize;\n    uniform sampler2D uTexture;\n    uniform sampler2D uTouch;\n\n    varying vec2 vPUv;\n    varying vec2 vUv;\n\n    //\n    // Description : Array and textureless GLSL 2D simplex noise function.\n    //      Author : Ian McEwan, Ashima Arts.\n    //  Maintainer : ijm\n    //     Lastmod : 20110822 (ijm)\n    //     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n    //               Distributed under the MIT License. See LICENSE file.\n    //               https://github.com/ashima/webgl-noise\n    //\n\n    vec3 mod289_1_0(vec3 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec2 mod289_1_0(vec2 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec3 permute_1_1(vec3 x) {\n      return mod289_1_0(((x*34.0)+1.0)*x);\n    }\n\n    float snoise_1_2(vec2 v)\n      {\n      const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                          0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                         -0.577350269189626,  // -1.0 + 2.0 * C.x\n                          0.024390243902439); // 1.0 / 41.0\n    // First corner\n      vec2 i  = floor(v + dot(v, C.yy) );\n      vec2 x0 = v -   i + dot(i, C.xx);\n\n    // Other corners\n      vec2 i1;\n      //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n      //i1.y = 1.0 - i1.x;\n      i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n      // x0 = x0 - 0.0 + 0.0 * C.xx ;\n      // x1 = x0 - i1 + 1.0 * C.xx ;\n      // x2 = x0 - 1.0 + 2.0 * C.xx ;\n      vec4 x12 = x0.xyxy + C.xxzz;\n      x12.xy -= i1;\n\n     // Permutations\n      i = mod289_1_0(i); // Avoid truncation effects in permutation\n      vec3 p = permute_1_1( permute_1_1( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n      vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n      m = m*m ;\n      m = m*m ;\n\n    // Gradients: 41 points uniformly over a line, mapped onto a diamond.\n    // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n      vec3 x = 2.0 * fract(p * C.www) - 1.0;\n      vec3 h = abs(x) - 0.5;\n      vec3 ox = floor(x + 0.5);\n      vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt( a0*a0 + h*h );\n      m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    // Compute final noise value at P\n      vec3 g;\n      g.x  = a0.x  * x0.x  + h.x  * x0.y;\n      g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n      return 130.0 * dot(m, g);\n    }\n\n    float random(float n) {\n      return fract(sin(n) * 43758.5453123);\n    }\n\n    void main() {\n      vUv = uv;\n\n      // particle uv\n      vec2 puv = offset.xy / uTextureSize;\n      vPUv = puv;\n\n      // pixel color\n      vec4 colA = texture2D(uTexture, puv);\n      float grey = colA.r * 0.21 + colA.g * 0.71 + colA.b * 0.07;\n\n      // displacement\n      vec3 displaced = offset;\n      // randomise\n      displaced.xy += vec2(random(pindex) - 0.5, random(offset.x + pindex) - 0.5) * uRandom;\n      float rndz = (random(pindex) + snoise_1_2(vec2(pindex * 0.1, uTime * 0.1)));\n      displaced.z += rndz * (random(pindex) * 2.0 * uDepth);\n      // center\n      displaced.xy -= uTextureSize * 0.5;\n\n      // touch\n      float t = texture2D(uTouch, puv).r;\n      displaced.z += t * 20.0 * rndz;\n      displaced.x += cos(angle) * t * 20.0 * rndz;\n      displaced.y += sin(angle) * t * 20.0 * rndz;\n\n      // particle size\n      float psize = (snoise_1_2(vec2(uTime, pindex) * 0.5) + 2.0);\n      psize *= max(grey, 0.2);\n      psize *= uSize;\n\n      // final position\n      vec4 mvPosition = modelViewMatrix * vec4(displaced, 1.0);\n      mvPosition.xyz += position * psize;\n      vec4 finalPosition = projectionMatrix * mvPosition;\n\n      gl_Position = finalPosition;\n    }\n    `;\n\n    particleFragment = `\n    // @author brunoimbrizi / http://brunoimbrizi.com\n\n    precision highp float;\n    #define GLSLIFY 1\n\n    uniform sampler2D uTexture;\n\n    varying vec2 vPUv;\n    varying vec2 vUv;\n\n    void main() {\n      vec4 color = vec4(0.0);\n      vec2 uv = vUv;\n      vec2 puv = vPUv;\n\n      // pixel color\n      vec4 colA = texture2D(uTexture, puv);\n\n      // greyscale\n      float grey = colA.r * 0.21 + colA.g * 0.71 + colA.b * 0.07;\n      //vec4 colB = vec4(grey, grey, grey, 1.0);\n      vec4 colB = vec4(colA.r, colA.g, colA.b, 1.0);\n\n      // circle\n      float border = 0.3;\n      float radius = 0.5;\n      float dist = radius - distance(uv, vec2(0.5));\n      float t = smoothstep(0.0, border, dist);\n\n      // final color\n      color = colB;\n      color.a = t;\n\n      gl_FragColor = color;\n    }\n    `;\n}\n","import { Observable, Observer } from 'rxjs';\n\nexport module RxjsTween {\n    /**\n     * Creates an observable that emits samples from an easing function on every animation frame\n     * for a duration `d` ms.\n     *\n     * The first value will be emitted on the next animation frame,\n     * and is the value of the easing function at `t = 0`.\n     * The final value is guaranteed to be the easing function at `t = d`.\n     * The observable completes one frame after the final value was emitted.\n     * @param easingFunction the easing fuction to sample\n     * @param b beginning value and 2nd parameter of the easing function\n     * @param c change in value (or end value) and 3rd parameter of the easing function\n     * @param d total duration of the tween in ms and 4th parameter of the easing function\n     * @param s 5th parameter of the easing function (optional)\n     */\n    export function createTween(easingFunction: (t: number, b: number, pc: number, d: number, s?: number) => number,\n                                b: number[], c: number[], d: number, s?: number): Observable<number[]>;\n    export function createTween(easingFunction: (t: number, b: number, pc: number, d: number, s?: number) => number,\n                                b: number, c: number, d: number, s?: number): Observable<number>;\n    export function createTween(easingFunction: (t: number, b: number, pc: number, d: number, s?: number) => number,\n                                b: any, c: any, d: number, s?: number): Observable<any> {\n        return new Observable((observer: Observer<number | number[]>) => {\n            let startTime: number;\n            const sample = (time: number): void => {\n                startTime = startTime || time;\n                const t = time - startTime;\n                if (t < d) {\n                    if (Array.isArray(b) && Array.isArray(c)) {\n                        const tweenVals: number[] = new Array<number>();\n                        for (let idx = 0; idx < b.length; idx++) {\n                            tweenVals.push(easingFunction(t, b[idx], c[idx], d, s));\n                        }\n                        observer.next(tweenVals);\n                    }else {\n                        observer.next(easingFunction(t, b, c, d, s));\n                    }\n                    // Request the animation frame again\n                    requestAnimationFrame(sample);\n                } else {\n                    // End value reached\n                    if (Array.isArray(b) && Array.isArray(c)) {\n                        const tweenVals: number[] = new Array<number>();\n                        for (let idx = 0; idx < b.length; idx++) {\n                            tweenVals.push(c[idx]);\n                        }\n                        // Emitt end value of arry\n                        observer.next(tweenVals);\n                    }else{\n                        // Emitt end value\n                        observer.next(c);\n                    }\n                    // Complete the observable\n                    observer.complete();\n                }\n            }\n            // Initially request the animation frame\n            requestAnimationFrame(sample);\n        });\n    }\n\n    export function linear(t: number, b: number, pc: number, d: number): number {\n        const c = pc - b;\n        return c * t / d + b;\n    }\n\n    export function easeInOutQuad(t: number, b: number, pc: number, d: number): number {\n        const c = pc - b;\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t + b;\n        } else {\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        }\n    }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit, Input, OnDestroy, HostListener, NgZone, DoCheck } from '@angular/core';\nimport { BufferAttribute, Clock, InstancedBufferAttribute, InstancedBufferGeometry, LinearFilter, Mesh, MeshBasicMaterial, PerspectiveCamera, PlaneGeometry, Raycaster, RGBFormat, Scene, TextureLoader, Vector2, WebGLRenderer } from 'three';\nimport { Object3D, RawShaderMaterial, Texture } from 'three';\nimport { TouchTexture } from './scripts/touch-texture';\nimport { Shaders } from './scripts/shaders';\nimport { RxjsTween } from '../tween/rxjs-tween';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'lib-image-as-particles',\n  template: `\n    <div #container class=\"threejs-container\" [style.background-color]=\"backgroundColor\"\n                      [style.justify-content]=\"justifyContent\"\n                      [style.align-items]=\"alignItems\"\n                      (mousemove)=\"onMouseMove($event)\" (touchmove)=\"onTouchMove($event)\"></div>\n    <div *ngIf=\"showTouchGestureInfo==true\" class=\"touch-gesture-info\" [@showHideGestureInformation]>\n      <div>\n        <span>Use two fingers for touch animation</span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\">\n          <g><rect fill=\"none\" height=\"24\" width=\"24\" x=\"0\"/></g><g><g><g>\n            <path d=\"M9,11.24V7.5C9,6.12,10.12,5,11.5,5S14,6.12,14,7.5v3.74c1.21-0.81,2-2.18,2-3.74C16,5.01,13.99,3,11.5,3S7,5.01,7,7.5 C7,9.06,7.79,10.43,9,11.24z M18.84,15.87l-4.54-2.26c-0.17-0.07-0.35-0.11-0.54-0.11H13v-6C13,6.67,12.33,6,11.5,6 S10,6.67,10,7.5v10.74c-3.6-0.76-3.54-0.75-3.67-0.75c-0.31,0-0.59,0.13-0.79,0.33l-0.79,0.8l4.94,4.94 C9.96,23.83,10.34,24,10.75,24h6.79c0.75,0,1.33-0.55,1.44-1.28l0.75-5.27c0.01-0.07,0.02-0.14,0.02-0.2 C19.75,16.63,19.37,16.09,18.84,15.87z\"/></g></g></g>\n          </svg>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .threejs-container{\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      background-color: #222222;\n    }\n\n    .touch-gesture-info{\n      position: absolute;\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      top: 20px;\n      color: white;\n    }\n\n    .touch-gesture-info div{\n      background-color: rgba(0,0,0,0.3);\n      display: flex;\n      flex-direction: row;\n      padding: 6px 10px 6px 10px;\n      border-radius: 5px;\n    }\n  `],\n  animations: [\n    trigger('showHideGestureInformation', [\n      transition(':enter', [\n        style({ opacity: '0' }),\n        animate('300ms ease-in', style({ opacity: '1' }))\n      ]),\n      transition(':leave', [\n        style({ opacity: '1' }),\n        animate('300ms ease-in', style({ opacity: '0' }))\n      ])\n    ])\n  ]\n})\nexport class ImageAsParticlesComponent implements AfterViewInit, OnDestroy {\n\n  // Declare variables\n  private renderer: WebGLRenderer = new WebGLRenderer({ antialias: true, alpha: true });\n  private scene: Scene = new Scene();\n  private camera!: PerspectiveCamera;\n  private clock: Clock = new Clock(true);\n  private texture: Texture = new Texture();\n  private mesh!: Mesh;\n  private hitArea!: Mesh;\n  private width = 0;\n  private height = 0;\n  private touch: TouchTexture = new TouchTexture();\n  private mouse: Vector2 = new Vector2();\n  private raycaster: Raycaster = new Raycaster();\n  private pImageUrl = '';\n  private pImageChanging = false;\n  private gestureInfo$: Observable<number> = interval(2000);\n  private gestureInfoSubscription: Subscription = new Subscription();\n  showTouchGestureInfo = false;\n  justifyContent = 'center';\n  alignItems = 'center';\n\n  // Inputs\n  @Input()\n  set imageUrl(imageUrl: string) {\n    this.pImageUrl = imageUrl;\n    if (this.pImageChanging === true) { return; }\n    if (this.mesh != null) {\n      this.pImageChanging = true;\n      this.triggerImageChange();\n    }\n  }\n  get imageUrl(): string { return this.pImageUrl; }\n  @Input() backgroundColor = '#000000';\n  @Input() imageWidth = '100%';\n  @Input() imageHeight = '100%';\n  @Input()\n  set horizontalAlignment(horizontalAlignment: string) {\n    switch (horizontalAlignment) {\n      case 'start':\n        this.justifyContent = 'flex-start';\n        break;\n      case 'center':\n        this.justifyContent = 'center';\n        break;\n      case 'end':\n        this.justifyContent = 'flex-end';\n        break;\n      default:\n        this.justifyContent = 'center';\n        break;\n    }\n  }\n  get horizontalAlignment(): string { return this.justifyContent; }\n  @Input()\n  set verticalAlignment(verticalAlignment: string) {\n    switch (verticalAlignment) {\n      case 'top':\n        this.alignItems = 'flex-start';\n        break;\n      case 'center':\n        this.alignItems = 'center';\n        break;\n      case 'bottom':\n        this.alignItems = 'flex-end';\n        break;\n      default:\n        this.alignItems = 'center';\n        break;\n    }\n  }\n  get verticalAlignment(): string { return this.alignItems; }\n  @Input() animationEnabled = true;\n\n  @ViewChild('container') canvasRef!: ElementRef;\n\n  constructor(private ngZone: NgZone) {\n  }\n\n  ngAfterViewInit(): void {\n    if (this.pImageUrl === '') { return; }\n\n    const canvasWidth = this.canvasRef.nativeElement.clientWidth;\n    const canvasHeight = this.canvasRef.nativeElement.clientHeight;\n    // Set camera\n    this.camera = new PerspectiveCamera(50, canvasWidth / canvasHeight, 1, 10000);\n    this.camera.position.z = 300;\n    // Init particles\n    this.initParticles(this.pImageUrl);\n    // Init renderer\n    this.renderer.setSize(canvasWidth - 1, canvasHeight);\n    this.canvasRef.nativeElement.appendChild(this.renderer.domElement);\n    // Start animation\n    this.animate();\n  }\n\n  ngOnDestroy(): void {\n    this.scene.clear();\n    this.renderer.clear();\n    this.texture.dispose();\n    this.renderer.dispose();\n  }\n\n  /**\n   * Creates the particles depending on the image and initializes the touch canvas\n   * @param url url of the image\n   */\n  private initParticles(url: string): void {\n    const loader = new TextureLoader();\n    loader.load(url, (texture) => {\n      this.texture = texture;\n      this.texture.minFilter = LinearFilter;\n      this.texture.magFilter = LinearFilter;\n      this.texture.format = RGBFormat;\n\n      this.width = texture.image.width;\n      this.height = texture.image.height;\n\n      this.initPoints(true);\n      this.initHitArea();\n      this.initTouch();\n      this.resize();\n      this.show();\n    });\n  }\n\n  /**\n   * Initializes the points\n   * @param discard discard pixels darker than threshold #22\n   */\n  private initPoints(discard: boolean): void {\n    const numPoints: number = this.width * this.height;\n\n    let numVisible = numPoints;\n    let threshold = 0;\n    let originalColors = new Float32Array();\n\n    if (discard) {\n      // discard pixels darker than threshold #22\n      numVisible = 0;\n      threshold = 34;\n\n      const img = this.texture.image;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      canvas.width = this.width;\n      canvas.height = this.height;\n      if (ctx != null) {\n        ctx.scale(1, -1);\n        ctx.drawImage(img, 0, 0, this.width, this.height * -1);\n        const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        originalColors = Float32Array.from(imgData.data);\n\n        for (let i = 0; i < numPoints; i++) {\n          if (originalColors[i * 4 + 0] > threshold) { numVisible++; }\n        }\n      }\n    }\n\n    const uniforms = {\n      uTime: { value: 0 },\n      uRandom: { value: 1.0 },\n      uDepth: { value: 2.0 },\n      uSize: { value: 0.0 },\n      uTextureSize: { value: new Vector2(this.width, this.height) },\n      uTexture: { value: this.texture },\n      uTouch: { value: null },\n    };\n\n    const shaders = new Shaders();\n    const material = new RawShaderMaterial({\n      uniforms,\n      vertexShader: shaders.particleVertex,\n      fragmentShader: shaders.particleFragment,\n      depthTest: false,\n      transparent: true,\n      // blending: THREE.AdditiveBlending\n    });\n\n    const geometry = new InstancedBufferGeometry();\n\n    // positions\n    const positions = new BufferAttribute(new Float32Array(4 * 3), 3);\n    positions.setXYZ(0, -0.5, 0.5, 0.0);\n    positions.setXYZ(1, 0.5, 0.5, 0.0);\n    positions.setXYZ(2, -0.5, -0.5, 0.0);\n    positions.setXYZ(3, 0.5, -0.5, 0.0);\n    geometry.setAttribute('position', positions);\n\n    // uvs\n    const uvs = new BufferAttribute(new Float32Array(4 * 2), 2);\n    uvs.setXY(0, 0.0, 0.0);\n    uvs.setXY(1, 1.0, 0.0);\n    uvs.setXY(2, 0.0, 1.0);\n    uvs.setXY(3, 1.0, 1.0);\n    geometry.setAttribute('uv', uvs);\n\n    // index\n    geometry.setIndex(new BufferAttribute(new Uint16Array([0, 2, 1, 2, 3, 1]), 1));\n\n    const indices = new Uint16Array(numVisible);\n    const offsets = new Float32Array(numVisible * 3);\n    const angles = new Float32Array(numVisible);\n\n    for (let i = 0, j = 0; i < numPoints; i++) {\n      if (discard && originalColors[i * 4 + 0] <= threshold) { continue; }\n\n      offsets[j * 3 + 0] = i % this.width;\n      offsets[j * 3 + 1] = Math.floor(i / this.width);\n\n      indices[j] = i;\n\n      angles[j] = Math.random() * Math.PI;\n\n      j++;\n    }\n\n    geometry.setAttribute('pindex', new InstancedBufferAttribute(indices, 1, false));\n    geometry.setAttribute('offset', new InstancedBufferAttribute(offsets, 3, false));\n    geometry.setAttribute('angle', new InstancedBufferAttribute(angles, 1, false));\n\n    this.mesh = new Mesh(geometry, material);\n    const object3d = new Object3D();\n    object3d.add(this.mesh);\n    this.scene.add(object3d);\n  }\n\n  /**\n   * Initializes the touch area\n   */\n  private initTouch(): void {\n    (this.mesh.material as RawShaderMaterial).uniforms.uTouch.value = this.touch.texture;\n  }\n\n  /**\n   * Initializes the hit area\n   */\n  private initHitArea(): void {\n    const geometry = new PlaneGeometry(this.width, this.height, 1, 1);\n    const material = new MeshBasicMaterial({ color: 0xFFFFFF, wireframe: true, depthTest: false });\n    material.visible = false;\n    this.hitArea = new Mesh(geometry, material);\n    this.mesh.add(this.hitArea);\n  }\n\n  /**\n   * animation for showing the particles\n   * @param time time of animation in ms\n   */\n  private show(time: number = 1000): void {\n    // Tween in\n    this.ngZone.runOutsideAngular(() => {\n      RxjsTween.createTween(RxjsTween.easeInOutQuad, [0.5, 0.0, 70.0], [1.5, 2.0, 4.0], time).subscribe(val => {\n        (this.mesh.material as RawShaderMaterial).uniforms.uSize.value = val[0];\n        (this.mesh.material as RawShaderMaterial).uniforms.uRandom.value = val[1];\n        (this.mesh.material as RawShaderMaterial).uniforms.uDepth.value = val[2];\n      }, () => { }, () => {\n        this.pImageChanging = false;\n      });\n    });\n  }\n\n  /**\n   * animation for tween out the particles and destroy everything\n   * @param time time of animation in ms\n   */\n  private triggerImageChange(time: number = 1000): void {\n    const uSizeStart = (this.mesh.material as RawShaderMaterial).uniforms.uSize.value;\n    const uRandomStart = (this.mesh.material as RawShaderMaterial).uniforms.uRandom.value;\n    const uDepth = (this.mesh.material as RawShaderMaterial).uniforms.uDepth.value;\n    this.ngZone.runOutsideAngular(() => {\n      // Tween out\n      RxjsTween.createTween(RxjsTween.easeInOutQuad, [uSizeStart, uRandomStart, uDepth], [0.0, 5.0, -20.0], time).subscribe(val => {\n        (this.mesh.material as RawShaderMaterial).uniforms.uSize.value = val[0];\n        (this.mesh.material as RawShaderMaterial).uniforms.uRandom.value = val[1];\n        (this.mesh.material as RawShaderMaterial).uniforms.uDepth.value = val[2];\n      }, () => { }, () => {\n        if (this.mesh != null) {\n          if (this.mesh.parent != null) { this.mesh.parent.remove(this.mesh); }\n          this.mesh.geometry.dispose();\n          (this.mesh.material as RawShaderMaterial).dispose();\n        }\n\n        if (this.hitArea != null) {\n          if (this.hitArea.parent != null) { this.hitArea.parent.remove(this.hitArea); }\n          this.hitArea.geometry.dispose();\n          (this.hitArea.material as RawShaderMaterial).dispose();\n        }\n        this.initParticles(this.pImageUrl);\n        this.pImageChanging = false;\n      });\n    });\n  }\n\n  /**\n   * Method for triggering the animation\n   */\n  private animate(): void {\n    this.ngZone.runOutsideAngular(() => {\n      window.requestAnimationFrame(() => this.animate());\n      if (this.animationEnabled === true) {\n        const delta = this.clock.getDelta();\n        if (this.mesh != null) {\n          if (this.touch) { this.touch.update(); }\n          (this.mesh.material as RawShaderMaterial).uniforms.uTime.value += delta;\n        }\n        this.renderer.render(this.scene, this.camera);\n      }\n    });\n  }\n\n  /**\n   * Handle mouse move event\n   * @param event mouse event\n   */\n  onMouseMove(event: MouseEvent): void {\n    // getBoundingClientRect retruns the distance in pixels of the top left corner of the element\n    // to the top left corner of the viewport\n    const domRect = (this.canvasRef.nativeElement as HTMLElement).getBoundingClientRect();\n    // get the offset distance between the canvas, which contains the particles, to the outer container element\n    const canvasEl: HTMLElement = (this.canvasRef.nativeElement.children[0] as HTMLElement);\n    // Calculate the relative mouse position\n    this.mouse.x = (event.clientX - domRect.left - canvasEl.offsetLeft) / canvasEl.clientWidth * 2 - 1;\n    this.mouse.y = - (event.clientY - domRect.top - canvasEl.offsetTop) / canvasEl.clientHeight * 2 + 1;\n    // console.info('raw: x= ' + event.clientX + ' , y= ' + event.clientY);\n    // console.info('normalized: x= ' + this.mouse.x + ' , y= ' + this.mouse.y);\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    if (this.hitArea === undefined) { return; }\n    const intersects = this.raycaster.intersectObject(this.hitArea);\n    if (intersects !== undefined && intersects.length > 0 && this.touch && intersects[0].uv !== undefined) {\n      this.touch.addTouch(intersects[0].uv.x, intersects[0].uv.y);\n    }\n  }\n\n  /**\n   * Handle touch move envent\n   * @param event mouse event\n   */\n  onTouchMove(event: TouchEvent): void {\n    if (event.touches.length < 2) {\n      this.showTouchGestureInfo = true;\n      this.gestureInfoSubscription.unsubscribe();\n      this.gestureInfoSubscription = this.gestureInfo$.subscribe({\n        next: () => {\n          this.showTouchGestureInfo = false;\n          this.gestureInfoSubscription.unsubscribe();\n        }\n      });\n      return;\n    }\n    event.preventDefault();\n    // getBoundingClientRect retruns the distance in pixels of the top left corner of the element\n    // to the top left corner of the viewport\n    const domRect = (this.canvasRef.nativeElement as HTMLElement).getBoundingClientRect();\n    // get the offset distance between the canvas, which contains the particles, to the outer container element\n    const canvasEl: HTMLElement = (this.canvasRef.nativeElement.children[0] as HTMLElement);\n    // Calculate the relative mouse position\n    this.mouse.x = (event.touches[0].clientX - domRect.left - canvasEl.offsetLeft) / canvasEl.clientWidth * 2 - 1;\n    this.mouse.y = - (event.touches[0].clientY - domRect.top - canvasEl.offsetTop) / canvasEl.clientHeight * 2 + 1;\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    const intersects = this.raycaster.intersectObject(this.hitArea);\n    if (intersects !== undefined && intersects.length > 0 && this.touch && intersects[0].uv !== undefined) {\n      this.touch.addTouch(intersects[0].uv.x, intersects[0].uv.y);\n    }\n  }\n\n  @HostListener('window:resize') resize(): void {\n    if (this.height !== undefined) {\n      this.camera.aspect = this.canvasRef.nativeElement.clientWidth / this.canvasRef.nativeElement.clientHeight;\n      this.camera.updateProjectionMatrix();\n      const fovHeight = 2 * Math.tan(this.camera.fov * Math.PI / 180 / 2) * this.camera.position.z;\n      const scale = fovHeight / this.height;\n      this.mesh.scale.set(scale, scale, 1);\n      // this.hitArea.scale.set(scale, scale, 1);\n      if (this.renderer !== undefined) {\n        const width = this.imageWidth == null ? this.canvasRef.nativeElement.clientWidth :\n          this.distanceAsNumber(this.imageWidth, this.canvasRef.nativeElement.clientWidth);\n        const height = this.imageHeight == null ? this.canvasRef.nativeElement.clientHeight :\n          this.distanceAsNumber(this.imageHeight, this.canvasRef.nativeElement.clientHeight);\n        this.renderer.setSize(width, height);\n      }\n    }\n  }\n\n  private distanceAsNumber(distance: string, parentDistance: number): number {\n    let returnVal = 0;\n    if (distance.includes('px')) {\n      returnVal = Number.parseInt(distance.replace('px', ''), 10);\n    } else if (distance.includes('%')) {\n      returnVal = Number.parseInt(distance.replace('%', ''), 10) / 100 * parentDistance;\n    } else {\n      returnVal = Number.parseInt(distance, 10);\n    }\n    return returnVal;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageAsParticlesComponent } from './image-as-particles.component';\n\n\n\n@NgModule({\n  declarations: [ImageAsParticlesComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ImageAsParticlesComponent]\n})\nexport class ImageAsParticlesModule { }\n","export class ImageTransitionShaders{\n    vertex = `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}`;\n    splitTransitionFrag = `\n            uniform float progress;\n            uniform float intensity;\n            uniform sampler2D texture1;\n            uniform sampler2D texture2;\n            uniform vec4 resolution1;\n            uniform vec4 resolution2;\n            varying vec2 vUv;\n            mat2 rotate(float a) {\n              float s = sin(a);\n              float c = cos(a);\n              return mat2(c, -s, s, c);\n            }\n            void main()\t{\n              vec2 newUV1 = (vUv - vec2(0.5,0.5))*resolution1.zw + vec2(0.5,0.5);\n              vec2 newUV2 = (vUv - vec2(0.5,0.5))*resolution2.zw + vec2(0.5,0.5);\n              vec2 uvDivided1 = fract(newUV1*vec2(intensity,1.));\n              vec2 uvDivided2 = fract(newUV2*vec2(intensity,1.));\n              vec2 uvDisplaced1 = newUV1 + rotate(3.1415926/4.)*uvDivided1*progress*0.1;\n              vec2 uvDisplaced2 = newUV2 + rotate(3.1415926/4.)*uvDivided2*(1. - progress)*0.1;\n              vec4 t1 = texture2D(texture1,uvDisplaced1);\n              vec4 t2 = texture2D(texture2,uvDisplaced2);\n              // Use black background color\n              // Top right\n              vec2 tr1 = step(newUV1, vec2(1.0, 1.0));\n              vec2 tr2 = step(newUV2, vec2(1.0, 1.0));\n              float pct1 = tr1.x * tr1.y;\n              float pct2 = tr2.x * tr2.y;\n              // Bottom left\n              vec2 bl1 = step(vec2(0.0, 0.0), newUV1);\n              vec2 bl2 = step(vec2(0.0, 0.0), newUV2);\n              pct1 *= bl1.x * bl1.y;\n              pct2 *= bl2.x * bl2.y;\n              vec4 t1wb = t1 * vec4(pct1,pct1,pct1,1.0);\n              vec4 t2wb = t2 * vec4(pct2,pct2,pct2,1.0);\n              gl_FragColor = mix(t1wb, t2wb, progress);\n            }\n    `;\n    fadeFrag = `\n            uniform float progress;\n            uniform sampler2D texture1;\n            uniform sampler2D texture2;\n            uniform vec4 resolution1;\n            uniform vec4 resolution2;\n            varying vec2 vUv;\n            mat2 rotate(float a) {\n              float s = sin(a);\n              float c = cos(a);\n              return mat2(c, -s, s, c);\n            }\n            void main()\t{\n              vec2 newUV1 = (vUv - vec2(0.5,0.5))*resolution1.zw + vec2(0.5,0.5);\n              vec2 newUV2 = (vUv - vec2(0.5,0.5))*resolution2.zw + vec2(0.5,0.5);\n              vec2 uvDisplaced1 = newUV1 + vec2(1.0,0)*progress*0.1;\n              vec2 uvDisplaced2 = newUV2 + vec2(1.0,0)*(1. - progress)*0.1;\n              vec4 t1 = texture2D(texture1,uvDisplaced1);\n              vec4 t2 = texture2D(texture2,uvDisplaced2);\n              // Use black background color\n              // Top right\n              vec2 tr1 = step(newUV1, vec2(1.0, 1.0));\n              vec2 tr2 = step(newUV2, vec2(1.0, 1.0));\n              float pct1 = tr1.x * tr1.y;\n              float pct2 = tr2.x * tr2.y;\n              // Bottom left\n              vec2 bl1 = step(vec2(0.0, 0.0), newUV1);\n              vec2 bl2 = step(vec2(0.0, 0.0), newUV2);\n              pct1 *= bl1.x * bl1.y;\n              pct2 *= bl2.x * bl2.y;\n              vec4 t1wb = t1 * vec4(pct1,pct1,pct1,1.0);\n              vec4 t2wb = t2 * vec4(pct2,pct2,pct2,1.0);\n              gl_FragColor = mix(t1wb, t2wb, progress);\n            }\n    `;\n    noiseFrag = `\n\t\tuniform float time;\n\t\tuniform float progress;\n\t\tuniform float width;\n\t\tuniform float scaleX;\n\t\tuniform float scaleY;\n\t\tuniform sampler2D texture1;\n\t\tuniform sampler2D texture2;\n\t\tuniform sampler2D displacement;\n\t\tuniform vec4 resolution1;\n\t\tuniform vec4 resolution2;\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vPosition;\n\t\t//\tClassic Perlin 3D Noise\n\t\t//\tby Stefan Gustavson\n\t\t//\n\t\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\t\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\t\tvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\t\tfloat cnoise(vec4 P){\n\t\t  ;\n\t\t  vec4 Pi0 = floor(P); // Integer part for indexing\n\t\t  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n\t\t  Pi0 = mod(Pi0, 289.0);\n\t\t  Pi1 = mod(Pi1, 289.0);\n\t\t  vec4 Pf0 = fract(P); // Fractional part for interpolation\n\t\t  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n\t\t  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\t  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\t  vec4 iz0 = vec4(Pi0.zzzz);\n\t\t  vec4 iz1 = vec4(Pi1.zzzz);\n\t\t  vec4 iw0 = vec4(Pi0.wwww);\n\t\t  vec4 iw1 = vec4(Pi1.wwww);\n\t\t  vec4 ixy = permute(permute(ix) + iy);\n\t\t  vec4 ixy0 = permute(ixy + iz0);\n\t\t  vec4 ixy1 = permute(ixy + iz1);\n\t\t  vec4 ixy00 = permute(ixy0 + iw0);\n\t\t  vec4 ixy01 = permute(ixy0 + iw1);\n\t\t  vec4 ixy10 = permute(ixy1 + iw0);\n\t\t  vec4 ixy11 = permute(ixy1 + iw1);\n\t\t  vec4 gx00 = ixy00 / 7.0;\n\t\t  vec4 gy00 = floor(gx00) / 7.0;\n\t\t  vec4 gz00 = floor(gy00) / 6.0;\n\t\t  gx00 = fract(gx00) - 0.5;\n\t\t  gy00 = fract(gy00) - 0.5;\n\t\t  gz00 = fract(gz00) - 0.5;\n\t\t  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n\t\t  vec4 sw00 = step(gw00, vec4(0.0));\n\t\t  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n\t\t  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\t\t  vec4 gx01 = ixy01 / 7.0;\n\t\t  vec4 gy01 = floor(gx01) / 7.0;\n\t\t  vec4 gz01 = floor(gy01) / 6.0;\n\t\t  gx01 = fract(gx01) - 0.5;\n\t\t  gy01 = fract(gy01) - 0.5;\n\t\t  gz01 = fract(gz01) - 0.5;\n\t\t  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n\t\t  vec4 sw01 = step(gw01, vec4(0.0));\n\t\t  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n\t\t  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\t\t  vec4 gx10 = ixy10 / 7.0;\n\t\t  vec4 gy10 = floor(gx10) / 7.0;\n\t\t  vec4 gz10 = floor(gy10) / 6.0;\n\t\t  gx10 = fract(gx10) - 0.5;\n\t\t  gy10 = fract(gy10) - 0.5;\n\t\t  gz10 = fract(gz10) - 0.5;\n\t\t  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n\t\t  vec4 sw10 = step(gw10, vec4(0.0));\n\t\t  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n\t\t  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\t\t  vec4 gx11 = ixy11 / 7.0;\n\t\t  vec4 gy11 = floor(gx11) / 7.0;\n\t\t  vec4 gz11 = floor(gy11) / 6.0;\n\t\t  gx11 = fract(gx11) - 0.5;\n\t\t  gy11 = fract(gy11) - 0.5;\n\t\t  gz11 = fract(gz11) - 0.5;\n\t\t  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n\t\t  vec4 sw11 = step(gw11, vec4(0.0));\n\t\t  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n\t\t  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\t\t  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n\t\t  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n\t\t  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n\t\t  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n\t\t  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n\t\t  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n\t\t  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n\t\t  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n\t\t  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n\t\t  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n\t\t  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n\t\t  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n\t\t  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n\t\t  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n\t\t  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n\t\t  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\t\t  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n\t\t  g0000 *= norm00.x;\n\t\t  g0100 *= norm00.y;\n\t\t  g1000 *= norm00.z;\n\t\t  g1100 *= norm00.w;\n\t\t  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n\t\t  g0001 *= norm01.x;\n\t\t  g0101 *= norm01.y;\n\t\t  g1001 *= norm01.z;\n\t\t  g1101 *= norm01.w;\n\t\t  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n\t\t  g0010 *= norm10.x;\n\t\t  g0110 *= norm10.y;\n\t\t  g1010 *= norm10.z;\n\t\t  g1110 *= norm10.w;\n\t\t  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n\t\t  g0011 *= norm11.x;\n\t\t  g0111 *= norm11.y;\n\t\t  g1011 *= norm11.z;\n\t\t  g1111 *= norm11.w;\n\t\t  float n0000 = dot(g0000, Pf0);\n\t\t  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n\t\t  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n\t\t  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n\t\t  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n\t\t  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n\t\t  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n\t\t  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n\t\t  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n\t\t  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n\t\t  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n\t\t  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n\t\t  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n\t\t  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n\t\t  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n\t\t  float n1111 = dot(g1111, Pf1);\n\t\t  vec4 fade_xyzw = fade(Pf0);\n\t\t  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n\t\t  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n\t\t  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n\t\t  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n\t\t  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n\t\t  return 2.2 * n_xyzw;\n\t\t}\n\t\tfloat map(float value, float min1, float max1, float min2, float max2) {\n\t\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\t\t}\n\t\tfloat parabola( float x, float k ) {\n\t\t  return pow( 4. * x * ( 1. - x ), k );\n\t\t}\n\t\tvoid main()\t{\n\t\t\tfloat dt = parabola(progress,1.);\n\t\t\tfloat border = 1.;\n\t\t\tvec2 newUV1 = (vUv - vec2(0.5,0.5))*resolution1.zw + vec2(0.5,0.5);\n      \t\tvec2 newUV2 = (vUv - vec2(0.5,0.5))*resolution2.zw + vec2(0.5,0.5);\n\t\t\tvec4 t1 = texture2D(texture1,newUV1);\n      \t\tvec4 t2 = texture2D(texture2,newUV2);\n      \t\t// Use black background color\n      \t\t// Top right\n      \t\tvec2 tr1 = step(newUV1, vec2(1.0, 1.0));\n      \t\tvec2 tr2 = step(newUV2, vec2(1.0, 1.0));\n      \t\tfloat pct1 = tr1.x * tr1.y;\n      \t\tfloat pct2 = tr2.x * tr2.y;\n      \t\t// Bottom left\n      \t\tvec2 bl1 = step(vec2(0.0, 0.0), newUV1);\n      \t\tvec2 bl2 = step(vec2(0.0, 0.0), newUV2);\n      \t\tpct1 *= bl1.x * bl1.y;\n      \t\tpct2 *= bl2.x * bl2.y;\n      \t\tvec4 t1wb = t1 * vec4(pct1,pct1,pct1,1.0);\n      \t\tvec4 t2wb = t2 * vec4(pct2,pct2,pct2,1.0);\n\t\t\tfloat realnoise = 0.5*(cnoise(vec4(newUV1.x*scaleX  + 0.*time/3., newUV1.y*scaleY,0.*time/3.,0.)) +1.);\n\t\t\tfloat w = width*dt;\n\t\t\tfloat maskvalue = smoothstep(1. - w,1.,vUv.x + mix(-w/2., 1. - w/2., progress));\n\t\t\tfloat mask = maskvalue + maskvalue*realnoise;\n\t\t\tfloat final = smoothstep(border,border+0.01,mask);\n\t\t\tgl_FragColor = mix(t1wb,t2wb,final);\n\t\t}\n\t`;\n    blurFrag = `\n\t\t// author: gre\n\t\t// license: MIT\n\t\tuniform float progress;\n\t\tuniform float intensity;\n\t\tuniform float ratio;\n\t\tuniform sampler2D texture1;\n\t\tuniform sampler2D texture2;\n\t\tuniform vec4 resolution1;\n\t\tuniform vec4 resolution2;\n\t\tvarying vec2 vUv;\n\t\tconst int passes = 6;\n\n\t\tvoid main() {\n\t\t\tvec2 newUV1 = (vUv - vec2(0.5,0.5))*resolution1.zw + vec2(0.5,0.5);\n\t\t\tvec2 newUV2 = (vUv - vec2(0.5,0.5))*resolution2.zw + vec2(0.5,0.5);\n\n\t\t\tvec4 t1 = vec4(0.0);\n\t\t\tvec4 t2 = vec4(0.0);\n\t\t\tfloat disp = intensity/100.0*(0.5-distance(0.5, progress));\n\t\t\tfor (int xi=0; xi<passes; xi++)\n\t\t\t{\n\t\t\t\tfloat x = float(xi) / float(passes) - 0.5;\n\t\t\t\tfor (int yi=0; yi<passes; yi++)\n\t\t\t\t{\n\t\t\t\t\tfloat y = float(yi) / float(passes) - 0.5;\n\t\t\t\t\tvec2 v = vec2(x,y);\n\t\t\t\t\tfloat d = disp;\n\t\t\t\t\tt1 += texture2D(texture1,newUV1 + d*v);\n\t\t\t\t\tt2 += texture2D(texture2,newUV2 + d*v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tt1 /= float(passes*passes);\n\t\t\tt2 /= float(passes*passes);\n\n\t\t\t// Use black background color\n\t\t\t// Top right\n\t\t\tvec2 tr1 = step(newUV1, vec2(1.0, 1.0));\n\t\t\tvec2 tr2 = step(newUV2, vec2(1.0, 1.0));\n\t\t\tfloat pct1 = tr1.x * tr1.y;\n\t\t\tfloat pct2 = tr2.x * tr2.y;\n\t\t\t// Bottom left\n\t\t\tvec2 bl1 = step(vec2(0.0, 0.0), newUV1);\n\t\t\tvec2 bl2 = step(vec2(0.0, 0.0), newUV2);\n\t\t\tpct1 *= bl1.x * bl1.y;\n\t\t\tpct2 *= bl2.x * bl2.y;\n\t\t\tvec4 t1wb = t1 * vec4(pct1,pct1,pct1,1.0);\n\t\t\tvec4 t2wb = t2 * vec4(pct2,pct2,pct2,1.0);\n\t\t\tgl_FragColor = mix(t1wb, t2wb, progress);\n\t\t}\n\t`;\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { DoubleSide, Mesh, PerspectiveCamera, PlaneBufferGeometry, Scene, ShaderMaterial, Texture, Vector4, WebGLRenderer } from 'three';\nimport { TextureLoader } from 'three';\nimport { RxjsTween } from '../tween/rxjs-tween';\nimport { ImageTransitionShaders } from './shaders/imageTransitionShaders';\n\n@Component({\n  selector: 'lib-image-transition',\n  templateUrl: './image-transition.component.html',\n  styleUrls: ['./image-transition.component.css']\n})\nexport class ImageTransitionComponent implements AfterViewInit, OnDestroy {\n\n  @Input() imageUrls: string[] = new Array<string>();\n\n  @Input()\n  get imageSize(): string { return this.pImageSize; }\n  set imageSize(imageSize: string) {\n    this.pImageSize = imageSize;\n    if (this.mesh != null) {\n      this.resize();\n    }\n  }\n\n  @Input()\n  get autoPlay(): boolean { return this.pAutoPlay; }\n  set autoPlay(autoplay: boolean) {\n    this.pAutoPlay = autoplay;\n    if (this.mesh != null) {\n      if (this.pAutoPlay === true) {\n        this.setAutoPlayInterval();\n      } else {\n        this.stopAutoPlayInterval();\n      }\n    }\n  }\n\n  @Input()\n  get autoPlayInterval(): number { return this.pAutoPlayInterval; }\n  set autoPlayInterval(autoPlayInterval: number) {\n    this.pAutoPlayInterval = autoPlayInterval;\n    if (this.mesh != null) {\n      if (this.pAutoPlay === true) {\n        this.stopAutoPlayInterval();\n        this.setAutoPlayInterval();\n      }\n    }\n  }\n\n  @Input() transitionDuration = 1000;\n\n  @Input()\n  get transitionType(): string { return this.pTransitionType; }\n  set transitionType(transitionType: string) {\n    this.pTransitionType = transitionType;\n    if (this.material != null) {\n      this.setShaderProperties();\n    }\n  }\n\n  @Input()\n  get sizeX(): number { return this.pScaleX; }\n  set sizeX(sizeX: number) {\n    this.pScaleX = sizeX;\n    if (this.material != null) {\n      this.setShaderProperties();\n    }\n  }\n\n  @Input()\n  get sizeY(): number { return this.pScaleY; }\n  set sizeY(sizeY: number) {\n    this.pScaleY = sizeY;\n    if (this.material != null) {\n      this.setShaderProperties();\n    }\n  }\n\n  @Input()\n  get width(): number { return this.pWidth; }\n  set width(width: number) {\n    this.pWidth = width;\n    if (this.material != null) {\n      this.setShaderProperties();\n    }\n  }\n\n  @Input()\n  get intensity(): number { return this.intensity; }\n  set intensity(intensity: number) {\n    this.pIntensity = intensity;\n    if (this.material != null) {\n      this.setShaderProperties();\n    }\n  }\n\n  @Input() animationEnabled = true;\n\n  @Input() startIndex = 0;\n\n  @Output() imageIndexChange = new EventEmitter<number>();\n\n  private pAutoPlay = false;\n  private pAutoPlayInterval = 5000;\n  private pImageSize = 'cover';\n  private pTransitionType = 'split';\n  private pIntensity = 40.0;\n  private pScaleX = 50.0;\n  private pScaleY = 50.0;\n  private pWidth = 0.5;\n\n  private animationFrameId!: number;\n  private renderer: WebGLRenderer = new WebGLRenderer({ antialias: true, alpha: true });\n  private scene: Scene = new Scene();\n  private camera!: PerspectiveCamera;\n  private mesh!: Mesh;\n  private material!: ShaderMaterial;\n  private textures: Texture[] = new Array<Texture>();\n  private nextImageIndex = 0;\n  private tranistionOngoing = false;\n  private shaders: ImageTransitionShaders = new ImageTransitionShaders();\n  private autoPlay$: Observable<number> = new Observable<number>();\n  private autoPlaySubscription: Subscription = new Subscription();\n\n  @ViewChild('threejsContainer') threejsContainer!: ElementRef;\n\n  constructor(private ngZone: NgZone) { }\n\n  ngAfterViewInit(): void {\n    // Init camera\n    this.camera = new PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 1000);\n    this.camera.position.set(0, 0, 2);\n\n    // Create scene\n    this.scene = new Scene();\n\n    // Init Mesh\n    if (this.imageUrls.length < 2) {\n      throw new Error('At least two images are required');\n    }\n    this.initMesh();\n\n    // Init renderer\n    const canvasWidth = this.threejsContainer.nativeElement.clientWidth;\n    const canvasHeight = this.threejsContainer.nativeElement.clientHeight;\n    this.renderer.setSize(canvasWidth, canvasHeight);\n\n    this.threejsContainer.nativeElement.appendChild(this.renderer.domElement);\n\n    // Init autoPlay Observable\n    if (this.pAutoPlay === true) {\n      this.setAutoPlayInterval();\n    }\n\n    this.animate();\n  }\n\n  ngOnDestroy(): void {\n    // Cancel Animation\n    cancelAnimationFrame(this.animationFrameId);\n    // Stop autoplay animation\n    this.stopAutoPlayInterval();\n    // Remove threejs container from DOM\n    (this.threejsContainer.nativeElement as HTMLCanvasElement).removeChild(this.renderer.domElement);\n    // Dispose textures\n    this.textures.forEach(t => {\n      t.dispose();\n    });\n    // Dispose material\n    if(this.material) { this.material.dispose(); }\n    // Clear scene\n    if(this.scene) { this.scene.clear(); }\n    // Dispose renderer\n    if(this.renderer) { this.renderer.dispose(); }\n  }\n\n  /**\n   * Initializes the mesh\n   */\n  private initMesh(): void {\n    // Create geometry\n    const geometry = new PlaneBufferGeometry(1, 1, 2, 2);\n\n    const promises: Promise<any>[] = new Array<Promise<any>>();\n\n    // Load pev, current and next textures\n    this.textures = new Array<Texture>(this.imageUrls.length);\n    const prevImg = this.startIndex === 0 ? (this.imageUrls.length - 1) : (this.startIndex - 1);\n    const nextImg = this.startIndex === (this.imageUrls.length - 1) ? 0 : (this.startIndex + 1);\n    for (let idx = 0; idx < this.imageUrls.length; idx++) {\n      if (idx === this.startIndex || idx === nextImg || idx === prevImg) {\n        promises.push(new Promise(resolve => {\n          this.textures[idx] = (new TextureLoader()).load(this.imageUrls[idx], resolve);\n        }));\n      }\n    }\n\n    this.nextImageIndex = this.startIndex;\n    // Emit event to set current image index\n    this.imageIndexChange.emit(this.nextImageIndex);\n\n    Promise.all(promises).then(() => {\n\n      this.material = new ShaderMaterial({\n        side: DoubleSide,\n        uniforms: {\n          time: { value: 0 },\n          progress: { value: 0 },\n          border: { value: 0 },\n          intensity: { value: 50.0 },\n          scaleX: { value: 40.0 },\n          scaleY: { value: 40.0 },\n          transition: { value: 40.0 },\n          swipe: { value: 0 },\n          width: { value: 0.5 },\n          radius: { value: 0 },\n          texture1: { value: this.textures[this.startIndex] },\n          texture2: { value: this.textures[nextImg] },\n          resolution1: { value: new Vector4() },\n          resolution2: { value: new Vector4() }\n        },\n        // wireframe: true,\n        vertexShader: this.shaders.vertex\n      });\n\n      this.setShaderProperties();\n      this.mesh = new Mesh(geometry, this.material);\n\n      this.scene.add(this.mesh);\n\n      this.resize();\n    });\n  }\n\n  /**\n   * Sets the autoPlay interval\n   */\n  private setAutoPlayInterval(): void {\n    this.autoPlay$ = interval(this.pAutoPlayInterval);\n    this.autoPlaySubscription = this.autoPlay$.subscribe({\n      next: () => { this.prepAndLoadNextImg(false, true); }\n    });\n  }\n\n  /**\n   * Resets the autoPlay interval\n   */\n  private resetAutoPlayInterval(): void {\n    this.autoPlaySubscription.unsubscribe();\n    this.autoPlaySubscription = this.autoPlay$.subscribe({\n      next: () => { this.prepAndLoadNextImg(false, true); }\n    });\n  }\n\n  /**\n   * Stops the autoPlay interval\n   */\n  private stopAutoPlayInterval(): void {\n    this.autoPlaySubscription.unsubscribe();\n  }\n\n  /**\n   * Sets the shader properties depending on the transition type\n   */\n  private setShaderProperties(): void {\n    switch (this.transitionType) {\n      case 'split':\n        this.material.uniforms.intensity.value = this.pIntensity;\n        this.material.fragmentShader = this.shaders.splitTransitionFrag;\n        break;\n      case 'fade':\n        this.material.fragmentShader = this.shaders.fadeFrag;\n        break;\n      case 'noise':\n        this.material.uniforms.scaleX.value = this.pScaleX;\n        this.material.uniforms.scaleY.value = this.pScaleY;\n        this.material.uniforms.width.value = this.pWidth;\n        this.material.fragmentShader = this.shaders.noiseFrag;\n        break;\n      case 'blur':\n        this.material.uniforms.intensity.value = this.pIntensity;\n        this.material.fragmentShader = this.shaders.blurFrag;\n        break;\n      default:\n        break;\n    }\n\n    this.material.needsUpdate = true;\n  }\n\n  /**\n   * Animation\n   */\n  private animate(): void {\n    if (this.animationEnabled === true) {\n      this.renderer.render(this.scene, this.camera);\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.animationFrameId = window.requestAnimationFrame(() => this.animate());\n    });\n  }\n\n  /**\n   * Resizes the canvas and updates the texture resulution information of the images\n   */\n  @HostListener('window:resize') private resize(): void {\n    // Get the with and height of the container\n    const containerWidth = this.threejsContainer.nativeElement.offsetWidth;\n    const containerHeight = this.threejsContainer.nativeElement.offsetHeight;\n    // return the function, if eihter with or heigth is undefined\n    if(!containerHeight || !containerHeight) { return; }\n\n    this.renderer.setSize(containerWidth, containerHeight);\n    this.camera.aspect = containerWidth / containerHeight;\n\n    this.updateTextureResolution(this.nextImageIndex, 1);\n\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n\n    this.mesh.scale.x = this.camera.aspect;\n    this.mesh.scale.y = 1;\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Updates the resulution of the texture for the shader depending on the image size type\n   * @param textureNumber Number of the texture\n   */\n  private updateTextureResolution(textureNumber: number, targetGlslTexture: 1 | 2): void {\n    const texture = this.textures[textureNumber];\n    const containerWidth = this.threejsContainer.nativeElement.offsetWidth;\n    const containerHeight = this.threejsContainer.nativeElement.offsetHeight;\n\n    // Adapt the size of the image\n    const imageAspect = texture.image.height / texture.image.width;\n    const containerAspect = containerHeight / containerWidth;\n    let a1; let a2;\n    if (this.pImageSize === 'cover') {\n      if (containerAspect > imageAspect) {\n        a1 = (containerWidth / containerHeight) * imageAspect;\n        a2 = 1;\n      } else {\n        a1 = 1;\n        a2 = (containerHeight / containerWidth) / imageAspect;\n      }\n    } else if (this.pImageSize === 'contain') {\n      if (containerAspect < imageAspect) {\n        a1 = (containerWidth / containerHeight) * imageAspect;\n        a2 = 1;\n      } else {\n        a1 = 1;\n        a2 = (containerHeight / containerWidth) / imageAspect;\n      }\n    }\n\n    if (targetGlslTexture === 1) {\n      this.material.uniforms.resolution1.value.x = containerWidth;\n      this.material.uniforms.resolution1.value.y = containerHeight;\n      this.material.uniforms.resolution1.value.z = a1;\n      this.material.uniforms.resolution1.value.w = a2;\n    } else if (targetGlslTexture === 2) {\n      this.material.uniforms.resolution2.value.x = containerWidth;\n      this.material.uniforms.resolution2.value.y = containerHeight;\n      this.material.uniforms.resolution2.value.z = a1;\n      this.material.uniforms.resolution2.value.w = a2;\n    }\n  }\n\n  /**\n   * Starts the transition effect to the next image\n   * @param posDirection indicator, if the next or previous image should be loaded\n   */\n  private transitionToNextTexture(backw = false): void {\n    // Set the flag to indicate that the transition animation is ongoing\n    this.tranistionOngoing = true;\n    // EventEmitter\n    this.imageIndexChange.emit(this.nextImageIndex);\n\n    this.ngZone.runOutsideAngular(() => {\n      if (backw === true) {\n        this.material.uniforms.texture2.value = this.material.uniforms.texture1.value;\n        this.material.uniforms.resolution2.value.x = this.material.uniforms.resolution1.value.x;\n        this.material.uniforms.resolution2.value.y = this.material.uniforms.resolution1.value.y;\n        this.material.uniforms.resolution2.value.z = this.material.uniforms.resolution1.value.z;\n        this.material.uniforms.resolution2.value.w = this.material.uniforms.resolution1.value.w;\n        this.material.uniforms.progress.value = 1;\n        // Set the next image to texture1 and update the resolution\n        this.material.uniforms.texture1.value = this.textures[this.nextImageIndex];\n        this.updateTextureResolution(this.nextImageIndex, 1);\n  \n        // Start the tween for doing the transition\n        RxjsTween.createTween(RxjsTween.linear, 1, 0, this.transitionDuration).subscribe({\n          next: val => {\n            this.material.uniforms.progress.value = val;\n          },\n          complete: () => {\n            // Set the transition flag to false to indicate that the transition animation is finished\n            this.tranistionOngoing = false;\n            // Reset progress to 1, thus the texture from texture 2 needs to be set to texture 1\n            this.material.uniforms.texture2.value = this.textures[this.nextImageIndex];\n            this.updateTextureResolution(this.nextImageIndex, 2);\n            this.material.uniforms.progress.value = 0;\n          }\n        });\n      } else {\n        // Set the next image to texture2 and update the resolution\n        this.material.uniforms.texture2.value = this.textures[this.nextImageIndex];\n        this.updateTextureResolution(this.nextImageIndex, 2);\n  \n        // Start the tween for doing the transition\n        RxjsTween.createTween(RxjsTween.linear, 0, 1, this.transitionDuration).subscribe({\n          next: val => {\n            this.material.uniforms.progress.value = val;\n          },\n          complete: () => {\n            // Set the transition flag to false to indicate that the transition animation is finished\n            this.tranistionOngoing = false;\n            // Reset progress to 0, thus the texture from texture 2 needs to be set to texture 1\n            this.material.uniforms.texture1.value = this.textures[this.nextImageIndex];\n            this.updateTextureResolution(this.nextImageIndex, 1);\n            this.material.uniforms.progress.value = 0;\n          }\n        });\n      }\n    });\n  }\n\n  private prepAndLoadNextImg(prev: boolean, autoPlayTriggered: boolean) {\n    if (this.tranistionOngoing) { return; }\n\n    if (this.pAutoPlay === true && autoPlayTriggered === false) { this.resetAutoPlayInterval(); }\n\n    if (prev === false) {\n      // Set the next index\n      this.nextImageIndex = (this.nextImageIndex < this.imageUrls.length - 1) ? this.nextImageIndex + 1 : 0;\n      // Check if another texture needs to be loaded\n      const nextButOne = this.nextImageIndex + 1 > this.imageUrls.length - 1 ? 0 : this.nextImageIndex + 1;\n      if (this.textures[nextButOne] === undefined) {\n        this.textures[nextButOne] = (new TextureLoader).load(this.imageUrls[nextButOne]);\n      }\n    } else {\n      // Update the number of the current shown image\n      this.nextImageIndex = (this.nextImageIndex > 0) ? this.nextImageIndex - 1 : this.imageUrls.length - 1;\n      // Check if another texture needs to be loaded\n      const nextButOne = this.nextImageIndex - 1 < 0 ? this.imageUrls.length - 1 : this.nextImageIndex - 1;\n      if (this.textures[nextButOne] === undefined) {\n        this.textures[nextButOne] = (new TextureLoader).load(this.imageUrls[nextButOne]);\n      }\n    }\n\n    this.transitionToNextTexture();\n  }\n\n  //#region public methods\n  next(): void {\n    this.prepAndLoadNextImg(false, false);\n  }\n\n  prev(): void {\n    this.prepAndLoadNextImg(true, false);\n  }\n  //#endregion\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageTransitionComponent } from './image-transition.component';\n\n@NgModule({\n  declarations: [ImageTransitionComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ImageTransitionComponent]\n})\nexport class ImageTransitionModule { }\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ChangeDetectorRef, Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { ImageTransitionComponent } from '../image-transition/image-transition.component';\n\n@Component({\n  selector: 'lib-lightbox-overlay',\n  templateUrl: './lightbox-overlay.component.html',\n  styleUrls: ['./lightbox-overlay.component.css']\n})\nexport class LightboxOverlayComponent implements OnInit {\n\n  @ViewChild(ImageTransitionComponent) imageTransition!: ImageTransitionComponent;\n\n  overlayRef?: OverlayRef;\n  imageUrls = new Array<string>();\n  forceFullscreen = false;\n  forceShowNavButtons = false;\n  imageSize = 'cover';\n  autoPlay = false;\n  autoPlayInterval = 5000;\n  transitionDuration = 1000;\n  transitionType = 'split';\n  sizeX = 50.0;\n  sizeY = 50.0;\n  width = 0.5;\n  intensity = 40.0;\n  startIndex = 0;\n  currentImageIndex = 1;\n\n  swipeCoord = new Array<number>();\n  swipeTime = 0;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === 'ArrowRight') {\n      this.imageTransition.next();\n    }\n    if (event.key === 'ArrowLeft'){\n      this.imageTransition.prev();\n    }\n    if (event.key === 'Escape'){\n      this.close();\n    }\n  }\n\n  /**\n   * Close the lightbox\n   */\n  close() {\n    this.overlayRef?.detach();\n  }\n\n  /**\n   * method to set the index counter\n   * @param index index of the image\n   */\n  imageIndexChange(index: number) {\n    this.currentImageIndex = index + 1;\n    this.changeRef.detectChanges();\n  }\n\n  /**\n   * Listen to touche events for gestures (mobile)\n   * @param e touch event\n   * @param when indicator if 'start' or 'end'\n   */\n  swipe(e: TouchEvent, when: string): void {\n\n    const coord: [number, number] = [e.changedTouches[0].clientX, e.changedTouches[0].clientY];\n    const time = new Date().getTime();\n\n    if (when === 'start') {\n      this.swipeCoord = coord;\n      this.swipeTime = time;\n    } else if (when === 'end') {\n      const direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n      const duration = time - this.swipeTime;\n\n      if (duration < 1000 && Math.abs(direction[0]) > 30 // Long enough\n        && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n        const swipe = direction[0] < 0 ? 'next' : 'previous';\n\n        if (swipe === 'next') {\n          this.imageTransition.next();\n        } else if (swipe === 'previous') {\n          this.imageTransition.prev();\n        }\n      }\n    }\n  }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\n\n@Component({\n  selector: 'lib-lightbox',\n  template: ''\n})\nexport class LightboxComponent implements OnInit {\n\n  @Input() imageUrls = new Array<string>();\n  @Input() forceFullscreen = false;\n  @Input() forceShowNavButtons = false;\n  @Input() imageSize = 'cover';\n  @Input() autoPlay = false;\n  @Input() autoPlayInterval = 5000;\n  @Input() transitionDuration = 1000;\n  @Input() transitionType = 'split';\n  @Input() sizeX = 50.0;\n  @Input() sizeY = 50.0;\n  @Input() width = 0.5;\n  @Input() intensity = 40.0;\n\n  private overlayRef?: OverlayRef;\n\n  constructor(private overlay: Overlay) { }\n\n  ngOnInit(): void {\n  }\n\n  open(index = 0) {\n    // Define settings of the overlay\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this.overlay.scrollStrategies.block()\n    });\n\n    // Listen to backdrop event for detaching the overlay\n    this.overlayRef.backdropClick().subscribe({\n      next: () => { this.overlayRef?.detach(); }\n    });\n\n    // Attach the LightboxOverlayComponent to the overlayRef instance\n    const lightboxOverlayRef = this.overlayRef.attach(new ComponentPortal(LightboxOverlayComponent));\n\n    // Pass data to the LightboxOverlayComponent\n    lightboxOverlayRef.instance.overlayRef = this.overlayRef;\n    lightboxOverlayRef.instance.imageUrls = this.imageUrls;\n    lightboxOverlayRef.instance.forceFullscreen = this.forceFullscreen;\n    lightboxOverlayRef.instance.forceShowNavButtons = this.forceShowNavButtons;\n    lightboxOverlayRef.instance.imageSize = this.imageSize;\n    lightboxOverlayRef.instance.autoPlay = this.autoPlay;\n    lightboxOverlayRef.instance.autoPlayInterval = this.autoPlayInterval;\n    lightboxOverlayRef.instance.transitionDuration = this.transitionDuration;\n    lightboxOverlayRef.instance.transitionType = this.transitionType;\n    lightboxOverlayRef.instance.sizeX = this.sizeX;\n    lightboxOverlayRef.instance.sizeY = this.sizeY;\n    lightboxOverlayRef.instance.width = this.width;\n    lightboxOverlayRef.instance.intensity = this.intensity;\n    lightboxOverlayRef.instance.startIndex = index;\n  }\n\n  close() {\n    this.overlayRef?.detach();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LightboxComponent } from './lightbox.component';\nimport { ImageTransitionModule } from '../image-transition/image-transition.module';\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  declarations: [LightboxComponent, LightboxOverlayComponent],\n  imports: [\n    CommonModule,\n    ImageTransitionModule,\n    OverlayModule\n  ],\n  exports: [ LightboxComponent ],\n  entryComponents: [ LightboxOverlayComponent ]\n})\nexport class LightboxModule { }\n","import { Observable, Subject } from 'rxjs';\nimport { Euler, Quaternion } from 'three';\nimport { Object3D, Vector2 } from 'three';\nimport { RxjsTween } from '../tween/rxjs-tween';\n\nexport class ObjectControls {\n\n    // ============= Private Properties =============\n    private isUserInteracting: boolean = false;\n    private restoringAnimationOngoing: boolean = false;\n    private restoringOriginPosTimeout = 0;\n    private startDraggingPosition: Vector2;\n    private rendererDom: HTMLElement;\n    private touchArea: HTMLElement;\n    private obj: THREE.Mesh | THREE.Group;\n    private userInteracted: boolean = false;\n    private userInteractedSubject: Subject<boolean> = new Subject();\n\n    // ============= Public Properties =============\n    rotationSpeed = 1;\n    verticalRotation = true;\n    horizontalRotation = true;\n    autoRotationY = false;\n    autoRotationX = false;\n    autoRotationZ = false;\n    restoreOriginPosition = false;\n    autoRotationSpeed = 0.002;\n    userInteracted$: Observable<boolean> = this.userInteractedSubject.asObservable();\n    controlsEnabled = true;\n\n    constructor(rendererDom: HTMLElement, object: THREE.Mesh | THREE.Group, touchArea?: HTMLElement) {\n        this.rendererDom = rendererDom;\n        this.obj = object;\n        this.touchArea = touchArea != null ? touchArea : this.rendererDom;\n\n        this.startDraggingPosition = new Vector2(0, 0);\n\n        this.addEventlisteners();\n    }\n\n    // ============= Public Methods =============\n\n    /**\n     * Method, which needs to be called, in case autorotation is used\n     */\n    update(): void {\n        if (this.isUserInteracting || this.restoringAnimationOngoing || this.userInteracted) return;\n\n        var rotationY = this.autoRotationY == true ? this.autoRotationSpeed : 0;\n        var rotationX = this.autoRotationX == true ? this.autoRotationSpeed : 0;\n        var rorationZ = this.autoRotationZ == true ? this.autoRotationSpeed : 0;\n\n        var deltaRotationQuaternion = new Quaternion().setFromEuler(new Euler(\n            rotationX,\n            rotationY,\n            rorationZ,\n            'XYZ'\n        ));\n        this.obj.quaternion.multiplyQuaternions(deltaRotationQuaternion, this.obj.quaternion);\n    }\n\n    /**\n     * Removes the event listners\n     */\n    removeEventlisteners(): void {\n        // desktop events\n        this.touchArea.removeEventListener('mousedown', this.mouseDown, false);\n        this.touchArea.removeEventListener('mousemove', this.mouseMove, false);\n        this.touchArea.removeEventListener('mouseup', this.mouseUp, false);\n        // mobile events\n        this.touchArea.removeEventListener('touchstart', this.onTouchStart, false);\n        this.touchArea.removeEventListener('touchmove', this.onTouchMove, false);\n        this.touchArea.removeEventListener('touchend', this.onTouchEnd, false);\n    }\n\n    resetUserInteractionFlag(): void {\n        this.userInteracted = false,\n            this.userInteractedSubject.next(this.userInteracted);\n    }\n\n    // ============= Private Methods =============\n\n    /**\n     * Adds the event listeners\n     */\n    private addEventlisteners(): void {\n        // desktop events\n        this.touchArea.addEventListener('mousedown', this.mouseDown, false);\n        // mobile events\n        this.touchArea.addEventListener('touchend', this.onTouchEnd, false);\n        this.touchArea.addEventListener('touchstart', this.onTouchStart, false);\n        this.touchArea.addEventListener('touchmove', this.onTouchMove, false);\n    }\n\n    /**\n     * Reset the mouse position to x=0 and y=0\n     */\n    private resetMousePosition(): void {\n        this.startDraggingPosition.set(0, 0);\n    }\n\n    /******************  MOUSE interaction functions - desktop  *****/\n    /**\n     * Prepares everything, when the mouse is clicked\n     * @param e mouse event\n     */\n    private mouseDown = (e: MouseEvent) => {\n        // Ignore mouse down interaction, if the controls are not enabled\n        // Ignore mouse down interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing === true) return;\n        // Reset restoration animation timout\n        window.clearTimeout(this.restoringOriginPosTimeout);\n\n        this.isUserInteracting = true;\n        this.startDraggingPosition = new Vector2(0, 0);\n        this.startDraggingPosition.set(e.offsetX, e.offsetY);\n\n        this.touchArea.addEventListener('pointermove', this.mouseMove, false);\n        this.touchArea.addEventListener('pointerup', this.mouseUp, false);\n    }\n\n    /**\n     * Calculates the x and y rotation of the object depending on the mouse movement\n     * @param e MouseEvent\n     */\n    private mouseMove = (e: MouseEvent) => {\n        // Ignore mouse movement interaction, if the controls are not enabled\n        // Ignore mouse movement interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing) return;\n        if (this.isUserInteracting) {\n            if (this.userInteracted == false) {\n                this.userInteracted = true;\n                this.userInteractedSubject.next(this.userInteracted);\n            }\n\n            const deltaMove = new Vector2(\n                e.offsetX - this.startDraggingPosition.x,\n                e.offsetY - this.startDraggingPosition.y\n            );\n            this.startDraggingPosition.set(e.offsetX, e.offsetY);\n\n            const rotationX = this.verticalRotation == true ? (deltaMove.x * Math.PI / 180 * this.rotationSpeed) : 0;\n            const rotationY = this.horizontalRotation == true ? (deltaMove.y * Math.PI / 180 * this.rotationSpeed) : 0;\n\n            var deltaRotationQuaternion = new Quaternion().setFromEuler(new Euler(\n                rotationY,\n                rotationX,\n                0,\n                'XYZ'\n            ));\n\n            this.obj.quaternion.multiplyQuaternions(deltaRotationQuaternion, this.obj.quaternion);\n\n            //console.log(`rotX: ${Math.round(THREE.MathUtils.radToDeg(this.obj.rotation.x))}, rotY: ${Math.round(THREE.MathUtils.radToDeg(this.obj.rotation.y))}, rotZ: ${Math.round(THREE.MathUtils.radToDeg(this.obj.rotation.z))}`);\n        }\n    }\n\n    private mouseUp = () => {\n        // Ignore mouse movement interaction, if the controls are not enabled\n        // Ignore mouse up interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing) return;\n        this.resetMousePosition();\n        this.isUserInteracting = false;\n        if (this.restoreOriginPosition) this.restoreOriginalPosition();\n\n        this.touchArea.removeEventListener('mousemove', this.mouseMove, false);\n        this.touchArea.removeEventListener('mouseup', this.mouseUp, false);\n    }\n\n    /****************** TOUCH interaction functions - mobile  *****/\n    private onTouchStart = (e: TouchEvent) => {\n        // Ignore mouse movement interaction, if the controls are not enabled\n        // Ignore touch start interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing) return;\n        // Reset restoration animation timout\n        window.clearTimeout(this.restoringOriginPosTimeout);\n\n        //e.preventDefault();\n        this.isUserInteracting = true;\n        this.restoringAnimationOngoing = false;\n        this.startDraggingPosition.set(\n            e.touches[0].pageX, e.touches[0].pageY\n        )\n    }\n\n    private onTouchMove = (e: TouchEvent) => {\n        // Ignore mouse movement interaction, if the controls are not enabled\n        // Ignore mouse move interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing) return;\n        //e.preventDefault();\n        if (this.isUserInteracting && !this.restoringAnimationOngoing) {\n            if (this.userInteracted == false) {\n                this.userInteracted = true;\n                this.userInteractedSubject.next(this.userInteracted);\n            }\n\n            const deltaMove = new Vector2(\n                e.touches[0].pageX - this.startDraggingPosition.x,\n                e.touches[0].pageY - this.startDraggingPosition.y\n            );\n\n            this.startDraggingPosition.set(e.touches[0].pageX, e.touches[0].pageY);\n\n            const rotationX = this.verticalRotation == true ? (deltaMove.x * Math.PI / 180 * this.rotationSpeed) : 0;\n            const rotationY = this.horizontalRotation == true ? (deltaMove.y * Math.PI / 180 * this.rotationSpeed) : 0;\n\n            var deltaRotationQuaternion = new Quaternion().setFromEuler(new Euler(\n                rotationY,\n                rotationX,\n                0,\n                'XYZ'\n            ));\n\n            this.obj.quaternion.multiplyQuaternions(deltaRotationQuaternion, this.obj.quaternion);\n        }\n    }\n\n    private onTouchEnd = (e: TouchEvent) => {\n        // Ignore mouse movement interaction, if the controls are not enabled\n        // Ignore mouse up interaction, if the restoration animation is ongoing\n        if (this.controlsEnabled === false || this.restoringAnimationOngoing) return;\n        //e.preventDefault();\n        this.isUserInteracting = false;\n        this.resetMousePosition();\n        if (this.restoreOriginPosition) this.restoreOriginalPosition();\n    }\n\n    /**\n     * Rotates the object to the position 0,0,0 after a some timeout\n     */\n    private restoreOriginalPosition(): void {\n        this.restoringOriginPosTimeout = window.setTimeout(() => {\n            var objSet = new Object3D();\n            objSet.position.set(0, 0, 0);\n            objSet.rotation.set(0, 0, 0);\n\n            RxjsTween.createTween(RxjsTween.linear, [this.obj.position.x, this.obj.position.y, this.obj.position.z],\n                [objSet.position.x, objSet.position.y, objSet.position.z], 1000).subscribe({\n                    next: tweenVal => {\n                        if (this.restoringAnimationOngoing == false) this.restoringAnimationOngoing = true;\n                        this.obj.rotation.set(tweenVal[0], tweenVal[1], tweenVal[2]);\n                    },\n                    complete: () => {\n                        this.restoringAnimationOngoing = false;\n                        this.resetUserInteractionFlag();\n                    }\n                });\n        }, 5000);\n    }\n}\n","import { animate, AnimationBuilder, AnimationPlayer, query, stagger, state, style, transition, trigger } from '@angular/animations';\nimport { AfterViewInit, Component, ContentChildren, Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnChanges, OnDestroy, Output, QueryList, SimpleChanges, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Euler, Group, Object3D, PerspectiveCamera, Quaternion, Scene } from 'three';\nimport { Vector3 } from 'three';\nimport { CSS3DObject, CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport { ObjectControls } from '../controls/object-controls';\nimport { RxjsTween } from '../tween/rxjs-tween';\n\n@Directive({\n  selector: `acuw-carousel-item`,\n  host: {\n    'class': 'acuw-carousel-item',\n  }\n})\nexport class CarouselItem {\n\n  htmlElement: HTMLElement;\n\n  constructor(private el: ElementRef) {\n    this.htmlElement = this.el.nativeElement;\n  }\n}\n\n@Component({\n  selector: 'acuw-carousel',\n  template: `\n    <div class=\"carousel-container\">\n      <div #threejsContainer class=\"threejs-container\"></div>\n      <!-- dots -->\n      <div #indicationDots class=\"dots\">\n      <svg *ngFor=\"let carouselTemplate of carouselItemTemplates; index as i\" viewBox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\" [ngStyle]=\"{'fill': activeCarouselElement===i ? activeDotColor : dotColor}\"/>\n          <path id=\"{{i}}\" fill=\"none\" stroke-linecap=\"round\" stroke-width=\"20\" \n          [ngStyle]=\"{'stroke': dotAnimationCircleColor, 'visibility': activeCarouselElement===i && autoPlay ? 'visible' : 'hidden'}\"\n                d=\"M50 10 a 40 40 0 0 1 0 80 a 40 40 0 0 1 0 -80\"/>\n        </svg>\n      </div>\n    </div>\n    \n  `,\n  styleUrls: ['./carousel.component.css'],\n  styles: [`\n  `\n  ],\n  animations: [\n    trigger('dotsAnimation', [\n      transition(':enter', [\n        query('svg', [\n          style({ opacity: 0, transform: 'translateY(200%)' }),\n          stagger(100, [\n            animate('300ms ease-in', style({ opacity: 1, transform: 'none' }))\n          ])\n        ], { optional: true })\n      ]),\n      transition(':leave', [\n        query('svg', [\n          stagger(100, [\n            animate('300ms ease-in', style({ opacity: 0, transform: 'translateY(200%)' }))\n          ])\n        ], { optional: true })\n      ])\n    ]),\n    trigger('autoPlayAnimation', [\n      state('false', style({ strokeDasharray: '0,250.2' })),\n      state('true', style({ strokeDasharray: '250.2,250.2' })),\n      transition('false => true', animate(5000))\n    ])\n  ]\n})\nexport class CarouselComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() showDots = true;\n  @Input() dotColor = '#fff';\n  @Input() activeDotColor = '#3f51b5';\n  @Input() dotAnimationCircleColor = '#fff';\n  @Input() activeCarouselElement: number = 0;\n  @Output() activeCarouselElementChange = new EventEmitter<number>();\n  @Input() initAnimation = true;\n  @Input() radius = 200;\n  @Input() yPosition = 0;\n  @Input() cameraFov = 65;\n  @Input() cameraDistance = 600;\n  @Input() autoPlay = false;\n  @Input() autoPlayInterval = 5000;\n  @Input() rotationDuration = 500;\n\n  @ViewChild('threejsContainer') threejsContainer!: ElementRef;\n  @ViewChild('indicationDots') dots!: ElementRef;\n\n  @ContentChildren(CarouselItem) carouselItemTemplates!: QueryList<CarouselItem>;\n\n  private animationFrameId!: number;\n  private css3dRenderer = new CSS3DRenderer();\n  private scene = new Scene();\n  private camera!: THREE.PerspectiveCamera;\n  private objectControls!: ObjectControls;\n  private carouselElements!: CSS3DObject[];\n  private carouselGroup = new Group();\n  private carouselObjSubsciptions: Subscription[] = new Array<Subscription>();\n  private rotationSubscription: Subscription = new Subscription();\n  private animation: boolean = true;\n  userMove: boolean = false;\n  private dotAnimationPlayer!: AnimationPlayer | null;\n\n  constructor(private ngZone: NgZone, private animationBuilder: AnimationBuilder) { }\n\n  ngAfterViewInit(): void {\n    // Init camera\n    this.camera = new PerspectiveCamera(this.cameraFov, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.camera.position.set(0.0, 0.0, this.cameraDistance);\n\n    // Get the with and heigth of the threejs renderer\n    const divWidth = this.threejsContainer.nativeElement.clientWidth;\n    const divHeight = this.threejsContainer.nativeElement.clientHeight;\n\n    // Create CSS3D Renderer\n    this.css3dRenderer = new CSS3DRenderer();\n    this.css3dRenderer.setSize(divWidth, divHeight);\n    this.css3dRenderer.domElement.style.position = 'absolute';\n    this.css3dRenderer.domElement.style.top = '0';\n    this.threejsContainer.nativeElement.appendChild(this.css3dRenderer.domElement);\n\n    // Init carousel elements\n    this.initCarouselObjects();\n\n    // Object-Controls\n    this.objectControls = new ObjectControls(this.css3dRenderer.domElement, this.carouselGroup, this.threejsContainer.nativeElement);\n    this.objectControls.userInteracted$.subscribe({\n      next: val => {\n        this.userMove = val;\n        // Cancel the rotation, if running\n        this.rotationSubscription.unsubscribe();\n      }\n    });\n\n    // Initialize the animation of the inidcation dots\n    if (this.autoPlay) {\n      this.startDotAnimation(this.activeCarouselElement);\n    }\n\n    // Animate\n    this.animate();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let change = changes['activeCarouselElement'];\n    if (change && !change.firstChange && this.carouselGroup) {\n      //console.log(`activeCarouselElement change | previousValue=${change.previousValue} | newValue=${change.currentValue} |\n      //activeCarouselElement=${this.activeCarouselElement}`);\n      if (change.currentValue !== this.activeCarouselElement) {\n        //console.log('rotate to ' + change.currentValue);\n        this.rotateTo(change.currentValue);\n      }\n    }\n    change = changes['radius'];\n    if (change && !change.firstChange && this.carouselGroup) {\n      this.updateRadius();\n    }\n    change = changes['cameraFov'];\n    if (change && !change.firstChange && this.camera) {\n      this.camera.fov = this.cameraFov;\n      this.camera.updateProjectionMatrix();\n    }\n    change = changes['cameraDistance'];\n    if (change && !change.firstChange && this.camera) {\n      this.camera.position.set(0, 0, this.cameraDistance);\n      this.camera.updateProjectionMatrix();\n    }\n    change = changes['autoPlay'];\n    if (change && this.carouselGroup) {\n      if (change.currentValue === true) {\n        this.startDotAnimation(this.activeCarouselElement);\n      } else {\n        this.resetDotAnimation();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Cancel Animation\n    cancelAnimationFrame(this.animationFrameId);\n    // Unsubscribe Subscriptions\n    this.rotationSubscription.unsubscribe();\n    // Remove threejs container from DOM\n    (this.threejsContainer.nativeElement as HTMLCanvasElement).removeChild(this.css3dRenderer.domElement);\n    // Clear scene\n    this.scene.clear();\n  }\n\n  /**\n   * Resizes the canvas and updates the texture resulution information of the images\n   */\n  @HostListener('window:resize') resize(): void {\n    // Get width and heigh of the threejs dom element after window resize\n    const divWidth = this.threejsContainer.nativeElement.clientWidth;\n    const divHeight = this.threejsContainer.nativeElement.clientHeight;\n    // Define aspect ratio\n    this.camera.aspect = divWidth / divHeight;\n    this.camera.updateProjectionMatrix();\n    //this.renderer.setSize(divWidth, divHeight);\n    this.css3dRenderer.setSize(divWidth, divHeight);\n  }\n\n  /**\n   * Animation\n   */\n  private animate(): void {\n    if (this.animation == true) {\n      this.css3dRenderer.render(this.scene, this.camera);\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.animationFrameId = window.requestAnimationFrame(() => this.animate());\n    });\n  }\n\n  /**\n   * starts the animation of the indication dots\n   * @param index index number for which dot the animation should be started\n   * @returns \n   */\n  startDotAnimation(index: number): void {\n    if (this.dotAnimationPlayer || !this.dots) {\n      // Animation is already ongoing\n      return;\n    }\n    // Define the animation\n    const autoPlayAnimation = this.animationBuilder.build([\n      style({ strokeDasharray: '0,250.2', visibility: 'visible' }),\n      animate(this.autoPlayInterval, style({ strokeDasharray: '250.2,250.2' }))\n    ]);\n    // Get the element for, which the animation should be applied\n    const path = (this.dots.nativeElement as HTMLElement).children[index].getElementsByTagName('path')[0];\n    this.dotAnimationPlayer = autoPlayAnimation.create(path);\n    // Start the animation\n    this.dotAnimationPlayer.play();\n    // Switch to the next carousel, as soon as the animation is finished\n    this.dotAnimationPlayer.onDone(() => {\n      this.dotAnimationPlayer = null;\n      this.next();\n    });\n  }\n\n  /**\n   * Resets the dot animation\n   */\n  resetDotAnimation(): void {\n    if (this.dotAnimationPlayer && this.dotAnimationPlayer.hasStarted()) {\n      this.dotAnimationPlayer.reset();\n      this.dotAnimationPlayer = null;\n    }\n  }\n\n  /**\n   * Initialize the carousel objects\n   */\n  private initCarouselObjects(animation = true): void {\n    this.carouselElements = new Array<CSS3DObject>();\n    for (let idx = 0; idx < this.carouselItemTemplates.length; idx++) {\n      let copiedElement = (this.carouselItemTemplates.get(idx)?.htmlElement);\n      if (copiedElement) {\n        var object = new CSS3DObject(copiedElement);\n        object.element.style.pointerEvents = 'none';\n        // Add element to global variable\n        this.carouselElements.push(object);\n        // Create subscription for tween animation\n        this.carouselObjSubsciptions.push(new Subscription());\n      }\n    }\n\n    // Clear the carousel group\n    this.carouselGroup.clear();\n\n    var yOrientation = -((this.activeCarouselElement) * Math.PI * 2 / this.carouselElements.length);\n    this.carouselGroup.rotation.set(0, yOrientation, 0);\n    var index = 0;\n    const elementsCnt = this.carouselElements.length;\n\n    this.carouselElements.forEach(obj => {\n      // Unsubscribe previously subscription\n      this.carouselObjSubsciptions[index].unsubscribe();\n\n      // Define final position\n      let tweenObj = new Object3D();\n      let theta = index * 2 * (Math.PI / elementsCnt);\n      tweenObj.position.setFromCylindricalCoords(this.radius, theta, this.yPosition);\n      let vector = new Vector3(tweenObj.position.x * 2, tweenObj.position.y, tweenObj.position.z * 2);\n      tweenObj.lookAt(vector);\n\n      // Set roattion\n      obj.rotation.x = tweenObj.rotation.x;\n      obj.rotation.y = tweenObj.rotation.y;\n      obj.rotation.z = tweenObj.rotation.z;\n\n      if (this.initAnimation === true && animation === true) {\n        // Set random position\n        obj.position.x = Math.random() * 2000 - 1000;\n        obj.position.y = Math.random() * 500;\n        obj.position.z = Math.random() * 500;\n\n        // Add the objects to the portfolio group\n        this.carouselGroup.add(obj);\n\n        // Tween to final position\n        this.ngZone.runOutsideAngular(() => {\n          this.carouselObjSubsciptions[index] = RxjsTween.createTween(RxjsTween.easeInOutQuad, [obj.position.x, obj.position.y, obj.position.z],\n            [tweenObj.position.x, tweenObj.position.y, tweenObj.position.z], 2000).subscribe({\n              next: tweenPos => {\n                obj.position.set(tweenPos[0], tweenPos[1], tweenPos[2]);\n              }\n            });\n        });\n      } else {\n        obj.position.x = tweenObj.position.x;\n        obj.position.y = tweenObj.position.y;\n        obj.position.z = tweenObj.position.z;\n\n        // Add the objects to the portfolio group\n        this.carouselGroup.add(obj);\n      }\n\n      index = index + 1;\n    });\n\n    //add the group to the scene\n    this.scene.add(this.carouselGroup);\n  }\n\n  /**\n   * Rotate to next carousel item\n   */\n  next(): void {\n    let nextElement = this.activeCarouselElement >= this.carouselElements.length - 1 ? 0 : this.activeCarouselElement + 1;\n    this.resetDotAnimation();\n    this.rotateTo(nextElement);\n  }\n\n  /**\n   * Rotate to previous carousel item\n   */\n  previous(): void {\n    let nextElement = this.activeCarouselElement == 0 ? this.carouselElements.length - 1 : this.activeCarouselElement - 1;\n    this.resetDotAnimation();\n    this.rotateTo(nextElement);\n  }\n\n  /**\n   * Rotates to a sepcific carousel item\n   * @param targetIndex index of the carousel item\n   */\n  rotateTo(targetIndex: number): void {\n    if (targetIndex > this.carouselElements.length - 1) {\n      console.error('target index is greater than available carousel items');\n      return;\n    }\n    if (targetIndex > this.activeCarouselElement) {\n      // In case the current elment is the first again, reset the orientation\n      if (this.activeCarouselElement == 0 && (this.carouselGroup.rotation.y != 0\n        && this.carouselGroup.rotation.x == 0 && this.carouselGroup.rotation.z == 0)) {\n        this.carouselGroup.rotation.set(0, 0, 0);\n      }\n    } else if (targetIndex == this.carouselElements.length - 1) {\n      // Set position of the first element to y = -2*PI\n      if (this.activeCarouselElement == 0 && (this.carouselGroup.rotation.y == 0\n        && this.carouselGroup.rotation.x == 0 && this.carouselGroup.rotation.z == 0)) {\n        this.carouselGroup.rotation.set(0, -2 * Math.PI, 0);\n      }\n    }\n\n    const startQuaternion = this.carouselGroup.quaternion.clone();\n    // Calculate the orientation of the target item\n    const yOrientation = -((targetIndex) * Math.PI * 2 / this.carouselElements.length);\n    let targetQuaternion = new Quaternion().setFromEuler(new Euler(0, yOrientation, 0, 'XYZ'));\n\n    this.rotationSubscription.unsubscribe();\n\n    // Run rotation animation outsie zgZone\n    this.ngZone.runOutsideAngular(() => {\n      this.rotationSubscription = RxjsTween.createTween(RxjsTween.easeInOutQuad, 0, 1, this.rotationDuration).subscribe({\n        next: x => {\n          Quaternion.slerp(startQuaternion, targetQuaternion, this.carouselGroup.quaternion, x);\n        },\n        complete: () => {\n          Quaternion.slerp(startQuaternion, targetQuaternion, this.carouselGroup.quaternion, 1);\n          this.ngZone.run(() => {\n            this.activeCarouselElement = targetIndex;\n              this.activeCarouselElementChange.emit(this.activeCarouselElement);\n              this.objectControls.resetUserInteractionFlag();\n              if(this.autoPlay) {\n                this.startDotAnimation(this.activeCarouselElement);\n              }\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Updates and reinits the carousel items\n   */\n  public updateCarouselItems() {\n    this.initCarouselObjects(false);\n  }\n\n  /**\n   * Updates the radius of the carousel items\n   */\n  private updateRadius() {\n    for (let idx = 0; idx < this.carouselGroup.children.length; idx++) {\n      let theta = idx * 2 * (Math.PI / this.carouselGroup.children.length);\n      this.carouselGroup.children[idx].position.setFromCylindricalCoords(this.radius, theta, this.yPosition);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CarouselComponent, CarouselItem } from './carousel.component';\n\n\n\n@NgModule({\n  declarations: [CarouselComponent, CarouselItem],\n  imports: [\n    CommonModule\n  ],\n  exports: [CarouselComponent, CarouselItem]\n})\nexport class CarouselModule { }\n","/*\n * Public API Surface of ngx-acuw\n */\n\nexport * from './lib/image-as-particles/image-as-particles.component';\nexport * from './lib/image-as-particles/image-as-particles.module';\nexport * from './lib/image-transition/image-transition.component';\nexport * from './lib/image-transition/image-transition.module';\nexport * from './lib/lightbox/lightbox.component';\nexport * from './lib/lightbox/lightbox.module';\nexport * from './lib/carousel/carousel.component';\nexport * from './lib/carousel/carousel.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {LightboxOverlayComponent as ɵa} from './lib/lightbox/lightbox-overlay.component';"],"names":[],"mappings":"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"}