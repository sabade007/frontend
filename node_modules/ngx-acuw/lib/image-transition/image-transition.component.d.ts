import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
export declare class ImageTransitionComponent implements AfterViewInit, OnDestroy {
    private ngZone;
    imageUrls: string[];
    get imageSize(): string;
    set imageSize(imageSize: string);
    get autoPlay(): boolean;
    set autoPlay(autoplay: boolean);
    get autoPlayInterval(): number;
    set autoPlayInterval(autoPlayInterval: number);
    transitionDuration: number;
    get transitionType(): string;
    set transitionType(transitionType: string);
    get sizeX(): number;
    set sizeX(sizeX: number);
    get sizeY(): number;
    set sizeY(sizeY: number);
    get width(): number;
    set width(width: number);
    get intensity(): number;
    set intensity(intensity: number);
    animationEnabled: boolean;
    startIndex: number;
    imageIndexChange: EventEmitter<number>;
    private pAutoPlay;
    private pAutoPlayInterval;
    private pImageSize;
    private pTransitionType;
    private pIntensity;
    private pScaleX;
    private pScaleY;
    private pWidth;
    private animationFrameId;
    private renderer;
    private scene;
    private camera;
    private mesh;
    private material;
    private textures;
    private nextImageIndex;
    private tranistionOngoing;
    private shaders;
    private autoPlay$;
    private autoPlaySubscription;
    threejsContainer: ElementRef;
    constructor(ngZone: NgZone);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Initializes the mesh
     */
    private initMesh;
    /**
     * Sets the autoPlay interval
     */
    private setAutoPlayInterval;
    /**
     * Resets the autoPlay interval
     */
    private resetAutoPlayInterval;
    /**
     * Stops the autoPlay interval
     */
    private stopAutoPlayInterval;
    /**
     * Sets the shader properties depending on the transition type
     */
    private setShaderProperties;
    /**
     * Animation
     */
    private animate;
    /**
     * Resizes the canvas and updates the texture resulution information of the images
     */
    private resize;
    /**
     * Updates the resulution of the texture for the shader depending on the image size type
     * @param textureNumber Number of the texture
     */
    private updateTextureResolution;
    /**
     * Starts the transition effect to the next image
     * @param posDirection indicator, if the next or previous image should be loaded
     */
    private transitionToNextTexture;
    private prepAndLoadNextImg;
    next(): void;
    prev(): void;
}
