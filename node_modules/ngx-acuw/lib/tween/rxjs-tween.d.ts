import { Observable } from 'rxjs';
export declare module RxjsTween {
    /**
     * Creates an observable that emits samples from an easing function on every animation frame
     * for a duration `d` ms.
     *
     * The first value will be emitted on the next animation frame,
     * and is the value of the easing function at `t = 0`.
     * The final value is guaranteed to be the easing function at `t = d`.
     * The observable completes one frame after the final value was emitted.
     * @param easingFunction the easing fuction to sample
     * @param b beginning value and 2nd parameter of the easing function
     * @param c change in value (or end value) and 3rd parameter of the easing function
     * @param d total duration of the tween in ms and 4th parameter of the easing function
     * @param s 5th parameter of the easing function (optional)
     */
    function createTween(easingFunction: (t: number, b: number, pc: number, d: number, s?: number) => number, b: number[], c: number[], d: number, s?: number): Observable<number[]>;
    function createTween(easingFunction: (t: number, b: number, pc: number, d: number, s?: number) => number, b: number, c: number, d: number, s?: number): Observable<number>;
    function linear(t: number, b: number, pc: number, d: number): number;
    function easeInOutQuad(t: number, b: number, pc: number, d: number): number;
}
