import { AfterContentInit, ElementRef, EventEmitter, OnChanges, OnDestroy } from '@angular/core';
export declare class DroppableDirective implements OnChanges, OnDestroy, AfterContentInit {
    protected document: any;
    private element;
    /** prompt for files when clicked */
    isClickable: boolean;
    /** allow multiple files dropped or selected */
    acceptsMultipleFiles: boolean;
    /** input limit accepted file types via MIME */
    accept: string | false;
    /** append CSS class when files are dragged on element */
    appendStatusClasses: boolean;
    dragOverClass: string;
    filesDropped: EventEmitter<File[]>;
    /**
     * Accessibility
     */
    tabIndex: number;
    /**
     * Accessibility
     */
    role: string;
    /** File is being hovered over, can be used to show something on hover */
    isHover: boolean;
    private virtualInputElement;
    handleDragover(e: Event): void;
    handleDragleave(e: Event): void;
    handleDrop(e: Event): void;
    handleClick(e: Event): void;
    handleEnter(e: Event): void;
    constructor(document: any, element: ElementRef);
    ngOnChanges(): void;
    ngAfterContentInit(): void;
    setAcceptsMultipleFiles(): void;
    setAccepted(): void;
    ngOnDestroy(): void;
    makeVirtualInputElement(): HTMLInputElement;
    onVirtualInputElementChange(e: Event): void;
    onDroppableElementChange(event: {
        [key: string]: any;
    }): void;
    promptForFiles(): void;
}
