!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ctrl/ngx-droppable",["exports","@angular/core","@angular/common"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self).ctrl=t.ctrl||{},t.ctrl["ngx-droppable"]={}),t.ng.core,t.ng.common)}(this,(function(t,e,n){"use strict";var i=function(){function t(t,n){this.document=t,this.element=n,this.isClickable=!0,this.acceptsMultipleFiles=!0,this.accept=!1,this.appendStatusClasses=!0,this.dragOverClass="dragover",this.filesDropped=new e.EventEmitter,this.tabIndex=0,this.role="button",this.isHover=!1}return t.prototype.handleDragover=function(t){t.preventDefault(),t.stopPropagation(),this.isHover=!0,this.appendStatusClasses&&this.element.nativeElement.classList.add(this.dragOverClass)},t.prototype.handleDragleave=function(t){t.preventDefault(),t.stopPropagation(),this.isHover=!1,this.appendStatusClasses&&this.element.nativeElement.classList.remove(this.dragOverClass)},t.prototype.handleDrop=function(t){t.preventDefault(),t.stopPropagation(),this.isHover=!1,this.appendStatusClasses&&this.element.nativeElement.classList.remove(this.dragOverClass),this.onDroppableElementChange(t)},t.prototype.handleClick=function(t){this.isClickable&&this.promptForFiles()},t.prototype.handleEnter=function(t){this.promptForFiles(),this.element.nativeElement.blur()},t.prototype.ngOnChanges=function(){this.virtualInputElement&&(this.setAcceptsMultipleFiles(),this.setAccepted())},t.prototype.ngAfterContentInit=function(){this.virtualInputElement=this.makeVirtualInputElement(),this.virtualInputElement.addEventListener("change",this.onVirtualInputElementChange.bind(this)),this.setAcceptsMultipleFiles(),this.setAccepted()},t.prototype.setAcceptsMultipleFiles=function(){this.acceptsMultipleFiles?this.virtualInputElement.setAttribute("multiple",this.acceptsMultipleFiles.toString()):this.virtualInputElement.removeAttribute("multiple")},t.prototype.setAccepted=function(){this.accept?this.virtualInputElement.setAttribute("accept",this.accept.toString()):this.virtualInputElement.removeAttribute("accept")},t.prototype.ngOnDestroy=function(){this.virtualInputElement&&this.virtualInputElement.removeEventListener("change",this.onVirtualInputElementChange.bind(this))},t.prototype.makeVirtualInputElement=function(){var t=this.document.createElement("input");return t.setAttribute("type","file"),t.style.display="none",t},t.prototype.onVirtualInputElementChange=function(t){this.onDroppableElementChange(t),this.virtualInputElement.value=""},t.prototype.onDroppableElementChange=function(t){var e;if(t.dataTransfer)e=t.dataTransfer.files;else{if(!t.target)throw Error("Fired event contains no files");e=t.target.files}var n=Array.from(e);this.filesDropped.emit(n)},t.prototype.promptForFiles=function(){this.virtualInputElement.click()},t}();i.decorators=[{type:e.Directive,args:[{selector:"[droppable]",exportAs:"droppable"}]}],i.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[n.DOCUMENT]}]},{type:e.ElementRef}]},i.propDecorators={isClickable:[{type:e.Input}],acceptsMultipleFiles:[{type:e.Input}],accept:[{type:e.Input}],appendStatusClasses:[{type:e.Input}],dragOverClass:[{type:e.Input}],filesDropped:[{type:e.Output}],tabIndex:[{type:e.HostBinding,args:["attr.tabIndex"]}],role:[{type:e.HostBinding,args:["attr.role"]}],handleDragover:[{type:e.HostListener,args:["dragover",["$event"]]}],handleDragleave:[{type:e.HostListener,args:["dragleave",["$event"]]}],handleDrop:[{type:e.HostListener,args:["drop",["$event"]]}],handleClick:[{type:e.HostListener,args:["click",["$event"]]}],handleEnter:[{type:e.HostListener,args:["keydown.enter",["$event"]]}]};var r=function(){};r.decorators=[{type:e.NgModule,args:[{exports:[i],declarations:[i]}]}],t.DroppableDirective=i,t.DroppableModule=r,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ctrl-ngx-droppable.umd.min.js.map