import { Pipe } from '@angular/core';
import { extractDeepPropertyByMapKey, isFunction } from '../helpers/helpers';
export class GroupByPipe {
    transform(input, discriminator = [], delimiter = '|') {
        if (!Array.isArray(input)) {
            return input;
        }
        return this.groupBy(input, discriminator, delimiter);
    }
    groupBy(list, discriminator, delimiter) {
        return list.reduce((acc, payload) => {
            const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);
            acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];
            return acc;
        }, {});
    }
    extractKeyByDiscriminator(discriminator, payload, delimiter) {
        if (isFunction(discriminator)) {
            return discriminator(payload);
        }
        if (Array.isArray(discriminator)) {
            return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);
        }
        return extractDeepPropertyByMapKey(payload, discriminator);
    }
}
GroupByPipe.decorators = [
    { type: Pipe, args: [{ name: 'groupBy' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtYnkuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RhbnJldmFoL3ByaXZhdGUvbmd4LXBpcGVzLyIsInNvdXJjZXMiOlsic3JjL25nLXBpcGVzL3BpcGVzL2FycmF5L2dyb3VwLWJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUc3RSxNQUFNLE9BQU8sV0FBVztJQUN0QixTQUFTLENBQUMsS0FBVSxFQUFFLGdCQUFxQixFQUFFLEVBQUUsWUFBb0IsR0FBRztRQUNwRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN6QixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVPLE9BQU8sQ0FBQyxJQUFXLEVBQUUsYUFBa0IsRUFBRSxTQUFpQjtRQUNoRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFRLEVBQUUsT0FBZSxFQUFFLEVBQUU7WUFDL0MsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFOUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRTVFLE9BQU8sR0FBRyxDQUFDO1FBQ2IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQUVPLHlCQUF5QixDQUFDLGFBQWtCLEVBQUUsT0FBZSxFQUFFLFNBQWlCO1FBQ3RGLElBQUksVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQzdCLE9BQWtCLGFBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUMzQztRQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFBRTtZQUNoQyxPQUFPLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDeEY7UUFFRCxPQUFPLDJCQUEyQixDQUFDLE9BQU8sRUFBVSxhQUFhLENBQUMsQ0FBQztJQUNyRSxDQUFDOzs7WUE5QkYsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleSwgaXNGdW5jdGlvbiB9IGZyb20gJy4uL2hlbHBlcnMvaGVscGVycyc7XG5cbkBQaXBlKHsgbmFtZTogJ2dyb3VwQnknIH0pXG5leHBvcnQgY2xhc3MgR3JvdXBCeVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIGRpc2NyaW1pbmF0b3I6IGFueSA9IFtdLCBkZWxpbWl0ZXI6IHN0cmluZyA9ICd8Jyk6IGFueSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmdyb3VwQnkoaW5wdXQsIGRpc2NyaW1pbmF0b3IsIGRlbGltaXRlcik7XG4gIH1cblxuICBwcml2YXRlIGdyb3VwQnkobGlzdDogYW55W10sIGRpc2NyaW1pbmF0b3I6IGFueSwgZGVsaW1pdGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gbGlzdC5yZWR1Y2UoKGFjYzogYW55LCBwYXlsb2FkOiBzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IHRoaXMuZXh0cmFjdEtleUJ5RGlzY3JpbWluYXRvcihkaXNjcmltaW5hdG9yLCBwYXlsb2FkLCBkZWxpbWl0ZXIpO1xuXG4gICAgICBhY2Nba2V5XSA9IEFycmF5LmlzQXJyYXkoYWNjW2tleV0pID8gYWNjW2tleV0uY29uY2F0KFtwYXlsb2FkXSkgOiBbcGF5bG9hZF07XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0S2V5QnlEaXNjcmltaW5hdG9yKGRpc2NyaW1pbmF0b3I6IGFueSwgcGF5bG9hZDogc3RyaW5nLCBkZWxpbWl0ZXI6IHN0cmluZykge1xuICAgIGlmIChpc0Z1bmN0aW9uKGRpc2NyaW1pbmF0b3IpKSB7XG4gICAgICByZXR1cm4gKDxGdW5jdGlvbj5kaXNjcmltaW5hdG9yKShwYXlsb2FkKTtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShkaXNjcmltaW5hdG9yKSkge1xuICAgICAgcmV0dXJuIGRpc2NyaW1pbmF0b3IubWFwKGsgPT4gZXh0cmFjdERlZXBQcm9wZXJ0eUJ5TWFwS2V5KHBheWxvYWQsIGspKS5qb2luKGRlbGltaXRlcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleShwYXlsb2FkLCA8c3RyaW5nPmRpc2NyaW1pbmF0b3IpO1xuICB9XG59XG4iXX0=