import { Pipe } from '@angular/core';
import { extractDeepPropertyByMapKey, extractDeepPropertyByParentMapKey, isBoolean, isNumberFinite, isString, isUndefined, } from '../helpers/helpers';
// tslint:disable no-bitwise
export class FilterByPipe {
    transform(input, props, search = '', strict = false) {
        if (!Array.isArray(input) ||
            (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))) {
            return input;
        }
        const terms = String(search)
            .toLowerCase()
            .split(',');
        return input.filter(obj => {
            return props.some(prop => {
                return terms.some(term => {
                    const value = extractDeepPropertyByMapKey(obj, prop);
                    /* tslint:disable */
                    const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);
                    if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {
                        return props.some(parent => {
                            const str = String(parent[tail]).toLowerCase();
                            return strict ? str === term : !!~str.indexOf(term);
                        });
                    }
                    if (isUndefined(value)) {
                        return false;
                    }
                    const strValue = String(value).toLowerCase();
                    return strict ? term === strValue : !!~strValue.indexOf(term);
                });
            });
        });
    }
}
FilterByPipe.decorators = [
    { type: Pipe, args: [{ name: 'filterBy' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWJ5LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kYW5yZXZhaC9wcml2YXRlL25neC1waXBlcy8iLCJzb3VyY2VzIjpbInNyYy9uZy1waXBlcy9waXBlcy9hcnJheS9maWx0ZXItYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUNMLDJCQUEyQixFQUMzQixpQ0FBaUMsRUFDakMsU0FBUyxFQUNULGNBQWMsRUFDZCxRQUFRLEVBQ1IsV0FBVyxHQUNaLE1BQU0sb0JBQW9CLENBQUM7QUFFNUIsNEJBQTRCO0FBRTVCLE1BQU0sT0FBTyxZQUFZO0lBR3ZCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsS0FBb0IsRUFBRSxTQUFjLEVBQUUsRUFBRSxTQUFrQixLQUFLO1FBQ25GLElBQ0UsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUNyQixDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUM5RjtZQUNBLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO2FBQ3pCLFdBQVcsRUFBRTthQUNiLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVkLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUN4QixPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3ZCLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDdkIsTUFBTSxLQUFLLEdBQUcsMkJBQTJCLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUNyRCxvQkFBb0I7b0JBQ3BCLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsaUNBQWlDLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUVyRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO3dCQUNyRSxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7NEJBQ3pCLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQzs0QkFFL0MsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ3RELENBQUMsQ0FBQyxDQUFDO3FCQUNKO29CQUVELElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFO3dCQUN0QixPQUFPLEtBQUssQ0FBQztxQkFDZDtvQkFFRCxNQUFNLFFBQVEsR0FBVyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7b0JBRXJELE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNoRSxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUF6Q0YsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleSxcbiAgZXh0cmFjdERlZXBQcm9wZXJ0eUJ5UGFyZW50TWFwS2V5LFxuICBpc0Jvb2xlYW4sXG4gIGlzTnVtYmVyRmluaXRlLFxuICBpc1N0cmluZyxcbiAgaXNVbmRlZmluZWQsXG59IGZyb20gJy4uL2hlbHBlcnMvaGVscGVycyc7XG5cbi8vIHRzbGludDpkaXNhYmxlIG5vLWJpdHdpc2VcbkBQaXBlKHsgbmFtZTogJ2ZpbHRlckJ5JyB9KVxuZXhwb3J0IGNsYXNzIEZpbHRlckJ5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm08VD4oaW5wdXQ6IFQsIHByb3BzOiBBcnJheTxzdHJpbmc+LCBzZWFyY2g/OiBhbnksIHN0cmljdD86IGJvb2xlYW4pOiBUO1xuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueVtdLCBwcm9wczogQXJyYXk8c3RyaW5nPiwgc2VhcmNoPzogYW55LCBzdHJpY3Q/OiBib29sZWFuKTogYW55W107XG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcm9wczogQXJyYXk8c3RyaW5nPiwgc2VhcmNoOiBhbnkgPSAnJywgc3RyaWN0OiBib29sZWFuID0gZmFsc2UpOiBhbnkge1xuICAgIGlmIChcbiAgICAgICFBcnJheS5pc0FycmF5KGlucHV0KSB8fFxuICAgICAgKCFBcnJheS5pc0FycmF5KHNlYXJjaCkgJiYgIWlzU3RyaW5nKHNlYXJjaCkgJiYgIWlzTnVtYmVyRmluaXRlKHNlYXJjaCkgJiYgIWlzQm9vbGVhbihzZWFyY2gpKVxuICAgICkge1xuICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cblxuICAgIGNvbnN0IHRlcm1zID0gU3RyaW5nKHNlYXJjaClcbiAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAuc3BsaXQoJywnKTtcblxuICAgIHJldHVybiBpbnB1dC5maWx0ZXIob2JqID0+IHtcbiAgICAgIHJldHVybiBwcm9wcy5zb21lKHByb3AgPT4ge1xuICAgICAgICByZXR1cm4gdGVybXMuc29tZSh0ZXJtID0+IHtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleShvYmosIHByb3ApO1xuICAgICAgICAgIC8qIHRzbGludDpkaXNhYmxlICovXG4gICAgICAgICAgY29uc3QgeyBwcm9wcywgdGFpbCB9ID0gZXh0cmFjdERlZXBQcm9wZXJ0eUJ5UGFyZW50TWFwS2V5KG9iaiwgcHJvcCk7XG5cbiAgICAgICAgICBpZiAoaXNVbmRlZmluZWQodmFsdWUpICYmICFpc1VuZGVmaW5lZChwcm9wcykgJiYgQXJyYXkuaXNBcnJheShwcm9wcykpIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5zb21lKHBhcmVudCA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHN0ciA9IFN0cmluZyhwYXJlbnRbdGFpbF0pLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHN0cmljdCA/IHN0ciA9PT0gdGVybSA6ICEhfnN0ci5pbmRleE9mKHRlcm0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGlzVW5kZWZpbmVkKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHN0clZhbHVlOiBzdHJpbmcgPSBTdHJpbmcodmFsdWUpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICByZXR1cm4gc3RyaWN0ID8gdGVybSA9PT0gc3RyVmFsdWUgOiAhIX5zdHJWYWx1ZS5pbmRleE9mKHRlcm0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=