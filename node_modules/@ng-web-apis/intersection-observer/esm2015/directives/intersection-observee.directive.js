/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Inject } from '@angular/core';
import { Observable } from 'rxjs';
import { IntersectionObserveeService } from '../services/intersection-observee.service';
// @dynamic
export class IntersectionObserveeDirective {
    /**
     * @param {?} waIntersectionObservee
     */
    constructor(waIntersectionObservee) {
        this.waIntersectionObservee = waIntersectionObservee;
    }
}
IntersectionObserveeDirective.decorators = [
    { type: Directive, args: [{
                selector: '[waIntersectionObservee]',
                outputs: ['waIntersectionObservee'],
                providers: [IntersectionObserveeService],
            },] }
];
/** @nocollapse */
IntersectionObserveeDirective.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [IntersectionObserveeService,] }] }
];
if (false) {
    /** @type {?} */
    IntersectionObserveeDirective.prototype.waIntersectionObservee;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJzZWN0aW9uLW9ic2VydmVlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy13ZWItYXBpcy9pbnRlcnNlY3Rpb24tb2JzZXJ2ZXIvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL2ludGVyc2VjdGlvbi1vYnNlcnZlZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDaEMsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sMkNBQTJDLENBQUM7O0FBUXRGLE1BQU0sT0FBTyw2QkFBNkI7Ozs7SUFDdEMsWUFFYSxzQkFBK0Q7UUFBL0QsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF5QztJQUN6RSxDQUFDOzs7WUFUUCxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsT0FBTyxFQUFFLENBQUMsd0JBQXdCLENBQUM7Z0JBQ25DLFNBQVMsRUFBRSxDQUFDLDJCQUEyQixDQUFDO2FBQzNDOzs7O1lBUk8sVUFBVSx1QkFXVCxNQUFNLFNBQUMsMkJBQTJCOzs7O0lBQW5DLCtEQUN3RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge0ludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZX0gZnJvbSAnLi4vc2VydmljZXMvaW50ZXJzZWN0aW9uLW9ic2VydmVlLnNlcnZpY2UnO1xyXG5cclxuLy8gQGR5bmFtaWNcclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ1t3YUludGVyc2VjdGlvbk9ic2VydmVlXScsXHJcbiAgICBvdXRwdXRzOiBbJ3dhSW50ZXJzZWN0aW9uT2JzZXJ2ZWUnXSxcclxuICAgIHByb3ZpZGVyczogW0ludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJbnRlcnNlY3Rpb25PYnNlcnZlZURpcmVjdGl2ZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBASW5qZWN0KEludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZSlcclxuICAgICAgICByZWFkb25seSB3YUludGVyc2VjdGlvbk9ic2VydmVlOiBPYnNlcnZhYmxlPEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlbXT4sXHJcbiAgICApIHt9XHJcbn1cclxuIl19