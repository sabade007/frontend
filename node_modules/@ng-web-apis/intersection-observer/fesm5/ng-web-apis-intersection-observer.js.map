{"version":3,"file":"ng-web-apis-intersection-observer.js.map","sources":["ng://@ng-web-apis/intersection-observer/tokens/intersection-root.ts","ng://@ng-web-apis/intersection-observer/tokens/intersection-root-margin.ts","ng://@ng-web-apis/intersection-observer/utils/root-margin-factory.ts","ng://@ng-web-apis/intersection-observer/tokens/intersection-threshold.ts","ng://@ng-web-apis/intersection-observer/utils/threshold-factory.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-observer.directive.ts","ng://@ng-web-apis/intersection-observer/services/intersection-observee.service.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-observee.directive.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-root.directive.ts","ng://@ng-web-apis/intersection-observer/module.ts","ng://@ng-web-apis/intersection-observer/tokens/support.ts","ng://@ng-web-apis/intersection-observer/services/intersection-observer.service.ts"],"sourcesContent":["import {ElementRef, InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT = new InjectionToken<ElementRef<Element>>(\r\n    'Root element for IntersectionObserver',\r\n);\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\r\nexport const INTERSECTION_ROOT_MARGIN = new InjectionToken<string>(\r\n    'rootMargin for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_ROOT_MARGIN_DEFAULT} from '../tokens/intersection-root-margin';\r\n\r\nexport function rootMarginFactory(rootMargin: string | null): string {\r\n    return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_THRESHOLD_DEFAULT = 0;\r\nexport const INTERSECTION_THRESHOLD = new InjectionToken<number | number[]>(\r\n    'threshold for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_THRESHOLD_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_THRESHOLD_DEFAULT} from '../tokens/intersection-threshold';\r\n\r\nexport function thresholdFactory(threshold: string | null): number | number[] {\r\n    return threshold\r\n        ? threshold.split(',').map(parseFloat)\r\n        : INTERSECTION_THRESHOLD_DEFAULT;\r\n}\r\n","import {\r\n    Attribute,\r\n    Directive,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    Optional,\r\n} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {rootMarginFactory} from '../utils/root-margin-factory';\r\nimport {thresholdFactory} from '../utils/threshold-factory';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionObserver]',\r\n    exportAs: 'IntersectionObserver',\r\n})\r\nexport class IntersectionObserverDirective extends IntersectionObserver\r\n    implements OnDestroy {\r\n    private readonly callbacks = new Map<Element, IntersectionObserverCallback>();\r\n\r\n    constructor(\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n        @Attribute('waIntersectionRootMargin') rootMargin: string | null,\r\n        @Attribute('waIntersectionThreshold') threshold: string | null,\r\n    ) {\r\n        super(\r\n            entries => {\r\n                this.callbacks.forEach((callback, element) => {\r\n                    const filtered = entries.filter(({target}) => target === element);\r\n\r\n                    return filtered.length && callback(filtered, this);\r\n                });\r\n            },\r\n            {\r\n                root: root && root.nativeElement,\r\n                rootMargin: rootMarginFactory(rootMargin),\r\n                threshold: thresholdFactory(threshold),\r\n            },\r\n        );\r\n    }\r\n\r\n    observe(target: Element, callback: IntersectionObserverCallback = () => {}) {\r\n        super.observe(target);\r\n        this.callbacks.set(target, callback);\r\n    }\r\n\r\n    unobserve(target: Element) {\r\n        super.unobserve(target);\r\n        this.callbacks.delete(target);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disconnect();\r\n    }\r\n}\r\n","import {ElementRef, Inject, Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {IntersectionObserverDirective} from '../directives/intersection-observer.directive';\r\n\r\n@Injectable()\r\nexport class IntersectionObserveeService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(IntersectionObserverDirective)\r\n        observer: IntersectionObserverDirective,\r\n    ) {\r\n        super(subscriber => {\r\n            observer.observe(nativeElement, entries => {\r\n                subscriber.next(entries);\r\n            });\r\n\r\n            return () => {\r\n                observer.unobserve(nativeElement);\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n","import {Directive, Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {IntersectionObserveeService} from '../services/intersection-observee.service';\r\n\r\n// @dynamic\r\n@Directive({\r\n    selector: '[waIntersectionObservee]',\r\n    outputs: ['waIntersectionObservee'],\r\n    providers: [IntersectionObserveeService],\r\n})\r\nexport class IntersectionObserveeDirective {\r\n    constructor(\r\n        @Inject(IntersectionObserveeService)\r\n        readonly waIntersectionObservee: Observable<IntersectionObserverEntry[]>,\r\n    ) {}\r\n}\r\n","import {Directive, ElementRef} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionRoot]',\r\n    providers: [\r\n        {\r\n            provide: INTERSECTION_ROOT,\r\n            useExisting: ElementRef,\r\n        },\r\n    ],\r\n})\r\nexport class IntersectionRootDirective {}\r\n","import {NgModule} from '@angular/core';\r\nimport {IntersectionObserveeDirective} from './directives/intersection-observee.directive';\r\nimport {IntersectionObserverDirective} from './directives/intersection-observer.directive';\r\nimport {IntersectionRootDirective} from './directives/intersection-root.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n    exports: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n})\r\nexport class IntersectionObserverModule {}\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from '@ng-web-apis/common';\r\n\r\n// TODO: Remove when moved to Angular 10\r\ndeclare global {\r\n    interface Window {\r\n        IntersectionObserver: IntersectionObserver;\r\n    }\r\n}\r\n\r\nexport const INTERSECTION_OBSERVER_SUPPORT = new InjectionToken<boolean>(\r\n    'Intersection Observer API support',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => !!inject(WINDOW).IntersectionObserver,\r\n    },\r\n);\r\n","import {ElementRef, Inject, Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {INTERSECTION_ROOT_MARGIN} from '../tokens/intersection-root-margin';\r\nimport {INTERSECTION_THRESHOLD} from '../tokens/intersection-threshold';\r\nimport {INTERSECTION_OBSERVER_SUPPORT} from '../tokens/support';\r\n\r\n@Injectable()\r\nexport class IntersectionObserverService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(INTERSECTION_OBSERVER_SUPPORT) support: boolean,\r\n        @Inject(INTERSECTION_ROOT_MARGIN) rootMargin: string,\r\n        @Inject(INTERSECTION_THRESHOLD) threshold: number | number[],\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n    ) {\r\n        super(subscriber => {\r\n            if (!support) {\r\n                subscriber.error('IntersectionObserver is not supported in your browser');\r\n\r\n                return;\r\n            }\r\n\r\n            const observer = new IntersectionObserver(\r\n                entries => {\r\n                    subscriber.next(entries);\r\n                },\r\n                {\r\n                    root: root && root.nativeElement,\r\n                    rootMargin,\r\n                    threshold,\r\n                },\r\n            );\r\n\r\n            observer.observe(nativeElement);\r\n\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
