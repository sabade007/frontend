{"version":3,"file":"ng-web-apis-intersection-observer.js.map","sources":["ng://@ng-web-apis/intersection-observer/tokens/intersection-root.ts","ng://@ng-web-apis/intersection-observer/tokens/intersection-root-margin.ts","ng://@ng-web-apis/intersection-observer/utils/root-margin-factory.ts","ng://@ng-web-apis/intersection-observer/tokens/intersection-threshold.ts","ng://@ng-web-apis/intersection-observer/utils/threshold-factory.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-observer.directive.ts","ng://@ng-web-apis/intersection-observer/services/intersection-observee.service.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-observee.directive.ts","ng://@ng-web-apis/intersection-observer/directives/intersection-root.directive.ts","ng://@ng-web-apis/intersection-observer/module.ts","ng://@ng-web-apis/intersection-observer/tokens/support.ts","ng://@ng-web-apis/intersection-observer/services/intersection-observer.service.ts"],"sourcesContent":["import {ElementRef, InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT = new InjectionToken<ElementRef<Element>>(\r\n    'Root element for IntersectionObserver',\r\n);\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\r\nexport const INTERSECTION_ROOT_MARGIN = new InjectionToken<string>(\r\n    'rootMargin for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_ROOT_MARGIN_DEFAULT} from '../tokens/intersection-root-margin';\r\n\r\nexport function rootMarginFactory(rootMargin: string | null): string {\r\n    return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_THRESHOLD_DEFAULT = 0;\r\nexport const INTERSECTION_THRESHOLD = new InjectionToken<number | number[]>(\r\n    'threshold for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_THRESHOLD_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_THRESHOLD_DEFAULT} from '../tokens/intersection-threshold';\r\n\r\nexport function thresholdFactory(threshold: string | null): number | number[] {\r\n    return threshold\r\n        ? threshold.split(',').map(parseFloat)\r\n        : INTERSECTION_THRESHOLD_DEFAULT;\r\n}\r\n","import {\r\n    Attribute,\r\n    Directive,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    Optional,\r\n} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {rootMarginFactory} from '../utils/root-margin-factory';\r\nimport {thresholdFactory} from '../utils/threshold-factory';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionObserver]',\r\n    exportAs: 'IntersectionObserver',\r\n})\r\nexport class IntersectionObserverDirective extends IntersectionObserver\r\n    implements OnDestroy {\r\n    private readonly callbacks = new Map<Element, IntersectionObserverCallback>();\r\n\r\n    constructor(\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n        @Attribute('waIntersectionRootMargin') rootMargin: string | null,\r\n        @Attribute('waIntersectionThreshold') threshold: string | null,\r\n    ) {\r\n        super(\r\n            entries => {\r\n                this.callbacks.forEach((callback, element) => {\r\n                    const filtered = entries.filter(({target}) => target === element);\r\n\r\n                    return filtered.length && callback(filtered, this);\r\n                });\r\n            },\r\n            {\r\n                root: root && root.nativeElement,\r\n                rootMargin: rootMarginFactory(rootMargin),\r\n                threshold: thresholdFactory(threshold),\r\n            },\r\n        );\r\n    }\r\n\r\n    observe(target: Element, callback: IntersectionObserverCallback = () => {}) {\r\n        super.observe(target);\r\n        this.callbacks.set(target, callback);\r\n    }\r\n\r\n    unobserve(target: Element) {\r\n        super.unobserve(target);\r\n        this.callbacks.delete(target);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disconnect();\r\n    }\r\n}\r\n","import {ElementRef, Inject, Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {IntersectionObserverDirective} from '../directives/intersection-observer.directive';\r\n\r\n@Injectable()\r\nexport class IntersectionObserveeService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(IntersectionObserverDirective)\r\n        observer: IntersectionObserverDirective,\r\n    ) {\r\n        super(subscriber => {\r\n            observer.observe(nativeElement, entries => {\r\n                subscriber.next(entries);\r\n            });\r\n\r\n            return () => {\r\n                observer.unobserve(nativeElement);\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n","import {Directive, Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {IntersectionObserveeService} from '../services/intersection-observee.service';\r\n\r\n// @dynamic\r\n@Directive({\r\n    selector: '[waIntersectionObservee]',\r\n    outputs: ['waIntersectionObservee'],\r\n    providers: [IntersectionObserveeService],\r\n})\r\nexport class IntersectionObserveeDirective {\r\n    constructor(\r\n        @Inject(IntersectionObserveeService)\r\n        readonly waIntersectionObservee: Observable<IntersectionObserverEntry[]>,\r\n    ) {}\r\n}\r\n","import {Directive, ElementRef} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionRoot]',\r\n    providers: [\r\n        {\r\n            provide: INTERSECTION_ROOT,\r\n            useExisting: ElementRef,\r\n        },\r\n    ],\r\n})\r\nexport class IntersectionRootDirective {}\r\n","import {NgModule} from '@angular/core';\r\nimport {IntersectionObserveeDirective} from './directives/intersection-observee.directive';\r\nimport {IntersectionObserverDirective} from './directives/intersection-observer.directive';\r\nimport {IntersectionRootDirective} from './directives/intersection-root.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n    exports: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n})\r\nexport class IntersectionObserverModule {}\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from '@ng-web-apis/common';\r\n\r\n// TODO: Remove when moved to Angular 10\r\ndeclare global {\r\n    interface Window {\r\n        IntersectionObserver: IntersectionObserver;\r\n    }\r\n}\r\n\r\nexport const INTERSECTION_OBSERVER_SUPPORT = new InjectionToken<boolean>(\r\n    'Intersection Observer API support',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => !!inject(WINDOW).IntersectionObserver,\r\n    },\r\n);\r\n","import {ElementRef, Inject, Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {INTERSECTION_ROOT_MARGIN} from '../tokens/intersection-root-margin';\r\nimport {INTERSECTION_THRESHOLD} from '../tokens/intersection-threshold';\r\nimport {INTERSECTION_OBSERVER_SUPPORT} from '../tokens/support';\r\n\r\n@Injectable()\r\nexport class IntersectionObserverService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(INTERSECTION_OBSERVER_SUPPORT) support: boolean,\r\n        @Inject(INTERSECTION_ROOT_MARGIN) rootMargin: string,\r\n        @Inject(INTERSECTION_THRESHOLD) threshold: number | number[],\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n    ) {\r\n        super(subscriber => {\r\n            if (!support) {\r\n                subscriber.error('IntersectionObserver is not supported in your browser');\r\n\r\n                return;\r\n            }\r\n\r\n            const observer = new IntersectionObserver(\r\n                entries => {\r\n                    subscriber.next(entries);\r\n                },\r\n                {\r\n                    root: root && root.nativeElement,\r\n                    rootMargin,\r\n                    threshold,\r\n                },\r\n            );\r\n\r\n            observer.observe(nativeElement);\r\n\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
