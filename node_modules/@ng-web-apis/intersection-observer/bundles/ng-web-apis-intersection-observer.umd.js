(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('@ng-web-apis/common')) :
    typeof define === 'function' && define.amd ? define('@ng-web-apis/intersection-observer', ['exports', 'rxjs', 'rxjs/operators', '@angular/core', '@ng-web-apis/common'], factory) :
    (factory((global['ng-web-apis'] = global['ng-web-apis'] || {}, global['ng-web-apis']['intersection-observer'] = {}),global.rxjs,global.rxjs.operators,global.ng.core,global.common));
}(this, (function (exports,rxjs,operators,core,common) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var INTERSECTION_ROOT = new core.InjectionToken('Root element for IntersectionObserver');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';
    /** @type {?} */
    var INTERSECTION_ROOT_MARGIN = new core.InjectionToken('rootMargin for IntersectionObserver', {
        providedIn: 'root',
        factory: function () { return INTERSECTION_ROOT_MARGIN_DEFAULT; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} rootMargin
     * @return {?}
     */
    function rootMarginFactory(rootMargin) {
        return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var INTERSECTION_THRESHOLD_DEFAULT = 0;
    /** @type {?} */
    var INTERSECTION_THRESHOLD = new core.InjectionToken('threshold for IntersectionObserver', {
        providedIn: 'root',
        factory: function () { return INTERSECTION_THRESHOLD_DEFAULT; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} threshold
     * @return {?}
     */
    function thresholdFactory(threshold) {
        return threshold
            ? threshold.split(',').map(parseFloat)
            : INTERSECTION_THRESHOLD_DEFAULT;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IntersectionObserverDirective = /** @class */ (function (_super) {
        __extends(IntersectionObserverDirective, _super);
        function IntersectionObserverDirective(root, rootMargin, threshold) {
            var _this = _super.call(this, function (entries) {
                _this.callbacks.forEach(function (callback, element) {
                    /** @type {?} */
                    var filtered = entries.filter(function (_a) {
                        var target = _a.target;
                        return target === element;
                    });
                    return filtered.length && callback(filtered, _this);
                });
            }, {
                root: root && root.nativeElement,
                rootMargin: rootMarginFactory(rootMargin),
                threshold: thresholdFactory(threshold),
            }) || this;
            _this.callbacks = new Map();
            return _this;
        }
        /**
         * @param {?} target
         * @param {?=} callback
         * @return {?}
         */
        IntersectionObserverDirective.prototype.observe = /**
         * @param {?} target
         * @param {?=} callback
         * @return {?}
         */
            function (target, callback) {
                if (callback === void 0) {
                    callback = function () { };
                }
                _super.prototype.observe.call(this, target);
                this.callbacks.set(target, callback);
            };
        /**
         * @param {?} target
         * @return {?}
         */
        IntersectionObserverDirective.prototype.unobserve = /**
         * @param {?} target
         * @return {?}
         */
            function (target) {
                _super.prototype.unobserve.call(this, target);
                this.callbacks.delete(target);
            };
        /**
         * @return {?}
         */
        IntersectionObserverDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.disconnect();
            };
        IntersectionObserverDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[waIntersectionObserver]',
                        exportAs: 'IntersectionObserver',
                    },] }
        ];
        /** @nocollapse */
        IntersectionObserverDirective.ctorParameters = function () {
            return [
                { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [INTERSECTION_ROOT,] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['waIntersectionRootMargin',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['waIntersectionThreshold',] }] }
            ];
        };
        return IntersectionObserverDirective;
    }(IntersectionObserver));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IntersectionObserveeService = /** @class */ (function (_super) {
        __extends(IntersectionObserveeService, _super);
        function IntersectionObserveeService(_a, observer) {
            var nativeElement = _a.nativeElement;
            var _this = _super.call(this, function (subscriber) {
                observer.observe(nativeElement, function (entries) {
                    subscriber.next(entries);
                });
                return function () {
                    observer.unobserve(nativeElement);
                };
            }) || this;
            return _this.pipe(operators.share());
        }
        IntersectionObserveeService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        IntersectionObserveeService.ctorParameters = function () {
            return [
                { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
                { type: IntersectionObserverDirective, decorators: [{ type: core.Inject, args: [IntersectionObserverDirective,] }] }
            ];
        };
        return IntersectionObserveeService;
    }(rxjs.Observable));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // @dynamic
    var IntersectionObserveeDirective = /** @class */ (function () {
        function IntersectionObserveeDirective(waIntersectionObservee) {
            this.waIntersectionObservee = waIntersectionObservee;
        }
        IntersectionObserveeDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[waIntersectionObservee]',
                        outputs: ['waIntersectionObservee'],
                        providers: [IntersectionObserveeService],
                    },] }
        ];
        /** @nocollapse */
        IntersectionObserveeDirective.ctorParameters = function () {
            return [
                { type: rxjs.Observable, decorators: [{ type: core.Inject, args: [IntersectionObserveeService,] }] }
            ];
        };
        return IntersectionObserveeDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IntersectionRootDirective = /** @class */ (function () {
        function IntersectionRootDirective() {
        }
        IntersectionRootDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[waIntersectionRoot]',
                        providers: [
                            {
                                provide: INTERSECTION_ROOT,
                                useExisting: core.ElementRef,
                            },
                        ],
                    },] }
        ];
        return IntersectionRootDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IntersectionObserverModule = /** @class */ (function () {
        function IntersectionObserverModule() {
        }
        IntersectionObserverModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            IntersectionObserverDirective,
                            IntersectionObserveeDirective,
                            IntersectionRootDirective,
                        ],
                        exports: [
                            IntersectionObserverDirective,
                            IntersectionObserveeDirective,
                            IntersectionRootDirective,
                        ],
                    },] }
        ];
        return IntersectionObserverModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var INTERSECTION_OBSERVER_SUPPORT = new core.InjectionToken('Intersection Observer API support', {
        providedIn: 'root',
        factory: function () { return !!core.inject(common.WINDOW).IntersectionObserver; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IntersectionObserverService = /** @class */ (function (_super) {
        __extends(IntersectionObserverService, _super);
        function IntersectionObserverService(_a, support, rootMargin, threshold, root) {
            var nativeElement = _a.nativeElement;
            var _this = _super.call(this, function (subscriber) {
                if (!support) {
                    subscriber.error('IntersectionObserver is not supported in your browser');
                    return;
                }
                /** @type {?} */
                var observer = new IntersectionObserver(function (entries) {
                    subscriber.next(entries);
                }, {
                    root: root && root.nativeElement,
                    rootMargin: rootMargin,
                    threshold: threshold,
                });
                observer.observe(nativeElement);
                return function () {
                    observer.disconnect();
                };
            }) || this;
            return _this.pipe(operators.share());
        }
        IntersectionObserverService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        IntersectionObserverService.ctorParameters = function () {
            return [
                { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
                { type: Boolean, decorators: [{ type: core.Inject, args: [INTERSECTION_OBSERVER_SUPPORT,] }] },
                { type: String, decorators: [{ type: core.Inject, args: [INTERSECTION_ROOT_MARGIN,] }] },
                { type: undefined, decorators: [{ type: core.Inject, args: [INTERSECTION_THRESHOLD,] }] },
                { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [INTERSECTION_ROOT,] }] }
            ];
        };
        return IntersectionObserverService;
    }(rxjs.Observable));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.IntersectionObserveeDirective = IntersectionObserveeDirective;
    exports.IntersectionObserverDirective = IntersectionObserverDirective;
    exports.IntersectionRootDirective = IntersectionRootDirective;
    exports.IntersectionObserverModule = IntersectionObserverModule;
    exports.IntersectionObserveeService = IntersectionObserveeService;
    exports.IntersectionObserverService = IntersectionObserverService;
    exports.INTERSECTION_ROOT = INTERSECTION_ROOT;
    exports.INTERSECTION_ROOT_MARGIN_DEFAULT = INTERSECTION_ROOT_MARGIN_DEFAULT;
    exports.INTERSECTION_ROOT_MARGIN = INTERSECTION_ROOT_MARGIN;
    exports.INTERSECTION_THRESHOLD_DEFAULT = INTERSECTION_THRESHOLD_DEFAULT;
    exports.INTERSECTION_THRESHOLD = INTERSECTION_THRESHOLD;
    exports.INTERSECTION_OBSERVER_SUPPORT = INTERSECTION_OBSERVER_SUPPORT;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-web-apis-intersection-observer.umd.js.map