{"version":3,"file":"ng-web-apis-resize-observer.js.map","sources":["ng://@ng-web-apis/resize-observer/tokens/resize-option-box.ts","ng://@ng-web-apis/resize-observer/tokens/support.ts","ng://@ng-web-apis/resize-observer/services/resize-observer.service.ts","ng://@ng-web-apis/resize-observer/directives/resize-observer.directive.ts","ng://@ng-web-apis/resize-observer/module.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\n\nexport const RESIZE_OPTION_BOX_DEFAULT = 'content-box';\n\nexport const RESIZE_OPTION_BOX = new InjectionToken<ResizeObserverOptions['box']>(\n    'Box model to observe changes',\n    {\n        providedIn: 'root',\n        factory: () => RESIZE_OPTION_BOX_DEFAULT,\n    },\n);\n","import {inject, InjectionToken} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\n\nexport const RESIZE_OBSERVER_SUPPORT = new InjectionToken<boolean>(\n    'Resize Observer API support',\n    {\n        providedIn: 'root',\n        factory: () => !!inject(WINDOW).ResizeObserver,\n    },\n);\n","import {ElementRef, Inject, Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport {RESIZE_OPTION_BOX} from '../tokens/resize-option-box';\nimport {RESIZE_OBSERVER_SUPPORT} from '../tokens/support';\n\n// @dynamic\n@Injectable()\nexport class ResizeObserverService extends Observable<\n    ReadonlyArray<ResizeObserverEntry>\n> {\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(NgZone) ngZone: NgZone,\n        @Inject(RESIZE_OBSERVER_SUPPORT) support: boolean,\n        @Inject(RESIZE_OPTION_BOX) box: ResizeObserverOptions['box'],\n    ) {\n        let observer: ResizeObserver;\n\n        super(subscriber => {\n            if (!support) {\n                subscriber.error('ResizeObserver is not supported in your browser');\n\n                return;\n            }\n\n            observer = new ResizeObserver(entries => {\n                ngZone.run(() => {\n                    subscriber.next(entries);\n                });\n            });\n            observer.observe(nativeElement, {box});\n\n            return () => {\n                observer.disconnect();\n            };\n        });\n\n        return this.pipe(share());\n    }\n}\n","import {Attribute, Directive, ElementRef, Inject, Output} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ResizeObserverService} from '../services/resize-observer.service';\nimport {RESIZE_OPTION_BOX, RESIZE_OPTION_BOX_DEFAULT} from '../tokens/resize-option-box';\n\n// TODO switch to Attribute once https://github.com/angular/angular/issues/36479 is fixed\nexport function boxExtractor({\n    nativeElement,\n}: ElementRef<Element>): ResizeObserverOptions['box'] {\n    const attribute = nativeElement.getAttribute(\n        'waResizeBox',\n    ) as ResizeObserverOptions['box'];\n\n    return boxFactory(attribute);\n}\n\nexport function boxFactory(\n    box: ResizeObserverOptions['box'] | null,\n): ResizeObserverOptions['box'] {\n    return box || RESIZE_OPTION_BOX_DEFAULT;\n}\n\n// @dynamic\n@Directive({\n    selector: '[waResizeObserver]',\n    providers: [\n        ResizeObserverService,\n        {\n            provide: RESIZE_OPTION_BOX,\n            deps: [ElementRef],\n            useFactory: boxExtractor,\n        },\n    ],\n})\nexport class ResizeObserverDirective {\n    @Output()\n    readonly waResizeObserver: Observable<ResizeObserverEntry[]>;\n\n    constructor(\n        @Inject(ResizeObserverService)\n        entries$: Observable<ResizeObserverEntry[]>,\n        @Attribute('waResizeBox') _box: ResizeObserverOptions['box'],\n    ) {\n        this.waResizeObserver = entries$;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {ResizeObserverDirective} from './directives/resize-observer.directive';\n\n@NgModule({\n    declarations: [ResizeObserverDirective],\n    exports: [ResizeObserverDirective],\n})\nexport class ResizeObserverModule {}\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;AAAA;AAEA,IAAa,yBAAyB,GAAG,aAAa;;AAEtD,IAAa,iBAAiB,GAAG,IAAI,cAAc,CAC/C,8BAA8B,EAC9B;IACI,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,cAAM,OAAA,yBAAyB,GAAA;CAC3C,CACJ;;;;;;ACVD;AAGA,IAAa,uBAAuB,GAAG,IAAI,cAAc,CACrD,6BAA6B,EAC7B;IACI,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,cAAM,OAAA,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,GAAA;CACjD,CACJ;;;;;;;ACFD;IAC2CA,yCAE1C;IACG,+BACI,EAAwD,EACxC,MAAc,EACG,OAAgB,EACtB,GAAiC;YAHvC,gCAAa;QADtC,iBA4BC;;YAtBO,QAAwB;QAE5B,QAAA,kBAAM,UAAA,UAAU;YACZ,IAAI,CAAC,OAAO,EAAE;gBACV,UAAU,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBAEpE,OAAO;aACV;YAED,QAAQ,GAAG,IAAI,cAAc,CAAC,UAAA,OAAO;gBACjC,MAAM,CAAC,GAAG,CAAC;oBACP,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B,CAAC,CAAC;aACN,CAAC,CAAC;YACH,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,EAAC,GAAG,KAAA,EAAC,CAAC,CAAC;YAEvC,OAAO;gBACH,QAAQ,CAAC,UAAU,EAAE,CAAC;aACzB,CAAC;SACL,CAAC,SAAC;QAEH,OAAO,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAC7B;;gBAhCJ,UAAU;;;;gBAPH,UAAU,uBAYT,MAAM,SAAC,UAAU;gBAZc,MAAM,uBAarC,MAAM,SAAC,MAAM;8CACb,MAAM,SAAC,uBAAuB;gDAC9B,MAAM,SAAC,iBAAiB;;IAyBjC,4BAAC;CAAA,CAhC0C,UAAU;;;;;;ACRrD;;;;;AAMA,SAAgB,YAAY,CAAC,EAEP;QADlB,gCAAa;;QAEP,SAAS,sBAAG,aAAa,CAAC,YAAY,CACxC,aAAa,CAChB,EAAgC;IAEjC,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC;CAChC;;;;;AAED,SAAgB,UAAU,CACtB,GAAwC;IAExC,OAAO,GAAG,IAAI,yBAAyB,CAAC;CAC3C;;AAGD;IAeI,iCAEI,QAA2C,EACjB,IAAkC;QAE5D,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;KACpC;;gBArBJ,SAAS,SAAC;oBACP,QAAQ,EAAE,oBAAoB;oBAC9B,SAAS,EAAE;wBACP,qBAAqB;wBACrB;4BACI,OAAO,EAAE,iBAAiB;4BAC1B,IAAI,EAAE,CAAC,UAAU,CAAC;4BAClB,UAAU,EAAE,YAAY;yBAC3B;qBACJ;iBACJ;;;;gBAhCO,UAAU,uBAsCT,MAAM,SAAC,qBAAqB;gDAE5B,SAAS,SAAC,aAAa;;;mCAN3B,MAAM;;IAUX,8BAAC;CAtBD;;;;;;ACvBA;IAGA;KAIoC;;gBAJnC,QAAQ,SAAC;oBACN,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACrC;;IACkC,2BAAC;CAJpC;;;;;;;;;;;;;;"}
