(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@ng-web-apis/mutation-observer', ['exports', 'rxjs', '@angular/core'], factory) :
    (factory((global['ng-web-apis'] = global['ng-web-apis'] || {}, global['ng-web-apis']['mutation-observer'] = {}),global.rxjs,global.ng.core));
}(this, (function (exports,rxjs,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var MUTATION_OBSERVER_INIT = new core.InjectionToken('MutationObserver config');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */
    function booleanAttribute(element, attribute) {
        return element.getAttribute(attribute) !== null || undefined;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} __0
     * @return {?}
     */
    function mutationObserverInitFactory(_a) {
        var nativeElement = _a.nativeElement;
        /** @type {?} */
        var attributeFilterAttr = nativeElement.getAttribute('attributeFilter');
        /** @type {?} */
        var attributeFilter = attributeFilterAttr
            ? attributeFilterAttr.split(',').map(function (attr) { return attr.trim(); })
            : undefined;
        return {
            attributeFilter: attributeFilter,
            attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),
            attributes: booleanAttribute(nativeElement, 'attributes'),
            characterData: booleanAttribute(nativeElement, 'characterData'),
            characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),
            childList: booleanAttribute(nativeElement, 'childList'),
            subtree: booleanAttribute(nativeElement, 'subtree'),
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ɵ0 = mutationObserverInitFactory;
    // @dynamic
    var MutationObserverDirective = /** @class */ (function (_super) {
        __extends(MutationObserverDirective, _super);
        function MutationObserverDirective(_a, config, _1, _2, _3, _4, _5, _6, _7) {
            var nativeElement = _a.nativeElement;
            var _this = _super.call(this, function (records) {
                _this.waMutationObserver.emit(records);
            }) || this;
            _this.waMutationObserver = new core.EventEmitter();
            _this.observe(nativeElement, config);
            return _this;
        }
        /**
         * @return {?}
         */
        MutationObserverDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.disconnect();
            };
        MutationObserverDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[waMutationObserver]',
                        exportAs: 'MutationObserver',
                        providers: [
                            {
                                provide: MUTATION_OBSERVER_INIT,
                                deps: [core.ElementRef],
                                useFactory: ɵ0,
                            },
                        ],
                    },] }
        ];
        /** @nocollapse */
        MutationObserverDirective.ctorParameters = function () {
            return [
                { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
                { type: undefined, decorators: [{ type: core.Inject, args: [MUTATION_OBSERVER_INIT,] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['attributeFilter',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['attributeOldValue',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['attributes',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['characterData',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['characterDataOldValue',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['childList',] }] },
                { type: undefined, decorators: [{ type: core.Attribute, args: ['subtree',] }] }
            ];
        };
        MutationObserverDirective.propDecorators = {
            waMutationObserver: [{ type: core.Output }]
        };
        return MutationObserverDirective;
    }(MutationObserver));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // @dynamic
    var MutationObserverService = /** @class */ (function (_super) {
        __extends(MutationObserverService, _super);
        function MutationObserverService(_a, config) {
            var nativeElement = _a.nativeElement;
            return _super.call(this, function (subscriber) {
                /** @type {?} */
                var observer = new MutationObserver(function (records) {
                    subscriber.next(records);
                });
                observer.observe(nativeElement, config);
                return function () {
                    observer.disconnect();
                };
            }) || this;
        }
        MutationObserverService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        MutationObserverService.ctorParameters = function () {
            return [
                { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
                { type: undefined, decorators: [{ type: core.Inject, args: [MUTATION_OBSERVER_INIT,] }] }
            ];
        };
        return MutationObserverService;
    }(rxjs.Observable));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MutationObserverModule = /** @class */ (function () {
        function MutationObserverModule() {
        }
        MutationObserverModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [MutationObserverDirective],
                        exports: [MutationObserverDirective],
                    },] }
        ];
        return MutationObserverModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MutationObserverDirective = MutationObserverDirective;
    exports.MutationObserverService = MutationObserverService;
    exports.MUTATION_OBSERVER_INIT = MUTATION_OBSERVER_INIT;
    exports.MutationObserverModule = MutationObserverModule;
    exports.ɵa = mutationObserverInitFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-web-apis-mutation-observer.umd.js.map