/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, Inject, Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { MUTATION_OBSERVER_INIT } from '../tokens/mutation-observer-init';
// @dynamic
export class MutationObserverService extends Observable {
    /**
     * @param {?} __0
     * @param {?} config
     */
    constructor({ nativeElement }, config) {
        super(subscriber => {
            /** @type {?} */
            const observer = new MutationObserver(records => {
                subscriber.next(records);
            });
            observer.observe(nativeElement, config);
            return () => {
                observer.disconnect();
            };
        });
    }
}
MutationObserverService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
MutationObserverService.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [MUTATION_OBSERVER_INIT,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXV0YXRpb24tb2JzZXJ2ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy13ZWItYXBpcy9tdXRhdGlvbi1vYnNlcnZlci8iLCJzb3VyY2VzIjpbInNlcnZpY2VzL211dGF0aW9uLW9ic2VydmVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLGtDQUFrQyxDQUFDOztBQUl4RSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsVUFBeUM7Ozs7O0lBQ2xGLFlBQ3dCLEVBQUMsYUFBYSxFQUFtQixFQUNyQixNQUE0QjtRQUU1RCxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUU7O2tCQUNULFFBQVEsR0FBRyxJQUFJLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUM1QyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQztZQUVGLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRXhDLE9BQU8sR0FBRyxFQUFFO2dCQUNSLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUMxQixDQUFDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7OztZQWpCSixVQUFVOzs7O1lBTEgsVUFBVSx1QkFRVCxNQUFNLFNBQUMsVUFBVTs0Q0FDakIsTUFBTSxTQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFJlZiwgSW5qZWN0LCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtNVVRBVElPTl9PQlNFUlZFUl9JTklUfSBmcm9tICcuLi90b2tlbnMvbXV0YXRpb24tb2JzZXJ2ZXItaW5pdCc7XHJcblxyXG4vLyBAZHluYW1pY1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBNdXRhdGlvbk9ic2VydmVyU2VydmljZSBleHRlbmRzIE9ic2VydmFibGU8UmVhZG9ubHlBcnJheTxNdXRhdGlvblJlY29yZD4+IHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBJbmplY3QoRWxlbWVudFJlZikge25hdGl2ZUVsZW1lbnR9OiBFbGVtZW50UmVmPE5vZGU+LFxyXG4gICAgICAgIEBJbmplY3QoTVVUQVRJT05fT0JTRVJWRVJfSU5JVCkgY29uZmlnOiBNdXRhdGlvbk9ic2VydmVySW5pdCxcclxuICAgICkge1xyXG4gICAgICAgIHN1cGVyKHN1YnNjcmliZXIgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKHJlY29yZHMgPT4ge1xyXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlci5uZXh0KHJlY29yZHMpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUobmF0aXZlRWxlbWVudCwgY29uZmlnKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19