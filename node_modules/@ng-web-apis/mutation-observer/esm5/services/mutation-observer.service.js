/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ElementRef, Inject, Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { MUTATION_OBSERVER_INIT } from '../tokens/mutation-observer-init';
// @dynamic
var MutationObserverService = /** @class */ (function (_super) {
    tslib_1.__extends(MutationObserverService, _super);
    function MutationObserverService(_a, config) {
        var nativeElement = _a.nativeElement;
        return _super.call(this, function (subscriber) {
            /** @type {?} */
            var observer = new MutationObserver(function (records) {
                subscriber.next(records);
            });
            observer.observe(nativeElement, config);
            return function () {
                observer.disconnect();
            };
        }) || this;
    }
    MutationObserverService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    MutationObserverService.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [MUTATION_OBSERVER_INIT,] }] }
    ]; };
    return MutationObserverService;
}(Observable));
export { MutationObserverService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXV0YXRpb24tb2JzZXJ2ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy13ZWItYXBpcy9tdXRhdGlvbi1vYnNlcnZlci8iLCJzb3VyY2VzIjpbInNlcnZpY2VzL211dGF0aW9uLW9ic2VydmVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNoQyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQzs7QUFHeEU7SUFDNkMsbURBQXlDO0lBQ2xGLGlDQUNJLEVBQXFELEVBQ3JCLE1BQTRCO1lBRHZDLGdDQUFhO2VBR2xDLGtCQUFNLFVBQUEsVUFBVTs7Z0JBQ04sUUFBUSxHQUFHLElBQUksZ0JBQWdCLENBQUMsVUFBQSxPQUFPO2dCQUN6QyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQztZQUVGLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRXhDLE9BQU87Z0JBQ0gsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQzFCLENBQUMsQ0FBQztRQUNOLENBQUMsQ0FBQztJQUNOLENBQUM7O2dCQWpCSixVQUFVOzs7O2dCQUxILFVBQVUsdUJBUVQsTUFBTSxTQUFDLFVBQVU7Z0RBQ2pCLE1BQU0sU0FBQyxzQkFBc0I7O0lBY3RDLDhCQUFDO0NBQUEsQUFsQkQsQ0FDNkMsVUFBVSxHQWlCdEQ7U0FqQlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbGVtZW50UmVmLCBJbmplY3QsIEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge01VVEFUSU9OX09CU0VSVkVSX0lOSVR9IGZyb20gJy4uL3Rva2Vucy9tdXRhdGlvbi1vYnNlcnZlci1pbml0JztcclxuXHJcbi8vIEBkeW5hbWljXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE11dGF0aW9uT2JzZXJ2ZXJTZXJ2aWNlIGV4dGVuZHMgT2JzZXJ2YWJsZTxSZWFkb25seUFycmF5PE11dGF0aW9uUmVjb3JkPj4ge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSB7bmF0aXZlRWxlbWVudH06IEVsZW1lbnRSZWY8Tm9kZT4sXHJcbiAgICAgICAgQEluamVjdChNVVRBVElPTl9PQlNFUlZFUl9JTklUKSBjb25maWc6IE11dGF0aW9uT2JzZXJ2ZXJJbml0LFxyXG4gICAgKSB7XHJcbiAgICAgICAgc3VwZXIoc3Vic2NyaWJlciA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIocmVjb3JkcyA9PiB7XHJcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVyLm5leHQocmVjb3Jkcyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShuYXRpdmVFbGVtZW50LCBjb25maWcpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXX0=