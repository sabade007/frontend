/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgComponentOutlet } from '@angular/common';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Input, TemplateRef, ViewChild, } from '@angular/core';
import { PolymorpheusComponent } from '../classes/component';
import { PolymorpheusTemplate } from '../directives/template';
/**
 * Outlet instantiating {\@link PolymorpheusContent} with given context
 * @template C
 */
var PolymorpheusOutletComponent = /** @class */ (function () {
    function PolymorpheusOutletComponent() {
        this.template = null;
        this.content = null;
    }
    Object.defineProperty(PolymorpheusOutletComponent.prototype, "primitive", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this.content || this.isAdvanced(this.content)) {
                return '';
            }
            return typeof this.content === 'function'
                ? this.content(this.context)
                : this.content;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} content
     * @return {?}
     */
    PolymorpheusOutletComponent.prototype.isAdvanced = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        return isTemplate(content) || isComponent(content);
    };
    /**
     * @param {?} content
     * @param {?} componentTmp
     * @return {?}
     */
    PolymorpheusOutletComponent.prototype.getTemplate = /**
     * @param {?} content
     * @param {?} componentTmp
     * @return {?}
     */
    function (content, componentTmp) {
        if (isComponent(content)) {
            return componentTmp;
        }
        return isDirective(content) ? content.template : content;
    };
    /**
     * @param {?} content
     * @return {?}
     */
    PolymorpheusOutletComponent.prototype.guard = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        return isComponent(content);
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    PolymorpheusOutletComponent.prototype.ngOnChanges = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var _this = this;
        var content = _a.content, context = _a.context;
        if (context && this.proxy === undefined) {
            this.proxy =
                typeof this.context === 'object' && !Array.isArray(this.context)
                    ? new Proxy(this.context, {
                        get: function (_, key) { return _this.context[(/** @type {?} */ (key))]; },
                    })
                    : this.context;
        }
        // TODO: Keep an eye on private field, name can change
        /** @type {?} */
        var componentRef = (/** @type {?} */ ((!content &&
            context &&
            this.outlet &&
            this.outlet['_componentRef'])));
        if (componentRef) {
            componentRef.injector.get(ChangeDetectorRef).markForCheck();
        }
    };
    /**
     * @return {?}
     */
    PolymorpheusOutletComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        if (isDirective(this.content)) {
            this.content.check();
        }
    };
    PolymorpheusOutletComponent.decorators = [
        { type: Component, args: [{
                    selector: '[polymorpheus-outlet]',
                    template: "<ng-container\n    *ngIf=\"isAdvanced(content)\"\n    [ngTemplateOutlet]=\"getTemplate(content, component)\"\n    [ngTemplateOutletContext]=\"context\"\n>\n    <ng-template #component>\n        <ng-container\n            *ngIf=\"guard(content)\"\n            [ngComponentOutlet]=\"content.component\"\n            [ngComponentOutletInjector]=\"content | injector : proxy\"\n        ></ng-container>\n    </ng-template>\n</ng-container>\n<ng-container *ngIf=\"primitive\">\n    <ng-container *ngIf=\"!template; else child\">{{primitive}}</ng-container>\n    <ng-template #child>\n        <ng-container\n            [ngTemplateOutlet]=\"template\"\n            [ngTemplateOutletContext]=\"{$implicit: primitive}\"\n        ></ng-container>\n    </ng-template>\n</ng-container>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    PolymorpheusOutletComponent.propDecorators = {
        template: [{ type: ContentChild, args: [TemplateRef,] }],
        outlet: [{ type: ViewChild, args: [NgComponentOutlet,] }],
        content: [{ type: Input }],
        context: [{ type: Input }]
    };
    return PolymorpheusOutletComponent;
}());
export { PolymorpheusOutletComponent };
if (false) {
    /** @type {?} */
    PolymorpheusOutletComponent.prototype.template;
    /** @type {?} */
    PolymorpheusOutletComponent.prototype.outlet;
    /** @type {?} */
    PolymorpheusOutletComponent.prototype.proxy;
    /** @type {?} */
    PolymorpheusOutletComponent.prototype.content;
    /** @type {?} */
    PolymorpheusOutletComponent.prototype.context;
}
/**
 * @template C
 * @param {?} content
 * @return {?}
 */
function isDirective(content) {
    return content instanceof PolymorpheusTemplate;
}
/**
 * @template C
 * @param {?} content
 * @return {?}
 */
function isComponent(content) {
    return content instanceof PolymorpheusComponent;
}
/**
 * @template C
 * @param {?} content
 * @return {?}
 */
function isTemplate(content) {
    return isDirective(content) || content instanceof TemplateRef;
}
//# sourceMappingURL=data:application/json;base64,