/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injector } from '@angular/core';
import { POLYMORPHEUS_CONTEXT } from '../tokens/context';
/**
 * Wrapper class for a component that will be used as content for {\@link PolymorpheusOutletComponent}
 *
 * @param component — an Angular component to be dynamically created
 * @param injector — optional {\@link Injector} for lazy loaded module case
 * @template T, C
 */
var /**
 * Wrapper class for a component that will be used as content for {\@link PolymorpheusOutletComponent}
 *
 * @param component — an Angular component to be dynamically created
 * @param injector — optional {\@link Injector} for lazy loaded module case
 * @template T, C
 */
PolymorpheusComponent = /** @class */ (function () {
    function PolymorpheusComponent(component, injector) {
        if (injector === void 0) { injector = null; }
        this.component = component;
        this.injector = injector;
    }
    /**
     * @param {?} injector
     * @param {?} context
     * @return {?}
     */
    PolymorpheusComponent.prototype.createInjector = /**
     * @param {?} injector
     * @param {?} context
     * @return {?}
     */
    function (injector, context) {
        return Injector.create({
            parent: this.injector || injector,
            providers: [
                {
                    provide: POLYMORPHEUS_CONTEXT,
                    useValue: context,
                },
            ],
        });
    };
    return PolymorpheusComponent;
}());
/**
 * Wrapper class for a component that will be used as content for {\@link PolymorpheusOutletComponent}
 *
 * @param component — an Angular component to be dynamically created
 * @param injector — optional {\@link Injector} for lazy loaded module case
 * @template T, C
 */
export { PolymorpheusComponent };
if (false) {
    /** @type {?} */
    PolymorpheusComponent.prototype.component;
    /**
     * @type {?}
     * @private
     */
    PolymorpheusComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzLyIsInNvdXJjZXMiOlsiY2xhc3Nlcy9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQU8sTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7O0FBUXZEOzs7Ozs7OztJQUNJLCtCQUNhLFNBQWtCLEVBQ1YsUUFBZ0M7UUFBaEMseUJBQUEsRUFBQSxlQUFnQztRQUR4QyxjQUFTLEdBQVQsU0FBUyxDQUFTO1FBQ1YsYUFBUSxHQUFSLFFBQVEsQ0FBd0I7SUFDbEQsQ0FBQzs7Ozs7O0lBRUosOENBQWM7Ozs7O0lBQWQsVUFBZSxRQUFrQixFQUFFLE9BQVU7UUFDekMsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQ25CLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVE7WUFDakMsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSxvQkFBb0I7b0JBQzdCLFFBQVEsRUFBRSxPQUFPO2lCQUNwQjthQUNKO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0FBQyxBQWpCRCxJQWlCQzs7Ozs7Ozs7Ozs7SUFmTywwQ0FBMkI7Ozs7O0lBQzNCLHlDQUFpRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0b3IsIFR5cGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1BPTFlNT1JQSEVVU19DT05URVhUfSBmcm9tICcuLi90b2tlbnMvY29udGV4dCc7XHJcblxyXG4vKipcclxuICogV3JhcHBlciBjbGFzcyBmb3IgYSBjb21wb25lbnQgdGhhdCB3aWxsIGJlIHVzZWQgYXMgY29udGVudCBmb3Ige0BsaW5rIFBvbHltb3JwaGV1c091dGxldENvbXBvbmVudH1cclxuICpcclxuICogQHBhcmFtIGNvbXBvbmVudCDigJQgYW4gQW5ndWxhciBjb21wb25lbnQgdG8gYmUgZHluYW1pY2FsbHkgY3JlYXRlZFxyXG4gKiBAcGFyYW0gaW5qZWN0b3Ig4oCUIG9wdGlvbmFsIHtAbGluayBJbmplY3Rvcn0gZm9yIGxhenkgbG9hZGVkIG1vZHVsZSBjYXNlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUG9seW1vcnBoZXVzQ29tcG9uZW50PFQgZXh0ZW5kcyBvYmplY3QsIEMgZXh0ZW5kcyBvYmplY3Q+IHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHJlYWRvbmx5IGNvbXBvbmVudDogVHlwZTxUPixcclxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGluamVjdG9yOiBJbmplY3RvciB8IG51bGwgPSBudWxsLFxyXG4gICAgKSB7fVxyXG5cclxuICAgIGNyZWF0ZUluamVjdG9yKGluamVjdG9yOiBJbmplY3RvciwgY29udGV4dDogQyk6IEluamVjdG9yIHtcclxuICAgICAgICByZXR1cm4gSW5qZWN0b3IuY3JlYXRlKHtcclxuICAgICAgICAgICAgcGFyZW50OiB0aGlzLmluamVjdG9yIHx8IGluamVjdG9yLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBQT0xZTU9SUEhFVVNfQ09OVEVYVCxcclxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZTogY29udGV4dCxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19