/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injector } from '@angular/core';
import { POLYMORPHEUS_CONTEXT } from '../tokens/context';
/**
 * Wrapper class for a component that will be used as content for {\@link PolymorpheusOutletComponent}
 *
 * @param component — an Angular component to be dynamically created
 * @param injector — optional {\@link Injector} for lazy loaded module case
 * @template T, C
 */
export class PolymorpheusComponent {
    /**
     * @param {?} component
     * @param {?=} injector
     */
    constructor(component, injector = null) {
        this.component = component;
        this.injector = injector;
    }
    /**
     * @param {?} injector
     * @param {?} context
     * @return {?}
     */
    createInjector(injector, context) {
        return Injector.create({
            parent: this.injector || injector,
            providers: [
                {
                    provide: POLYMORPHEUS_CONTEXT,
                    useValue: context,
                },
            ],
        });
    }
}
if (false) {
    /** @type {?} */
    PolymorpheusComponent.prototype.component;
    /**
     * @type {?}
     * @private
     */
    PolymorpheusComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzLyIsInNvdXJjZXMiOlsiY2xhc3Nlcy9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQU8sTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7O0FBUXZELE1BQU0sT0FBTyxxQkFBcUI7Ozs7O0lBQzlCLFlBQ2EsU0FBa0IsRUFDVixXQUE0QixJQUFJO1FBRHhDLGNBQVMsR0FBVCxTQUFTLENBQVM7UUFDVixhQUFRLEdBQVIsUUFBUSxDQUF3QjtJQUNsRCxDQUFDOzs7Ozs7SUFFSixjQUFjLENBQUMsUUFBa0IsRUFBRSxPQUFVO1FBQ3pDLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQztZQUNuQixNQUFNLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxRQUFRO1lBQ2pDLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsb0JBQW9CO29CQUM3QixRQUFRLEVBQUUsT0FBTztpQkFDcEI7YUFDSjtTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSjs7O0lBZk8sMENBQTJCOzs7OztJQUMzQix5Q0FBaUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdG9yLCBUeXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtQT0xZTU9SUEhFVVNfQ09OVEVYVH0gZnJvbSAnLi4vdG9rZW5zL2NvbnRleHQnO1xyXG5cclxuLyoqXHJcbiAqIFdyYXBwZXIgY2xhc3MgZm9yIGEgY29tcG9uZW50IHRoYXQgd2lsbCBiZSB1c2VkIGFzIGNvbnRlbnQgZm9yIHtAbGluayBQb2x5bW9ycGhldXNPdXRsZXRDb21wb25lbnR9XHJcbiAqXHJcbiAqIEBwYXJhbSBjb21wb25lbnQg4oCUIGFuIEFuZ3VsYXIgY29tcG9uZW50IHRvIGJlIGR5bmFtaWNhbGx5IGNyZWF0ZWRcclxuICogQHBhcmFtIGluamVjdG9yIOKAlCBvcHRpb25hbCB7QGxpbmsgSW5qZWN0b3J9IGZvciBsYXp5IGxvYWRlZCBtb2R1bGUgY2FzZVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBvbHltb3JwaGV1c0NvbXBvbmVudDxUIGV4dGVuZHMgb2JqZWN0LCBDIGV4dGVuZHMgb2JqZWN0PiB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICByZWFkb25seSBjb21wb25lbnQ6IFR5cGU8VD4sXHJcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBpbmplY3RvcjogSW5qZWN0b3IgfCBudWxsID0gbnVsbCxcclxuICAgICkge31cclxuXHJcbiAgICBjcmVhdGVJbmplY3RvcihpbmplY3RvcjogSW5qZWN0b3IsIGNvbnRleHQ6IEMpOiBJbmplY3RvciB7XHJcbiAgICAgICAgcmV0dXJuIEluamVjdG9yLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIHBhcmVudDogdGhpcy5pbmplY3RvciB8fCBpbmplY3RvcixcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogUE9MWU1PUlBIRVVTX0NPTlRFWFQsXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IGNvbnRleHQsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==