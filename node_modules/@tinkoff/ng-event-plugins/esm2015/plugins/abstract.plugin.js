/**
 * @fileoverview added by tsickle
 * Generated from: plugins/abstract.plugin.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
export class AbstractEventPlugin {
    /**
     * @param {?} event
     * @return {?}
     */
    supports(event) {
        return event.includes(this.modifier);
    }
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} _handler
     * @return {?}
     */
    addGlobalEventListener(_element, _event, _handler) {
        throw new Error(`Global event targets are not supported by ${this.modifier} plugin`);
    }
    /**
     * @protected
     * @param {?} event
     * @return {?}
     */
    unwrap(event) {
        return event
            .split('.')
            .filter((/**
         * @param {?} v
         * @return {?}
         */
        v => !this.modifier.includes(v)))
            .join('.');
    }
}
if (false) {
    /**
     * @type {?}
     * @protected
     */
    AbstractEventPlugin.prototype.modifier;
    /** @type {?} */
    AbstractEventPlugin.prototype.manager;
    /**
     * @abstract
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    AbstractEventPlugin.prototype.addEventListener = function (element, event, handler) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QucGx1Z2luLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpbmtvZmYvbmctZXZlbnQtcGx1Z2lucy8iLCJzb3VyY2VzIjpbInBsdWdpbnMvYWJzdHJhY3QucGx1Z2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBUUEsTUFBTSxPQUFnQixtQkFBbUI7Ozs7O0lBS3JDLFFBQVEsQ0FBQyxLQUFhO1FBQ2xCLE9BQU8sS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Ozs7OztJQUVELHNCQUFzQixDQUNsQixRQUFnQixFQUNoQixNQUFjLEVBQ2QsUUFBa0I7UUFFbEIsTUFBTSxJQUFJLEtBQUssQ0FDWCw2Q0FBNkMsSUFBSSxDQUFDLFFBQVEsU0FBUyxDQUN0RSxDQUFDO0lBQ04sQ0FBQzs7Ozs7O0lBUVMsTUFBTSxDQUFDLEtBQWE7UUFDMUIsT0FBTyxLQUFLO2FBQ1AsS0FBSyxDQUFDLEdBQUcsQ0FBQzthQUNWLE1BQU07Ozs7UUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUM7YUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLENBQUM7Q0FDSjs7Ozs7O0lBOUJHLHVDQUE2Qzs7SUFFN0Msc0NBQXVCOzs7Ozs7OztJQWdCdkIsd0ZBSVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0V2ZW50TWFuYWdlcn0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcblxyXG4vLyBUT0RPOiBBIHN1YmplY3QgdG8gY2hhbmdlOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8zOTI5XHJcbnR5cGUgRXZlbnRNYW5hZ2VyQXJnID0gQ29uc3RydWN0b3JQYXJhbWV0ZXJzPHR5cGVvZiBFdmVudE1hbmFnZXI+WzBdWzBdO1xyXG50eXBlIEV2ZW50TWFuYWdlclBsdWdpbiA9IHtcclxuICAgIFtLIGluIGtleW9mIEV2ZW50TWFuYWdlckFyZ106IEV2ZW50TWFuYWdlckFyZ1tLXTtcclxufTtcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdEV2ZW50UGx1Z2luIGltcGxlbWVudHMgRXZlbnRNYW5hZ2VyUGx1Z2luIHtcclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCByZWFkb25seSBtb2RpZmllcjogc3RyaW5nO1xyXG5cclxuICAgIG1hbmFnZXIhOiBFdmVudE1hbmFnZXI7XHJcblxyXG4gICAgc3VwcG9ydHMoZXZlbnQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBldmVudC5pbmNsdWRlcyh0aGlzLm1vZGlmaWVyKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRHbG9iYWxFdmVudExpc3RlbmVyKFxyXG4gICAgICAgIF9lbGVtZW50OiBzdHJpbmcsXHJcbiAgICAgICAgX2V2ZW50OiBzdHJpbmcsXHJcbiAgICAgICAgX2hhbmRsZXI6IEZ1bmN0aW9uLFxyXG4gICAgKTogRnVuY3Rpb24ge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAgICAgYEdsb2JhbCBldmVudCB0YXJnZXRzIGFyZSBub3Qgc3VwcG9ydGVkIGJ5ICR7dGhpcy5tb2RpZmllcn0gcGx1Z2luYCxcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGFic3RyYWN0IGFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgZWxlbWVudDogSFRNTEVsZW1lbnQsXHJcbiAgICAgICAgZXZlbnQ6IHN0cmluZyxcclxuICAgICAgICBoYW5kbGVyOiBGdW5jdGlvbixcclxuICAgICk6IEZ1bmN0aW9uO1xyXG5cclxuICAgIHByb3RlY3RlZCB1bndyYXAoZXZlbnQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGV2ZW50XHJcbiAgICAgICAgICAgIC5zcGxpdCgnLicpXHJcbiAgICAgICAgICAgIC5maWx0ZXIodiA9PiAhdGhpcy5tb2RpZmllci5pbmNsdWRlcyh2KSlcclxuICAgICAgICAgICAgLmpvaW4oJy4nKTtcclxuICAgIH1cclxufVxyXG4iXX0=