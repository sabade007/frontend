/**
 * @fileoverview added by tsickle
 * Generated from: plugins/silent.plugin.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { AbstractEventPlugin } from './abstract.plugin';
export class SilentEventPlugin extends AbstractEventPlugin {
    constructor() {
        super(...arguments);
        this.modifier = '.silent';
    }
    /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    addEventListener(element, event, handler) {
        return this.manager
            .getZone()
            .runOutsideAngular((/**
         * @return {?}
         */
        () => this.manager.addEventListener(element, this.unwrap(event), handler)));
    }
    /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    addGlobalEventListener(element, event, handler) {
        return this.manager
            .getZone()
            .runOutsideAngular((/**
         * @return {?}
         */
        () => this.manager.addGlobalEventListener(element, this.unwrap(event), handler)));
    }
}
SilentEventPlugin.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @protected
     */
    SilentEventPlugin.prototype.modifier;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lsZW50LnBsdWdpbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aW5rb2ZmL25nLWV2ZW50LXBsdWdpbnMvIiwic291cmNlcyI6WyJwbHVnaW5zL3NpbGVudC5wbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBR3RELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxtQkFBbUI7SUFEMUQ7O1FBRXVCLGFBQVEsR0FBRyxTQUFTLENBQUM7SUFpQjVDLENBQUM7Ozs7Ozs7SUFmRyxnQkFBZ0IsQ0FBQyxPQUFvQixFQUFFLEtBQWEsRUFBRSxPQUFpQjtRQUNuRSxPQUFPLElBQUksQ0FBQyxPQUFPO2FBQ2QsT0FBTyxFQUFFO2FBQ1QsaUJBQWlCOzs7UUFBQyxHQUFHLEVBQUUsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxPQUFPLENBQUMsRUFDdEUsQ0FBQztJQUNWLENBQUM7Ozs7Ozs7SUFFRCxzQkFBc0IsQ0FBQyxPQUFlLEVBQUUsS0FBYSxFQUFFLE9BQWlCO1FBQ3BFLE9BQU8sSUFBSSxDQUFDLE9BQU87YUFDZCxPQUFPLEVBQUU7YUFDVCxpQkFBaUI7OztRQUFDLEdBQUcsRUFBRSxDQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQyxFQUM1RSxDQUFDO0lBQ1YsQ0FBQzs7O1lBbEJKLFVBQVU7Ozs7Ozs7SUFFUCxxQ0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Fic3RyYWN0RXZlbnRQbHVnaW59IGZyb20gJy4vYWJzdHJhY3QucGx1Z2luJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFNpbGVudEV2ZW50UGx1Z2luIGV4dGVuZHMgQWJzdHJhY3RFdmVudFBsdWdpbiB7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgbW9kaWZpZXIgPSAnLnNpbGVudCc7XHJcblxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50OiBIVE1MRWxlbWVudCwgZXZlbnQ6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFuYWdlclxyXG4gICAgICAgICAgICAuZ2V0Wm9uZSgpXHJcbiAgICAgICAgICAgIC5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PlxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudCwgdGhpcy51bndyYXAoZXZlbnQpLCBoYW5kbGVyKSxcclxuICAgICAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRHbG9iYWxFdmVudExpc3RlbmVyKGVsZW1lbnQ6IHN0cmluZywgZXZlbnQ6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFuYWdlclxyXG4gICAgICAgICAgICAuZ2V0Wm9uZSgpXHJcbiAgICAgICAgICAgIC5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PlxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmFkZEdsb2JhbEV2ZW50TGlzdGVuZXIoZWxlbWVudCwgdGhpcy51bndyYXAoZXZlbnQpLCBoYW5kbGVyKSxcclxuICAgICAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG4iXX0=