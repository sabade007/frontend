/**
 * @fileoverview added by tsickle
 * Generated from: plugins/zone.plugin.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AbstractEventPlugin } from './abstract.plugin';
/**
 * TODO: This will not be needed in Angular 10
 * when libraries are allowed to use Ivy renderer and markDirty becomes stable API
 */
var ZoneEventPlugin = /** @class */ (function (_super) {
    __extends(ZoneEventPlugin, _super);
    function ZoneEventPlugin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modifier = '.init';
        return _this;
    }
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.addEventListener = /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    function (_element, _event, handler) {
        return this.handle(handler);
    };
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.addGlobalEventListener = /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    function (_element, _event, handler) {
        return this.handle(handler);
    };
    /**
     * @private
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.handle = /**
     * @private
     * @param {?} handler
     * @return {?}
     */
    function (handler) {
        /** @type {?} */
        var zone = this.manager.getZone();
        /** @type {?} */
        var subscription = zone.onStable.subscribe((/**
         * @return {?}
         */
        function () {
            subscription.unsubscribe();
            handler(zone);
        }));
        return (/**
         * @return {?}
         */
        function () { });
    };
    ZoneEventPlugin.decorators = [
        { type: Injectable }
    ];
    return ZoneEventPlugin;
}(AbstractEventPlugin));
export { ZoneEventPlugin };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ZoneEventPlugin.prototype.modifier;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZS5wbHVnaW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGlua29mZi9uZy1ldmVudC1wbHVnaW5zLyIsInNvdXJjZXMiOlsicGx1Z2lucy96b25lLnBsdWdpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7OztBQU10RDtJQUNxQyxtQ0FBbUI7SUFEeEQ7UUFBQSxxRUF5QkM7UUF2QnNCLGNBQVEsR0FBRyxPQUFPLENBQUM7O0lBdUIxQyxDQUFDOzs7Ozs7O0lBckJHLDBDQUFnQjs7Ozs7O0lBQWhCLFVBQWlCLFFBQXFCLEVBQUUsTUFBYyxFQUFFLE9BQWlCO1FBQ3JFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7O0lBRUQsZ0RBQXNCOzs7Ozs7SUFBdEIsVUFDSSxRQUFnQixFQUNoQixNQUFjLEVBQ2QsT0FBaUI7UUFFakIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7OztJQUVPLGdDQUFNOzs7OztJQUFkLFVBQWUsT0FBaUI7O1lBQ3RCLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTs7WUFDN0IsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUzs7O1FBQUM7WUFDekMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixDQUFDLEVBQUM7UUFFRjs7O1FBQU8sY0FBTyxDQUFDLEVBQUM7SUFDcEIsQ0FBQzs7Z0JBeEJKLFVBQVU7O0lBeUJYLHNCQUFDO0NBQUEsQUF6QkQsQ0FDcUMsbUJBQW1CLEdBd0J2RDtTQXhCWSxlQUFlOzs7Ozs7SUFDeEIsbUNBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtBYnN0cmFjdEV2ZW50UGx1Z2lufSBmcm9tICcuL2Fic3RyYWN0LnBsdWdpbic7XHJcblxyXG4vKipcclxuICogVE9ETzogVGhpcyB3aWxsIG5vdCBiZSBuZWVkZWQgaW4gQW5ndWxhciAxMFxyXG4gKiB3aGVuIGxpYnJhcmllcyBhcmUgYWxsb3dlZCB0byB1c2UgSXZ5IHJlbmRlcmVyIGFuZCBtYXJrRGlydHkgYmVjb21lcyBzdGFibGUgQVBJXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBab25lRXZlbnRQbHVnaW4gZXh0ZW5kcyBBYnN0cmFjdEV2ZW50UGx1Z2luIHtcclxuICAgIHByb3RlY3RlZCByZWFkb25seSBtb2RpZmllciA9ICcuaW5pdCc7XHJcblxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcihfZWxlbWVudDogSFRNTEVsZW1lbnQsIF9ldmVudDogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGUoaGFuZGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICBfZWxlbWVudDogc3RyaW5nLFxyXG4gICAgICAgIF9ldmVudDogc3RyaW5nLFxyXG4gICAgICAgIGhhbmRsZXI6IEZ1bmN0aW9uLFxyXG4gICAgKTogRnVuY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZShoYW5kbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGhhbmRsZShoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICBjb25zdCB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcclxuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSB6b25lLm9uU3RhYmxlLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICBoYW5kbGVyKHpvbmUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gKCkgPT4ge307XHJcbiAgICB9XHJcbn1cclxuIl19