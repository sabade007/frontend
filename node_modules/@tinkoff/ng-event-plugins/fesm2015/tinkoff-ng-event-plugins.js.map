{"version":3,"file":"tinkoff-ng-event-plugins.js","sources":["ng://@tinkoff/ng-event-plugins/utils/dasharize.ts","ng://@tinkoff/ng-event-plugins/plugins/abstract.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/bind.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/options.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/prevent.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/self.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/silent.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/stop.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/zone.plugin.ts","ng://@tinkoff/ng-event-plugins/constants/plugins.ts","ng://@tinkoff/ng-event-plugins/decorators/should-call.ts","ng://@tinkoff/ng-event-plugins/utils/as-callable.ts","ng://@tinkoff/ng-event-plugins/module.ts"],"sourcesContent":["export function dasharize(camel: string): string {\n    return camel.replace(/[a-z][A-Z]/g, letterLetter => {\n        return `${letterLetter[0]}-${letterLetter[1].toLowerCase()}`;\n    });\n}\n","import {EventManager} from '@angular/platform-browser';\r\n\r\n// TODO: A subject to change: https://github.com/angular/angular/issues/3929\r\ntype EventManagerArg = ConstructorParameters<typeof EventManager>[0][0];\r\ntype EventManagerPlugin = {\r\n    [K in keyof EventManagerArg]: EventManagerArg[K];\r\n};\r\n\r\nexport abstract class AbstractEventPlugin implements EventManagerPlugin {\r\n    protected abstract readonly modifier: string;\r\n\r\n    manager!: EventManager;\r\n\r\n    supports(event: string): boolean {\r\n        return event.includes(this.modifier);\r\n    }\r\n\r\n    addGlobalEventListener(\r\n        _element: string,\r\n        _event: string,\r\n        _handler: Function,\r\n    ): Function {\r\n        throw new Error(\r\n            `Global event targets are not supported by ${this.modifier} plugin`,\r\n        );\r\n    }\r\n\r\n    abstract addEventListener(\r\n        element: HTMLElement,\r\n        event: string,\r\n        handler: Function,\r\n    ): Function;\r\n\r\n    protected unwrap(event: string): string {\r\n        return event\r\n            .split('.')\r\n            .filter(v => !this.modifier.includes(v))\r\n            .join('.');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {concat, defer, EMPTY, Observable} from 'rxjs';\r\nimport {takeWhile} from 'rxjs/operators';\r\nimport {dasharize} from '../utils/dasharize';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class BindEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '$';\r\n\r\n    addEventListener(\r\n        element: HTMLElement & Record<string, Observable<unknown>>,\r\n        event: string,\r\n    ): Function {\r\n        element[event] = element[event] || EMPTY;\r\n\r\n        const method = this.getMethod(element, event);\r\n        const zone$ = this.manager.getZone().onStable;\r\n        const sub = concat(\r\n            zone$.pipe(takeWhile(() => element[event] === EMPTY)),\r\n            defer(() => element[event]),\r\n        ).subscribe(method);\r\n\r\n        return () => sub.unsubscribe();\r\n    }\r\n\r\n    private getMethod(\r\n        element: HTMLElement & Record<string, unknown>,\r\n        event: string,\r\n    ): (v: unknown) => void {\r\n        const [, key, value, unit = ''] = event.split('.');\r\n\r\n        if (event.endsWith('.attr')) {\r\n            return v =>\r\n                v === null\r\n                    ? element.removeAttribute(key)\r\n                    : element.setAttribute(key, String(v));\r\n        }\r\n\r\n        if (key === 'class') {\r\n            return v => element.classList.toggle(value, !!v);\r\n        }\r\n\r\n        if (key === 'style') {\r\n            return v => element.style.setProperty(dasharize(value), `${v}${unit}`);\r\n        }\r\n\r\n        return v => (element[key] = v);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class OptionsEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = 'capture.once.passive';\r\n\r\n    supports(event: string): boolean {\r\n        return event.includes('.') && !this.unwrap(event).includes('.');\r\n    }\r\n\r\n    addEventListener(\r\n        element: HTMLElement,\r\n        event: string,\r\n        handler: EventListener,\r\n    ): Function {\r\n        element.addEventListener(this.unwrap(event), handler, {\r\n            once: event.includes('.once'),\r\n            passive: event.includes('.passive'),\r\n            capture: event.includes('.capture'),\r\n        });\r\n\r\n        return () => element.removeEventListener(this.unwrap(event), handler);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class PreventEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.prevent';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            event.preventDefault();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n\r\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            event.preventDefault();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class SelfEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.self';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            if (event.target === event.currentTarget) {\r\n                handler(event);\r\n            }\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class SilentEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.silent';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        return this.manager\r\n            .getZone()\r\n            .runOutsideAngular(() =>\r\n                this.manager.addEventListener(element, this.unwrap(event), handler),\r\n            );\r\n    }\r\n\r\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\r\n        return this.manager\r\n            .getZone()\r\n            .runOutsideAngular(() =>\r\n                this.manager.addGlobalEventListener(element, this.unwrap(event), handler),\r\n            );\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class StopEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.stop';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            event.stopPropagation();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n\r\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            event.stopPropagation();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n/**\r\n * TODO: This will not be needed in Angular 10\r\n * when libraries are allowed to use Ivy renderer and markDirty becomes stable API\r\n */\r\n@Injectable()\r\nexport class ZoneEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.init';\r\n\r\n    addEventListener(_element: HTMLElement, _event: string, handler: Function): Function {\r\n        return this.handle(handler);\r\n    }\r\n\r\n    addGlobalEventListener(\r\n        _element: string,\r\n        _event: string,\r\n        handler: Function,\r\n    ): Function {\r\n        return this.handle(handler);\r\n    }\r\n\r\n    private handle(handler: Function): Function {\r\n        const zone = this.manager.getZone();\r\n        const subscription = zone.onStable.subscribe(() => {\r\n            subscription.unsubscribe();\r\n            handler(zone);\r\n        });\r\n\r\n        return () => {};\r\n    }\r\n}\r\n","import {Provider} from '@angular/core';\r\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\r\nimport {BindEventPlugin} from '../plugins/bind.plugin';\r\nimport {OptionsEventPlugin} from '../plugins/options.plugin';\r\nimport {PreventEventPlugin} from '../plugins/prevent.plugin';\r\nimport {SelfEventPlugin} from '../plugins/self.plugin';\r\nimport {SilentEventPlugin} from '../plugins/silent.plugin';\r\nimport {StopEventPlugin} from '../plugins/stop.plugin';\r\nimport {ZoneEventPlugin} from '../plugins/zone.plugin';\r\n\r\nexport const NG_EVENT_PLUGINS: Provider[] = [\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: SilentEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: PreventEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: SelfEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: StopEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: ZoneEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: OptionsEventPlugin,\r\n        multi: true,\r\n    },\r\n    {\r\n        provide: EVENT_MANAGER_PLUGINS,\r\n        useClass: BindEventPlugin,\r\n        multi: true,\r\n    },\r\n];\r\n","import {NgZone} from '@angular/core';\r\nimport {Predicate} from '../types/predicate';\r\n\r\n/**\r\n * TODO: This will not be needed when markDirty becomes stable API\r\n */\r\nexport function shouldCall<T>(predicate: Predicate<T>): MethodDecorator {\r\n    return (_, key, desc: PropertyDescriptor) => {\r\n        const {value} = desc;\r\n\r\n        desc.value = function (this: T, ...args: any[]) {\r\n            const zone = arguments[0];\r\n\r\n            if (zone instanceof NgZone) {\r\n                Object.defineProperty(this, key, {\r\n                    value(this: T, ...args: any[]) {\r\n                        if (predicate.apply(this, args)) {\r\n                            zone.run(() => {\r\n                                value.apply(this, args);\r\n                            });\r\n                        }\r\n                    },\r\n                });\r\n            } else if (predicate.apply(this, args)) {\r\n                value.apply(this, args);\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\n/**\r\n * TODO: Use this after markDirty becomes public API\r\n */\r\n// export function shouldCall<T extends object>(predicate: Predicate<T>): MethodDecorator {\r\n//     return (_: Object, _key: string | symbol, desc: PropertyDescriptor) => {\r\n//         const {value} = desc;\r\n//\r\n//         desc.value = function(this: T, ...args: any[]) {\r\n//             if (predicate.apply(this, args)) {\r\n//                 value.apply(this, args);\r\n//                 markDirty(this);\r\n//             }\r\n//         };\r\n//     };\r\n// }\r\n","export function asCallable<T>(a: T): T & Function {\r\n    return a as any;\r\n}\r\n","import {Inject, NgModule} from '@angular/core';\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\nimport {NG_EVENT_PLUGINS} from './constants/plugins';\nimport {SilentEventPlugin} from './plugins/silent.plugin';\n\n// @dynamic\n@NgModule({\n    providers: NG_EVENT_PLUGINS,\n})\nexport class EventPluginsModule {\n    constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: readonly unknown[]) {\n        console.assert(\n            !(plugins[0] instanceof SilentEventPlugin) || EventPluginsModule.initialized,\n            'EventPluginsModule must come after BrowserModule in imports',\n        );\n\n        EventPluginsModule.initialized = true;\n    }\n\n    static initialized = false;\n}\n"],"names":[],"mappings":"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"}