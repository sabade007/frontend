import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { FormControl } from '@angular/forms';
import { tuiCapitalizeFirstLetter } from '@taiga-ui/core';
import { TuiCountryIsoCode, TuiLanguageName, TuiLanguageSwitcher } from '@taiga-ui/i18n';
var TuiLanguageSwitcherComponent = /** @class */ (function () {
    function TuiLanguageSwitcherComponent(switcher) {
        this.switcher = switcher;
        this.language = new FormControl(tuiCapitalizeFirstLetter(this.switcher.language));
        this.flags = new Map([
            ['chinese', TuiCountryIsoCode.CN],
            ['dutch', TuiCountryIsoCode.NL],
            ['english', TuiCountryIsoCode.GB],
            ['french', TuiCountryIsoCode.FR],
            ['german', TuiCountryIsoCode.DE],
            ['italian', TuiCountryIsoCode.IT],
            ['polish', TuiCountryIsoCode.PL],
            ['portuguese', TuiCountryIsoCode.PT],
            ['russian', TuiCountryIsoCode.RU],
            ['spanish', TuiCountryIsoCode.ES],
            ['turkish', TuiCountryIsoCode.TR],
            ['ukrainian', TuiCountryIsoCode.UA],
            ['vietnamese', TuiCountryIsoCode.VN],
        ]);
        this.names = Array.from(this.flags.keys());
    }
    TuiLanguageSwitcherComponent.ctorParameters = function () { return [
        { type: TuiLanguageSwitcher, decorators: [{ type: Inject, args: [TuiLanguageSwitcher,] }] }
    ]; };
    TuiLanguageSwitcherComponent = __decorate([
        Component({
            selector: 'tui-language-switcher',
            template: "<tui-select [formControl]=\"language\">\n    <ng-content></ng-content>\n    <tui-data-list *tuiDataList>\n        <button\n            *ngFor=\"let name of names\"\n            tuiOption\n            [value]=\"name | titlecase\"\n            (click)=\"switcher.setLanguage(name)\"\n        >\n            <img\n                alt=\"\"\n                class=\"t-flag\"\n                [src]=\"flags.get(name) | tuiFlag\"\n            />\n            {{ name | titlecase }}\n        </button>\n    </tui-data-list>\n</tui-select>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".t-flag{width:1.75rem;height:1.25rem;margin-right:.5rem}"]
        }),
        __param(0, Inject(TuiLanguageSwitcher))
    ], TuiLanguageSwitcherComponent);
    return TuiLanguageSwitcherComponent;
}());
export { TuiLanguageSwitcherComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2Utc3dpdGNoZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2FkZG9uLWRvYy8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvbGFuZ3VhZ2Utc3dpdGNoZXIvbGFuZ3VhZ2Utc3dpdGNoZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEQsT0FBTyxFQUFDLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBUXZGO0lBcUJJLHNDQUFrRCxRQUE2QjtRQUE3QixhQUFRLEdBQVIsUUFBUSxDQUFxQjtRQXBCdEUsYUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUU3RSxVQUFLLEdBQTRDLElBQUksR0FBRyxDQUFDO1lBQzlELENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztZQUNqQyxDQUFDLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLENBQUM7WUFDL0IsQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsRUFBRSxDQUFDO1lBQ2pDLENBQUMsUUFBUSxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztZQUNoQyxDQUFDLFFBQVEsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLENBQUM7WUFDaEMsQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsRUFBRSxDQUFDO1lBQ2pDLENBQUMsUUFBUSxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztZQUNoQyxDQUFDLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLENBQUM7WUFDcEMsQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsRUFBRSxDQUFDO1lBQ2pDLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztZQUNqQyxDQUFDLFNBQVMsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLENBQUM7WUFDakMsQ0FBQyxXQUFXLEVBQUUsaUJBQWlCLENBQUMsRUFBRSxDQUFDO1lBQ25DLENBQUMsWUFBWSxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztTQUN2QyxDQUFDLENBQUM7UUFFTSxVQUFLLEdBQXNCLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRWdCLENBQUM7O2dCQUF2QixtQkFBbUIsdUJBQWxFLE1BQU0sU0FBQyxtQkFBbUI7O0lBckI5Qiw0QkFBNEI7UUFOeEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyxnaUJBQWlEO1lBRWpELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztTQUNsRCxDQUFDO1FBc0JlLFdBQUEsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUE7T0FyQi9CLDRCQUE0QixDQXNCeEM7SUFBRCxtQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBdEJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUNvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7dHVpQ2FwaXRhbGl6ZUZpcnN0TGV0dGVyfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aUNvdW50cnlJc29Db2RlLCBUdWlMYW5ndWFnZU5hbWUsIFR1aUxhbmd1YWdlU3dpdGNoZXJ9IGZyb20gJ0B0YWlnYS11aS9pMThuJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktbGFuZ3VhZ2Utc3dpdGNoZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sYW5ndWFnZS1zd2l0Y2hlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGFuZ3VhZ2Utc3dpdGNoZXIuY29tcG9uZW50Lmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTGFuZ3VhZ2VTd2l0Y2hlckNvbXBvbmVudCB7XG4gICAgcmVhZG9ubHkgbGFuZ3VhZ2UgPSBuZXcgRm9ybUNvbnRyb2wodHVpQ2FwaXRhbGl6ZUZpcnN0TGV0dGVyKHRoaXMuc3dpdGNoZXIubGFuZ3VhZ2UpKTtcblxuICAgIHJlYWRvbmx5IGZsYWdzOiBNYXA8VHVpTGFuZ3VhZ2VOYW1lLCBUdWlDb3VudHJ5SXNvQ29kZT4gPSBuZXcgTWFwKFtcbiAgICAgICAgWydjaGluZXNlJywgVHVpQ291bnRyeUlzb0NvZGUuQ05dLFxuICAgICAgICBbJ2R1dGNoJywgVHVpQ291bnRyeUlzb0NvZGUuTkxdLFxuICAgICAgICBbJ2VuZ2xpc2gnLCBUdWlDb3VudHJ5SXNvQ29kZS5HQl0sXG4gICAgICAgIFsnZnJlbmNoJywgVHVpQ291bnRyeUlzb0NvZGUuRlJdLFxuICAgICAgICBbJ2dlcm1hbicsIFR1aUNvdW50cnlJc29Db2RlLkRFXSxcbiAgICAgICAgWydpdGFsaWFuJywgVHVpQ291bnRyeUlzb0NvZGUuSVRdLFxuICAgICAgICBbJ3BvbGlzaCcsIFR1aUNvdW50cnlJc29Db2RlLlBMXSxcbiAgICAgICAgWydwb3J0dWd1ZXNlJywgVHVpQ291bnRyeUlzb0NvZGUuUFRdLFxuICAgICAgICBbJ3J1c3NpYW4nLCBUdWlDb3VudHJ5SXNvQ29kZS5SVV0sXG4gICAgICAgIFsnc3BhbmlzaCcsIFR1aUNvdW50cnlJc29Db2RlLkVTXSxcbiAgICAgICAgWyd0dXJraXNoJywgVHVpQ291bnRyeUlzb0NvZGUuVFJdLFxuICAgICAgICBbJ3VrcmFpbmlhbicsIFR1aUNvdW50cnlJc29Db2RlLlVBXSxcbiAgICAgICAgWyd2aWV0bmFtZXNlJywgVHVpQ291bnRyeUlzb0NvZGUuVk5dLFxuICAgIF0pO1xuXG4gICAgcmVhZG9ubHkgbmFtZXM6IFR1aUxhbmd1YWdlTmFtZVtdID0gQXJyYXkuZnJvbSh0aGlzLmZsYWdzLmtleXMoKSk7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFR1aUxhbmd1YWdlU3dpdGNoZXIpIHJlYWRvbmx5IHN3aXRjaGVyOiBUdWlMYW5ndWFnZVN3aXRjaGVyKSB7fVxufVxuIl19