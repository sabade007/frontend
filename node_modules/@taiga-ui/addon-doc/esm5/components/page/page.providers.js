import { ElementRef, InjectionToken } from '@angular/core';
import { TUI_DOC_SEE_ALSO } from '../../tokens/see-also';
export var PAGE_SEE_ALSO = new InjectionToken("Page see also");
export var PAGE_PROVIDERS = [
    {
        provide: PAGE_SEE_ALSO,
        deps: [ElementRef, TUI_DOC_SEE_ALSO],
        useFactory: seeAlsoProviderFactory,
    },
];
// eslint-disable-next-line @typescript-eslint/naming-convention
export function seeAlsoProviderFactory(_a, seeAlsoGroups) {
    var nativeElement = _a.nativeElement;
    var currentHeader = nativeElement.getAttribute("header");
    var groups = seeAlsoGroups.filter(function (group) { return group.includes(currentHeader); }) || [];
    var seeAlsoSet = new Set(groups
        .join()
        .split(",")
        .filter(function (component) { return component && component !== currentHeader; }));
    return Array.from(seeAlsoSet);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5wcm92aWRlcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvYWRkb24tZG9jLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9wYWdlL3BhZ2UucHJvdmlkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUUsY0FBYyxFQUFXLE1BQU0sZUFBZSxDQUFDO0FBRW5FLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXZELE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxJQUFJLGNBQWMsQ0FBb0IsZUFBZSxDQUFDLENBQUM7QUFFcEYsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFlO0lBQ3RDO1FBQ0ksT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLENBQUMsVUFBVSxFQUFFLGdCQUFnQixDQUFDO1FBQ3BDLFVBQVUsRUFBRSxzQkFBc0I7S0FDckM7Q0FDSixDQUFDO0FBRUYsZ0VBQWdFO0FBQ2hFLE1BQU0sVUFBVSxzQkFBc0IsQ0FDbEMsRUFBMkIsRUFDM0IsYUFBK0M7UUFEOUMsZ0NBQWE7SUFHZCxJQUFNLGFBQWEsR0FBRyxhQUFhLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNELElBQU0sTUFBTSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUE3QixDQUE2QixDQUFDLElBQUksRUFBRSxDQUFDO0lBRWxGLElBQU0sVUFBVSxHQUFHLElBQUksR0FBRyxDQUN0QixNQUFNO1NBQ0QsSUFBSSxFQUFFO1NBQ04sS0FBSyxDQUFDLEdBQUcsQ0FBQztTQUNWLE1BQU0sQ0FBQyxVQUFBLFNBQVMsSUFBSSxPQUFBLFNBQVMsSUFBSSxTQUFTLEtBQUssYUFBYSxFQUF4QyxDQUF3QyxDQUFDLENBQ3JFLENBQUM7SUFFRixPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFJlZiwgSW5qZWN0aW9uVG9rZW4sIFByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtUVUlfRE9DX1NFRV9BTFNPfSBmcm9tICcuLi8uLi90b2tlbnMvc2VlLWFsc28nO1xuXG5leHBvcnQgY29uc3QgUEFHRV9TRUVfQUxTTyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxyZWFkb25seSBzdHJpbmdbXT4oYFBhZ2Ugc2VlIGFsc29gKTtcblxuZXhwb3J0IGNvbnN0IFBBR0VfUFJPVklERVJTOiBQcm92aWRlcltdID0gW1xuICAgIHtcbiAgICAgICAgcHJvdmlkZTogUEFHRV9TRUVfQUxTTyxcbiAgICAgICAgZGVwczogW0VsZW1lbnRSZWYsIFRVSV9ET0NfU0VFX0FMU09dLFxuICAgICAgICB1c2VGYWN0b3J5OiBzZWVBbHNvUHJvdmlkZXJGYWN0b3J5LFxuICAgIH0sXG5dO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gc2VlQWxzb1Byb3ZpZGVyRmFjdG9yeShcbiAgICB7bmF0aXZlRWxlbWVudH06IEVsZW1lbnRSZWYsXG4gICAgc2VlQWxzb0dyb3VwczogUmVhZG9ubHlBcnJheTxyZWFkb25seSBzdHJpbmdbXT4sXG4pOiByZWFkb25seSBzdHJpbmdbXSB7XG4gICAgY29uc3QgY3VycmVudEhlYWRlciA9IG5hdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKGBoZWFkZXJgKTtcbiAgICBjb25zdCBncm91cHMgPSBzZWVBbHNvR3JvdXBzLmZpbHRlcihncm91cCA9PiBncm91cC5pbmNsdWRlcyhjdXJyZW50SGVhZGVyKSkgfHwgW107XG5cbiAgICBjb25zdCBzZWVBbHNvU2V0ID0gbmV3IFNldChcbiAgICAgICAgZ3JvdXBzXG4gICAgICAgICAgICAuam9pbigpXG4gICAgICAgICAgICAuc3BsaXQoYCxgKVxuICAgICAgICAgICAgLmZpbHRlcihjb21wb25lbnQgPT4gY29tcG9uZW50ICYmIGNvbXBvbmVudCAhPT0gY3VycmVudEhlYWRlciksXG4gICAgKTtcblxuICAgIHJldHVybiBBcnJheS5mcm9tKHNlZUFsc29TZXQpO1xufVxuIl19