function inspectArray(array, depth) {
    if (depth === 0) {
        return "[\u2026]";
    }
    var result = "";
    var first = true;
    for (var index = 0; index < array.length; index++) {
        if (first) {
            first = false;
        }
        else {
            result += ", ";
        }
        result += index in array ? inspectAny(array[index], depth - 1) : "empty";
    }
    return "[" + result + "]";
}
function inspectObject(object, depth) {
    if (depth === 0) {
        return "{\u2026}";
    }
    var result = "";
    var first = true;
    for (var key in object) {
        if (!object.hasOwnProperty(key)) {
            continue;
        }
        if (first) {
            first = false;
        }
        else {
            result += ", ";
        }
        result += key + ": " + inspectAny(object[key], depth - 1);
    }
    return "{" + result + "}";
}
/**
 * @deprecated: use {@link tuiInspectAny} instead
 * Returns readable JS entity
 * @param data
 * @param depth
 * @return readable JS entity
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function inspectAny(data, depth) {
    if (data === null) {
        return "null";
    }
    switch (typeof data) {
        case "string":
            return "'" + data + "'";
        case "undefined":
        case "number":
        case "boolean":
        case "function":
            return String(data);
    }
    if (data instanceof RegExp) {
        return String(data);
    }
    if (Array.isArray(data)) {
        return inspectArray(data, depth);
    }
    return inspectObject(data, depth);
}
export var tuiInspectAny = inspectAny;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zcGVjdC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9hZGRvbi1kb2MvIiwic291cmNlcyI6WyJ1dGlscy9pbnNwZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsWUFBWSxDQUFDLEtBQXlCLEVBQUUsS0FBYTtJQUMxRCxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7UUFDYixPQUFPLFVBQUssQ0FBQztLQUNoQjtJQUVELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7SUFFakIsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDL0MsSUFBSSxLQUFLLEVBQUU7WUFDUCxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO2FBQU07WUFDSCxNQUFNLElBQUksSUFBSSxDQUFDO1NBQ2xCO1FBRUQsTUFBTSxJQUFJLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7S0FDNUU7SUFFRCxPQUFPLE1BQUksTUFBTSxNQUFHLENBQUM7QUFDekIsQ0FBQztBQUVELFNBQVMsYUFBYSxDQUFDLE1BQWdDLEVBQUUsS0FBYTtJQUNsRSxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7UUFDYixPQUFPLFVBQUssQ0FBQztLQUNoQjtJQUVELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7SUFFakIsS0FBSyxJQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUU7UUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDN0IsU0FBUztTQUNaO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDUCxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO2FBQU07WUFDSCxNQUFNLElBQUksSUFBSSxDQUFDO1NBQ2xCO1FBRUQsTUFBTSxJQUFPLEdBQUcsVUFBSyxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUcsQ0FBQztLQUM3RDtJQUVELE9BQU8sTUFBSSxNQUFNLE1BQUcsQ0FBQztBQUN6QixDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsZ0VBQWdFO0FBQ2hFLE1BQU0sVUFBVSxVQUFVLENBQUksSUFBTyxFQUFFLEtBQWE7SUFDaEQsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO1FBQ2YsT0FBTyxNQUFNLENBQUM7S0FDakI7SUFFRCxRQUFRLE9BQU8sSUFBSSxFQUFFO1FBQ2pCLEtBQUssUUFBUTtZQUNULE9BQU8sTUFBSSxJQUFJLE1BQUcsQ0FBQztRQUN2QixLQUFLLFdBQVcsQ0FBQztRQUNqQixLQUFLLFFBQVEsQ0FBQztRQUNkLEtBQUssU0FBUyxDQUFDO1FBQ2YsS0FBSyxVQUFVO1lBQ1gsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDM0I7SUFFRCxJQUFJLElBQUksWUFBWSxNQUFNLEVBQUU7UUFDeEIsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDdkI7SUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDckIsT0FBTyxZQUFZLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsT0FBTyxhQUFhLENBQUMsSUFBMkMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUM3RSxDQUFDO0FBRUQsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGluc3BlY3RBcnJheShhcnJheTogcmVhZG9ubHkgdW5rbm93bltdLCBkZXB0aDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZiAoZGVwdGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGBb4oCmXWA7XG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9IGBgO1xuICAgIGxldCBmaXJzdCA9IHRydWU7XG5cbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgYXJyYXkubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGlmIChmaXJzdCkge1xuICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBgLCBgO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ICs9IGluZGV4IGluIGFycmF5ID8gaW5zcGVjdEFueShhcnJheVtpbmRleF0sIGRlcHRoIC0gMSkgOiBgZW1wdHlgO1xuICAgIH1cblxuICAgIHJldHVybiBgWyR7cmVzdWx0fV1gO1xufVxuXG5mdW5jdGlvbiBpbnNwZWN0T2JqZWN0KG9iamVjdDoge1trZXk6IHN0cmluZ106IHVua25vd259LCBkZXB0aDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZiAoZGVwdGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGB74oCmfWA7XG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9IGBgO1xuXG4gICAgbGV0IGZpcnN0ID0gdHJ1ZTtcblxuICAgIGZvciAoY29uc3Qga2V5IGluIG9iamVjdCkge1xuICAgICAgICBpZiAoIW9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChmaXJzdCkge1xuICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBgLCBgO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ICs9IGAke2tleX06ICR7aW5zcGVjdEFueShvYmplY3Rba2V5XSwgZGVwdGggLSAxKX1gO1xuICAgIH1cblxuICAgIHJldHVybiBgeyR7cmVzdWx0fX1gO1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkOiB1c2Uge0BsaW5rIHR1aUluc3BlY3RBbnl9IGluc3RlYWRcbiAqIFJldHVybnMgcmVhZGFibGUgSlMgZW50aXR5XG4gKiBAcGFyYW0gZGF0YVxuICogQHBhcmFtIGRlcHRoXG4gKiBAcmV0dXJuIHJlYWRhYmxlIEpTIGVudGl0eVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gaW5zcGVjdEFueTxUPihkYXRhOiBULCBkZXB0aDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZiAoZGF0YSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gYG51bGxgO1xuICAgIH1cblxuICAgIHN3aXRjaCAodHlwZW9mIGRhdGEpIHtcbiAgICAgICAgY2FzZSBgc3RyaW5nYDpcbiAgICAgICAgICAgIHJldHVybiBgJyR7ZGF0YX0nYDtcbiAgICAgICAgY2FzZSBgdW5kZWZpbmVkYDpcbiAgICAgICAgY2FzZSBgbnVtYmVyYDpcbiAgICAgICAgY2FzZSBgYm9vbGVhbmA6XG4gICAgICAgIGNhc2UgYGZ1bmN0aW9uYDpcbiAgICAgICAgICAgIHJldHVybiBTdHJpbmcoZGF0YSk7XG4gICAgfVxuXG4gICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhkYXRhKTtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICByZXR1cm4gaW5zcGVjdEFycmF5KGRhdGEsIGRlcHRoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zcGVjdE9iamVjdChkYXRhIGFzIHVua25vd24gYXMge1trZXk6IHN0cmluZ106IHVua25vd259LCBkZXB0aCk7XG59XG5cbmV4cG9ydCBjb25zdCB0dWlJbnNwZWN0QW55ID0gaW5zcGVjdEFueTtcbiJdfQ==