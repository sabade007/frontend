import { __decorate, __param, __read, __spread } from "tslib";
import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';
import { TUI_DOC_SEE_ALSO_TEXT } from '../../tokens/i18n';
import { TUI_DOC_PAGES } from '../../tokens/pages';
// @dynamic
var TuiDocSeeAlsoComponent = /** @class */ (function () {
    function TuiDocSeeAlsoComponent(text, pages) {
        this.text = text;
        this.pages = pages;
        this.seeAlso = [];
    }
    TuiDocSeeAlsoComponent.prototype.getRouterLink = function (pageTitle) {
        for (var i = 0; i < this.pages.length; i++) {
            var page = this.pages
                .map(function (page) { return ('subPages' in page ? page.subPages : [page]); })
                .reduce(function (pages, subPages) { return __spread(pages, subPages); }, [])
                .find(function (page) { return page.title === pageTitle; });
            if (page === null || page === void 0 ? void 0 : page.route) {
                return page.route;
            }
        }
        return '';
    };
    TuiDocSeeAlsoComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [TUI_DOC_SEE_ALSO_TEXT,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_DOC_PAGES,] }] }
    ]; };
    __decorate([
        Input()
    ], TuiDocSeeAlsoComponent.prototype, "seeAlso", void 0);
    TuiDocSeeAlsoComponent = __decorate([
        Component({
            selector: 'tui-doc-see-also',
            template: "<h5 class=\"t-header\">{{ text }}</h5>\n<ng-container *ngFor=\"let item of seeAlso; last as last\">\n    <a\n        tuiLink\n        [routerLink]=\"getRouterLink(item)\"\n    >\n        {{ item }}\n    </a>\n    <ng-container *ngIf=\"!last\">{{ ', ' }}</ng-container>\n</ng-container>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:block}.t-header{font-size:.6875rem;line-height:1rem;text-transform:uppercase;letter-spacing:.075em;color:var(--tui-text-02);margin:0 0 .5rem;white-space:nowrap}"]
        }),
        __param(0, Inject(TUI_DOC_SEE_ALSO_TEXT)),
        __param(1, Inject(TUI_DOC_PAGES))
    ], TuiDocSeeAlsoComponent);
    return TuiDocSeeAlsoComponent;
}());
export { TuiDocSeeAlsoComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VlLWFsc28uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2FkZG9uLWRvYy8iLCJzb3VyY2VzIjpbImludGVybmFsL3NlZS1hbHNvL3NlZS1hbHNvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBR2hGLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ3hELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVqRCxXQUFXO0FBT1g7SUFJSSxnQ0FDNEMsSUFBWSxFQUVuQyxLQUFrRDtRQUYzQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBRW5DLFVBQUssR0FBTCxLQUFLLENBQTZDO1FBTHZFLFlBQU8sR0FBc0IsRUFBRSxDQUFDO0lBTTdCLENBQUM7SUFFSiw4Q0FBYSxHQUFiLFVBQWMsU0FBaUI7UUFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLO2lCQUNsQixHQUFHLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBN0MsQ0FBNkMsQ0FBQztpQkFDMUQsTUFBTSxDQUFDLFVBQUMsS0FBSyxFQUFFLFFBQVEsSUFBSyxnQkFBSSxLQUFLLEVBQUssUUFBUSxHQUF0QixDQUF1QixFQUFFLEVBQUUsQ0FBQztpQkFDeEQsSUFBSSxDQUFDLFVBQUMsSUFBZ0IsSUFBSyxPQUFBLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxFQUF4QixDQUF3QixDQUFDLENBQUM7WUFFMUQsSUFBSSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsS0FBSyxFQUFFO2dCQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQzthQUNyQjtTQUNKO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDZCxDQUFDOzs2Q0FsQkksTUFBTSxTQUFDLHFCQUFxQjtnREFDNUIsTUFBTSxTQUFDLGFBQWE7O0lBSnpCO1FBREMsS0FBSyxFQUFFOzJEQUN3QjtJQUZ2QixzQkFBc0I7UUFObEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QiwyU0FBdUM7WUFFdkMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2xELENBQUM7UUFNTyxXQUFBLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO1FBQzdCLFdBQUEsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO09BTmpCLHNCQUFzQixDQXdCbEM7SUFBRCw2QkFBQztDQUFBLEFBeEJELElBd0JDO1NBeEJZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7VHVpRG9jUGFnZSwgVHVpRG9jUGFnZUdyb3VwfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL3BhZ2UnO1xuaW1wb3J0IHtUVUlfRE9DX1NFRV9BTFNPX1RFWFR9IGZyb20gJy4uLy4uL3Rva2Vucy9pMThuJztcbmltcG9ydCB7VFVJX0RPQ19QQUdFU30gZnJvbSAnLi4vLi4vdG9rZW5zL3BhZ2VzJztcblxuLy8gQGR5bmFtaWNcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWRvYy1zZWUtYWxzbycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NlZS1hbHNvLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3NlZS1hbHNvLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRG9jU2VlQWxzb0NvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBzZWVBbHNvOiByZWFkb25seSBzdHJpbmdbXSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0RPQ19TRUVfQUxTT19URVhUKSByZWFkb25seSB0ZXh0OiBzdHJpbmcsXG4gICAgICAgIEBJbmplY3QoVFVJX0RPQ19QQUdFUylcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBwYWdlczogUmVhZG9ubHlBcnJheTxUdWlEb2NQYWdlIHwgVHVpRG9jUGFnZUdyb3VwPixcbiAgICApIHt9XG5cbiAgICBnZXRSb3V0ZXJMaW5rKHBhZ2VUaXRsZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwYWdlID0gdGhpcy5wYWdlc1xuICAgICAgICAgICAgICAgIC5tYXAocGFnZSA9PiAoJ3N1YlBhZ2VzJyBpbiBwYWdlID8gcGFnZS5zdWJQYWdlcyA6IFtwYWdlXSkpXG4gICAgICAgICAgICAgICAgLnJlZHVjZSgocGFnZXMsIHN1YlBhZ2VzKSA9PiBbLi4ucGFnZXMsIC4uLnN1YlBhZ2VzXSwgW10pXG4gICAgICAgICAgICAgICAgLmZpbmQoKHBhZ2U6IFR1aURvY1BhZ2UpID0+IHBhZ2UudGl0bGUgPT09IHBhZ2VUaXRsZSk7XG5cbiAgICAgICAgICAgIGlmIChwYWdlPy5yb3V0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWdlLnJvdXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbn1cbiJdfQ==