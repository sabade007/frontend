function inspectArray(array, depth) {
    if (depth === 0) {
        return `[…]`;
    }
    let result = ``;
    let first = true;
    for (let index = 0; index < array.length; index++) {
        if (first) {
            first = false;
        }
        else {
            result += `, `;
        }
        result += index in array ? inspectAny(array[index], depth - 1) : `empty`;
    }
    return `[${result}]`;
}
function inspectObject(object, depth) {
    if (depth === 0) {
        return `{…}`;
    }
    let result = ``;
    let first = true;
    for (const key in object) {
        if (!object.hasOwnProperty(key)) {
            continue;
        }
        if (first) {
            first = false;
        }
        else {
            result += `, `;
        }
        result += `${key}: ${inspectAny(object[key], depth - 1)}`;
    }
    return `{${result}}`;
}
/**
 * @deprecated: use {@link tuiInspectAny} instead
 * Returns readable JS entity
 * @param data
 * @param depth
 * @return readable JS entity
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function inspectAny(data, depth) {
    if (data === null) {
        return `null`;
    }
    switch (typeof data) {
        case `string`:
            return `'${data}'`;
        case `undefined`:
        case `number`:
        case `boolean`:
        case `function`:
            return String(data);
    }
    if (data instanceof RegExp) {
        return String(data);
    }
    if (Array.isArray(data)) {
        return inspectArray(data, depth);
    }
    return inspectObject(data, depth);
}
export const tuiInspectAny = inspectAny;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zcGVjdC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9hZGRvbi1kb2MvIiwic291cmNlcyI6WyJ1dGlscy9pbnNwZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsWUFBWSxDQUFDLEtBQXlCLEVBQUUsS0FBYTtJQUMxRCxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7UUFDYixPQUFPLEtBQUssQ0FBQztLQUNoQjtJQUVELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7SUFFakIsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDL0MsSUFBSSxLQUFLLEVBQUU7WUFDUCxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO2FBQU07WUFDSCxNQUFNLElBQUksSUFBSSxDQUFDO1NBQ2xCO1FBRUQsTUFBTSxJQUFJLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7S0FDNUU7SUFFRCxPQUFPLElBQUksTUFBTSxHQUFHLENBQUM7QUFDekIsQ0FBQztBQUVELFNBQVMsYUFBYSxDQUFDLE1BQWdDLEVBQUUsS0FBYTtJQUNsRSxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7UUFDYixPQUFPLEtBQUssQ0FBQztLQUNoQjtJQUVELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7SUFFakIsS0FBSyxNQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUU7UUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDN0IsU0FBUztTQUNaO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDUCxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO2FBQU07WUFDSCxNQUFNLElBQUksSUFBSSxDQUFDO1NBQ2xCO1FBRUQsTUFBTSxJQUFJLEdBQUcsR0FBRyxLQUFLLFVBQVUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUM7S0FDN0Q7SUFFRCxPQUFPLElBQUksTUFBTSxHQUFHLENBQUM7QUFDekIsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsVUFBVSxDQUFJLElBQU8sRUFBRSxLQUFhO0lBQ2hELElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtRQUNmLE9BQU8sTUFBTSxDQUFDO0tBQ2pCO0lBRUQsUUFBUSxPQUFPLElBQUksRUFBRTtRQUNqQixLQUFLLFFBQVE7WUFDVCxPQUFPLElBQUksSUFBSSxHQUFHLENBQUM7UUFDdkIsS0FBSyxXQUFXLENBQUM7UUFDakIsS0FBSyxRQUFRLENBQUM7UUFDZCxLQUFLLFNBQVMsQ0FBQztRQUNmLEtBQUssVUFBVTtZQUNYLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzNCO0lBRUQsSUFBSSxJQUFJLFlBQVksTUFBTSxFQUFFO1FBQ3hCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3ZCO0lBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3JCLE9BQU8sWUFBWSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sYUFBYSxDQUFDLElBQTJDLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDN0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpbnNwZWN0QXJyYXkoYXJyYXk6IHJlYWRvbmx5IHVua25vd25bXSwgZGVwdGg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgaWYgKGRlcHRoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBgW+KApl1gO1xuICAgIH1cblxuICAgIGxldCByZXN1bHQgPSBgYDtcbiAgICBsZXQgZmlyc3QgPSB0cnVlO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGFycmF5Lmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gYCwgYDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdCArPSBpbmRleCBpbiBhcnJheSA/IGluc3BlY3RBbnkoYXJyYXlbaW5kZXhdLCBkZXB0aCAtIDEpIDogYGVtcHR5YDtcbiAgICB9XG5cbiAgICByZXR1cm4gYFske3Jlc3VsdH1dYDtcbn1cblxuZnVuY3Rpb24gaW5zcGVjdE9iamVjdChvYmplY3Q6IHtba2V5OiBzdHJpbmddOiB1bmtub3dufSwgZGVwdGg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgaWYgKGRlcHRoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBge+KApn1gO1xuICAgIH1cblxuICAgIGxldCByZXN1bHQgPSBgYDtcblxuICAgIGxldCBmaXJzdCA9IHRydWU7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgaWYgKCFvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gYCwgYDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdCArPSBgJHtrZXl9OiAke2luc3BlY3RBbnkob2JqZWN0W2tleV0sIGRlcHRoIC0gMSl9YDtcbiAgICB9XG5cbiAgICByZXR1cm4gYHske3Jlc3VsdH19YDtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogdXNlIHtAbGluayB0dWlJbnNwZWN0QW55fSBpbnN0ZWFkXG4gKiBSZXR1cm5zIHJlYWRhYmxlIEpTIGVudGl0eVxuICogQHBhcmFtIGRhdGFcbiAqIEBwYXJhbSBkZXB0aFxuICogQHJldHVybiByZWFkYWJsZSBKUyBlbnRpdHlcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGZ1bmN0aW9uIGluc3BlY3RBbnk8VD4oZGF0YTogVCwgZGVwdGg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgaWYgKGRhdGEgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGBudWxsYDtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHR5cGVvZiBkYXRhKSB7XG4gICAgICAgIGNhc2UgYHN0cmluZ2A6XG4gICAgICAgICAgICByZXR1cm4gYCcke2RhdGF9J2A7XG4gICAgICAgIGNhc2UgYHVuZGVmaW5lZGA6XG4gICAgICAgIGNhc2UgYG51bWJlcmA6XG4gICAgICAgIGNhc2UgYGJvb2xlYW5gOlxuICAgICAgICBjYXNlIGBmdW5jdGlvbmA6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKGRhdGEpO1xuICAgIH1cblxuICAgIGlmIChkYXRhIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcoZGF0YSk7XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgcmV0dXJuIGluc3BlY3RBcnJheShkYXRhLCBkZXB0aCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGluc3BlY3RPYmplY3QoZGF0YSBhcyB1bmtub3duIGFzIHtba2V5OiBzdHJpbmddOiB1bmtub3dufSwgZGVwdGgpO1xufVxuXG5leHBvcnQgY29uc3QgdHVpSW5zcGVjdEFueSA9IGluc3BlY3RBbnk7XG4iXX0=