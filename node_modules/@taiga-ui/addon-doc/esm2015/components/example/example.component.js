import { __decorate, __param } from "tslib";
import { Clipboard } from '@angular/cdk/clipboard';
import { Location as NgLocation } from '@angular/common';
import { Attribute, ChangeDetectionStrategy, Component, Inject, Input, Optional, } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { LOCATION } from '@ng-web-apis/common';
import { TUI_IS_CYPRESS } from '@taiga-ui/cdk';
import { TuiNotification, TuiNotificationsService } from '@taiga-ui/core';
import { TUI_COPY_TEXTS } from '@taiga-ui/kit';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';
import { TUI_DOC_CODE_ACTIONS } from '../../tokens/code-actions';
import { TUI_DOC_CODE_EDITOR } from '../../tokens/code-editor';
import { TUI_DOC_EXAMPLE_CONTENT_PROCESSOR } from '../../tokens/example-content-processor';
import { TUI_DOC_EXAMPLE_TEXTS } from '../../tokens/i18n';
import { rawLoadRecord } from '../../utils/raw-load-record';
// Ambient type cannot be used without dynamic https://github.com/angular/angular/issues/23395
// @dynamic
let TuiDocExampleComponent = class TuiDocExampleComponent {
    constructor(id, clipboard, notifications, location, copyTexts$, texts, codeEditor, processContent, isCypress, codeActions, router, route, ngLocation) {
        this.id = id;
        this.clipboard = clipboard;
        this.notifications = notifications;
        this.location = location;
        this.copyTexts$ = copyTexts$;
        this.texts = texts;
        this.codeEditor = codeEditor;
        this.processContent = processContent;
        this.isCypress = isCypress;
        this.codeActions = codeActions;
        this.router = router;
        this.route = route;
        this.ngLocation = ngLocation;
        this.rawLoader$$ = new BehaviorSubject({});
        this.heading = '';
        this.description = '';
        this.componentName = this.location.pathname.slice(1);
        this.defaultTabIndex = 0;
        this.defaultTab = this.texts[this.defaultTabIndex];
        this.activeItemIndex = this.defaultTabIndex;
        this.copy$ = this.copyTexts$.pipe(map(([copy]) => copy));
        this.processor$ = this.rawLoader$$.pipe(switchMap(rawLoadRecord), map(value => this.processContent(value)));
        this.loading$ = new Subject();
    }
    set content(content) {
        this.rawLoader$$.next(content);
    }
    copyExampleLink() {
        const hashPosition = this.location.href.indexOf('#');
        const currentUrl = hashPosition > -1
            ? this.location.href.slice(0, Math.max(0, hashPosition))
            : this.location.href;
        const url = `${currentUrl}#${this.id}`;
        this.setFragmentWithoutRedirect(this.id);
        this.clipboard.copy(url);
        this.notifications
            .show(this.texts[1], {
            label: this.texts[2],
            status: "success" /* Success */,
        })
            .subscribe();
    }
    edit(files) {
        var _a, _b;
        this.loading$.next(true);
        (_a = this.codeEditor) === null || _a === void 0 ? void 0 : _a.edit(this.componentName, (_b = this.id) !== null && _b !== void 0 ? _b : '', files).finally(() => this.loading$.next(false));
    }
    setFragmentWithoutRedirect(id) {
        const url = this.router
            .createUrlTree([], { relativeTo: this.route, fragment: id || '' })
            .toString();
        this.ngLocation.go(url);
    }
};
TuiDocExampleComponent.ctorParameters = () => [
    { type: String, decorators: [{ type: Attribute, args: ['id',] }] },
    { type: Clipboard, decorators: [{ type: Inject, args: [Clipboard,] }] },
    { type: TuiNotificationsService, decorators: [{ type: Inject, args: [TuiNotificationsService,] }] },
    { type: Location, decorators: [{ type: Inject, args: [LOCATION,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_COPY_TEXTS,] }] },
    { type: Array, decorators: [{ type: Inject, args: [TUI_DOC_EXAMPLE_TEXTS,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TUI_DOC_CODE_EDITOR,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_DOC_EXAMPLE_CONTENT_PROCESSOR,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_CYPRESS,] }] },
    { type: Array, decorators: [{ type: Inject, args: [TUI_DOC_CODE_ACTIONS,] }] },
    { type: Router, decorators: [{ type: Inject, args: [Router,] }] },
    { type: ActivatedRoute, decorators: [{ type: Inject, args: [ActivatedRoute,] }] },
    { type: NgLocation, decorators: [{ type: Inject, args: [NgLocation,] }] }
];
__decorate([
    Input()
], TuiDocExampleComponent.prototype, "heading", void 0);
__decorate([
    Input()
], TuiDocExampleComponent.prototype, "description", void 0);
__decorate([
    Input()
], TuiDocExampleComponent.prototype, "content", null);
__decorate([
    Input()
], TuiDocExampleComponent.prototype, "componentName", void 0);
TuiDocExampleComponent = __decorate([
    Component({
        selector: 'tui-doc-example',
        template: "<h3\n    *ngIf=\"heading\"\n    class=\"t-title\"\n>\n    <span\n        polymorpheus-outlet\n        [content]=\"heading | tuiDocExampleCapitalize\"\n    ></span>\n    <button\n        *ngIf=\"id\"\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        icon=\"tuiIconLinkLarge\"\n        appearance=\"icon\"\n        class=\"t-link-icon\"\n        [title]=\"copy$ | async\"\n        (click)=\"copyExampleLink()\"\n    ></button>\n</h3>\n<h4\n    *ngIf=\"description\"\n    polymorpheus-outlet\n    class=\"t-description\"\n    [content]=\"description | tuiDocExampleCapitalize\"\n></h4>\n\n<div\n    *ngIf=\"processor$ | async as files\"\n    class=\"t-example\"\n>\n    <ng-container *ngIf=\"files | tuiDocExampleGetTabs: defaultTab as tabs\">\n        <div class=\"t-tabs-wrapper\">\n            <tui-tabs-with-more\n                class=\"t-tabs\"\n                [(activeItemIndex)]=\"activeItemIndex\"\n            >\n                <ng-container *ngFor=\"let tab of tabs\">\n                    <button\n                        *tuiTab\n                        tuiTab\n                    >\n                        {{ tab }}\n                    </button>\n                </ng-container>\n            </tui-tabs-with-more>\n\n            <button\n                *ngIf=\"codeEditor\"\n                tuiButton\n                appearance=\"flat\"\n                size=\"s\"\n                [showLoader]=\"!!(loading$ | async)\"\n                (click)=\"edit(files)\"\n            >\n                Edit on {{ codeEditor.name }}\n            </button>\n        </div>\n\n        <div\n            *ngFor=\"let tab of tabs; let index = index\"\n            class=\"t-content\"\n            [class.t-content_animated]=\"!isCypress\"\n            [class.t-content_visible]=\"activeItemIndex === index\"\n        >\n            <ng-container\n                *ngIf=\"index === defaultTabIndex; else anotherTab\"\n                [ngTemplateOutlet]=\"preview\"\n            ></ng-container>\n            <ng-template #anotherTab>\n                <ng-container\n                    [ngTemplateOutlet]=\"codeSection\"\n                    [ngTemplateOutletContext]=\"{$implicit: files[tabs[activeItemIndex]] || ''}\"\n                ></ng-container>\n            </ng-template>\n        </div>\n    </ng-container>\n</div>\n\n<ng-template #preview>\n    <div\n        automation-id=\"tui-doc-example\"\n        class=\"t-demo\"\n    >\n        <ng-content></ng-content>\n    </div>\n</ng-template>\n\n<ng-template\n    #codeSection\n    let-code\n>\n    <section class=\"t-code-actions\">\n        <ng-container *ngFor=\"let action of codeActions\">\n            <div\n                polymorpheus-outlet\n                [content]=\"action\"\n                [context]=\"{$implicit: code}\"\n            ></div>\n        </ng-container>\n        <tui-doc-copy [cdkCopyToClipboard]=\"code\"></tui-doc-copy>\n    </section>\n    <tui-doc-code [code]=\"code\"></tui-doc-code>\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{position:relative;display:block;padding-top:3.5rem;clear:right}:host :host-context(tui-root._mobile){padding-top:2rem}.t-title{font:var(--tui-font-heading-5);margin:0 0 .5rem}:host-context(tui-root._mobile) .t-title{font:var(--tui-font-heading-6)}.t-description{font:var(--tui-font-text-m);font-weight:400;margin:0}.t-example{position:relative;margin-top:1.5rem;border:1px solid var(--tui-base-03);border-radius:var(--tui-radius-m);box-shadow:0 .125rem .1875rem rgba(0,0,0,.1)}:host-context(tui-root._mobile) .t-example{margin-top:.75rem}.t-tabs-wrapper{display:flex;padding:0 2rem;box-shadow:inset 0 -1px var(--tui-base-03);justify-content:space-between;align-items:center}:host-context(tui-root._mobile) .t-tabs-wrapper{padding:0 1rem}.t-tabs{flex-grow:1}.t-demo{padding:2rem;overflow-x:auto}@media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution:0.001dpcm){.t-demo::-webkit-scrollbar,.t-demo::-webkit-scrollbar-thumb{width:1rem;height:1rem;border-radius:6.25rem;background-clip:padding-box;border:2.667rem solid transparent}.t-demo::-webkit-scrollbar{background-color:transparent}.t-demo::-webkit-scrollbar-thumb{background-color:var(--tui-clear-hover)}.t-demo::-webkit-scrollbar-thumb:hover{background-color:var(--tui-clear-active)}.t-demo::-webkit-scrollbar-thumb:active{background-color:var(--tui-text-03)}}:host-context(tui-root._mobile) .t-demo{padding:1rem}.t-code-actions{position:absolute;top:4.375rem;right:1rem;display:flex;justify-content:flex-end;align-items:center}.t-code-actions>*{margin-left:.5rem}.t-link-icon{margin-left:.3rem;vertical-align:baseline}.t-content{will-change:opacity;height:0;visibility:hidden;opacity:0}.t-content_animated{transition:opacity .3s ease-in-out}.t-content_visible{height:auto;visibility:visible;opacity:1}"]
    }),
    __param(0, Attribute('id')),
    __param(1, Inject(Clipboard)),
    __param(2, Inject(TuiNotificationsService)),
    __param(3, Inject(LOCATION)),
    __param(4, Inject(TUI_COPY_TEXTS)),
    __param(5, Inject(TUI_DOC_EXAMPLE_TEXTS)),
    __param(6, Optional()),
    __param(6, Inject(TUI_DOC_CODE_EDITOR)),
    __param(7, Inject(TUI_DOC_EXAMPLE_CONTENT_PROCESSOR)),
    __param(8, Inject(TUI_IS_CYPRESS)),
    __param(9, Inject(TUI_DOC_CODE_ACTIONS)),
    __param(10, Inject(Router)),
    __param(11, Inject(ActivatedRoute)),
    __param(12, Inject(NgLocation))
], TuiDocExampleComponent);
export { TuiDocExampleComponent };
//# sourceMappingURL=data:application/json;base64,