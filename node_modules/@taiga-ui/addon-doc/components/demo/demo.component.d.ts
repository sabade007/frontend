import { Location } from '@angular/common';
import { AfterViewInit, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { AbstractControl, FormControl, FormGroup } from '@angular/forms';
import { UrlSerializer } from '@angular/router';
import { TuiDestroyService } from '@taiga-ui/cdk';
import { TuiBrightness } from '@taiga-ui/core';
import { Subject } from 'rxjs';
export declare class TuiDocDemoComponent implements OnInit, AfterViewInit {
    readonly isMobile: boolean;
    private readonly destroy$;
    private readonly renderer;
    readonly texts: [string, string, string];
    private readonly content?;
    private readonly wrapper?;
    private readonly resizerText?;
    private readonly isBrowser;
    private initialX;
    private wrapperWidth;
    control: AbstractControl | null;
    readonly template: TemplateRef<Record<string, unknown>> | null;
    testForm?: FormGroup;
    updateOnVariants: string[];
    updateOn: 'blur' | 'change' | 'submit';
    expanded: boolean;
    opaque: boolean;
    modeControl: FormControl;
    mode: TuiBrightness | null;
    readonly change$: Subject<void>;
    readonly items: readonly TuiBrightness[];
    constructor(isMobile: boolean, destroy$: TuiDestroyService, renderer: Renderer2, platformId: Record<string, unknown>, locationRef: Location, urlSerializer: UrlSerializer, texts: [string, string, string]);
    onResize(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    setResizerTextContent(): void;
    onDragStart(event: MouseEvent): void;
    onDragContinues(event: MouseEvent): void;
    onDragEnd(): void;
    toggleDetails(): void;
    updateOnChange(updateOn: 'blur' | 'change' | 'submit'): void;
    private createForm;
    private resizeContent;
}
