import { ChangeDetectorRef } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { ActivatedRoute, Router } from '@angular/router';
import { TuiBrightness, TuiModeDirective } from '@taiga-ui/core';
import { Observable } from 'rxjs';
import { TuiDocPage } from '../../interfaces/page';
import { TuiDocPages } from '../../types/pages';
export declare class TuiDocNavigationComponent {
    private readonly documentRef;
    private readonly mode;
    readonly sidebar: unknown;
    readonly labels: string[];
    readonly items: readonly TuiDocPages[];
    readonly searchText: string;
    private readonly router;
    private readonly activatedRoute;
    private readonly destroy$;
    private readonly readyToScroll$;
    private readonly scrollBehavior;
    menuOpen: boolean;
    search: string;
    open: boolean;
    openPagesArr: boolean[];
    openPagesGroupsArr: boolean[];
    active: string;
    readonly mode$: Observable<TuiBrightness>;
    constructor(changeDetectorRef: ChangeDetectorRef, titleService: Title, title$: Observable<string>, documentRef: Document, mode: TuiModeDirective, sidebar: unknown, labels: string[], items: readonly TuiDocPages[], searchText: string, router: Router, activatedRoute: ActivatedRoute, destroy$: Observable<void>, readyToScroll$: Observable<boolean>, scrollBehavior: ScrollBehavior);
    get canOpen(): boolean;
    get filteredItems(): ReadonlyArray<readonly TuiDocPage[]>;
    get itemsWithoutSections(): TuiDocPages;
    isActive(route: string): boolean;
    onGroupClick(index: number): void;
    closeMenu(): void;
    onSearchChange(search: string): void;
    onClick(): void;
    private filterItems;
    private flattenSubPages;
    private isActiveRoute;
    private handleAnchorLink;
    private openActivePageGroup;
    private navigateToAnchorLink;
}
