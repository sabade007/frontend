import { Clipboard } from '@angular/cdk/clipboard';
import { Location as NgLocation } from '@angular/common';
import { ActivatedRoute, Router } from '@angular/router';
import { TuiHandler } from '@taiga-ui/cdk';
import { TuiNotificationsService } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable, Subject } from 'rxjs';
import { TuiCodeEditor } from '../../interfaces/code-editor';
import { TuiDocExample } from '../../interfaces/page';
export declare class TuiDocExampleComponent {
    readonly id: string | null;
    private readonly clipboard;
    private readonly notifications;
    private readonly location;
    private readonly copyTexts$;
    readonly texts: [string, string, string];
    readonly codeEditor: TuiCodeEditor | null;
    private readonly processContent;
    readonly isCypress: boolean;
    readonly codeActions: PolymorpheusContent[];
    private readonly router;
    private readonly route;
    private readonly ngLocation;
    private readonly rawLoader$$;
    heading: PolymorpheusContent;
    description: PolymorpheusContent;
    set content(content: TuiDocExample);
    componentName: string;
    readonly defaultTabIndex = 0;
    readonly defaultTab: string;
    activeItemIndex: number;
    readonly copy$: Observable<string>;
    readonly processor$: Observable<Record<string, string>>;
    readonly loading$: Subject<boolean>;
    constructor(id: string | null, clipboard: Clipboard, notifications: TuiNotificationsService, location: Location, copyTexts$: Observable<[string, string]>, texts: [string, string, string], codeEditor: TuiCodeEditor | null, processContent: TuiHandler<Record<string, string>, Record<string, string>>, isCypress: boolean, codeActions: PolymorpheusContent[], router: Router, route: ActivatedRoute, ngLocation: NgLocation);
    copyExampleLink(): void;
    edit(files: Record<string, string>): void;
    private setFragmentWithoutRedirect;
}
