import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostListener, Inject, Input, Output, } from '@angular/core';
import { clamp, tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_PAGINATION_TEXTS } from '@taiga-ui/kit';
import { Observable } from 'rxjs';
let TuiPreviewPaginationComponent = class TuiPreviewPaginationComponent {
    constructor(texts$) {
        this.texts$ = texts$;
        this.length = 1;
        this.index = 0;
        this.indexChange = new EventEmitter();
    }
    get leftButtonDisabled() {
        return this.index === 0;
    }
    get rightButtonDisabled() {
        return this.index === this.length - 1;
    }
    onArrowClick(step) {
        this.updateIndex(clamp(this.index + step, 0, this.length - 1));
    }
    updateIndex(index) {
        if (this.index === index) {
            return;
        }
        this.index = index;
        this.indexChange.emit(index);
    }
};
TuiPreviewPaginationComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_PAGINATION_TEXTS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPreviewPaginationComponent.prototype, "length", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPreviewPaginationComponent.prototype, "index", void 0);
__decorate([
    Output()
], TuiPreviewPaginationComponent.prototype, "indexChange", void 0);
__decorate([
    HostListener('document:keydown.arrowRight.prevent', ['1']),
    HostListener('document:keydown.arrowLeft.prevent', ['-1'])
], TuiPreviewPaginationComponent.prototype, "onArrowClick", null);
TuiPreviewPaginationComponent = __decorate([
    Component({
        selector: 'tui-preview-pagination',
        template: "<ng-container *ngIf=\"texts$ | async as texts\">\n    <button\n        tuiIconButton\n        tuiPreviewAction\n        icon=\"tuiIconArrowLeft\"\n        class=\"t-arrow_left\"\n        [title]=\"texts[0]\"\n        [disabled]=\"leftButtonDisabled\"\n        (click)=\"onArrowClick(-1)\"\n    ></button>\n    {{ index + 1 }}/{{ length }}\n    <button\n        tuiIconButton\n        tuiPreviewAction\n        icon=\"tuiIconArrowRight\"\n        class=\"t-arrow_right\"\n        [title]=\"texts[1]\"\n        [disabled]=\"rightButtonDisabled\"\n        (click)=\"onArrowClick(1)\"\n    ></button>\n</ng-container>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{border-radius:1rem;background:rgba(104,104,104,.96);color:var(--tui-text-01-night);font:var(--tui-font-text-s);display:flex;justify-content:space-between;align-items:center;width:6.25rem}.t-arrow_left{border-top-right-radius:0;border-bottom-right-radius:0}.t-arrow_right{border-top-left-radius:0;border-bottom-left-radius:0}"]
    }),
    __param(0, Inject(TUI_PAGINATION_TEXTS))
], TuiPreviewPaginationComponent);
export { TuiPreviewPaginationComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmlldy1wYWdpbmF0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9hZGRvbi1wcmV2aWV3L2NvbXBvbmVudHMvcHJldmlldy8iLCJzb3VyY2VzIjpbInBhZ2luYXRpb24vcHJldmlldy1wYWdpbmF0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsS0FBSyxFQUFFLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVwRCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQVFoQyxJQUFhLDZCQUE2QixHQUExQyxNQUFhLDZCQUE2QjtJQVl0QyxZQUVhLE1BQTZDO1FBQTdDLFdBQU0sR0FBTixNQUFNLENBQXVDO1FBWDFELFdBQU0sR0FBRyxDQUFDLENBQUM7UUFJWCxVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBR0QsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO0lBSy9DLENBQUM7SUFFSixJQUFJLGtCQUFrQjtRQUNsQixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLG1CQUFtQjtRQUNuQixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUlELFlBQVksQ0FBQyxJQUFZO1FBQ3JCLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUVPLFdBQVcsQ0FBQyxLQUFhO1FBQzdCLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLEVBQUU7WUFDdEIsT0FBTztTQUNWO1FBRUQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNKLENBQUE7O1lBekJ3QixVQUFVLHVCQUQxQixNQUFNLFNBQUMsb0JBQW9COztBQVZoQztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTs2REFDTjtBQUlYO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFOzREQUNQO0FBR1Y7SUFEQyxNQUFNLEVBQUU7a0VBQ3lDO0FBaUJsRDtJQUZDLFlBQVksQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFELFlBQVksQ0FBQyxvQ0FBb0MsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO2lFQUcxRDtBQTdCUSw2QkFBNkI7SUFOekMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHdCQUF3QjtRQUNsQyxtbkJBQWlEO1FBRWpELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNsRCxDQUFDO0lBY08sV0FBQSxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQTtHQWJ4Qiw2QkFBNkIsQ0F1Q3pDO1NBdkNZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBIb3N0TGlzdGVuZXIsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge2NsYW1wLCB0dWlEZWZhdWx0UHJvcH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge0xhbmd1YWdlS2l0fSBmcm9tICdAdGFpZ2EtdWkvaTE4bic7XG5pbXBvcnQge1RVSV9QQUdJTkFUSU9OX1RFWFRTfSBmcm9tICdAdGFpZ2EtdWkva2l0JztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByZXZpZXctcGFnaW5hdGlvbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3ByZXZpZXctcGFnaW5hdGlvbi50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcmV2aWV3LXBhZ2luYXRpb24uc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQcmV2aWV3UGFnaW5hdGlvbkNvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGxlbmd0aCA9IDE7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaW5kZXggPSAwO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcmVhZG9ubHkgaW5kZXhDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9QQUdJTkFUSU9OX1RFWFRTKVxuICAgICAgICByZWFkb25seSB0ZXh0cyQ6IE9ic2VydmFibGU8TGFuZ3VhZ2VLaXRbJ3BhZ2luYXRpb24nXT4sXG4gICAgKSB7fVxuXG4gICAgZ2V0IGxlZnRCdXR0b25EaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5kZXggPT09IDA7XG4gICAgfVxuXG4gICAgZ2V0IHJpZ2h0QnV0dG9uRGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZGV4ID09PSB0aGlzLmxlbmd0aCAtIDE7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6a2V5ZG93bi5hcnJvd1JpZ2h0LnByZXZlbnQnLCBbJzEnXSlcbiAgICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duLmFycm93TGVmdC5wcmV2ZW50JywgWyctMSddKVxuICAgIG9uQXJyb3dDbGljayhzdGVwOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGVJbmRleChjbGFtcCh0aGlzLmluZGV4ICsgc3RlcCwgMCwgdGhpcy5sZW5ndGggLSAxKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGVJbmRleChpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmluZGV4ID09PSBpbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5pbmRleCA9IGluZGV4O1xuICAgICAgICB0aGlzLmluZGV4Q2hhbmdlLmVtaXQoaW5kZXgpO1xuICAgIH1cbn1cbiJdfQ==