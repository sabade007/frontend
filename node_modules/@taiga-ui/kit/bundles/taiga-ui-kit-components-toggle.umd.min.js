!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@taiga-ui/cdk"),require("@taiga-ui/core"),require("@angular/common"),require("@tinkoff/ng-polymorpheus")):"function"==typeof define&&define.amd?define("@taiga-ui/kit/components/toggle",["exports","@angular/core","@angular/forms","@taiga-ui/cdk","@taiga-ui/core","@angular/common","@tinkoff/ng-polymorpheus"],t):t(((e=e||self)["taiga-ui"]=e["taiga-ui"]||{},e["taiga-ui"].kit=e["taiga-ui"].kit||{},e["taiga-ui"].kit.components=e["taiga-ui"].kit.components||{},e["taiga-ui"].kit.components.toggle={}),e.ng.core,e.ng.forms,e.cdk,e.core$1,e.ng.common,e.ngPolymorpheus)}(this,(function(e,t,o,n,r,i,a){"use strict";var c=function(e,t){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};var s=function(){return(s=Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++)for(var r in t=arguments[o])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function l(e,t,o,n){var r,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,n);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(a=(i<3?r(a):i>3?r(t,o,a):r(t,o))||a);return i>3&&a&&Object.defineProperty(t,o,a),a}function u(e,t){return function(o,n){t(o,n,e)}}Object.create;Object.create;var d={icons:{toggleOff:function(e){return"m"===e.$implicit?"tuiIconToggleOff":"tuiIconToggleOffLarge"},toggleOn:function(e){return"m"===e.$implicit?"tuiIconToggleOn":"tuiIconToggleOnLarge"}},singleColor:!1,showIcons:!1,size:"m"},p=new t.InjectionToken("Default parameters for toggle component",{factory:function(){return d}}),h=function(e){function i(t,o,n,r){var i=e.call(this,t,o)||this;return i.modeDirective=n,i.options=r,i.singleColor=i.options.singleColor,i.showIcons=i.options.showIcons,i.showLoader=!1,i.size=i.options.size,i}var a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(i,e),a=i,Object.defineProperty(i.prototype,"iconOn",{get:function(){return this.options.icons.toggleOn},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"iconOff",{get:function(){return this.options.icons.toggleOff},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"nativeFocusableElement",{get:function(){return this.focusableElement?this.focusableElement.nativeElement:null},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"focused",{get:function(){return n.isNativeFocused(this.nativeFocusableElement)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"appearance",{get:function(){return this.singleColor||this.checked?"primary":"secondary"},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"sizeM",{get:function(){return"m"===this.size},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"checked",{get:function(){return this.value},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"loaderSize",{get:function(){return this.sizeM?"xs":"s"},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hostMode",{get:function(){return this.modeDirective?this.modeDirective.mode:null},enumerable:!0,configurable:!0}),i.prototype.onChecked=function(e){this.updateValue(e)},i.prototype.onFocused=function(e){this.updateFocused(e)},i.prototype.onHovered=function(e){this.updateHovered(e)},i.prototype.onPressed=function(e){this.updatePressed(e)},i.prototype.onFocusVisible=function(e){this.updateFocusVisible(e)},i.prototype.getFallbackValue=function(){return!1},i.ctorParameters=function(){return[{type:o.NgControl,decorators:[{type:t.Optional},{type:t.Self},{type:t.Inject,args:[o.NgControl]}]},{type:t.ChangeDetectorRef,decorators:[{type:t.Inject,args:[t.ChangeDetectorRef]}]},{type:r.TuiModeDirective,decorators:[{type:t.Optional},{type:t.Inject,args:[r.TuiModeDirective]}]},{type:void 0,decorators:[{type:t.Inject,args:[p]}]}]},l([t.ViewChild("focusableElement")],i.prototype,"focusableElement",void 0),l([t.Input(),n.tuiDefaultProp()],i.prototype,"singleColor",void 0),l([t.Input(),n.tuiDefaultProp()],i.prototype,"showIcons",void 0),l([t.Input(),n.tuiDefaultProp()],i.prototype,"showLoader",void 0),l([t.Input(),t.HostBinding("attr.data-size"),n.tuiDefaultProp()],i.prototype,"size",void 0),l([t.HostBinding("class._checked")],i.prototype,"checked",null),l([t.HostBinding("attr.data-mode")],i.prototype,"hostMode",null),i=a=l([t.Component({selector:"tui-toggle",template:'<tui-wrapper\n    [appearance]="appearance"\n    [readOnly]="readOnly"\n    [disabled]="computedDisabled"\n    [focused]="computedFocusVisible"\n    [hovered]="computedHovered"\n    [pressed]="computedPressed"\n    [invalid]="computedInvalid"\n>\n    <div class="t-toggle">\n        <tui-loader\n            *ngIf="showLoader"\n            class="t-loader"\n            [size]="loaderSize"\n            [inheritColor]="true"\n            [showLoader]="checked"\n        ></tui-loader>\n        <span\n            polymorpheus-outlet\n            class="t-icon-wrapper"\n            [content]="iconOn"\n            [context]="{$implicit: size}"\n        >\n            <ng-template let-icon>\n                <tui-svg\n                    *ngIf="showIcons && !showLoader"\n                    automation-id="tui-toggle__check-icon"\n                    class="t-icon"\n                    [src]="icon"\n                ></tui-svg>\n            </ng-template>\n        </span>\n        <div class="t-circle"></div>\n        <tui-loader\n            *ngIf="showLoader"\n            class="t-loader"\n            [size]="loaderSize"\n            [inheritColor]="true"\n            [showLoader]="!checked"\n        ></tui-loader>\n        <span\n            polymorpheus-outlet\n            class="t-icon-wrapper"\n            [content]="iconOff"\n            [context]="{$implicit: size}"\n        >\n            <ng-template let-icon>\n                <tui-svg\n                    *ngIf="showIcons && !showLoader"\n                    automation-id="tui-toggle__cancel-icon"\n                    class="t-icon t-icon_off"\n                    [src]="icon"\n                ></tui-svg>\n            </ng-template>\n        </span>\n    </div>\n    <input\n        #focusableElement\n        type="checkbox"\n        role="switch"\n        automation-id="tui-toggle__checkbox"\n        class="t-checkbox"\n        [attr.aria-checked]="value"\n        [id]="id"\n        [disabled]="disabled"\n        [tuiChecked]="checked"\n        [tuiFocusable]="focusable"\n        (tuiCheckedChange)="onChecked($event)"\n        (tuiFocusedChange)="onFocused($event)"\n        (tuiHoveredChange)="onHovered($event)"\n        (tuiPressedChange)="onPressed($event)"\n        (tuiFocusVisibleChange)="onFocusVisible($event)"\n    />\n</tui-wrapper>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:n.TUI_FOCUSABLE_ITEM_ACCESSOR,useExisting:t.forwardRef((function(){return a}))}],styles:[":host{position:relative;display:inline-block;vertical-align:middle;overflow:hidden;border-radius:6.25rem}:host[data-size='m']{width:2rem;height:1rem}:host[data-size='l']{width:3rem;height:1.5rem}.t-checkbox{padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.t-checkbox:-webkit-autofill,.t-checkbox:-webkit-autofill:focus,.t-checkbox:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host._disabled .t-checkbox{pointer-events:none;cursor:default}.t-toggle{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center}:host[data-size='m'] .t-toggle{width:3rem;height:1rem;transform:translateX(-1rem)}:host[data-size='l'] .t-toggle{width:4.5rem;height:1.5rem;transform:translateX(-1.5rem)}:host._checked .t-toggle{transform:translateX(0)}.t-circle{margin:.125rem 0;flex-shrink:0;border-radius:100%;background-color:var(--tui-base-01)}:host._disabled .t-circle_light{opacity:.24}:host[data-size='m'] .t-circle{width:.75rem;height:.75rem}:host[data-size='l'] .t-circle{width:1rem;height:1rem}:host._disabled .t-circle{background-color:var(--tui-base-01)}:host:not(._checked) .t-loader{color:var(--tui-base-06)}:host:not(._checked)._disabled .t-loader{color:var(--tui-base-05)}:host:not(._checked)[data-mode=onDark] .t-loader{color:var(--tui-text-03-night)}:host:not(._checked)[data-mode=onDark]._disabled .t-loader{color:var(--tui-clear-inverse-active)}:host:not(._checked)[data-mode=onLight] .t-loader{color:var(--tui-text-03)}:host:not(._checked)[data-mode=onLight]._disabled .t-loader{color:var(--tui-clear-active)}:host[data-size='m'] .t-loader{width:.75rem;margin:0 .2rem;transform:scale(.75)}:host[data-size='l'] .t-loader{width:1rem;margin:0 .25rem}.t-icon-wrapper{display:flex}.t-icon{opacity:.8}.t-icon_off{color:var(--tui-base-06)}:host._disabled .t-icon_off{color:var(--tui-base-05)}:host[data-mode=onDark] .t-icon_off{color:var(--tui-text-03-night)}:host[data-mode=onDark]._disabled .t-icon_off{color:var(--tui-clear-inverse-active)}:host[data-mode=onLight] .t-icon_off{color:var(--tui-text-03)}:host[data-mode=onLight]._disabled .t-icon_off{color:var(--tui-clear-active)}:host[data-size='m'] .t-icon{width:1rem;height:1rem;transform:scale(.75)}:host[data-size='l'] .t-icon{margin:0 .125rem;width:1.5rem;height:1.5rem}:host:hover .t-icon{opacity:1}"]}),u(0,t.Optional()),u(0,t.Self()),u(0,t.Inject(o.NgControl)),u(1,t.Inject(t.ChangeDetectorRef)),u(2,t.Optional()),u(2,t.Inject(r.TuiModeDirective)),u(3,t.Inject(p))],i)}(n.AbstractTuiControl),g=function(){function e(){}return e=l([t.NgModule({imports:[i.CommonModule,n.TuiFocusedModule,n.TuiFocusableModule,n.TuiHoveredModule,n.TuiPressedModule,n.TuiFocusVisibleModule,n.TuiCheckedModule,r.TuiWrapperModule,r.TuiSvgModule,r.TuiLoaderModule,a.PolymorpheusModule],declarations:[h],exports:[h]})],e)}();e.TUI_TOGGLE_DEFAULT_OPTIONS=d,e.TUI_TOGGLE_OPTIONS=p,e.TuiToggleComponent=h,e.TuiToggleModule=g,e.tuiToggleOptionsProvider=function(e){return{provide:p,useValue:s(s({},d),e)}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-kit-components-toggle.umd.min.js.map