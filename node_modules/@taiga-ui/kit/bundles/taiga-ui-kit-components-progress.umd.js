(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@taiga-ui/cdk'), require('@ng-web-apis/common'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/progress', ['exports', '@angular/common', '@angular/core', '@taiga-ui/cdk', '@ng-web-apis/common', 'rxjs', 'rxjs/operators'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].kit = global['taiga-ui'].kit || {}, global['taiga-ui'].kit.components = global['taiga-ui'].kit.components || {}, global['taiga-ui'].kit.components.progress = {}), global.ng.common, global.ng.core, global.cdk, global.common$1, global.rxjs, global.rxjs.operators));
}(this, (function (exports, common, core, cdk, common$1, rxjs, operators) { 'use strict';

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.push(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.push(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    function __runInitializers(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    function __propKey(x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    function __setFunctionName(f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    var __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    function __exportStar(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function __classPrivateFieldIn(state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    }

    var TuiProgressBarComponent = /** @class */ (function () {
        function TuiProgressBarComponent() {
            this.size = 'm';
        }
        __decorate([
            core.Input(),
            core.HostBinding('style.--tui-progress-color')
        ], TuiProgressBarComponent.prototype, "color", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('attr.data-size'),
            cdk.tuiDefaultProp()
        ], TuiProgressBarComponent.prototype, "size", void 0);
        TuiProgressBarComponent = __decorate([
            core.Component({
                selector: 'progress[tuiProgressBar]',
                template: '',
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;color:var(--tui-progress-color,currentColor);background-color:var(--tui-base-03);display:block;width:100%;color:var(--tui-primary);border-radius:var(--tui-radius-xs);overflow:hidden}:host::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear;background:var(--tui-progress-color,currentColor)}:host::-moz-progress-bar{background:var(--tui-progress-color,currentColor)}:host::-webkit-progress-bar{background-color:var(--tui-base-03)}:host[data-size='m']{height:1.5rem}:host[data-size='s']{border-radius:var(--tui-radius-xs);height:.5rem}:host[data-size='s']::-webkit-progress-value{border-radius:var(--tui-radius-xs)}:host[data-size='s']::-moz-progress-bar{border-radius:var(--tui-radius-xs)}:host-context(label[tuiProgressLabel]):not(:first-child){position:absolute;top:0;left:0;width:100%;height:100%;background-color:transparent}:host-context(label[tuiProgressLabel]):not(:first-child)::-webkit-progress-bar{background-color:transparent}"]
            })
        ], TuiProgressBarComponent);
        return TuiProgressBarComponent;
    }());

    /**
     * TODO: 3.0 move inside {@link TuiProgressColorSegmentsDirective} (as a private method)
     * (after deletion of {@link TuiProgressColorSegmentsPipe} and {@link TuiProgressColorSegmentsAsyncPipe})
     */
    var calculateColorSegments = function (colors, progressWidth) {
        var segmentWidth = Math.ceil(progressWidth / colors.length);
        var colorsString = colors.reduce(function (acc, color, i) {
            return acc + ", " + color + " " + cdk.px(i * segmentWidth) + " " + cdk.px((i + 1) * segmentWidth);
        }, "");
        return "linear-gradient(to right " + colorsString + ")";
    };

    var TuiProgressColorSegmentsDirective = /** @class */ (function () {
        function TuiProgressColorSegmentsDirective(elementRef, resize$, userAgent) {
            this.elementRef = elementRef;
            this.resize$ = resize$;
            this.userAgent = userAgent;
            this.isOldBrowsers = cdk.isEdgeOlderThan(cdk.CHROMIUM_EDGE_START_VERSION, this.userAgent) ||
                cdk.isIE(this.userAgent);
            this.colors = [];
        }
        Object.defineProperty(TuiProgressColorSegmentsDirective.prototype, "calcSegments$", {
            get: function () {
                var _this = this;
                return this.resize$.pipe(operators.map(function () {
                    return _this.isOldBrowsers
                        ? _this.colors[0]
                        : calculateColorSegments(_this.colors, _this.elementRef.nativeElement.offsetWidth);
                }));
            },
            enumerable: true,
            configurable: true
        });
        TuiProgressColorSegmentsDirective.ctorParameters = function () { return [
            { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
            { type: rxjs.Observable, decorators: [{ type: core.Inject, args: [cdk.TuiResizeService,] }] },
            { type: String, decorators: [{ type: core.Inject, args: [common$1.USER_AGENT,] }] }
        ]; };
        __decorate([
            core.Input('tuiProgressColorSegments')
        ], TuiProgressColorSegmentsDirective.prototype, "colors", void 0);
        __decorate([
            cdk.tuiPure
        ], TuiProgressColorSegmentsDirective.prototype, "calcSegments$", null);
        TuiProgressColorSegmentsDirective = __decorate([
            core.Directive({
                selector: 'progress[tuiProgressBar][tuiProgressColorSegments]',
                host: {
                    '[$.style.--tui-progress-color]': 'calcSegments$',
                    '($.style.--tui-progress-color)': '0',
                },
                providers: [cdk.TuiDestroyService, cdk.TuiResizeService],
            }),
            __param(0, core.Inject(core.ElementRef)),
            __param(1, core.Inject(cdk.TuiResizeService)),
            __param(2, core.Inject(common$1.USER_AGENT))
        ], TuiProgressColorSegmentsDirective);
        return TuiProgressColorSegmentsDirective;
    }());

    // @dynamic
    var TuiProgressCircleComponent = /** @class */ (function () {
        function TuiProgressCircleComponent(userAgent, win, el) {
            this.userAgent = userAgent;
            this.win = win;
            this.el = el;
            this.value = 0;
            this.max = 1;
            this.color = null;
            this.size = 'm';
            this.animationDelay$ = rxjs.of(true).pipe(operators.delay(0));
        }
        Object.defineProperty(TuiProgressCircleComponent.prototype, "progressPercentage", {
            get: function () {
                return this.value / this.max;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiProgressCircleComponent.prototype, "oldEdgeRadiusFallback", {
            get: function () {
                if (!cdk.tuiIsEdgeOlderThan(cdk.CHROMIUM_EDGE_START_VERSION, this.userAgent)) {
                    return null;
                }
                var strokeWidth = parseInt(this.win.getComputedStyle(this.progressCircle.nativeElement).strokeWidth, 10);
                return (this.el.nativeElement.offsetWidth - strokeWidth) / 2;
            },
            enumerable: true,
            configurable: true
        });
        TuiProgressCircleComponent.ctorParameters = function () { return [
            { type: String, decorators: [{ type: core.Inject, args: [common$1.USER_AGENT,] }] },
            { type: Window, decorators: [{ type: core.Inject, args: [common$1.WINDOW,] }] },
            { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] }
        ]; };
        __decorate([
            core.ViewChild('progressCircle', { static: true })
        ], TuiProgressCircleComponent.prototype, "progressCircle", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiProgressCircleComponent.prototype, "value", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiProgressCircleComponent.prototype, "max", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('style.--tui-progress-color'),
            cdk.tuiDefaultProp()
        ], TuiProgressCircleComponent.prototype, "color", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('attr.data-size'),
            cdk.tuiDefaultProp()
        ], TuiProgressCircleComponent.prototype, "size", void 0);
        __decorate([
            core.HostBinding('style.--progress-percentage')
        ], TuiProgressCircleComponent.prototype, "progressPercentage", null);
        TuiProgressCircleComponent = __decorate([
            core.Component({
                selector: 'tui-progress-circle',
                template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<svg\n    height=\"100%\"\n    width=\"100%\"\n    aria-hidden=\"true\"\n    class=\"t-svg\"\n>\n    <circle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-track\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n\n    <circle\n        #progressCircle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-progress\"\n        [class.t-progress_filled]=\"animationDelay$ | async\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n</svg>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{position:relative;display:block;color:var(--tui-primary);transform:rotate(-90deg);transform-origin:center;font-size:1rem}:host[data-size='s']{width:2em;height:2em}:host[data-size='s'] .t-track{\n  r: 0.75em;\n  stroke-width:.5em}:host[data-size='s'] .t-progress{\n  r: 0.75em;\n  stroke-width:.5em;stroke-dasharray:4.71238898em;stroke-dashoffset:4.71238898em}:host[data-size='s'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(4.71238898em - var(--progress-percentage) * 4.71238898em)}:host[data-size='m']{width:3em;height:3em}:host[data-size='m'] .t-track{\n  r: 1.3125em;\n  stroke-width:.375em}:host[data-size='m'] .t-progress{\n  r: 1.3125em;\n  stroke-width:.375em;stroke-dasharray:8.24668072em;stroke-dashoffset:8.24668072em}:host[data-size='m'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(8.24668072em - var(--progress-percentage) * 8.24668072em)}:host[data-size='l']{width:4em;height:4em}:host[data-size='l'] .t-track{\n  r: 1.8125em;\n  stroke-width:.375em}:host[data-size='l'] .t-progress{\n  r: 1.8125em;\n  stroke-width:.375em;stroke-dasharray:11.38827337em;stroke-dashoffset:11.38827337em}:host[data-size='l'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(11.38827337em - var(--progress-percentage) * 11.38827337em)}:host[data-size=xl]{width:7em;height:7em}:host[data-size=xl] .t-track{\n  r: 3.3125em;\n  stroke-width:.375em}:host[data-size=xl] .t-progress{\n  r: 3.3125em;\n  stroke-width:.375em;stroke-dasharray:20.81305133em;stroke-dashoffset:20.81305133em}:host[data-size=xl] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(20.81305133em - var(--progress-percentage) * 20.81305133em)}.t-track{fill:transparent;stroke:var(--tui-base-03)}.t-progress{fill:transparent;stroke:var(--tui-progress-color,currentColor);stroke-linecap:round}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}"]
            }),
            __param(0, core.Inject(common$1.USER_AGENT)),
            __param(1, core.Inject(common$1.WINDOW)),
            __param(2, core.Inject(core.ElementRef))
        ], TuiProgressCircleComponent);
        return TuiProgressCircleComponent;
    }());

    var TuiProgressLabelComponent = /** @class */ (function () {
        function TuiProgressLabelComponent() {
        }
        TuiProgressLabelComponent = __decorate([
            core.Component({
                selector: 'label[tuiProgressLabel]',
                template: "<ng-content select=\"progress\"></ng-content>\n<ng-content select=\"tui-progress-circle\"></ng-content>\n<span class=\"t-label\">\n    <ng-content></ng-content>\n</span>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{position:relative;display:inline-block}.t-label{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;font:var(--tui-font-text-s);color:var(--tui-text-01);flex-direction:column;justify-content:center;align-items:center}"]
            })
        ], TuiProgressLabelComponent);
        return TuiProgressLabelComponent;
    }());

    // eslint-disable-next-line @typescript-eslint/naming-convention
    function nonNegativeInt(value) {
        return Number.isInteger(value) && value >= 0;
    }
    // eslint-disable-next-line @typescript-eslint/naming-convention
    function positiveInt(value) {
        return Number.isInteger(value) && value > 0;
    }
    var TuiProgressSegmentedComponent = /** @class */ (function () {
        function TuiProgressSegmentedComponent() {
            this.value = 0;
            this.max = 1;
            this.size = 'm';
            this.colors = 'var(--tui-primary)';
        }
        TuiProgressSegmentedComponent.prototype.getActiveColor = function (index) {
            if (index === void 0) { index = 0; }
            return typeof this.colors === 'string'
                ? this.colors
                : this.colors[index] || this.colors[this.colors.length - 1];
        };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp(nonNegativeInt, 'Must be non-negative integer between 0 and max')
        ], TuiProgressSegmentedComponent.prototype, "value", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp(positiveInt, 'Must be positive integer')
        ], TuiProgressSegmentedComponent.prototype, "max", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('attr.data-size')
        ], TuiProgressSegmentedComponent.prototype, "size", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiProgressSegmentedComponent.prototype, "colors", void 0);
        TuiProgressSegmentedComponent = __decorate([
            core.Component({
                selector: 'tui-progress-segmented',
                template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<span\n    *tuiRepeatTimes=\"let index of max\"\n    aria-hidden=\"true\"\n    class=\"t-segment\"\n    [style.background]=\"index < value ? getActiveColor(index) : null\"\n></span>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{display:flex}.t-segment{transition-property:background-color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;flex:1 1 100%;border-radius:var(--tui-radius-xs);background-color:var(--tui-base-03)}.t-segment:not(:last-child){margin-right:.25rem}:host[data-size='s'] .t-segment{height:.25rem}:host[data-size='m'] .t-segment{height:.5rem}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}"]
            })
        ], TuiProgressSegmentedComponent);
        return TuiProgressSegmentedComponent;
    }());

    // TODO: 3.0 delete
    var AbstractTuiColorSegments = /** @class */ (function () {
        function AbstractTuiColorSegments(userAgent, elementRef) {
            this.userAgent = userAgent;
            this.elementRef = elementRef;
            this.isOldBrowsers = cdk.isEdgeOlderThan(cdk.CHROMIUM_EDGE_START_VERSION, this.userAgent) ||
                cdk.isIE(this.userAgent);
        }
        AbstractTuiColorSegments.prototype.calculate = function (colors) {
            if (this.isOldBrowsers) {
                return colors[0];
            }
            var elementWidth = this.elementRef.nativeElement.offsetWidth;
            return calculateColorSegments(colors, elementWidth);
        };
        AbstractTuiColorSegments.ctorParameters = function () { return [
            { type: String, decorators: [{ type: core.Inject, args: [common$1.USER_AGENT,] }] },
            { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] }
        ]; };
        AbstractTuiColorSegments = __decorate([
            core.Injectable(),
            __param(0, core.Inject(common$1.USER_AGENT)),
            __param(1, core.Inject(core.ElementRef))
        ], AbstractTuiColorSegments);
        return AbstractTuiColorSegments;
    }());

    // TODO: 3.0 delete
    var TuiProgressColorSegmentsPipe = /** @class */ (function (_super) {
        __extends(TuiProgressColorSegmentsPipe, _super);
        function TuiProgressColorSegmentsPipe() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * @deprecated use tuiProgressColorSegments directive instead
         * {@link TuiProgressColorSegmentsDirective}
         * @example: `<progress tuiProgressBar [tuiProgressColorSegments]="colors">`
         */
        TuiProgressColorSegmentsPipe.prototype.transform = function (colors) {
            return this.calculate(colors);
        };
        TuiProgressColorSegmentsPipe = __decorate([
            core.Pipe({ name: "tuiProgressColorSegments" })
        ], TuiProgressColorSegmentsPipe);
        return TuiProgressColorSegmentsPipe;
    }(AbstractTuiColorSegments));

    // TODO: 3.0 delete
    var TuiProgressColorSegmentsAsyncPipe = /** @class */ (function (_super) {
        __extends(TuiProgressColorSegmentsAsyncPipe, _super);
        function TuiProgressColorSegmentsAsyncPipe() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * @deprecated use tuiProgressColorSegments directive instead
         * {@link TuiProgressColorSegmentsDirective}
         * @example: `<progress tuiProgressBar [tuiProgressColorSegments]="colors">`
         */
        TuiProgressColorSegmentsAsyncPipe.prototype.transform = function (colors) {
            var _this = this;
            return rxjs.timer(0).pipe(operators.map(function () { return _this.calculate(colors); }));
        };
        TuiProgressColorSegmentsAsyncPipe = __decorate([
            core.Pipe({ name: "tuiProgressColorSegmentsAsync" })
        ], TuiProgressColorSegmentsAsyncPipe);
        return TuiProgressColorSegmentsAsyncPipe;
    }(AbstractTuiColorSegments));

    var TuiProgressModule = /** @class */ (function () {
        function TuiProgressModule() {
        }
        TuiProgressModule = __decorate([
            core.NgModule({
                imports: [common.CommonModule, cdk.TuiRepeatTimesModule],
                declarations: [
                    TuiProgressBarComponent,
                    TuiProgressColorSegmentsDirective,
                    TuiProgressColorSegmentsPipe,
                    TuiProgressColorSegmentsAsyncPipe,
                    TuiProgressCircleComponent,
                    TuiProgressLabelComponent,
                    TuiProgressSegmentedComponent,
                ],
                exports: [
                    TuiProgressBarComponent,
                    TuiProgressCircleComponent,
                    TuiProgressColorSegmentsDirective,
                    TuiProgressColorSegmentsPipe,
                    TuiProgressColorSegmentsAsyncPipe,
                    TuiProgressLabelComponent,
                    TuiProgressSegmentedComponent,
                ],
            })
        ], TuiProgressModule);
        return TuiProgressModule;
    }());

    exports.AbstractTuiColorSegments = AbstractTuiColorSegments;
    exports.TuiProgressBarComponent = TuiProgressBarComponent;
    exports.TuiProgressCircleComponent = TuiProgressCircleComponent;
    exports.TuiProgressColorSegmentsAsyncPipe = TuiProgressColorSegmentsAsyncPipe;
    exports.TuiProgressColorSegmentsDirective = TuiProgressColorSegmentsDirective;
    exports.TuiProgressColorSegmentsPipe = TuiProgressColorSegmentsPipe;
    exports.TuiProgressLabelComponent = TuiProgressLabelComponent;
    exports.TuiProgressModule = TuiProgressModule;
    exports.TuiProgressSegmentedComponent = TuiProgressSegmentedComponent;
    exports.nonNegativeInt = nonNegativeInt;
    exports.positiveInt = positiveInt;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-kit-components-progress.umd.js.map
