!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@taiga-ui/cdk"),require("@taiga-ui/core"),require("@taiga-ui/kit/components/checkbox"),require("@angular/common")):"function"==typeof define&&define.amd?define("@taiga-ui/kit/components/checkbox-labeled",["exports","@angular/core","@angular/forms","@taiga-ui/cdk","@taiga-ui/core","@taiga-ui/kit/components/checkbox","@angular/common"],t):t(((e=e||self)["taiga-ui"]=e["taiga-ui"]||{},e["taiga-ui"].kit=e["taiga-ui"].kit||{},e["taiga-ui"].kit.components=e["taiga-ui"].kit.components||{},e["taiga-ui"].kit.components["checkbox-labeled"]={}),e.ng.core,e.ng.forms,e.cdk,e.core$1,e["taiga-ui"].kit.components.checkbox,e.ng.common)}(this,(function(e,t,o,n,r,i,a){"use strict";var c=function(e,t){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};function u(e,t,o,n){var r,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,n);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(a=(i<3?r(a):i>3?r(t,o,a):r(t,o))||a);return i>3&&a&&Object.defineProperty(t,o,a),a}function s(e,t){return function(o,n){t(o,n,e)}}Object.create;Object.create;var d=function(e){function a(t,o,n){var r=e.call(this,t,o)||this;return r.modeDirective=n,r.size="m",r}var d;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(a,e),d=a,Object.defineProperty(a.prototype,"focused",{get:function(){return n.isNativeFocused(this.nativeFocusableElement)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"nativeFocusableElement",{get:function(){return this.checkbox?this.checkbox.nativeFocusableElement:null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"hostMode",{get:function(){return this.modeDirective?this.modeDirective.mode:null},enumerable:!0,configurable:!0}),a.prototype.onFocused=function(e){this.updateFocused(e)},a.prototype.onHovered=function(e){this.updateHovered(e)},a.prototype.onPressed=function(e){this.updatePressed(e)},a.prototype.onModelChange=function(e){this.updateValue(e)},a.ctorParameters=function(){return[{type:o.NgControl,decorators:[{type:t.Optional},{type:t.Self},{type:t.Inject,args:[o.NgControl]}]},{type:t.ChangeDetectorRef,decorators:[{type:t.Inject,args:[t.ChangeDetectorRef]}]},{type:r.TuiModeDirective,decorators:[{type:t.Optional},{type:t.Inject,args:[r.TuiModeDirective]}]}]},u([t.ViewChild(i.TuiCheckboxComponent)],a.prototype,"checkbox",void 0),u([t.Input(),t.HostBinding("attr.data-size"),n.tuiDefaultProp()],a.prototype,"size",void 0),u([t.HostBinding("attr.data-mode")],a.prototype,"hostMode",null),a=d=u([t.Component({selector:"tui-checkbox-labeled",template:'<label\n    class="t-wrapper"\n    (tuiHoveredChange)="onHovered($event)"\n    (tuiPressedChange)="onPressed($event)"\n>\n    <tui-checkbox\n        [disabled]="computedDisabled"\n        [readOnly]="readOnly"\n        [focusable]="focusable"\n        [nativeId]="nativeId"\n        [pseudoInvalid]="computedInvalid"\n        [pseudoFocused]="pseudoFocused"\n        [pseudoHovered]="computedHovered"\n        [pseudoPressed]="computedPressed"\n        [size]="size"\n        [ngModel]="value"\n        (ngModelChange)="onModelChange($event)"\n        (focusedChange)="onFocused($event)"\n    ></tui-checkbox>\n    <div\n        class="t-content"\n        [class.t-content_disabled]="computedDisabled"\n    >\n        <ng-content></ng-content>\n    </div>\n</label>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:n.TUI_FOCUSABLE_ITEM_ACCESSOR,useExisting:t.forwardRef((function(){return d}))}],styles:[":host{position:relative;display:block;line-height:0}:host._disabled,:host._readonly{pointer-events:none}.t-wrapper{display:inline-flex;max-width:100%;cursor:pointer}:host._disabled .t-wrapper{cursor:default}:host[data-mode=onDark] .t-wrapper{color:var(--tui-text-01-night)}.t-content{font:var(--tui-font-text-s);line-height:1rem;word-wrap:break-word;min-width:0}.t-content_disabled{opacity:var(--tui-disabled-opacity)}:host[data-size='m'] .t-content{margin-left:.5rem}:host[data-size='l'] .t-content{font:var(--tui-font-text-m);margin-left:.75rem}"]}),s(0,t.Optional()),s(0,t.Self()),s(0,t.Inject(o.NgControl)),s(1,t.Inject(t.ChangeDetectorRef)),s(2,t.Optional()),s(2,t.Inject(r.TuiModeDirective))],a)}(n.AbstractTuiNullableControl),l=function(){function e(){}return e=u([t.NgModule({imports:[a.CommonModule,o.FormsModule,n.TuiHoveredModule,n.TuiPressedModule,i.TuiCheckboxModule],declarations:[d],exports:[d]})],e)}();e.TuiCheckboxLabeledComponent=d,e.TuiCheckboxLabeledModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-kit-components-checkbox-labeled.umd.min.js.map