!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@taiga-ui/cdk"),require("@taiga-ui/core"),require("@taiga-ui/kit/components/checkbox")):"function"==typeof define&&define.amd?define("@taiga-ui/kit/components/checkbox-block",["exports","@angular/core","@angular/forms","@taiga-ui/cdk","@taiga-ui/core","@taiga-ui/kit/components/checkbox"],t):t(((e=e||self)["taiga-ui"]=e["taiga-ui"]||{},e["taiga-ui"].kit=e["taiga-ui"].kit||{},e["taiga-ui"].kit.components=e["taiga-ui"].kit.components||{},e["taiga-ui"].kit.components["checkbox-block"]={}),e.ng.core,e.ng.forms,e.cdk,e.core$1,e["taiga-ui"].kit.components.checkbox)}(this,(function(e,t,o,n,i,r){"use strict";var a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};function c(e,t,o,n){var i,r=arguments.length,a=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,n);else for(var c=e.length-1;c>=0;c--)(i=e[c])&&(a=(r<3?i(a):r>3?i(t,o,a):i(t,o))||a);return r>3&&a&&Object.defineProperty(t,o,a),a}function s(e,t){return function(o,n){t(o,n,e)}}Object.create;Object.create;var d=function(e){function d(t,o,n){var i=e.call(this,t,o)||this;return i.modeDirective=n,i.contentAlign="right",i.hideCheckbox=!1,i.size="l",i}var u;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(d,e),u=d,Object.defineProperty(d.prototype,"nativeFocusableElement",{get:function(){return this.checkbox?this.checkbox.nativeFocusableElement:null},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"checked",{get:function(){return!1!==this.value&&this.hideCheckbox},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"checkboxSize",{get:function(){return"l"===this.size?"l":"m"},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"focused",{get:function(){return n.isNativeFocused(this.nativeFocusableElement)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"appearance",{get:function(){var e;return(null===(e=this.modeDirective)||void 0===e?void 0:e.mode)?this.checked?"primary":"secondary":this.checked?"whiteblock-active":"whiteblock"},enumerable:!0,configurable:!0}),d.prototype.onFocused=function(e){this.updateFocused(e)},d.prototype.onHovered=function(e){this.updateHovered(e)},d.prototype.onPressed=function(e){this.updatePressed(e)},d.prototype.onFocusVisible=function(e){this.updateFocusVisible(e)},d.prototype.onModelChange=function(e){this.updateValue(e)},d.ctorParameters=function(){return[{type:o.NgControl,decorators:[{type:t.Optional},{type:t.Self},{type:t.Inject,args:[o.NgControl]}]},{type:t.ChangeDetectorRef,decorators:[{type:t.Inject,args:[t.ChangeDetectorRef]}]},{type:i.TuiModeDirective,decorators:[{type:t.Optional},{type:t.Inject,args:[i.TuiModeDirective]}]}]},c([t.ViewChild(r.TuiCheckboxComponent)],d.prototype,"checkbox",void 0),c([t.Input(),t.HostBinding("attr.data-tui-host-align"),n.tuiDefaultProp()],d.prototype,"contentAlign",void 0),c([t.Input(),t.HostBinding("class._hidden_checkbox"),n.tuiDefaultProp()],d.prototype,"hideCheckbox",void 0),c([t.Input(),t.HostBinding("attr.data-size"),n.tuiDefaultProp()],d.prototype,"size",void 0),c([t.HostBinding("class._active")],d.prototype,"checked",null),d=u=c([t.Component({selector:"tui-checkbox-block",template:'<label\n    class="t-wrapper"\n    (tuiHoveredChange)="onHovered($event)"\n    (tuiPressedChange)="onPressed($event)"\n>\n    <tui-wrapper\n        [appearance]="appearance"\n        [disabled]="computedDisabled"\n        [focused]="computedFocusVisible"\n        [hovered]="computedHovered"\n        [pressed]="computedPressed"\n        [invalid]="computedInvalid"\n    >\n        <div class="t-content-wrapper">\n            <div class="t-content">\n                <tui-checkbox\n                    class="t-view"\n                    [disabled]="computedDisabled || readOnly"\n                    [nativeId]="nativeId"\n                    [pseudoInvalid]="computedInvalid"\n                    [pseudoFocused]="false"\n                    [pseudoHovered]="computedHovered"\n                    [pseudoPressed]="computedPressed"\n                    [size]="checkboxSize"\n                    [focusable]="focusable"\n                    [ngModel]="value"\n                    (ngModelChange)="onModelChange($event)"\n                    (focusedChange)="onFocused($event)"\n                    (focusVisibleChange)="onFocusVisible($event)"\n                ></tui-checkbox>\n                <div class="t-label">\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </div>\n    </tui-wrapper>\n</label>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:n.TUI_FOCUSABLE_ITEM_ACCESSOR,useExisting:t.forwardRef((function(){return u}))}],styles:[":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:inline-block;vertical-align:top;border-radius:var(--tui-radius-m)}:host[data-size='l'],:host[data-size='m']{font:var(--tui-font-text-m)}:host._disabled,:host._readonly{pointer-events:none}.t-wrapper{position:relative;border-radius:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.t-content-wrapper{display:flex;flex-direction:column}:host[data-size='s'] .t-content-wrapper{min-height:var(--tui-height-s)}:host[data-size='m'] .t-content-wrapper{min-height:var(--tui-height-m)}:host[data-size='l'] .t-content-wrapper{min-height:var(--tui-height-l)}.t-content{display:flex;align-items:center;min-height:inherit}:host[data-tui-host-align=right] .t-content{flex-direction:row-reverse}:host[data-size='s'] .t-content{padding:0 1rem 0 .5rem}:host[data-size='s'][data-tui-host-align=right] .t-content{padding:0 .5rem 0 1rem}:host[data-size='s']._hidden_checkbox .t-content{padding:0 1rem}:host[data-size='m'] .t-content{padding:0 1rem 0 .75rem}:host[data-size='m'][data-tui-host-align=right] .t-content{padding:0 .75rem 0 1rem}:host[data-size='m']._hidden_checkbox .t-content{padding:0 1.5rem}:host[data-size='l'] .t-content{padding:0 1rem}:host[data-size='l']._hidden_checkbox .t-content{padding:0 2.25rem}.t-view{margin-top:.75rem;margin-right:.75rem;align-self:flex-start}:host[data-tui-host-align=right] .t-view{margin-left:.75rem;margin-right:0}:host[data-size='s'] .t-view{margin-top:.5rem;margin-right:.5rem}:host[data-size='s'][data-tui-host-align=right] .t-view{margin-left:.5rem}:host[data-size='m'] .t-view{margin-top:.875rem}:host[data-size='l'] .t-view{margin-top:1rem}:host._hidden_checkbox .t-view{position:absolute;height:1px;width:1px;margin:-1px;border:0;padding:0;overflow:hidden;clip:rect(0,0,0,0);-webkit-clip-path:inset(0);clip-path:inset(0)}.t-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-grow:1}:host._hidden_checkbox .t-label{text-align:center}"]}),s(0,t.Optional()),s(0,t.Self()),s(0,t.Inject(o.NgControl)),s(1,t.Inject(t.ChangeDetectorRef)),s(2,t.Optional()),s(2,t.Inject(i.TuiModeDirective))],d)}(n.AbstractTuiNullableControl),u=function(){function e(){}return e=c([t.NgModule({imports:[o.FormsModule,n.TuiHoveredModule,n.TuiPressedModule,r.TuiCheckboxModule,i.TuiWrapperModule],declarations:[d],exports:[d]})],e)}();e.TuiCheckboxBlockComponent=d,e.TuiCheckboxBlockModule=u,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-kit-components-checkbox-block.umd.min.js.map