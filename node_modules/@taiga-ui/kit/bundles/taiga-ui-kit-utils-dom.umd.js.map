{"version":3,"file":"taiga-ui-kit-utils-dom.umd.js","sources":["ng://@taiga-ui/kit/utils/dom/get-word-range.ts","ng://@taiga-ui/kit/utils/dom/scroll-to-element.ts","ng://@taiga-ui/kit/utils/dom/set-range-offset.ts"],"sourcesContent":["import {CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_SPACE, svgNodeFilter} from '@taiga-ui/cdk';\n\n/**\n * @deprecated: use {@link tuiGetWordRange} instead\n * Creates a cloned range with its boundaries set at word boundaries\n *\n * @param currentRange a range to clone\n * @return modified range\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getWordRange(currentRange: Range): Range {\n    const range = currentRange.cloneRange();\n    const {startContainer, startOffset, endContainer, endOffset} = range;\n    const {ownerDocument} = startContainer;\n\n    if (!ownerDocument) {\n        return range;\n    }\n\n    const treeWalker = ownerDocument.createTreeWalker(\n        ownerDocument.body,\n        NodeFilter.SHOW_TEXT,\n        svgNodeFilter,\n        false,\n    );\n\n    treeWalker.currentNode = startContainer;\n\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content =\n            container === startContainer\n                ? textContent.slice(0, Math.max(0, startOffset + 1))\n                : textContent;\n        const offset =\n            Math.max(\n                content.lastIndexOf(` `),\n                content.lastIndexOf(CHAR_NO_BREAK_SPACE),\n                content.lastIndexOf(CHAR_ZERO_WIDTH_SPACE),\n            ) + 1;\n\n        range.setStart(container, 0);\n\n        if (offset) {\n            range.setStart(container, offset);\n            break;\n        }\n    } while (treeWalker.previousNode());\n\n    treeWalker.currentNode = endContainer;\n\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content =\n            container === endContainer ? textContent.slice(endOffset + 1) : textContent;\n        const offset = [\n            content.indexOf(` `),\n            content.indexOf(CHAR_NO_BREAK_SPACE),\n            content.indexOf(CHAR_ZERO_WIDTH_SPACE),\n        ].reduce(\n            (result, item) =>\n                result === -1 || item === -1\n                    ? Math.max(result, item)\n                    : Math.min(result, item),\n            -1,\n        );\n\n        range.setEnd(container, textContent.length);\n\n        if (offset !== -1) {\n            range.setEnd(container, offset + textContent.length - content.length);\n            break;\n        }\n    } while (treeWalker.nextNode());\n\n    return range;\n}\n\nexport const tuiGetWordRange = getWordRange;\n","/**\n * @deprecated: use {@link tuiScrollToElement} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function scrollToElement(element: HTMLElement, container: HTMLElement): void {\n    const scrolledWidth = container.offsetWidth + container.scrollLeft;\n    const elementWidth = element.offsetWidth;\n    const elementX =\n        container.scrollLeft +\n        element.getBoundingClientRect().left -\n        container.getBoundingClientRect().left;\n    const elementDidNotFitRight = elementX + elementWidth > scrolledWidth;\n    const elementDidNotFitLeft = container.scrollLeft > elementX;\n    const deltaXRight = elementX + elementWidth - scrolledWidth;\n    const deltaXLeft = elementX - container.scrollLeft;\n\n    if (elementDidNotFitRight) {\n        container.scrollLeft += deltaXRight;\n    }\n\n    if (elementDidNotFitLeft) {\n        container.scrollLeft += deltaXLeft;\n    }\n}\n\nexport const tuiScrollToElement = scrollToElement;\n","import {svgNodeFilter} from '@taiga-ui/cdk';\n\n/**\n * @deprecated: use {@link tuiSetRangeOffset} instead\n * Range.setStart/set-end, except it uses offset in characters only\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function setRangeOffset(\n    range: Range,\n    node: HTMLElement,\n    offset: number,\n    method: 'setEnd' | 'setStart',\n): void {\n    const {ownerDocument} = node;\n\n    if (!ownerDocument) {\n        return;\n    }\n\n    const treeWalker = ownerDocument.createTreeWalker(\n        node,\n        NodeFilter.SHOW_TEXT,\n        svgNodeFilter,\n        false,\n    );\n\n    treeWalker.currentNode = node;\n\n    while (treeWalker.nextNode()) {\n        if (treeWalker.currentNode.nodeType === Node.TEXT_NODE) {\n            const length = treeWalker.currentNode.nodeValue\n                ? treeWalker.currentNode.nodeValue.length\n                : 0;\n\n            if (offset > length) {\n                offset -= length;\n            } else {\n                range[method](treeWalker.currentNode, offset);\n            }\n        }\n    }\n}\n\nexport const tuiSetRangeOffset = setRangeOffset;\n"],"names":["svgNodeFilter","CHAR_NO_BREAK_SPACE","CHAR_ZERO_WIDTH_SPACE"],"mappings":"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"}