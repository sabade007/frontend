(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@angular/forms'), require('@taiga-ui/kit/constants'), require('@taiga-ui/kit/tokens'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/abstract', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core', '@angular/forms', '@taiga-ui/kit/constants', '@taiga-ui/kit/tokens', 'rxjs', 'rxjs/operators'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].kit = global['taiga-ui'].kit || {}, global['taiga-ui'].kit.abstract = {}), global.ng.core, global.cdk, global.core$1, global.ng.forms, global['taiga-ui'].kit.constants, global['taiga-ui'].kit.tokens, global.rxjs, global.rxjs.operators));
}(this, (function (exports, core, cdk, core$1, forms, constants, tokens, rxjs, operators) { 'use strict';

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.push(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.push(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    function __runInitializers(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    function __propKey(x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    function __setFunctionName(f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    var __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    function __exportStar(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function __classPrivateFieldIn(state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    }

    // eslint-disable-next-line @typescript-eslint/naming-convention
    function quantumAssertion(quantum) {
        return quantum > 0;
    }
    /**
     * @internal
     * @deprecated TODO: 3.0 delete me after `InputSlider` and `InputRange` stop using it
     */
    var AbstractTuiInputSlider = /** @class */ (function (_super) {
        __extends(AbstractTuiInputSlider, _super);
        function AbstractTuiInputSlider() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.min = 0;
            _this.max = Infinity;
            /**
             * @deprecated This input-property will be deleted in next major update.
             * Use `valueContent` for `InputSlider`.
             * Use `leftValueContent` for `InputRange`.
             * ___
             * TODO remove in v3.0.
             * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:
             *** {@link legacyMinMaxLabel}
             */
            _this.minLabel = "";
            /**
             * @deprecated This input-property will be deleted in next major update.
             * Use `valueContent` for `InputSlider`.
             * Use `rightValueContent` for `InputRange`.
             * ___
             * TODO remove in v3.0.
             * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:
             *** {@link legacyMinMaxLabel}
             */
            _this.maxLabel = "";
            _this.segments = 0;
            _this.steps = 0;
            _this.quantum = 1;
            _this.keySteps = null;
            /**
             * @deprecated use `tuiTextfieldSize` instead
             * TODO delete in v3.0
             */
            _this.size = "l";
            /**
             * @deprecated replace by input-property {@link pluralize} in v3.0
             */
            _this.pluralizeMap = null;
            /** @deprecated TODO remove in v3.0 */
            _this.segmentsPluralizeMap = null;
            /** @deprecated TODO remove in v3.0 */
            _this.pluralizeMapFallback = {
                one: "",
                few: "",
                many: "",
                other: "",
            };
            return _this;
        }
        Object.defineProperty(AbstractTuiInputSlider.prototype, "pluralize", {
            // TODO: remove setter in v3.0:
            set: function (pluralize) {
                this.pluralizeMap = Array.isArray(pluralize)
                    ? core$1.tuiPluralizeToICU(pluralize)
                    : pluralize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiInputSlider.prototype, "segmentsPluralize", {
            /**
             * @deprecated This input-property will be deleted in next major update.
             * You can create ticks labels below this input by yourself. It is easy!
             * Mixin `tui-slider-ticks-labels` will help with it. See examples in demo page `InputSlider`.
             * ___
             * TODO remove in v3.0.
             * Dont forget to delete:
             *** {@link segmentsPluralizeMap}
             *** {@link getTickPrefix}
             *** TuiFormatNumberPipeModule
             *** TuiRepeatTimesModule
             */
            set: function (pluralize) {
                this.segmentsPluralizeMap = Array.isArray(pluralize)
                    ? core$1.tuiPluralizeToICU(pluralize)
                    : pluralize;
            },
            enumerable: true,
            configurable: true
        });
        /** @deprecated TODO remove in v3.0 */
        AbstractTuiInputSlider.prototype.getTickPrefix = function (segment, segments, texts) {
            if (segments !== 1) {
                return "";
            }
            return segment === 0 ? "" + texts[0] : "" + texts[1];
        };
        Object.defineProperty(AbstractTuiInputSlider.prototype, "segmented", {
            get: function () {
                return this.segments > 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiInputSlider.prototype, "length", {
            get: function () {
                return this.max - this.min;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiInputSlider.prototype, "computedSteps", {
            get: function () {
                return this.steps || this.length / this.quantum;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiInputSlider.prototype, "step", {
            get: function () {
                return this.length / this.computedSteps;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiInputSlider.prototype, "computedKeySteps", {
            get: function () {
                return this.computePureKeySteps(this.keySteps, this.min, this.max);
            },
            enumerable: true,
            configurable: true
        });
        AbstractTuiInputSlider.prototype.onHovered = function (hovered) {
            this.updateHovered(hovered);
        };
        AbstractTuiInputSlider.prototype.computePureKeySteps = function (keySteps, min, max) {
            return __spread([[0, min]], (keySteps || []), [[100, max]]);
        };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "min", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "max", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "minLabel", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "maxLabel", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "pluralize", null);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "segmentsPluralize", null);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "segments", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "steps", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp(quantumAssertion, "Quantum must be positive")
        ], AbstractTuiInputSlider.prototype, "quantum", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "keySteps", void 0);
        __decorate([
            core.Input(),
            core.HostBinding("attr.data-size"),
            cdk.tuiDefaultProp()
        ], AbstractTuiInputSlider.prototype, "size", void 0);
        __decorate([
            cdk.tuiPure
        ], AbstractTuiInputSlider.prototype, "getTickPrefix", null);
        __decorate([
            core.HostBinding("class._segmented")
        ], AbstractTuiInputSlider.prototype, "segmented", null);
        __decorate([
            cdk.tuiPure
        ], AbstractTuiInputSlider.prototype, "computePureKeySteps", null);
        AbstractTuiInputSlider = __decorate([
            core.Directive()
        ], AbstractTuiInputSlider);
        return AbstractTuiInputSlider;
    }(cdk.AbstractTuiControl));

    var SLIDER_KEYBOARD_STEP = 0.05;
    var DOT_WIDTH = {
        s: 8,
        m: 16,
    };
    /**
     * @awful TODO: 3.0 remove
     * @internal
     * @dynamic
     */
    var AbstractTuiSlider = /** @class */ (function (_super) {
        __extends(AbstractTuiSlider, _super);
        function AbstractTuiSlider(ngControl, changeDetectorRef, documentRef, fromToTexts$) {
            var _this = _super.call(this, ngControl, changeDetectorRef) || this;
            _this.documentRef = documentRef;
            _this.fromToTexts$ = fromToTexts$;
            // @bad TODO: handle pointer events instead of mouse and touch events
            _this.pointerDown$ = new rxjs.Subject();
            _this.min = 0;
            _this.max = Infinity;
            _this.segments = 0;
            _this.steps = 0;
            _this.quantum = 0;
            _this.size = "m";
            _this.keySteps = null;
            _this.focusVisibleLeft = false;
            _this.focusVisibleRight = false;
            _this.pluralizeMap = null;
            return _this;
        }
        Object.defineProperty(AbstractTuiSlider.prototype, "pluralize", {
            // TODO: remove setter in v3.0:
            set: function (pluralize) {
                this.pluralizeMap = Array.isArray(pluralize)
                    ? core$1.tuiPluralizeToICU(pluralize)
                    : pluralize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "segmented", {
            get: function () {
                return this.segments > 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "discrete", {
            get: function () {
                return this.steps > 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "length", {
            get: function () {
                return this.max - this.min;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "computedStep", {
            get: function () {
                if (this.steps) {
                    return 1 / this.steps;
                }
                return this.quantum ? this.quantum / this.length : SLIDER_KEYBOARD_STEP;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "isLeftFocusable", {
            get: function () {
                return !this.disabled && this.focusable && this.right !== 100;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AbstractTuiSlider.prototype, "isRightFocusable", {
            get: function () {
                return !this.disabled && this.focusable && this.left !== 100;
            },
            enumerable: true,
            configurable: true
        });
        AbstractTuiSlider.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            var mouseMoves$ = cdk.typedFromEvent(this.documentRef, "mousemove");
            var mouseUps$ = cdk.typedFromEvent(this.documentRef, "mouseup");
            var touchMoves$ = cdk.typedFromEvent(this.documentRef, "touchmove");
            var touchEnds$ = cdk.typedFromEvent(this.documentRef, "touchend");
            var isPointerDownRight;
            this.pointerDown$
                .pipe(operators.map(function (event) {
                cdk.tuiAssertIsHTMLElement(event.currentTarget);
                var rect = event.currentTarget.getBoundingClientRect();
                var clientX = event instanceof MouseEvent
                    ? event.clientX
                    : event.touches[0].clientX;
                var fraction = cdk.clamp(_this.getFractionFromEvents(rect, clientX), 0, 1);
                var deltaLeft = fraction * 100 - _this.left;
                var deltaRight = fraction * 100 - 100 + _this.right;
                isPointerDownRight =
                    Math.abs(deltaLeft) > Math.abs(deltaRight) ||
                        deltaRight > 0 ||
                        (_this.left === 0 && _this.right === 100);
                var calibratedFraction = cdk.clamp(_this.getCalibratedFractionFromEvents(rect, clientX, isPointerDownRight), 0, 1);
                var value = _this.getValueFromFraction(_this.fractionGuard(calibratedFraction));
                _this.processValue(value, isPointerDownRight);
                _this.processFocus(isPointerDownRight);
                return rect;
            }), operators.switchMap(function (rect) {
                return rxjs.race([touchMoves$, mouseMoves$]).pipe(operators.map(function (event) {
                    return _this.getCalibratedFractionFromEvents(rect, event instanceof MouseEvent
                        ? event.clientX
                        : event.touches[0].clientX, isPointerDownRight);
                }), operators.takeUntil(rxjs.race([mouseUps$, touchEnds$])));
            }), operators.map(function (fraction) { return _this.fractionGuard(fraction); }))
                .subscribe(function (fraction) {
                _this.processValue(_this.getValueFromFraction(fraction), isPointerDownRight);
            });
        };
        AbstractTuiSlider.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this.pointerDown$.complete();
        };
        AbstractTuiSlider.prototype.onMouseDown = function (event) {
            if (this.disabled) {
                return;
            }
            event.preventDefault();
            this.pointerDown$.next(event);
        };
        AbstractTuiSlider.prototype.onTouchStart = function (event) {
            if (this.disabled) {
                return;
            }
            event.preventDefault();
            this.pointerDown$.next(event);
        };
        AbstractTuiSlider.prototype.getSegmentLabel = function (segment) {
            return cdk.round(this.getValueFromFraction(segment / this.segments), 2);
        };
        AbstractTuiSlider.prototype.getSegmentPrefix = function (segment, texts) {
            if (this.segments !== 1) {
                return "";
            }
            if (segment === 0) {
                return texts[0] + " ";
            }
            return texts[1] + " ";
        };
        AbstractTuiSlider.prototype.onActiveZone = function (active) {
            this.updateFocused(active);
        };
        AbstractTuiSlider.prototype.onLeftFocusVisible = function (focusVisible) {
            this.focusVisibleLeft = focusVisible;
        };
        AbstractTuiSlider.prototype.onRightFocusVisible = function (focusVisible) {
            this.focusVisibleRight = focusVisible;
        };
        AbstractTuiSlider.prototype.getValueFromFraction = function (fraction) {
            return this.keySteps !== null
                ? this.fractionValueKeyStepConverter(fraction, true)
                : cdk.round(this.fractionGuard(fraction) * this.length + this.min, constants.TUI_FLOATING_PRECISION);
        };
        AbstractTuiSlider.prototype.fractionGuard = function (fraction) {
            return this.discrete
                ? cdk.clamp(cdk.quantize(fraction, 1 / this.steps), 0, 1)
                : cdk.clamp(fraction, 0, 1);
        };
        AbstractTuiSlider.prototype.getFractionFromValue = function (value) {
            var fraction = (value - this.min) / this.length;
            return this.keySteps !== null
                ? this.fractionValueKeyStepConverter(value, false)
                : cdk.clamp(Number.isFinite(fraction) ? fraction : 1, 0, 1);
        };
        AbstractTuiSlider.prototype.getCalibratedFractionFromEvents = function (rect, clientX, _) {
            return this.getFractionFromEvents(rect, clientX);
        };
        AbstractTuiSlider.prototype.valueGuard = function (value) {
            return this.quantum
                ? cdk.clamp(cdk.round(Math.round(value / this.quantum) * this.quantum, constants.TUI_FLOATING_PRECISION), this.min, this.max)
                : cdk.clamp(value, this.min, this.max);
        };
        AbstractTuiSlider.prototype.processFocus = function (right) {
            if (!this.focusable || !this.dotRight || !this.dotLeft) {
                return;
            }
            if (right) {
                cdk.setNativeFocused(this.dotRight.nativeElement);
            }
            else {
                cdk.setNativeFocused(this.dotLeft.nativeElement);
            }
        };
        /**
         * Function for converting the fullness of the slider to a value and vice versa
         * taking into account the steps of linear dependence.
         *
         * @param value passed value
         * @param isFraction translation is carried out from fullness to value
         */
        AbstractTuiSlider.prototype.fractionValueKeyStepConverter = function (value, isFraction) {
            var steps = [[0, this.min]].concat(this.keySteps, [
                [100, this.max],
            ]);
            var prevFraction = 0;
            var nextFraction = 100;
            var prevValue = this.min;
            var nextValue = this.max;
            for (var i = 1; i < steps.length; i++) {
                if ((isFraction && steps[i][0] / 100 > value) ||
                    (!isFraction && steps[i][1] > value)) {
                    prevFraction = steps[i - 1][0] || 0;
                    nextFraction = steps[i][0];
                    prevValue = steps[i - 1][1];
                    nextValue = steps[i][1];
                    break;
                }
            }
            var deltaFraction = nextFraction - prevFraction;
            var deltaValue = nextValue - prevValue;
            return isFraction
                ? cdk.round(((value * 100 - prevFraction) / deltaFraction) * deltaValue + prevValue, constants.TUI_FLOATING_PRECISION)
                : cdk.clamp(((value - prevValue) / deltaValue) * deltaFraction + prevFraction, 0, 100) / 100;
        };
        AbstractTuiSlider.prototype.getFractionFromEvents = function (rect, clientX) {
            var value = clientX - rect.left - DOT_WIDTH[this.size] / 2;
            var total = rect.width - DOT_WIDTH[this.size];
            return cdk.round(value / total, constants.TUI_FLOATING_PRECISION);
        };
        AbstractTuiSlider.ctorParameters = function () { return [
            { type: forms.NgControl },
            { type: core.ChangeDetectorRef },
            { type: Document },
            { type: rxjs.Observable, decorators: [{ type: core.Inject, args: [tokens.TUI_FROM_TO_TEXTS,] }] }
        ]; };
        __decorate([
            core.ViewChild("dotLeft", { read: core.ElementRef })
        ], AbstractTuiSlider.prototype, "dotLeft", void 0);
        __decorate([
            core.ViewChild("dotRight", { read: core.ElementRef })
        ], AbstractTuiSlider.prototype, "dotRight", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "min", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "max", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "segments", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "steps", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp(cdk.nonNegativeFiniteAssertion, "Quantum must be a non-negative number")
        ], AbstractTuiSlider.prototype, "quantum", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "pluralize", null);
        __decorate([
            core.Input(),
            core.HostBinding("attr.data-size"),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "size", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], AbstractTuiSlider.prototype, "keySteps", void 0);
        __decorate([
            core.HostBinding("class._segmented")
        ], AbstractTuiSlider.prototype, "segmented", null);
        AbstractTuiSlider = __decorate([
            core.Directive(),
            __param(3, core.Inject(tokens.TUI_FROM_TO_TEXTS))
        ], AbstractTuiSlider);
        return AbstractTuiSlider;
    }(cdk.AbstractTuiControl));

    exports.AbstractTuiInputSlider = AbstractTuiInputSlider;
    exports.AbstractTuiSlider = AbstractTuiSlider;
    exports.DOT_WIDTH = DOT_WIDTH;
    exports.SLIDER_KEYBOARD_STEP = SLIDER_KEYBOARD_STEP;
    exports.quantumAssertion = quantumAssertion;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-kit-abstract.umd.js.map
