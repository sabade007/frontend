{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@taiga-ui/kit/abstract/input-slider.ts","ng://@taiga-ui/kit/abstract/slider/slider.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","ar","next","done","push","value","error","quantumAssertion","quantum","AbstractTuiInputSlider","_this","_super","apply","min","max","Infinity","minLabel","maxLabel","segments","steps","keySteps","size","pluralizeMap","segmentsPluralizeMap","pluralizeMapFallback","one","few","many","other","pluralize","isArray","tuiPluralizeToICU","getTickPrefix","segment","texts","computedSteps","computePureKeySteps","onHovered","hovered","updateHovered","concat","__spread","Input","tuiDefaultProp","HostBinding","tuiPure","Directive","AbstractTuiControl","DOT_WIDTH","s","AbstractTuiSlider","ngControl","changeDetectorRef","documentRef","fromToTexts$","pointerDown$","Subject","focusVisibleLeft","focusVisibleRight","paramIndex","decorator","disabled","focusable","right","left","ngOnInit","isPointerDownRight","mouseMoves$","typedFromEvent","mouseUps$","touchMoves$","touchEnds$","pipe","map","event","tuiAssertIsHTMLElement","currentTarget","rect","getBoundingClientRect","clientX","MouseEvent","touches","fraction","clamp","getFractionFromEvents","deltaLeft","deltaRight","Math","abs","calibratedFraction","getCalibratedFractionFromEvents","getValueFromFraction","fractionGuard","processValue","processFocus","switchMap","race","takeUntil","subscribe","ngOnDestroy","complete","onMouseDown","preventDefault","onTouchStart","getSegmentLabel","round","getSegmentPrefix","onActiveZone","active","updateFocused","onLeftFocusVisible","focusVisible","onRightFocusVisible","fractionValueKeyStepConverter","TUI_FLOATING_PRECISION","discrete","quantize","getFractionFromValue","Number","isFinite","_","valueGuard","dotRight","dotLeft","setNativeFocused","nativeElement","isFraction","prevFraction","nextFraction","prevValue","nextValue","deltaFraction","deltaValue","total","width","NgControl","ChangeDetectorRef","Document","Observable","type","Inject","args","TUI_FROM_TO_TEXTS","ViewChild","read","ElementRef","nonNegativeFiniteAssertion"],"mappings":"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","sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import {Directive, HostBinding, Input} from '@angular/core';\nimport {AbstractTuiControl, tuiDefaultProp, tuiPure} from '@taiga-ui/cdk';\nimport {\n    TuiPluralize,\n    tuiPluralizeToICU,\n    TuiSizeL,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function quantumAssertion(quantum: number): boolean {\n    return quantum > 0;\n}\n\n/**\n * @internal\n * @deprecated TODO: 3.0 delete me after `InputSlider` and `InputRange` stop using it\n */\n@Directive()\nexport abstract class AbstractTuiInputSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number>\n{\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * Use `valueContent` for `InputSlider`.\n     * Use `leftValueContent` for `InputRange`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:\n     *** {@link legacyMinMaxLabel}\n     */\n    @Input()\n    @tuiDefaultProp()\n    minLabel = ``;\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * Use `valueContent` for `InputSlider`.\n     * Use `rightValueContent` for `InputRange`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:\n     *** {@link legacyMinMaxLabel}\n     */\n    @Input()\n    @tuiDefaultProp()\n    maxLabel = ``;\n\n    // TODO: remove setter in v3.0:\n    @Input()\n    @tuiDefaultProp()\n    set pluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.pluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * You can create ticks labels below this input by yourself. It is easy!\n     * Mixin `tui-slider-ticks-labels` will help with it. See examples in demo page `InputSlider`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete:\n     *** {@link segmentsPluralizeMap}\n     *** {@link getTickPrefix}\n     *** TuiFormatNumberPipeModule\n     *** TuiRepeatTimesModule\n     */\n    @Input()\n    @tuiDefaultProp()\n    set segmentsPluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.segmentsPluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp(quantumAssertion, `Quantum must be positive`)\n    quantum = 1;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    /**\n     * @deprecated use `tuiTextfieldSize` instead\n     * TODO delete in v3.0\n     */\n    @Input()\n    @HostBinding(`attr.data-size`)\n    @tuiDefaultProp()\n    size: TuiSizeL = `l`;\n\n    /**\n     * @deprecated replace by input-property {@link pluralize} in v3.0\n     */\n    pluralizeMap: Record<string, string> | null = null;\n    /** @deprecated TODO remove in v3.0 */\n    segmentsPluralizeMap: Record<string, string> | null = null;\n    /** @deprecated TODO remove in v3.0 */\n    readonly pluralizeMapFallback = {\n        one: ``,\n        few: ``,\n        many: ``,\n        other: ``,\n    };\n\n    /** @deprecated TODO remove in v3.0 */\n    @tuiPure\n    getTickPrefix(segment: number, segments: number, texts: [string, string]): string {\n        if (segments !== 1) {\n            return ``;\n        }\n\n        return segment === 0 ? `${texts[0]}` : `${texts[1]}`;\n    }\n\n    @HostBinding(`class._segmented`)\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get computedSteps(): number {\n        return this.steps || this.length / this.quantum;\n    }\n\n    get step(): number {\n        return this.length / this.computedSteps;\n    }\n\n    get computedKeySteps(): TuiKeySteps {\n        return this.computePureKeySteps(this.keySteps, this.min, this.max);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    @tuiPure\n    private computePureKeySteps(\n        keySteps: TuiKeySteps | null,\n        min: number,\n        max: number,\n    ): TuiKeySteps {\n        return [[0, min], ...(keySteps || []), [100, max]];\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    clamp,\n    nonNegativeFiniteAssertion,\n    quantize,\n    round,\n    setNativeFocused,\n    tuiAssertIsHTMLElement,\n    tuiDefaultProp,\n    TuiEventWith,\n    TuiNativeFocusableElement,\n    typedFromEvent,\n} from '@taiga-ui/cdk';\nimport {\n    TuiPluralize,\n    tuiPluralizeToICU,\n    TuiSizeS,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TUI_FROM_TO_TEXTS} from '@taiga-ui/kit/tokens';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {Observable, race, Subject} from 'rxjs';\nimport {map, switchMap, takeUntil} from 'rxjs/operators';\n\nexport const SLIDER_KEYBOARD_STEP = 0.05;\nexport const DOT_WIDTH: {[key: string]: number} = {\n    s: 8,\n    m: 16,\n};\n\n/**\n * @awful TODO: 3.0 remove\n * @internal\n * @dynamic\n */\n@Directive()\nexport abstract class AbstractTuiSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number>\n{\n    // @bad TODO: handle pointer events instead of mouse and touch events\n    private readonly pointerDown$ = new Subject<\n        TuiEventWith<MouseEvent | TouchEvent, HTMLElement>\n    >();\n\n    @ViewChild(`dotLeft`, {read: ElementRef})\n    protected dotLeft?: ElementRef<TuiNativeFocusableElement>;\n\n    @ViewChild(`dotRight`, {read: ElementRef})\n    protected dotRight?: ElementRef<TuiNativeFocusableElement>;\n\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp(nonNegativeFiniteAssertion, `Quantum must be a non-negative number`)\n    quantum = 0;\n\n    // TODO: remove setter in v3.0:\n    @Input()\n    @tuiDefaultProp()\n    set pluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.pluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    @Input()\n    @HostBinding(`attr.data-size`)\n    @tuiDefaultProp()\n    size: TuiSizeS = `m`;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    focusVisibleLeft = false;\n\n    focusVisibleRight = false;\n\n    pluralizeMap: Record<string, string> | null = null;\n\n    protected constructor(\n        ngControl: NgControl | null,\n        changeDetectorRef: ChangeDetectorRef,\n        private readonly documentRef: Document,\n        @Inject(TUI_FROM_TO_TEXTS)\n        readonly fromToTexts$: Observable<[string, string]>,\n    ) {\n        super(ngControl, changeDetectorRef);\n    }\n\n    @HostBinding(`class._segmented`)\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get discrete(): boolean {\n        return this.steps > 0;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get computedStep(): number {\n        if (this.steps) {\n            return 1 / this.steps;\n        }\n\n        return this.quantum ? this.quantum / this.length : SLIDER_KEYBOARD_STEP;\n    }\n\n    get isLeftFocusable(): boolean {\n        return !this.disabled && this.focusable && this.right !== 100;\n    }\n\n    get isRightFocusable(): boolean {\n        return !this.disabled && this.focusable && this.left !== 100;\n    }\n\n    abstract get left(): number;\n    abstract get right(): number;\n    abstract processValue(value: number, right?: boolean): void;\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        const mouseMoves$ = typedFromEvent(this.documentRef, `mousemove`);\n        const mouseUps$ = typedFromEvent(this.documentRef, `mouseup`);\n        const touchMoves$ = typedFromEvent(this.documentRef, `touchmove`);\n        const touchEnds$ = typedFromEvent(this.documentRef, `touchend`);\n        let isPointerDownRight: boolean;\n\n        this.pointerDown$\n            .pipe(\n                map((event: MouseEvent | TouchEvent) => {\n                    tuiAssertIsHTMLElement(event.currentTarget);\n\n                    const rect = event.currentTarget.getBoundingClientRect();\n                    const clientX =\n                        event instanceof MouseEvent\n                            ? event.clientX\n                            : event.touches[0].clientX;\n                    const fraction = clamp(\n                        this.getFractionFromEvents(rect, clientX),\n                        0,\n                        1,\n                    );\n                    const deltaLeft = fraction * 100 - this.left;\n                    const deltaRight = fraction * 100 - 100 + this.right;\n\n                    isPointerDownRight =\n                        Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n                        deltaRight > 0 ||\n                        (this.left === 0 && this.right === 100);\n\n                    const calibratedFraction = clamp(\n                        this.getCalibratedFractionFromEvents(\n                            rect,\n                            clientX,\n                            isPointerDownRight,\n                        ),\n                        0,\n                        1,\n                    );\n                    const value = this.getValueFromFraction(\n                        this.fractionGuard(calibratedFraction),\n                    );\n\n                    this.processValue(value, isPointerDownRight);\n                    this.processFocus(isPointerDownRight);\n\n                    return rect;\n                }),\n                switchMap(rect =>\n                    race([touchMoves$, mouseMoves$]).pipe(\n                        map(event =>\n                            this.getCalibratedFractionFromEvents(\n                                rect,\n                                event instanceof MouseEvent\n                                    ? event.clientX\n                                    : event.touches[0].clientX,\n                                isPointerDownRight,\n                            ),\n                        ),\n                        takeUntil(race([mouseUps$, touchEnds$])),\n                    ),\n                ),\n                map(fraction => this.fractionGuard(fraction)),\n            )\n            .subscribe(fraction => {\n                this.processValue(\n                    this.getValueFromFraction(fraction),\n                    isPointerDownRight,\n                );\n            });\n    }\n\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.pointerDown$.complete();\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event as TuiEventWith<MouseEvent, HTMLElement>);\n    }\n\n    onTouchStart(event: TouchEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event as TuiEventWith<TouchEvent, HTMLElement>);\n    }\n\n    getSegmentLabel(segment: number): number {\n        return round(this.getValueFromFraction(segment / this.segments), 2);\n    }\n\n    getSegmentPrefix(segment: number, texts: [string, string]): string {\n        if (this.segments !== 1) {\n            return ``;\n        }\n\n        if (segment === 0) {\n            return `${texts[0]} `;\n        }\n\n        return `${texts[1]} `;\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    onLeftFocusVisible(focusVisible: boolean): void {\n        this.focusVisibleLeft = focusVisible;\n    }\n\n    onRightFocusVisible(focusVisible: boolean): void {\n        this.focusVisibleRight = focusVisible;\n    }\n\n    getValueFromFraction(fraction: number): number {\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(fraction, true)\n            : round(\n                  this.fractionGuard(fraction) * this.length + this.min,\n                  TUI_FLOATING_PRECISION,\n              );\n    }\n\n    fractionGuard(fraction: number): number {\n        return this.discrete\n            ? clamp(quantize(fraction, 1 / this.steps), 0, 1)\n            : clamp(fraction, 0, 1);\n    }\n\n    protected getFractionFromValue(value: number): number {\n        const fraction = (value - this.min) / this.length;\n\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(value, false)\n            : clamp(Number.isFinite(fraction) ? fraction : 1, 0, 1);\n    }\n\n    protected getCalibratedFractionFromEvents(\n        rect: ClientRect,\n        clientX: number,\n        _: boolean,\n    ): number {\n        return this.getFractionFromEvents(rect, clientX);\n    }\n\n    protected valueGuard(value: number): number {\n        return this.quantum\n            ? clamp(\n                  round(\n                      Math.round(value / this.quantum) * this.quantum,\n                      TUI_FLOATING_PRECISION,\n                  ),\n                  this.min,\n                  this.max,\n              )\n            : clamp(value, this.min, this.max);\n    }\n\n    private processFocus(right: boolean): void {\n        if (!this.focusable || !this.dotRight || !this.dotLeft) {\n            return;\n        }\n\n        if (right) {\n            setNativeFocused(this.dotRight.nativeElement);\n        } else {\n            setNativeFocused(this.dotLeft.nativeElement);\n        }\n    }\n\n    /**\n     * Function for converting the fullness of the slider to a value and vice versa\n     * taking into account the steps of linear dependence.\n     *\n     * @param value passed value\n     * @param isFraction translation is carried out from fullness to value\n     */\n    private fractionValueKeyStepConverter(value: number, isFraction: boolean): number {\n        const steps = [[0, this.min]].concat(this.keySteps as unknown as TuiKeySteps, [\n            [100, this.max],\n        ]);\n\n        let prevFraction = 0;\n        let nextFraction = 100;\n        let prevValue = this.min;\n        let nextValue = this.max;\n\n        for (let i = 1; i < steps.length; i++) {\n            if (\n                (isFraction && steps[i][0] / 100 > value) ||\n                (!isFraction && steps[i][1] > value)\n            ) {\n                prevFraction = steps[i - 1][0] || 0;\n                nextFraction = steps[i][0];\n                prevValue = steps[i - 1][1];\n                nextValue = steps[i][1];\n                break;\n            }\n        }\n\n        const deltaFraction = nextFraction - prevFraction;\n        const deltaValue = nextValue - prevValue;\n\n        return isFraction\n            ? round(\n                  ((value * 100 - prevFraction) / deltaFraction) * deltaValue + prevValue,\n                  TUI_FLOATING_PRECISION,\n              )\n            : clamp(\n                  ((value - prevValue) / deltaValue) * deltaFraction + prevFraction,\n                  0,\n                  100,\n              ) / 100;\n    }\n\n    private getFractionFromEvents(rect: ClientRect, clientX: number): number {\n        const value = clientX - rect.left - DOT_WIDTH[this.size] / 2;\n        const total = rect.width - DOT_WIDTH[this.size];\n\n        return round(value / total, TUI_FLOATING_PRECISION);\n    }\n}\n"]}