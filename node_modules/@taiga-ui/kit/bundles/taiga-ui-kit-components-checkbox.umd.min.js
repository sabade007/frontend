!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@taiga-ui/cdk"),require("@taiga-ui/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@taiga-ui/kit/components/checkbox",["exports","@angular/core","@angular/forms","@taiga-ui/cdk","@taiga-ui/core","@angular/common"],t):t(((e=e||self)["taiga-ui"]=e["taiga-ui"]||{},e["taiga-ui"].kit=e["taiga-ui"].kit||{},e["taiga-ui"].kit.components=e["taiga-ui"].kit.components||{},e["taiga-ui"].kit.components.checkbox={}),e.ng.core,e.ng.forms,e.cdk,e.core$1,e.ng.common)}(this,(function(e,t,o,n,i,r){"use strict";var a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};function u(e,t,o,n){var i,r=arguments.length,a=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,n);else for(var u=e.length-1;u>=0;u--)(i=e[u])&&(a=(r<3?i(a):r>3?i(t,o,a):i(t,o))||a);return r>3&&a&&Object.defineProperty(t,o,a),a}function c(e,t){return function(o,n){t(o,n,e)}}Object.create;Object.create;var s=function(e){function r(t,o,n){var i=e.call(this,t,n)||this;return i.options=o,i.size=i.options.size,i}var s;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(r,e),s=r,Object.defineProperty(r.prototype,"nativeFocusableElement",{get:function(){return!this.focusableElement||this.computedDisabled?null:this.focusableElement.nativeElement},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"focused",{get:function(){return n.isNativeFocused(this.nativeFocusableElement)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"computedFocusable",{get:function(){return this.interactive&&this.focusable},enumerable:!0,configurable:!0}),r.prototype.onChecked=function(e){this.updateValue(e)},r.prototype.onFocused=function(e){this.updateFocused(e)},r.prototype.onHovered=function(e){this.updateHovered(e)},r.prototype.onPressed=function(e){this.updatePressed(e)},r.prototype.onFocusVisible=function(e){this.updateFocusVisible(e)},r.ctorParameters=function(){return[{type:o.NgControl,decorators:[{type:t.Optional},{type:t.Self},{type:t.Inject,args:[o.NgControl]}]},{type:void 0,decorators:[{type:t.Inject,args:[i.TUI_CHECKBOX_OPTIONS]}]},{type:t.ChangeDetectorRef,decorators:[{type:t.Inject,args:[t.ChangeDetectorRef]}]}]},u([t.ViewChild("focusableElement")],r.prototype,"focusableElement",void 0),u([t.Input(),t.HostBinding("attr.data-size"),n.tuiDefaultProp()],r.prototype,"size",void 0),r=s=u([t.Component({selector:"tui-checkbox",template:'<tui-primitive-checkbox\n    [size]="size"\n    [disabled]="disabled"\n    [focused]="computedFocusVisible"\n    [hovered]="computedHovered"\n    [pressed]="computedPressed"\n    [invalid]="computedInvalid"\n    [value]="value"\n>\n    <input\n        #focusableElement\n        type="checkbox"\n        automation-id="tui-checkbox__native"\n        class="t-native"\n        [disabled]="disabled"\n        [id]="id"\n        [tuiChecked]="value"\n        [tuiFocusable]="computedFocusable"\n        (tuiFocusedChange)="onFocused($event)"\n        (tuiHoveredChange)="onHovered($event)"\n        (tuiPressedChange)="onPressed($event)"\n        (tuiCheckedChange)="onChecked($event)"\n        (tuiFocusVisibleChange)="onFocusVisible($event)"\n    />\n</tui-primitive-checkbox>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:n.TUI_FOCUSABLE_ITEM_ACCESSOR,useExisting:t.forwardRef((function(){return s}))}],styles:[":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0}:host[data-size='m']{width:1rem;height:1rem}:host[data-size='l']{width:1.5rem;height:1.5rem}:host._disabled,:host._readonly{pointer-events:none}.t-native{padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native:-webkit-autofill,.t-native:-webkit-autofill:focus,.t-native:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}"]}),c(0,t.Optional()),c(0,t.Self()),c(0,t.Inject(o.NgControl)),c(1,t.Inject(i.TUI_CHECKBOX_OPTIONS)),c(2,t.Inject(t.ChangeDetectorRef))],r)}(n.AbstractTuiNullableControl),l=function(){function e(){}return e=u([t.NgModule({imports:[r.CommonModule,n.TuiCheckedModule,n.TuiFocusableModule,n.TuiFocusedModule,n.TuiHoveredModule,n.TuiPressedModule,n.TuiFocusVisibleModule,i.TuiPrimitiveCheckboxModule],declarations:[s],exports:[s]})],e)}();e.TuiCheckboxComponent=s,e.TuiCheckboxModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-kit-components-checkbox.umd.min.js.map