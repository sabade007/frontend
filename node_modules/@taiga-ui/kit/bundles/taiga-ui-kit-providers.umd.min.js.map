{"version":3,"sources":["ng://@taiga-ui/kit/providers/month-formatter.provider.ts","ng://@taiga-ui/kit/providers/specific-dropdown-controllers.ts","ng://@taiga-ui/kit/providers/value-accessor.provider.ts"],"names":["TUI_MONTH_FORMATTER_PROVIDER","provide","TUI_MONTH_FORMATTER","deps","TuiMonthPipe","useFactory","monthFormatterFactory","pipe","month","transform","map","formatted","formattedYear","of","fixedDropdownControllerFactory","directive","TuiDropdownControllerDirective","limitWidth","FIXED_DROPDOWN_CONTROLLER_PROVIDER","TUI_DROPDOWN_CONTROLLER","Optional","leftAlignedDropdownControllerFactory","align","LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER","IDENTITY","identity","TUI_VALUE_ACCESSOR_PROVIDER","TUI_VALUE_ACCESSOR","Self","NG_VALUE_ACCESSOR"],"mappings":"gpBAOaA,EAAgD,CACzDC,QAASC,EAAAA,oBACTC,KAAM,CAACC,EAAAA,cACPC,WAAYC,YAOAA,EACZC,GAEA,OAAO,SAAAC,GACH,OAAAA,EACMD,EACKE,UAAUD,GACVD,KAAKG,EAAAA,KAAI,SAAAC,GAAa,OAAGA,EAAS,IAAIH,EAAMI,kBACjDC,EAAAA,GAAG,cCrBDC,EACZC,GAKA,OAHAA,EAAYA,GAAa,IAAIC,EAAAA,gCACnBC,WAAa,QAEhBF,MAGEG,EAA+C,CACxD,CACIjB,QAASkB,EAAAA,wBACThB,KAAM,CAAC,CAAC,IAAIiB,EAAAA,SAAYJ,EAAAA,iCACxBX,WAAYS,aAKJO,EACZN,GAKA,OAHAA,EAAYA,GAAa,IAAIC,EAAAA,gCACnBM,MAAQ,OAEXP,MAGEQ,EAAsD,CAC/D,CACItB,QAASkB,EAAAA,wBACThB,KAAM,CAAC,CAAC,IAAIiB,EAAAA,SAAYJ,EAAAA,iCACxBX,WAAYgB,IC7BPG,EAAWC,EAAAA,SAEXC,EAA+C,CACxDzB,QAAS0B,EAAAA,mBACTxB,KAAM,CAAC,CAAC,IAAIiB,EAAAA,SAAY,IAAIQ,EAAAA,KAAQC,EAAAA,oBACpCxB,WAAYmB","sourcesContent":["import {FactoryProvider} from '@angular/core';\nimport {TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {TuiMonthPipe} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport const TUI_MONTH_FORMATTER_PROVIDER: FactoryProvider = {\n    provide: TUI_MONTH_FORMATTER,\n    deps: [TuiMonthPipe],\n    useFactory: monthFormatterFactory,\n};\n\n/**\n * Range.setStart/set-end, except it uses offset in characters only\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function monthFormatterFactory(\n    pipe: TuiMonthPipe,\n): TuiHandler<TuiMonth | null, Observable<string>> {\n    return month =>\n        month\n            ? pipe\n                  .transform(month)\n                  .pipe(map(formatted => `${formatted} ${month.formattedYear}`))\n            : of(``);\n}\n","import {Optional, Provider} from '@angular/core';\nimport {TUI_DROPDOWN_CONTROLLER, TuiDropdownControllerDirective} from '@taiga-ui/core';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function fixedDropdownControllerFactory(\n    directive: TuiDropdownControllerDirective | null,\n): TuiDropdownControllerDirective {\n    directive = directive || new TuiDropdownControllerDirective();\n    directive.limitWidth = `fixed`;\n\n    return directive;\n}\n\nexport const FIXED_DROPDOWN_CONTROLLER_PROVIDER: Provider = [\n    {\n        provide: TUI_DROPDOWN_CONTROLLER,\n        deps: [[new Optional(), TuiDropdownControllerDirective]],\n        useFactory: fixedDropdownControllerFactory,\n    },\n];\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function leftAlignedDropdownControllerFactory(\n    directive: TuiDropdownControllerDirective | null,\n): TuiDropdownControllerDirective {\n    directive = directive || new TuiDropdownControllerDirective();\n    directive.align = `left`;\n\n    return directive;\n}\n\nexport const LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER: Provider = [\n    {\n        provide: TUI_DROPDOWN_CONTROLLER,\n        deps: [[new Optional(), TuiDropdownControllerDirective]],\n        useFactory: leftAlignedDropdownControllerFactory,\n    },\n];\n","import {FactoryProvider, Optional, Self} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {TUI_VALUE_ACCESSOR} from '@taiga-ui/core';\nimport {identity} from 'rxjs';\n\n// TODO: 3.0 remove in ivy compilation\nexport const IDENTITY = identity;\n\nexport const TUI_VALUE_ACCESSOR_PROVIDER: FactoryProvider = {\n    provide: TUI_VALUE_ACCESSOR,\n    deps: [[new Optional(), new Self(), NG_VALUE_ACCESSOR]],\n    useFactory: IDENTITY,\n};\n"]}