{"version":3,"sources":["ng://@taiga-ui/kit/utils/phone/get-max-allowed-phone-length.ts","ng://@taiga-ui/kit/utils/phone/iso-to-country-code.ts","ng://@taiga-ui/kit/utils/phone/not-kz-region.ts"],"names":["countries","isoCode","replace","length","countriesMasks","MASK_AFTER_CODE_REGEXP","value","region","Number","slice"],"mappings":"qfAGIA,EACAC,GAEA,OAAOD,EAAUC,GAASC,QAAQ,WAAY,IAAIC,uCCFlDC,EACAH,GAEA,OAAOG,EAAeH,GAASC,QAAQG,EAAAA,uBAAwB,+BCPpCC,GAC3B,IAAMC,EAASC,OAAOF,EAAMG,MAAM,EAAG,IAErC,OAAOF,EAAS,KAAOA,EAAS","sourcesContent":["import {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport function tuiGetMaxAllowedPhoneLength(\n    countries: Record<TuiCountryIsoCode, string>,\n    isoCode: TuiCountryIsoCode,\n): number {\n    return countries[isoCode].replace(/[()\\- ]/g, ``).length;\n}\n","import {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {MASK_AFTER_CODE_REGEXP} from '@taiga-ui/kit/constants';\n\nexport function tuiIsoToCountryCode(\n    countriesMasks: Record<TuiCountryIsoCode, string>,\n    isoCode: TuiCountryIsoCode,\n): string {\n    return countriesMasks[isoCode].replace(MASK_AFTER_CODE_REGEXP, ``);\n}\n","export function tuiNotKzRegion(value: string): boolean {\n    const region = Number(value.slice(1, 4));\n\n    return region < 600 || region > 799;\n}\n"]}