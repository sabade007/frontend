import { DATE_FILLER_LENGTH, TuiDay } from '@taiga-ui/cdk';
/**
 * @deprecated: use {@link tuiNormalizeDateValue} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function normalizeDateValue(dateValue, _a) {
    var value = _a.value, min = _a.min, max = _a.max, dateFormat = _a.dateFormat, dateSeparator = _a.dateSeparator;
    return value && value.toString(dateFormat, dateSeparator) === dateValue
        ? dateValue
        : TuiDay.normalizeParse(dateValue, dateFormat)
            .dayLimit(min, max)
            .toString(dateFormat, dateSeparator);
}
export function tuiCreateAutoCorrectedDatePipe(config) {
    return function (value) {
        if (value.length !== DATE_FILLER_LENGTH) {
            return { value: value };
        }
        return {
            value: normalizeDateValue(value, config),
        };
    };
}
export var tuiNormalizeDateValue = normalizeDateValue;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtcGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvdXRpbHMvbWFzay8iLCJzb3VyY2VzIjpbImNyZWF0ZS1hdXRvLWNvcnJlY3RlZC1kYXRlLXBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGtCQUFrQixFQUFlLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQVN0RTs7R0FFRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsa0JBQWtCLENBQzlCLFNBQWlCLEVBQ2pCLEVBQTZFO1FBQTVFLGdCQUFLLEVBQUUsWUFBRyxFQUFFLFlBQUcsRUFBRSwwQkFBVSxFQUFFLGdDQUFhO0lBRTNDLE9BQU8sS0FBSyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxLQUFLLFNBQVM7UUFDbkUsQ0FBQyxDQUFDLFNBQVM7UUFDWCxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDO2FBQ3ZDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDO2FBQ2xCLFFBQVEsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVELE1BQU0sVUFBVSw4QkFBOEIsQ0FDMUMsTUFBdUM7SUFFdkMsT0FBTyxVQUFBLEtBQUs7UUFDUixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssa0JBQWtCLEVBQUU7WUFDckMsT0FBTyxFQUFDLEtBQUssT0FBQSxFQUFDLENBQUM7U0FDbEI7UUFFRCxPQUFPO1lBQ0gsS0FBSyxFQUFFLGtCQUFrQixDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7U0FDM0MsQ0FBQztJQUNOLENBQUMsQ0FBQztBQUNOLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSxxQkFBcUIsR0FBRyxrQkFBa0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7REFURV9GSUxMRVJfTEVOR1RILCBUdWlEYXRlTW9kZSwgVHVpRGF5fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpVGV4dE1hc2tQaXBlSGFuZGxlciwgVHVpV2l0aE9wdGlvbmFsTWluTWF4V2l0aFZhbHVlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpQXV0b0NvcnJlY3RlZERhdGVQaXBlQ29uZmlnc1xuICAgIGV4dGVuZHMgVHVpV2l0aE9wdGlvbmFsTWluTWF4V2l0aFZhbHVlPFR1aURheSB8IG51bGwsIFR1aURheT4ge1xuICAgIGRhdGVGb3JtYXQ6IFR1aURhdGVNb2RlO1xuICAgIGRhdGVTZXBhcmF0b3I6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogdXNlIHtAbGluayB0dWlOb3JtYWxpemVEYXRlVmFsdWV9IGluc3RlYWRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZURhdGVWYWx1ZShcbiAgICBkYXRlVmFsdWU6IHN0cmluZyxcbiAgICB7dmFsdWUsIG1pbiwgbWF4LCBkYXRlRm9ybWF0LCBkYXRlU2VwYXJhdG9yfTogVHVpQXV0b0NvcnJlY3RlZERhdGVQaXBlQ29uZmlncyxcbik6IHN0cmluZyB7XG4gICAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLnRvU3RyaW5nKGRhdGVGb3JtYXQsIGRhdGVTZXBhcmF0b3IpID09PSBkYXRlVmFsdWVcbiAgICAgICAgPyBkYXRlVmFsdWVcbiAgICAgICAgOiBUdWlEYXkubm9ybWFsaXplUGFyc2UoZGF0ZVZhbHVlLCBkYXRlRm9ybWF0KVxuICAgICAgICAgICAgICAuZGF5TGltaXQobWluLCBtYXgpXG4gICAgICAgICAgICAgIC50b1N0cmluZyhkYXRlRm9ybWF0LCBkYXRlU2VwYXJhdG9yKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHR1aUNyZWF0ZUF1dG9Db3JyZWN0ZWREYXRlUGlwZShcbiAgICBjb25maWc6IFR1aUF1dG9Db3JyZWN0ZWREYXRlUGlwZUNvbmZpZ3MsXG4pOiBUdWlUZXh0TWFza1BpcGVIYW5kbGVyIHtcbiAgICByZXR1cm4gdmFsdWUgPT4ge1xuICAgICAgICBpZiAodmFsdWUubGVuZ3RoICE9PSBEQVRFX0ZJTExFUl9MRU5HVEgpIHtcbiAgICAgICAgICAgIHJldHVybiB7dmFsdWV9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiBub3JtYWxpemVEYXRlVmFsdWUodmFsdWUsIGNvbmZpZyksXG4gICAgICAgIH07XG4gICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHR1aU5vcm1hbGl6ZURhdGVWYWx1ZSA9IG5vcm1hbGl6ZURhdGVWYWx1ZTtcbiJdfQ==