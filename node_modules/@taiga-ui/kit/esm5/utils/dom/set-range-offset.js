import { svgNodeFilter } from '@taiga-ui/cdk';
/**
 * @deprecated: use {@link tuiSetRangeOffset} instead
 * Range.setStart/set-end, except it uses offset in characters only
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function setRangeOffset(range, node, offset, method) {
    var ownerDocument = node.ownerDocument;
    if (!ownerDocument) {
        return;
    }
    var treeWalker = ownerDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, svgNodeFilter, false);
    treeWalker.currentNode = node;
    while (treeWalker.nextNode()) {
        if (treeWalker.currentNode.nodeType === Node.TEXT_NODE) {
            var length_1 = treeWalker.currentNode.nodeValue
                ? treeWalker.currentNode.nodeValue.length
                : 0;
            if (offset > length_1) {
                offset -= length_1;
            }
            else {
                range[method](treeWalker.currentNode, offset);
            }
        }
    }
}
export var tuiSetRangeOffset = setRangeOffset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXJhbmdlLW9mZnNldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvdXRpbHMvZG9tLyIsInNvdXJjZXMiOlsic2V0LXJhbmdlLW9mZnNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVDOzs7R0FHRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsY0FBYyxDQUMxQixLQUFZLEVBQ1osSUFBaUIsRUFDakIsTUFBYyxFQUNkLE1BQTZCO0lBRXRCLElBQUEsa0NBQWEsQ0FBUztJQUU3QixJQUFJLENBQUMsYUFBYSxFQUFFO1FBQ2hCLE9BQU87S0FDVjtJQUVELElBQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FDN0MsSUFBSSxFQUNKLFVBQVUsQ0FBQyxTQUFTLEVBQ3BCLGFBQWEsRUFDYixLQUFLLENBQ1IsQ0FBQztJQUVGLFVBQVUsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBRTlCLE9BQU8sVUFBVSxDQUFDLFFBQVEsRUFBRSxFQUFFO1FBQzFCLElBQUksVUFBVSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNwRCxJQUFNLFFBQU0sR0FBRyxVQUFVLENBQUMsV0FBVyxDQUFDLFNBQVM7Z0JBQzNDLENBQUMsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNO2dCQUN6QyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRVIsSUFBSSxNQUFNLEdBQUcsUUFBTSxFQUFFO2dCQUNqQixNQUFNLElBQUksUUFBTSxDQUFDO2FBQ3BCO2lCQUFNO2dCQUNILEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2FBQ2pEO1NBQ0o7S0FDSjtBQUNMLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N2Z05vZGVGaWx0ZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkOiB1c2Uge0BsaW5rIHR1aVNldFJhbmdlT2Zmc2V0fSBpbnN0ZWFkXG4gKiBSYW5nZS5zZXRTdGFydC9zZXQtZW5kLCBleGNlcHQgaXQgdXNlcyBvZmZzZXQgaW4gY2hhcmFjdGVycyBvbmx5XG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBzZXRSYW5nZU9mZnNldChcbiAgICByYW5nZTogUmFuZ2UsXG4gICAgbm9kZTogSFRNTEVsZW1lbnQsXG4gICAgb2Zmc2V0OiBudW1iZXIsXG4gICAgbWV0aG9kOiAnc2V0RW5kJyB8ICdzZXRTdGFydCcsXG4pOiB2b2lkIHtcbiAgICBjb25zdCB7b3duZXJEb2N1bWVudH0gPSBub2RlO1xuXG4gICAgaWYgKCFvd25lckRvY3VtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB0cmVlV2Fsa2VyID0gb3duZXJEb2N1bWVudC5jcmVhdGVUcmVlV2Fsa2VyKFxuICAgICAgICBub2RlLFxuICAgICAgICBOb2RlRmlsdGVyLlNIT1dfVEVYVCxcbiAgICAgICAgc3ZnTm9kZUZpbHRlcixcbiAgICAgICAgZmFsc2UsXG4gICAgKTtcblxuICAgIHRyZWVXYWxrZXIuY3VycmVudE5vZGUgPSBub2RlO1xuXG4gICAgd2hpbGUgKHRyZWVXYWxrZXIubmV4dE5vZGUoKSkge1xuICAgICAgICBpZiAodHJlZVdhbGtlci5jdXJyZW50Tm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUpIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IHRyZWVXYWxrZXIuY3VycmVudE5vZGUubm9kZVZhbHVlXG4gICAgICAgICAgICAgICAgPyB0cmVlV2Fsa2VyLmN1cnJlbnROb2RlLm5vZGVWYWx1ZS5sZW5ndGhcbiAgICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgIGlmIChvZmZzZXQgPiBsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBvZmZzZXQgLT0gbGVuZ3RoO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByYW5nZVttZXRob2RdKHRyZWVXYWxrZXIuY3VycmVudE5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCB0dWlTZXRSYW5nZU9mZnNldCA9IHNldFJhbmdlT2Zmc2V0O1xuIl19