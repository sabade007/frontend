import { TuiMonthPipe } from '@taiga-ui/core';
import { TUI_MONTH_FORMATTER } from '@taiga-ui/kit/tokens';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
export var TUI_MONTH_FORMATTER_PROVIDER = {
    provide: TUI_MONTH_FORMATTER,
    deps: [TuiMonthPipe],
    useFactory: monthFormatterFactory,
};
/**
 * Range.setStart/set-end, except it uses offset in characters only
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function monthFormatterFactory(pipe) {
    return function (month) {
        return month
            ? pipe
                .transform(month)
                .pipe(map(function (formatted) { return formatted + " " + month.formattedYear; }))
            : of("");
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtZm9ybWF0dGVyLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9wcm92aWRlcnMvIiwic291cmNlcyI6WyJtb250aC1mb3JtYXR0ZXIucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBYSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDcEMsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE1BQU0sQ0FBQyxJQUFNLDRCQUE0QixHQUFvQjtJQUN6RCxPQUFPLEVBQUUsbUJBQW1CO0lBQzVCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixVQUFVLEVBQUUscUJBQXFCO0NBQ3BDLENBQUM7QUFFRjs7R0FFRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUscUJBQXFCLENBQ2pDLElBQWtCO0lBRWxCLE9BQU8sVUFBQSxLQUFLO1FBQ1IsT0FBQSxLQUFLO1lBQ0QsQ0FBQyxDQUFDLElBQUk7aUJBQ0MsU0FBUyxDQUFDLEtBQUssQ0FBQztpQkFDaEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFBLFNBQVMsSUFBSSxPQUFHLFNBQVMsU0FBSSxLQUFLLENBQUMsYUFBZSxFQUFyQyxDQUFxQyxDQUFDLENBQUM7WUFDcEUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFKWixDQUlZLENBQUM7QUFDckIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmFjdG9yeVByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpSGFuZGxlciwgVHVpTW9udGh9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlNb250aFBpcGV9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VFVJX01PTlRIX0ZPUk1BVFRFUn0gZnJvbSAnQHRhaWdhLXVpL2tpdC90b2tlbnMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgY29uc3QgVFVJX01PTlRIX0ZPUk1BVFRFUl9QUk9WSURFUjogRmFjdG9yeVByb3ZpZGVyID0ge1xuICAgIHByb3ZpZGU6IFRVSV9NT05USF9GT1JNQVRURVIsXG4gICAgZGVwczogW1R1aU1vbnRoUGlwZV0sXG4gICAgdXNlRmFjdG9yeTogbW9udGhGb3JtYXR0ZXJGYWN0b3J5LFxufTtcblxuLyoqXG4gKiBSYW5nZS5zZXRTdGFydC9zZXQtZW5kLCBleGNlcHQgaXQgdXNlcyBvZmZzZXQgaW4gY2hhcmFjdGVycyBvbmx5XG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBtb250aEZvcm1hdHRlckZhY3RvcnkoXG4gICAgcGlwZTogVHVpTW9udGhQaXBlLFxuKTogVHVpSGFuZGxlcjxUdWlNb250aCB8IG51bGwsIE9ic2VydmFibGU8c3RyaW5nPj4ge1xuICAgIHJldHVybiBtb250aCA9PlxuICAgICAgICBtb250aFxuICAgICAgICAgICAgPyBwaXBlXG4gICAgICAgICAgICAgICAgICAudHJhbnNmb3JtKG1vbnRoKVxuICAgICAgICAgICAgICAgICAgLnBpcGUobWFwKGZvcm1hdHRlZCA9PiBgJHtmb3JtYXR0ZWR9ICR7bW9udGguZm9ybWF0dGVkWWVhcn1gKSlcbiAgICAgICAgICAgIDogb2YoYGApO1xufVxuIl19