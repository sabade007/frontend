import { __decorate, __param } from "tslib";
import { Attribute, Directive, Inject, Injector } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';
import { tuiCreateUnfinishedValidator } from '@taiga-ui/kit/validators';
var TuiUnfinishedValidatorDirective = /** @class */ (function () {
    function TuiUnfinishedValidatorDirective(injector, message) {
        var _this = this;
        this.injector = injector;
        this.message = message;
        this.validate = tuiCreateUnfinishedValidator(function () { return _this.injector.get(TUI_FOCUSABLE_ITEM_ACCESSOR); }, this.message || '');
    }
    TuiUnfinishedValidatorDirective_1 = TuiUnfinishedValidatorDirective;
    var TuiUnfinishedValidatorDirective_1;
    TuiUnfinishedValidatorDirective.ctorParameters = function () { return [
        { type: Injector, decorators: [{ type: Inject, args: [Injector,] }] },
        { type: String, decorators: [{ type: Attribute, args: ['tuiUnfinishedValidator',] }] }
    ]; };
    TuiUnfinishedValidatorDirective = TuiUnfinishedValidatorDirective_1 = __decorate([
        Directive({
            selector: '[tuiUnfinishedValidator]',
            providers: [
                {
                    provide: NG_VALIDATORS,
                    useExisting: TuiUnfinishedValidatorDirective_1,
                    multi: true,
                },
            ],
        }),
        __param(0, Inject(Injector)),
        __param(1, Attribute('tuiUnfinishedValidator'))
    ], TuiUnfinishedValidatorDirective);
    return TuiUnfinishedValidatorDirective;
}());
export { TuiUnfinishedValidatorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9kaXJlY3RpdmVzL3VuZmluaXNoZWQtdmFsaWRhdG9yLyIsInNvdXJjZXMiOlsidW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxhQUFhLEVBQVksTUFBTSxnQkFBZ0IsQ0FBQztBQUN4RCxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFZdEU7SUFNSSx5Q0FFcUIsUUFBa0IsRUFFbEIsT0FBc0I7UUFKM0MsaUJBS0k7UUFIaUIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUVsQixZQUFPLEdBQVAsT0FBTyxDQUFlO1FBVGxDLGFBQVEsR0FBRyw0QkFBNEIsQ0FDNUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLEVBQTlDLENBQThDLEVBQ3BELElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUNyQixDQUFDO0lBT0MsQ0FBQzt3Q0FYSywrQkFBK0I7OztnQkFRVCxRQUFRLHVCQURsQyxNQUFNLFNBQUMsUUFBUTs2Q0FFZixTQUFTLFNBQUMsd0JBQXdCOztJQVQ5QiwrQkFBK0I7UUFWM0MsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyxTQUFTLEVBQUU7Z0JBQ1A7b0JBQ0ksT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFdBQVcsRUFBRSxpQ0FBK0I7b0JBQzVDLEtBQUssRUFBRSxJQUFJO2lCQUNkO2FBQ0o7U0FDSixDQUFDO1FBUU8sV0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7UUFFaEIsV0FBQSxTQUFTLENBQUMsd0JBQXdCLENBQUMsQ0FBQTtPQVQvQiwrQkFBK0IsQ0FZM0M7SUFBRCxzQ0FBQztDQUFBLEFBWkQsSUFZQztTQVpZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXR0cmlidXRlLCBEaXJlY3RpdmUsIEluamVjdCwgSW5qZWN0b3J9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOR19WQUxJREFUT1JTLCBWYWxpZGF0b3J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dHVpQ3JlYXRlVW5maW5pc2hlZFZhbGlkYXRvcn0gZnJvbSAnQHRhaWdhLXVpL2tpdC92YWxpZGF0b3JzJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVW5maW5pc2hlZFZhbGlkYXRvcl0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IFR1aVVuZmluaXNoZWRWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlVbmZpbmlzaGVkVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yIHtcbiAgICByZWFkb25seSB2YWxpZGF0ZSA9IHR1aUNyZWF0ZVVuZmluaXNoZWRWYWxpZGF0b3IoXG4gICAgICAgICgpID0+IHRoaXMuaW5qZWN0b3IuZ2V0KFRVSV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUiksXG4gICAgICAgIHRoaXMubWVzc2FnZSB8fCAnJyxcbiAgICApO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoSW5qZWN0b3IpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgICAgICBAQXR0cmlidXRlKCd0dWlVbmZpbmlzaGVkVmFsaWRhdG9yJylcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBtZXNzYWdlOiBzdHJpbmcgfCBudWxsLFxuICAgICkge31cbn1cbiJdfQ==