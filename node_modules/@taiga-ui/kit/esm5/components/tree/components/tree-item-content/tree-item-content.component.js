import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, HostBinding, Inject, } from '@angular/core';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { TUI_DEFAULT_TREE_CONTROLLER } from '../../misc/tree.constants';
import { TUI_TREE_CONTROLLER } from '../../misc/tree.tokens';
var TuiTreeItemContentComponent = /** @class */ (function () {
    function TuiTreeItemContentComponent(context, controller) {
        this.context = context;
        this.controller = controller;
    }
    Object.defineProperty(TuiTreeItemContentComponent.prototype, "isExpanded", {
        get: function () {
            return this.context.$implicit.isExpanded;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTreeItemContentComponent.prototype, "isExpandable", {
        get: function () {
            return (this.context.$implicit.isExpandable &&
                this.controller !== TUI_DEFAULT_TREE_CONTROLLER);
        },
        enumerable: true,
        configurable: true
    });
    TuiTreeItemContentComponent.prototype.onClick = function () {
        this.controller.toggle(this.context.$implicit);
    };
    TuiTreeItemContentComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [POLYMORPHEUS_CONTEXT,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return TUI_TREE_CONTROLLER; }),] }] }
    ]; };
    __decorate([
        HostBinding('class._expandable')
    ], TuiTreeItemContentComponent.prototype, "isExpandable", null);
    TuiTreeItemContentComponent = __decorate([
        Component({
            selector: 'tui-tree-item-content',
            template: "<button\n    *ngIf=\"isExpandable\"\n    tuiIconButton\n    size=\"xs\"\n    appearance=\"flat\"\n    icon=\"tuiIconChevronRight\"\n    shape=\"rounded\"\n    class=\"t-button\"\n    [class.t-button_expanded]=\"isExpanded\"\n    (click)=\"onClick()\"\n></button>\n<ng-container [ngTemplateOutlet]=\"context.template\"></ng-container>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:flex;align-items:center}:host :host-context(tui-tree-item._expandable):not(._expandable){padding-left:2rem}.t-button{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;margin-right:.5rem}.t-button_expanded{transform:rotate(90deg)}"]
        }),
        __param(0, Inject(POLYMORPHEUS_CONTEXT)),
        __param(1, Inject(forwardRef(function () { return TUI_TREE_CONTROLLER; })))
    ], TuiTreeItemContentComponent);
    return TuiTreeItemContentComponent;
}());
export { TuiTreeItemContentComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1pdGVtLWNvbnRlbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3RyZWUvIiwic291cmNlcyI6WyJjb21wb25lbnRzL3RyZWUtaXRlbS1jb250ZW50L3RyZWUtaXRlbS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFOUQsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFFdEUsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFRM0Q7SUFDSSxxQ0FDMkMsT0FBMkIsRUFFakQsVUFBNkI7UUFGUCxZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQUVqRCxlQUFVLEdBQVYsVUFBVSxDQUFtQjtJQUMvQyxDQUFDO0lBRUosc0JBQUksbURBQVU7YUFBZDtZQUNJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDO1FBQzdDLENBQUM7OztPQUFBO0lBR0Qsc0JBQUkscURBQVk7YUFBaEI7WUFDSSxPQUFPLENBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsWUFBWTtnQkFDbkMsSUFBSSxDQUFDLFVBQVUsS0FBSywyQkFBMkIsQ0FDbEQsQ0FBQztRQUNOLENBQUM7OztPQUFBO0lBRUQsNkNBQU8sR0FBUDtRQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7Z0RBbkJJLE1BQU0sU0FBQyxvQkFBb0I7Z0RBQzNCLE1BQU0sU0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLG1CQUFtQixFQUFuQixDQUFtQixDQUFDOztJQVNqRDtRQURDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQzttRUFNaEM7SUFqQlEsMkJBQTJCO1FBTnZDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsMlZBQThDO1lBRTlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztTQUNsRCxDQUFDO1FBR08sV0FBQSxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQTtRQUM1QixXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLG1CQUFtQixFQUFuQixDQUFtQixDQUFDLENBQUMsQ0FBQTtPQUh6QywyQkFBMkIsQ0FzQnZDO0lBQUQsa0NBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQXRCWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBmb3J3YXJkUmVmLFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEluamVjdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1BPTFlNT1JQSEVVU19DT05URVhUfSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1RVSV9ERUZBVUxUX1RSRUVfQ09OVFJPTExFUn0gZnJvbSAnLi4vLi4vbWlzYy90cmVlLmNvbnN0YW50cyc7XG5pbXBvcnQge1R1aVRyZWVDb250cm9sbGVyLCBUdWlUcmVlSXRlbUNvbnRleHR9IGZyb20gJy4uLy4uL21pc2MvdHJlZS5pbnRlcmZhY2VzJztcbmltcG9ydCB7VFVJX1RSRUVfQ09OVFJPTExFUn0gZnJvbSAnLi4vLi4vbWlzYy90cmVlLnRva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXRyZWUtaXRlbS1jb250ZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJ3RyZWUtaXRlbS1jb250ZW50LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWyd0cmVlLWl0ZW0tY29udGVudC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRyZWVJdGVtQ29udGVudENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoUE9MWU1PUlBIRVVTX0NPTlRFWFQpIHJlYWRvbmx5IGNvbnRleHQ6IFR1aVRyZWVJdGVtQ29udGV4dCxcbiAgICAgICAgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IFRVSV9UUkVFX0NPTlRST0xMRVIpKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGNvbnRyb2xsZXI6IFR1aVRyZWVDb250cm9sbGVyLFxuICAgICkge31cblxuICAgIGdldCBpc0V4cGFuZGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0LiRpbXBsaWNpdC5pc0V4cGFuZGVkO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2V4cGFuZGFibGUnKVxuICAgIGdldCBpc0V4cGFuZGFibGUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuJGltcGxpY2l0LmlzRXhwYW5kYWJsZSAmJlxuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyICE9PSBUVUlfREVGQVVMVF9UUkVFX0NPTlRST0xMRVJcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBvbkNsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIudG9nZ2xlKHRoaXMuY29udGV4dC4kaW1wbGljaXQpO1xuICAgIH1cbn1cbiJdfQ==