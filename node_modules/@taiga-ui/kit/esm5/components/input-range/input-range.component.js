import { __decorate, __extends, __param, __read } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, forwardRef, HostBinding, Inject, Input, Optional, QueryList, Self, ViewChild, ViewChildren, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { clamp, EMPTY_QUERY, isNativeFocused, isNativeFocusedIn, round, TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_IS_MOBILE, tuiDefaultProp, } from '@taiga-ui/cdk';
import { getFractionPartPadded, TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiDecimalT, TuiSizeL, TuiTextfieldController, } from '@taiga-ui/core';
import { AbstractTuiInputSlider, quantumAssertion } from '@taiga-ui/kit/abstract';
import { TuiInputNumberComponent } from '@taiga-ui/kit/components/input-number';
import { TuiNewRangeDirective, TuiRangeComponent } from '@taiga-ui/kit/components/range';
import { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';
// @dynamic
var TuiInputRangeComponent = /** @class */ (function (_super) {
    __extends(TuiInputRangeComponent, _super);
    function TuiInputRangeComponent(control, changeDetectorRef, isMobile, appearance, elementRef, controller, isNew) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.isMobile = isMobile;
        _this.appearance = appearance;
        _this.elementRef = elementRef;
        _this.controller = controller;
        _this.isNew = isNew;
        _this.inputNumberRefs = EMPTY_QUERY;
        _this.rangeRef = null;
        _this.min = 0;
        /* TODO: make `100` as default value (like in native sliders) */
        _this.max = Infinity;
        _this.quantum = 1;
        _this.steps = 0;
        _this.segments = 0;
        _this.keySteps = null;
        _this.leftValueContent = '';
        _this.rightValueContent = '';
        _this.lastActiveSide = 'left';
        return _this;
    }
    TuiInputRangeComponent_1 = TuiInputRangeComponent;
    Object.defineProperty(TuiInputRangeComponent.prototype, "leftFocusableElement", {
        get: function () {
            var _a;
            return ((_a = this.inputNumberRefs.first) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "rightFocusableElement", {
        get: function () {
            var _a;
            return ((_a = this.inputNumberRefs.last) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.disabled
                ? null
                : this.leftFocusableElement || this.rightFocusableElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "focused", {
        get: function () {
            return isNativeFocusedIn(this.elementRef.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "showLeftValueContent", {
        get: function () {
            var _a;
            return Boolean((this.minLabel || this.leftValueContent) &&
                !isNativeFocused(this.leftFocusableElement) &&
                !(((_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.focused) && this.lastActiveSide === 'left'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "showRightValueContent", {
        get: function () {
            var _a;
            return Boolean((this.maxLabel || this.rightValueContent) &&
                !isNativeFocused(this.rightFocusableElement) &&
                !(((_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.focused) && this.lastActiveSide === 'right'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "precision", {
        get: function () {
            return getFractionPartPadded(this.quantum).length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "decimal", {
        get: function () {
            return this.precision ? 'not-zero' : 'never';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "computedSteps", {
        get: function () {
            return this.steps || (this.max - this.min) / this.quantum;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "computedSize", {
        get: function () {
            return this.isNew && this.controller.size !== 's'
                ? this.controller.size
                : this.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputRangeComponent.prototype, "legacyLabelOutside", {
        get: function () {
            return this.isNew ? this.controller.labelOutside : this.computedSize === 'm';
        },
        enumerable: true,
        configurable: true
    });
    TuiInputRangeComponent.prototype.onActiveZone = function (active) {
        this.updateFocused(active);
    };
    TuiInputRangeComponent.prototype.onTextInputFocused = function (focused, right) {
        if (focused) {
            return;
        }
        var _a = __read(this.inputNumberRefs, 2), leftTextInputRef = _a[0], rightTextInputRef = _a[1];
        var inputRef = right ? rightTextInputRef : leftTextInputRef;
        var valueIndex = right ? 1 : 0;
        if (!inputRef.nativeValue || inputRef.value !== this.value[valueIndex]) {
            this.updateTextInputValue(this.safeCurrentValue[valueIndex], right);
        }
    };
    TuiInputRangeComponent.prototype.changeByStep = function (event, _a) {
        var _b = __read(_a, 2), leftCoefficient = _b[0], rightCoefficient = _b[1];
        if (this.readOnly) {
            return;
        }
        event.preventDefault();
        var newValue = this.valueGuard([
            this.value[0] + leftCoefficient * this.step,
            this.value[1] + rightCoefficient * this.step,
        ]);
        var leftValueChanged = newValue[0] !== this.value[0];
        var rightValueChanged = newValue[1] !== this.value[1];
        if (leftValueChanged || rightValueChanged) {
            this.safelyUpdateValue(newValue);
            this.updateTextInputValue(newValue[rightValueChanged ? 1 : 0], rightValueChanged);
        }
    };
    TuiInputRangeComponent.prototype.onInputLeft = function (value) {
        this.safelyUpdateValue([value !== null && value !== void 0 ? value : this.safeCurrentValue[0], this.value[1]]);
    };
    TuiInputRangeComponent.prototype.onInputRight = function (value) {
        this.safelyUpdateValue([this.value[0], value !== null && value !== void 0 ? value : this.safeCurrentValue[1]]);
    };
    TuiInputRangeComponent.prototype.onRangeValue = function (value) {
        this.safelyUpdateValue(value);
        var rightValueChanged = this.lastActiveSide === 'right';
        this.updateTextInputValue(this.value[rightValueChanged ? 1 : 0], rightValueChanged);
    };
    TuiInputRangeComponent.prototype.focusToTextInput = function () {
        var element = this.lastActiveSide === 'left'
            ? this.leftFocusableElement
            : this.rightFocusableElement;
        if (!this.isMobile && element) {
            element.focus();
        }
    };
    TuiInputRangeComponent.prototype.onActiveThumbChange = function (activeThumb) {
        this.lastActiveSide = activeThumb;
    };
    TuiInputRangeComponent.prototype.getFallbackValue = function () {
        return [0, 0];
    };
    TuiInputRangeComponent.prototype.safelyUpdateValue = function (value) {
        this.updateValue(this.valueGuard(value));
    };
    TuiInputRangeComponent.prototype.valueGuard = function (_a) {
        var _b = __read(_a, 2), leftValue = _b[0], rightValue = _b[1];
        var leftCalibratedValue = this.calibrate(leftValue);
        var rightCalibratedValue = this.calibrate(rightValue);
        return [
            Math.min(leftCalibratedValue, this.value[1]),
            Math.max(rightCalibratedValue, this.value[0]),
        ];
    };
    TuiInputRangeComponent.prototype.calibrate = function (value) {
        var roundedValue = round(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);
        return clamp(roundedValue, this.min, this.max);
    };
    TuiInputRangeComponent.prototype.updateTextInputValue = function (value, right) {
        var _a = __read(this.inputNumberRefs, 2), leftInputRef = _a[0], rightInputRef = _a[1];
        var textInputRef = right ? rightInputRef : leftInputRef;
        if (textInputRef) {
            textInputRef.nativeValue = textInputRef.getFormattedValue(value);
        }
    };
    var TuiInputRangeComponent_1;
    TuiInputRangeComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
        { type: String, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_APPEARANCE,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: TuiTextfieldController, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_WATCHED_CONTROLLER,] }] },
        { type: TuiNewRangeDirective, decorators: [{ type: Optional }, { type: Inject, args: [TuiNewRangeDirective,] }] }
    ]; };
    __decorate([
        ViewChildren(TuiInputNumberComponent)
    ], TuiInputRangeComponent.prototype, "inputNumberRefs", void 0);
    __decorate([
        ViewChild(TuiRangeComponent)
    ], TuiInputRangeComponent.prototype, "rangeRef", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "min", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "max", void 0);
    __decorate([
        Input(),
        tuiDefaultProp(quantumAssertion, 'Quantum must be positive')
    ], TuiInputRangeComponent.prototype, "quantum", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "steps", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "segments", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "keySteps", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "leftValueContent", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputRangeComponent.prototype, "rightValueContent", void 0);
    __decorate([
        HostBinding('class._label-outside')
    ], TuiInputRangeComponent.prototype, "legacyLabelOutside", null);
    TuiInputRangeComponent = TuiInputRangeComponent_1 = __decorate([
        Component({
            selector: 'tui-input-range',
            template: "<tui-wrapper\n    class=\"t-wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [invalid]=\"computedInvalid\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-input-number\n        tuiTextfieldAppearance=\"none\"\n        automation-id=\"tui-input-range__left-input\"\n        class=\"t-left t-text-input\"\n        [min]=\"min\"\n        [max]=\"value[1]\"\n        [precision]=\"precision\"\n        [decimal]=\"decimal\"\n        [postfix]=\"pluralizeMap && !showLeftValueContent ? (value[0] | i18nPlural: pluralizeMap) : ''\"\n        [disabled]=\"computedDisabled\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldSize]=\"computedSize\"\n        [tuiTextfieldLabelOutside]=\"legacyLabelOutside\"\n        [ngModel]=\"value[0]\"\n        (ngModelChange)=\"onInputLeft($event)\"\n        (focusedChange)=\"onTextInputFocused($event, false)\"\n        (keydown.arrowUp)=\"changeByStep($event, [1, 0])\"\n        (keydown.arrowDown)=\"changeByStep($event, [-1, 0])\"\n    >\n        <ng-content></ng-content>\n        <div\n            *ngIf=\"showLeftValueContent\"\n            polymorpheus-outlet\n            [content]=\"minLabel ? legacyMinLabel : leftValueContent\"\n            [context]=\"{$implicit: value[0]}\"\n        ></div>\n    </tui-input-number>\n\n    <div class=\"t-right\">\n        <tui-input-number\n            tuiTextfieldAppearance=\"none\"\n            automation-id=\"tui-input-range__right-input\"\n            class=\"t-text-input\"\n            [min]=\"value[0]\"\n            [max]=\"max\"\n            [precision]=\"precision\"\n            [decimal]=\"decimal\"\n            [disabled]=\"computedDisabled\"\n            [readOnly]=\"readOnly\"\n            [tuiTextfieldSize]=\"computedSize\"\n            [tuiTextfieldLabelOutside]=\"legacyLabelOutside\"\n            [ngModel]=\"value[1]\"\n            (ngModelChange)=\"onInputRight($event)\"\n            (focusedChange)=\"onTextInputFocused($event, true)\"\n            (keydown.arrowUp)=\"changeByStep($event, [0, 1])\"\n            (keydown.arrowDown)=\"changeByStep($event, [0, -1])\"\n        >\n            <div\n                *ngIf=\"showRightValueContent\"\n                polymorpheus-outlet\n                [content]=\"maxLabel ? legacyMaxLabel : rightValueContent\"\n                [context]=\"{$implicit: value[1]}\"\n            ></div>\n        </tui-input-number>\n\n        <!-- TODO replace by postfix of the right InputNumber (after fix https://github.com/Tinkoff/taiga-ui/issues/1193) -->\n        <span\n            *ngIf=\"!showRightValueContent && pluralizeMap\"\n            automation-id=\"tui-input-range__pluralize-right\"\n            class=\"t-pluralize-right\"\n        >\n            &nbsp;{{ value[1] | i18nPlural: pluralizeMap }}\n        </span>\n    </div>\n\n    <tui-range\n        class=\"t-slider\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [steps]=\"computedSteps\"\n        [segments]=\"segments\"\n        [keySteps]=\"keySteps\"\n        [pluralize]=\"segmentsPluralizeMap\"\n        [focusable]=\"false\"\n        [disabled]=\"readOnly || disabled\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onRangeValue($event)\"\n        (tuiPressedChange)=\"focusToTextInput()\"\n        (activeThumbChange)=\"onActiveThumbChange($event)\"\n    ></tui-range>\n</tui-wrapper>\n\n<!-- TODO: 3.0 remove -->\n<ng-template\n    #legacyMinLabel\n    let-value\n>\n    <ng-container *ngIf=\"value === min\">{{ minLabel }}</ng-container>\n    <ng-container *ngIf=\"value !== min\">\n        {{ value }}&nbsp;{{ value | i18nPlural: pluralizeMap || pluralizeMapFallback }}\n    </ng-container>\n</ng-template>\n\n<!-- TODO: 3.0 remove -->\n<ng-template\n    #legacyMaxLabel\n    let-value\n>\n    <ng-container *ngIf=\"value === max\">{{ maxLabel }}</ng-container>\n    <ng-container *ngIf=\"value !== max\">\n        {{ value }}&nbsp;{{ value | i18nPlural: pluralizeMap || pluralizeMapFallback }}\n    </ng-container>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiInputRangeComponent_1; }),
                },
                TEXTFIELD_CONTROLLER_PROVIDER,
            ],
            host: {
                /**
                 * TODO: 3.0 delete it
                 * Dont forget to clear html-tags
                 */
                '[class._show-ticks-labels]': '!isNew',
            },
            styles: [".t-wrapper{position:relative}.t-left{width:100%}.t-right{position:absolute;right:0;top:0;display:flex;width:50%;height:100%;text-align:right}.t-right .t-text-input{flex:1}.t-text-input{text-align:inherit}.t-pluralize-right{display:flex;align-items:center;padding:1.125rem var(--tui-padding-m) 0 0;margin-left:-.75rem;font:var(--tui-font-text-s)}:host[data-size='l'] .t-pluralize-right{font:var(--tui-font-text-m);padding-top:1.25rem;margin-left:-1rem;padding-right:var(--tui-padding-l)}:host._label-outside .t-pluralize-right{padding-top:0}:host._disabled .t-pluralize-right{color:var(--tui-text-03)}:host{display:block;border-radius:var(--tui-radius-m)}:host._show-ticks-labels._segmented{border-bottom:26px solid transparent}.t-slider{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0;background:0 0}"]
        })
        /**
         * `AbstractTuiInputSlider` includes all legacy code (it can be deleted in v3.0)
         * TODO replace `extends AbstractTuiInputSlider<[number, number]>` by `extends AbstractTuiControl<[number, number]> implements TuiWithOptionalMinMax<number>`
         */
        ,
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(TUI_IS_MOBILE)),
        __param(3, Inject(TUI_TEXTFIELD_APPEARANCE)),
        __param(4, Inject(ElementRef)),
        __param(5, Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)),
        __param(6, Optional()),
        __param(6, Inject(TuiNewRangeDirective))
    ], TuiInputRangeComponent);
    return TuiInputRangeComponent;
}(AbstractTuiInputSlider));
export { TuiInputRangeComponent };
export function tuiTextfieldAppearanceDirectiveFactory(_a) {
    var nativeElement = _a.nativeElement;
    return nativeElement.getAttribute('tuiTextfieldAppearance');
}
var TuiTextfieldAppearanceDirective = /** @class */ (function () {
    function TuiTextfieldAppearanceDirective() {
    }
    TuiTextfieldAppearanceDirective = __decorate([
        Directive({
            selector: '[tuiTextfieldAppearance]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_APPEARANCE,
                    deps: [ElementRef],
                    useFactory: tuiTextfieldAppearanceDirectiveFactory,
                },
            ],
        })
    ], TuiTextfieldAppearanceDirective);
    return TuiTextfieldAppearanceDirective;
}());
export { TuiTextfieldAppearanceDirective };
//# sourceMappingURL=data:application/json;base64,