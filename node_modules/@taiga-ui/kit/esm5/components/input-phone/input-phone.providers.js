import { DOCUMENT } from '@angular/common';
import { forwardRef, InjectionToken } from '@angular/core';
import { AbstractTuiControl, TUI_FOCUSABLE_ITEM_ACCESSOR, TuiDestroyService, } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_HOST } from '@taiga-ui/core';
import { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';
import { fromEvent, merge } from 'rxjs';
import { flatMap, startWith, takeUntil, windowToggle } from 'rxjs/operators';
import { TuiInputPhoneComponent } from './input-phone.component';
export var SELECTION_STREAM = new InjectionToken("A stream of selection changes");
export var INPUT_PHONE_PROVIDERS = [
    TuiDestroyService,
    FIXED_DROPDOWN_CONTROLLER_PROVIDER,
    {
        provide: AbstractTuiControl,
        useExisting: forwardRef(function () { return TuiInputPhoneComponent; }),
    },
    {
        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
        useExisting: forwardRef(function () { return TuiInputPhoneComponent; }),
    },
    {
        provide: TUI_DATA_LIST_HOST,
        useExisting: forwardRef(function () { return TuiInputPhoneComponent; }),
    },
    {
        provide: SELECTION_STREAM,
        deps: [TuiDestroyService, DOCUMENT],
        useFactory: selectionStreamFactory,
    },
];
// eslint-disable-next-line @typescript-eslint/naming-convention
export function selectionStreamFactory(destroy$, documentRef) {
    return fromEvent(documentRef, "selectionchange").pipe(windowToggle(merge(fromEvent(documentRef, "mouseup"), fromEvent(documentRef, "keydown")), function () { return fromEvent(documentRef, "mousedown"); }), flatMap(function (windowed$) { return windowed$.pipe(startWith(null)); }), takeUntil(destroy$));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcGhvbmUucHJvdmlkZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2lucHV0LXBob25lLyIsInNvdXJjZXMiOlsiaW5wdXQtcGhvbmUucHJvdmlkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUMsVUFBVSxFQUFFLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQ0gsa0JBQWtCLEVBQ2xCLDJCQUEyQixFQUMzQixpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEQsT0FBTyxFQUFDLGtDQUFrQyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDM0UsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQWEsTUFBTSxNQUFNLENBQUM7QUFDbEQsT0FBTyxFQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTNFLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRS9ELE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLElBQUksY0FBYyxDQUM5QywrQkFBK0IsQ0FDbEMsQ0FBQztBQUNGLE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHO0lBQ2pDLGlCQUFpQjtJQUNqQixrQ0FBa0M7SUFDbEM7UUFDSSxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDO0tBQ3hEO0lBQ0Q7UUFDSSxPQUFPLEVBQUUsMkJBQTJCO1FBQ3BDLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDO0tBQ3hEO0lBQ0Q7UUFDSSxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDO0tBQ3hEO0lBQ0Q7UUFDSSxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQztRQUNuQyxVQUFVLEVBQUUsc0JBQXNCO0tBQ3JDO0NBQ0osQ0FBQztBQUVGLGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsc0JBQXNCLENBQ2xDLFFBQTZCLEVBQzdCLFdBQXFCO0lBRXJCLE9BQU8sU0FBUyxDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDLElBQUksQ0FDakQsWUFBWSxDQUNSLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUMsRUFDM0UsY0FBTSxPQUFBLFNBQVMsQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLEVBQW5DLENBQW1DLENBQzVDLEVBQ0QsT0FBTyxDQUFDLFVBQUEsU0FBUyxJQUFJLE9BQUEsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBL0IsQ0FBK0IsQ0FBQyxFQUNyRCxTQUFTLENBQUMsUUFBUSxDQUFDLENBQ3RCLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtET0NVTUVOVH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7Zm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBBYnN0cmFjdFR1aUNvbnRyb2wsXG4gICAgVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgIFR1aURlc3Ryb3lTZXJ2aWNlLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX0RBVEFfTElTVF9IT1NUfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge0ZJWEVEX0RST1BET1dOX0NPTlRST0xMRVJfUFJPVklERVJ9IGZyb20gJ0B0YWlnYS11aS9raXQvcHJvdmlkZXJzJztcbmltcG9ydCB7ZnJvbUV2ZW50LCBtZXJnZSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2ZsYXRNYXAsIHN0YXJ0V2l0aCwgdGFrZVVudGlsLCB3aW5kb3dUb2dnbGV9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHtUdWlJbnB1dFBob25lQ29tcG9uZW50fSBmcm9tICcuL2lucHV0LXBob25lLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBTRUxFQ1RJT05fU1RSRUFNID0gbmV3IEluamVjdGlvblRva2VuPE9ic2VydmFibGU8dW5rbm93bj4+KFxuICAgIGBBIHN0cmVhbSBvZiBzZWxlY3Rpb24gY2hhbmdlc2AsXG4pO1xuZXhwb3J0IGNvbnN0IElOUFVUX1BIT05FX1BST1ZJREVSUyA9IFtcbiAgICBUdWlEZXN0cm95U2VydmljZSxcbiAgICBGSVhFRF9EUk9QRE9XTl9DT05UUk9MTEVSX1BST1ZJREVSLFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogQWJzdHJhY3RUdWlDb250cm9sLFxuICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlJbnB1dFBob25lQ29tcG9uZW50KSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlJbnB1dFBob25lQ29tcG9uZW50KSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogVFVJX0RBVEFfTElTVF9IT1NULFxuICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlJbnB1dFBob25lQ29tcG9uZW50KSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogU0VMRUNUSU9OX1NUUkVBTSxcbiAgICAgICAgZGVwczogW1R1aURlc3Ryb3lTZXJ2aWNlLCBET0NVTUVOVF0sXG4gICAgICAgIHVzZUZhY3Rvcnk6IHNlbGVjdGlvblN0cmVhbUZhY3RvcnksXG4gICAgfSxcbl07XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rpb25TdHJlYW1GYWN0b3J5KFxuICAgIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHVua25vd24+LFxuICAgIGRvY3VtZW50UmVmOiBEb2N1bWVudCxcbik6IE9ic2VydmFibGU8dW5rbm93bj4ge1xuICAgIHJldHVybiBmcm9tRXZlbnQoZG9jdW1lbnRSZWYsIGBzZWxlY3Rpb25jaGFuZ2VgKS5waXBlKFxuICAgICAgICB3aW5kb3dUb2dnbGUoXG4gICAgICAgICAgICBtZXJnZShmcm9tRXZlbnQoZG9jdW1lbnRSZWYsIGBtb3VzZXVwYCksIGZyb21FdmVudChkb2N1bWVudFJlZiwgYGtleWRvd25gKSksXG4gICAgICAgICAgICAoKSA9PiBmcm9tRXZlbnQoZG9jdW1lbnRSZWYsIGBtb3VzZWRvd25gKSxcbiAgICAgICAgKSxcbiAgICAgICAgZmxhdE1hcCh3aW5kb3dlZCQgPT4gd2luZG93ZWQkLnBpcGUoc3RhcnRXaXRoKG51bGwpKSksXG4gICAgICAgIHRha2VVbnRpbChkZXN0cm95JCksXG4gICAgKTtcbn1cbiJdfQ==