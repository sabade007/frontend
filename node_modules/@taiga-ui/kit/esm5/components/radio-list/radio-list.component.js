import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, HostBinding, Inject, Input, Optional, QueryList, Self, ViewChildren, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, EMPTY_QUERY, isNativeFocusedIn, TUI_DEFAULT_IDENTITY_MATCHER, TUI_FOCUSABLE_ITEM_ACCESSOR, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TuiRadioLabeledComponent } from '@taiga-ui/kit/components/radio-labeled';
var TuiRadioListComponent = /** @class */ (function (_super) {
    __extends(TuiRadioListComponent, _super);
    function TuiRadioListComponent(control, changeDetectorRef, elementRef) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.elementRef = elementRef;
        _this.radioButtons = EMPTY_QUERY;
        _this.items = [];
        _this.size = 'm';
        _this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        _this.orientation = 'vertical';
        _this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        // @bad TODO: Remove & { index: number }
        _this.itemContent = function (_a) {
            var $implicit = _a.$implicit;
            return String($implicit);
        };
        return _this;
    }
    TuiRadioListComponent_1 = TuiRadioListComponent;
    Object.defineProperty(TuiRadioListComponent.prototype, "nativeFocusableElement", {
        get: function () {
            var focusableRadioButton = this.radioButtons.find(function (radioButton) { return radioButton.nativeFocusableElement !== null; });
            return focusableRadioButton ? focusableRadioButton.nativeFocusableElement : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiRadioListComponent.prototype, "focused", {
        get: function () {
            return isNativeFocusedIn(this.elementRef.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    TuiRadioListComponent.prototype.computeId = function (index) {
        return this.id + "-" + index;
    };
    TuiRadioListComponent.prototype.itemIsDisabled = function (item) {
        return this.disabledItemHandler(item);
    };
    TuiRadioListComponent.prototype.getContentContext = function (item, index, active) {
        return { $implicit: item, index: index, active: active };
    };
    TuiRadioListComponent.prototype.onModelChange = function (value) {
        this.updateValue(value);
    };
    TuiRadioListComponent.prototype.itemIsActive = function (item) {
        return this.value === null
            ? item === null
            : this.identityMatcher(this.value, item);
    };
    var TuiRadioListComponent_1;
    TuiRadioListComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] }
    ]; };
    __decorate([
        ViewChildren(TuiRadioLabeledComponent)
    ], TuiRadioListComponent.prototype, "radioButtons", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "items", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-size'),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "identityMatcher", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-tui-host-orientation'),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "orientation", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "disabledItemHandler", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioListComponent.prototype, "itemContent", void 0);
    TuiRadioListComponent = TuiRadioListComponent_1 = __decorate([
        Component({
            selector: 'tui-radio-list',
            template: "<tui-radio-group class=\"t-group\">\n    <tui-radio-labeled\n        *ngFor=\"let item of items; index as index\"\n        class=\"t-item\"\n        [readOnly]=\"readOnly\"\n        [nativeId]=\"computeId(index)\"\n        [disabled]=\"disabled\"\n        [item]=\"item\"\n        [size]=\"size\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [pseudoDisabled]=\"itemIsDisabled(item)\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n    >\n        <div\n            polymorpheus-outlet\n            [content]=\"itemContent\"\n            [context]=\"getContentContext(item, index, itemIsActive(item))\"\n        ></div>\n    </tui-radio-labeled>\n</tui-radio-group>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiRadioListComponent_1; }),
                },
            ],
            styles: [":host{display:block}:host._readonly{pointer-events:none}:host[data-tui-host-orientation=horizontal] .t-group{display:flex;justify-content:inherit}:host[data-tui-host-orientation=horizontal] .t-item:nth-child(n+2){margin-left:1.5rem}:host[data-tui-host-orientation=vertical] .t-item:nth-child(n+2){margin-top:.75rem}:host[data-size='l'][data-tui-host-orientation=horizontal] .t-item:nth-child(n+2){margin-left:2.5rem}:host[data-size='l'][data-tui-host-orientation=vertical] .t-item:nth-child(n+2){margin-top:1rem}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(ElementRef))
    ], TuiRadioListComponent);
    return TuiRadioListComponent;
}(AbstractTuiNullableControl));
export { TuiRadioListComponent };
//# sourceMappingURL=data:application/json;base64,