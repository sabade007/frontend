import { __assign } from "tslib";
import { InjectionToken } from '@angular/core';
import { TUI_ARROW } from './arrow.component';
// TODO: 3.0 remove in ivy compilation
export var TUI_ARROW_ICON_SMALL = "tuiIconChevronDown";
export var TUI_ARROW_ICON_LARGE = "tuiIconChevronDownLarge";
/** Default values for arrow options */
export var TUI_ARROW_DEFAULT_OPTIONS = {
    iconSmall: TUI_ARROW_ICON_SMALL,
    iconLarge: TUI_ARROW_ICON_LARGE,
};
export var TUI_ARROW_OPTIONS = new InjectionToken("Default parameters for arrow component", {
    factory: function () { return TUI_ARROW_DEFAULT_OPTIONS; },
});
export var tuiArrowOptionsProvider = function (options) { return ({
    provide: TUI_ARROW_OPTIONS,
    useValue: __assign(__assign({}, TUI_ARROW_DEFAULT_OPTIONS), options),
}); };
export var TUI_ARROW_MODE = new InjectionToken("Type of icon in dropdowns for interactive or disable mode", {
    factory: function () { return ({
        interactive: TUI_ARROW,
        disabled: TUI_ARROW,
    }); },
});
export var tuiArrowModeProvider = function (options) { return ({
    provide: TUI_ARROW_MODE,
    useValue: __assign({ interactive: TUI_ARROW, disabled: TUI_ARROW }, options),
}); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyb3ctb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9hcnJvdy8iLCJzb3VyY2VzIjpbImFycm93LW9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxjQUFjLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBSzVELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQU81QyxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7QUFDekQsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQUcseUJBQXlCLENBQUM7QUFFOUQsdUNBQXVDO0FBQ3ZDLE1BQU0sQ0FBQyxJQUFNLHlCQUF5QixHQUFvQjtJQUN0RCxTQUFTLEVBQUUsb0JBQW9CO0lBQy9CLFNBQVMsRUFBRSxvQkFBb0I7Q0FDbEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLElBQUksY0FBYyxDQUMvQyx3Q0FBd0MsRUFDeEM7SUFDSSxPQUFPLEVBQUUsY0FBTSxPQUFBLHlCQUF5QixFQUF6QixDQUF5QjtDQUMzQyxDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FFZixVQUFDLE9BQWlDLElBQUssT0FBQSxDQUFDO0lBQ3pELE9BQU8sRUFBRSxpQkFBaUI7SUFDMUIsUUFBUSx3QkFBTSx5QkFBeUIsR0FBSyxPQUFPLENBQUM7Q0FDdkQsQ0FBQyxFQUgwRCxDQUcxRCxDQUFDO0FBV0gsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFpQyxJQUFJLGNBQWMsQ0FDMUUsMkRBQTJELEVBQzNEO0lBQ0ksT0FBTyxFQUFFLGNBQU0sT0FBQSxDQUFDO1FBQ1osV0FBVyxFQUFFLFNBQVM7UUFDdEIsUUFBUSxFQUFFLFNBQVM7S0FDdEIsQ0FBQyxFQUhhLENBR2I7Q0FDTCxDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBc0QsVUFDbkYsT0FBOEIsSUFDN0IsT0FBQSxDQUFDO0lBQ0YsT0FBTyxFQUFFLGNBQWM7SUFDdkIsUUFBUSxhQUNKLFdBQVcsRUFBRSxTQUFTLEVBQ3RCLFFBQVEsRUFBRSxTQUFTLElBQ2hCLE9BQU8sQ0FDYjtDQUNKLENBQUMsRUFQRyxDQU9ILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGlvblRva2VuLCBWYWx1ZVByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udGV4dFdpdGhJbXBsaWNpdH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVNpemVMLCBUdWlTaXplTSwgVHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuaW1wb3J0IHtUVUlfQVJST1d9IGZyb20gJy4vYXJyb3cuY29tcG9uZW50JztcblxuZXhwb3J0IGludGVyZmFjZSBUdWlBcnJvd09wdGlvbnMge1xuICAgIHJlYWRvbmx5IGljb25TbWFsbDogUG9seW1vcnBoZXVzQ29udGVudDtcbiAgICByZWFkb25seSBpY29uTGFyZ2U6IFBvbHltb3JwaGV1c0NvbnRlbnQ7XG59XG5cbi8vIFRPRE86IDMuMCByZW1vdmUgaW4gaXZ5IGNvbXBpbGF0aW9uXG5leHBvcnQgY29uc3QgVFVJX0FSUk9XX0lDT05fU01BTEwgPSBgdHVpSWNvbkNoZXZyb25Eb3duYDtcbmV4cG9ydCBjb25zdCBUVUlfQVJST1dfSUNPTl9MQVJHRSA9IGB0dWlJY29uQ2hldnJvbkRvd25MYXJnZWA7XG5cbi8qKiBEZWZhdWx0IHZhbHVlcyBmb3IgYXJyb3cgb3B0aW9ucyAqL1xuZXhwb3J0IGNvbnN0IFRVSV9BUlJPV19ERUZBVUxUX09QVElPTlM6IFR1aUFycm93T3B0aW9ucyA9IHtcbiAgICBpY29uU21hbGw6IFRVSV9BUlJPV19JQ09OX1NNQUxMLFxuICAgIGljb25MYXJnZTogVFVJX0FSUk9XX0lDT05fTEFSR0UsXG59O1xuXG5leHBvcnQgY29uc3QgVFVJX0FSUk9XX09QVElPTlMgPSBuZXcgSW5qZWN0aW9uVG9rZW48VHVpQXJyb3dPcHRpb25zPihcbiAgICBgRGVmYXVsdCBwYXJhbWV0ZXJzIGZvciBhcnJvdyBjb21wb25lbnRgLFxuICAgIHtcbiAgICAgICAgZmFjdG9yeTogKCkgPT4gVFVJX0FSUk9XX0RFRkFVTFRfT1BUSU9OUyxcbiAgICB9LFxuKTtcblxuZXhwb3J0IGNvbnN0IHR1aUFycm93T3B0aW9uc1Byb3ZpZGVyOiAoXG4gICAgb3B0aW9uczogUGFydGlhbDxUdWlBcnJvd09wdGlvbnM+LFxuKSA9PiBWYWx1ZVByb3ZpZGVyID0gKG9wdGlvbnM6IFBhcnRpYWw8VHVpQXJyb3dPcHRpb25zPikgPT4gKHtcbiAgICBwcm92aWRlOiBUVUlfQVJST1dfT1BUSU9OUyxcbiAgICB1c2VWYWx1ZTogey4uLlRVSV9BUlJPV19ERUZBVUxUX09QVElPTlMsIC4uLm9wdGlvbnN9LFxufSk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpQXJyb3dNb2RlIHtcbiAgICByZWFkb25seSBpbnRlcmFjdGl2ZTogUG9seW1vcnBoZXVzQ29udGVudDxcbiAgICAgICAgVHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUdWlTaXplTCB8IFR1aVNpemVNIHwgVHVpU2l6ZVM+XG4gICAgPjtcbiAgICByZWFkb25seSBkaXNhYmxlZDogUG9seW1vcnBoZXVzQ29udGVudDxcbiAgICAgICAgVHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUdWlTaXplTCB8IFR1aVNpemVNIHwgVHVpU2l6ZVM+XG4gICAgPjtcbn1cblxuZXhwb3J0IGNvbnN0IFRVSV9BUlJPV19NT0RFOiBJbmplY3Rpb25Ub2tlbjxUdWlBcnJvd01vZGU+ID0gbmV3IEluamVjdGlvblRva2VuKFxuICAgIGBUeXBlIG9mIGljb24gaW4gZHJvcGRvd25zIGZvciBpbnRlcmFjdGl2ZSBvciBkaXNhYmxlIG1vZGVgLFxuICAgIHtcbiAgICAgICAgZmFjdG9yeTogKCkgPT4gKHtcbiAgICAgICAgICAgIGludGVyYWN0aXZlOiBUVUlfQVJST1csXG4gICAgICAgICAgICBkaXNhYmxlZDogVFVJX0FSUk9XLFxuICAgICAgICB9KSxcbiAgICB9LFxuKTtcblxuZXhwb3J0IGNvbnN0IHR1aUFycm93TW9kZVByb3ZpZGVyOiAob3B0aW9uczogUGFydGlhbDxUdWlBcnJvd01vZGU+KSA9PiBWYWx1ZVByb3ZpZGVyID0gKFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8VHVpQXJyb3dNb2RlPixcbikgPT4gKHtcbiAgICBwcm92aWRlOiBUVUlfQVJST1dfTU9ERSxcbiAgICB1c2VWYWx1ZToge1xuICAgICAgICBpbnRlcmFjdGl2ZTogVFVJX0FSUk9XLFxuICAgICAgICBkaXNhYmxlZDogVFVJX0FSUk9XLFxuICAgICAgICAuLi5vcHRpb25zLFxuICAgIH0sXG59KTtcbiJdfQ==