import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AbstractTuiDialogService } from '@taiga-ui/cdk';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { TUI_PUSH_DEFAULT_OPTIONS } from './push.options';
import { TuiPushAlertComponent } from './push-alert.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/services";
var TuiPushService = /** @class */ (function (_super) {
    __extends(TuiPushService, _super);
    function TuiPushService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.component = new PolymorpheusComponent(TuiPushAlertComponent);
        _this.defaultOptions = TUI_PUSH_DEFAULT_OPTIONS;
        return _this;
    }
    TuiPushService.prototype.open = function (content, options) {
        if (options === void 0) { options = {}; }
        return _super.prototype.open.call(this, content, options);
    };
    TuiPushService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TuiPushService_Factory() { return new TuiPushService(i0.ɵɵinject(i1.TuiIdService)); }, token: TuiPushService, providedIn: "root" });
    TuiPushService = __decorate([
        Injectable({ providedIn: "root" })
    ], TuiPushService);
    return TuiPushService;
}(AbstractTuiDialogService));
export { TuiPushService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3B1c2gvIiwic291cmNlcyI6WyJwdXNoLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLHdCQUF3QixFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUMscUJBQXFCLEVBQXNCLE1BQU0sMEJBQTBCLENBQUM7QUFHcEYsT0FBTyxFQUFDLHdCQUF3QixFQUFpQixNQUFNLGdCQUFnQixDQUFDO0FBQ3hFLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDOzs7QUFHN0Q7SUFBb0Msa0NBQWdEO0lBQXBGO1FBQUEscUVBVUM7UUFUc0IsZUFBUyxHQUFHLElBQUkscUJBQXFCLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUM3RCxvQkFBYyxHQUFHLHdCQUF3QixDQUFDOztLQVFoRTtJQU5HLDZCQUFJLEdBQUosVUFDSSxPQUEyRSxFQUMzRSxPQUFxQztRQUFyQyx3QkFBQSxFQUFBLFlBQXFDO1FBRXJDLE9BQU8saUJBQU0sSUFBSSxZQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4QyxDQUFDOztJQVRRLGNBQWM7UUFEMUIsVUFBVSxDQUFDLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBQyxDQUFDO09BQ3BCLGNBQWMsQ0FVMUI7eUJBbkJEO0NBbUJDLEFBVkQsQ0FBb0Msd0JBQXdCLEdBVTNEO1NBVlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Fic3RyYWN0VHVpRGlhbG9nU2VydmljZSwgVHVpQmFzZURpYWxvZ0NvbnRleHR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb21wb25lbnQsIFBvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1RVSV9QVVNIX0RFRkFVTFRfT1BUSU9OUywgVHVpUHVzaE9wdGlvbnN9IGZyb20gJy4vcHVzaC5vcHRpb25zJztcbmltcG9ydCB7VHVpUHVzaEFsZXJ0Q29tcG9uZW50fSBmcm9tICcuL3B1c2gtYWxlcnQuY29tcG9uZW50JztcblxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46IGByb290YH0pXG5leHBvcnQgY2xhc3MgVHVpUHVzaFNlcnZpY2UgZXh0ZW5kcyBBYnN0cmFjdFR1aURpYWxvZ1NlcnZpY2U8VHVpUHVzaE9wdGlvbnMsIHN0cmluZz4ge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBjb21wb25lbnQgPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aVB1c2hBbGVydENvbXBvbmVudCk7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlZmF1bHRPcHRpb25zID0gVFVJX1BVU0hfREVGQVVMVF9PUFRJT05TO1xuXG4gICAgb3BlbihcbiAgICAgICAgY29udGVudDogUG9seW1vcnBoZXVzQ29udGVudDxUdWlCYXNlRGlhbG9nQ29udGV4dDxzdHJpbmc+ICYgVHVpUHVzaE9wdGlvbnM+LFxuICAgICAgICBvcHRpb25zOiBQYXJ0aWFsPFR1aVB1c2hPcHRpb25zPiA9IHt9LFxuICAgICk6IE9ic2VydmFibGU8c3RyaW5nPiB7XG4gICAgICAgIHJldHVybiBzdXBlci5vcGVuKGNvbnRlbnQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbiJdfQ==