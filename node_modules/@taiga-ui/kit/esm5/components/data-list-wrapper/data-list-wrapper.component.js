import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Inject, Input, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_ACCESSOR } from '@taiga-ui/core';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
var TuiDataListWrapperComponent = /** @class */ (function (_super) {
    __extends(TuiDataListWrapperComponent, _super);
    function TuiDataListWrapperComponent(itemsHandlers) {
        var _this = _super.call(this, itemsHandlers) || this;
        _this.items = [];
        return _this;
    }
    TuiDataListWrapperComponent_1 = TuiDataListWrapperComponent;
    var TuiDataListWrapperComponent_1;
    TuiDataListWrapperComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ITEMS_HANDLERS,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiDataListWrapperComponent.prototype, "items", void 0);
    TuiDataListWrapperComponent = TuiDataListWrapperComponent_1 = __decorate([
        Component({
            selector: 'tui-data-list-wrapper:not([labels])',
            template: "<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n>\n    <button\n        *ngFor=\"let item of items\"\n        #elementRef=\"elementRef\"\n        tuiElement\n        tuiOption\n        automation-id=\"tui-data-list-wrapper__option\"\n        [size]=\"size\"\n        [value]=\"item\"\n        [disabled]=\"disabledItemHandler(item)\"\n    >\n        <span\n            polymorpheus-outlet\n            class=\"t-content\"\n            [content]=\"itemContent\"\n            [context]=\"getContext(item, elementRef)\"\n        ></span>\n    </button>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader\n        automation-id=\"tui-data-list-wrapper__loader\"\n        class=\"t-loader\"\n    ></tui-loader>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_DATA_LIST_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiDataListWrapperComponent_1; }),
                },
            ],
            styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}"]
        }),
        __param(0, Inject(TUI_ITEMS_HANDLERS))
    ], TuiDataListWrapperComponent);
    return TuiDataListWrapperComponent;
}(AbstractTuiDataListWrapper));
export { TuiDataListWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2RhdGEtbGlzdC13cmFwcGVyLyIsInNvdXJjZXMiOlsiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUUxRSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQWMvRDtJQUFvRCwrQ0FBNkI7SUFLN0UscUNBQXdDLGFBQWtDO1FBQTFFLFlBQ0ksa0JBQU0sYUFBYSxDQUFDLFNBQ3ZCO1FBSkQsV0FBSyxHQUF3QixFQUFFLENBQUM7O0lBSWhDLENBQUM7b0NBUFEsMkJBQTJCOzs7Z0RBS3ZCLE1BQU0sU0FBQyxrQkFBa0I7O0lBRnRDO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFOzhEQUNlO0lBSHZCLDJCQUEyQjtRQVp2QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUscUNBQXFDO1lBQy9DLCt3QkFBZ0Q7WUFFaEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSxzQkFBc0I7b0JBQy9CLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLDZCQUEyQixFQUEzQixDQUEyQixDQUFDO2lCQUM3RDthQUNKOztTQUNKLENBQUM7UUFNZSxXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO09BTDlCLDJCQUEyQixDQVF2QztJQUFELGtDQUFDO0NBQUEsQUFSRCxDQUFvRCwwQkFBMEIsR0FRN0U7U0FSWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBmb3J3YXJkUmVmLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX0RBVEFfTElTVF9BQ0NFU1NPUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtUVUlfSVRFTVNfSEFORExFUlMsIFR1aUl0ZW1zSGFuZGxlcnN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcblxuaW1wb3J0IHtBYnN0cmFjdFR1aURhdGFMaXN0V3JhcHBlcn0gZnJvbSAnLi9kYXRhLWxpc3Qtd3JhcHBlcic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWRhdGEtbGlzdC13cmFwcGVyOm5vdChbbGFiZWxzXSknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kYXRhLWxpc3Qtd3JhcHBlci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9kYXRhLWxpc3Qtd3JhcHBlci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EQVRBX0xJU1RfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlEYXRhTGlzdFdyYXBwZXJDb21wb25lbnQpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aURhdGFMaXN0V3JhcHBlckNvbXBvbmVudDxUPiBleHRlbmRzIEFic3RyYWN0VHVpRGF0YUxpc3RXcmFwcGVyPFQ+IHtcbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaXRlbXM6IHJlYWRvbmx5IFRbXSB8IG51bGwgPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX0lURU1TX0hBTkRMRVJTKSBpdGVtc0hhbmRsZXJzOiBUdWlJdGVtc0hhbmRsZXJzPFQ+KSB7XG4gICAgICAgIHN1cGVyKGl0ZW1zSGFuZGxlcnMpO1xuICAgIH1cbn1cbiJdfQ==