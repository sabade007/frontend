import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Inject, Input, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk/decorators';
import { TUI_DATA_LIST_ACCESSOR } from '@taiga-ui/core/tokens';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
var TuiDataListGroupWrapperComponent = /** @class */ (function (_super) {
    __extends(TuiDataListGroupWrapperComponent, _super);
    function TuiDataListGroupWrapperComponent(itemsHandlers) {
        var _this = _super.call(this, itemsHandlers) || this;
        _this.items = [];
        _this.labels = [];
        return _this;
    }
    TuiDataListGroupWrapperComponent_1 = TuiDataListGroupWrapperComponent;
    var TuiDataListGroupWrapperComponent_1;
    TuiDataListGroupWrapperComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ITEMS_HANDLERS,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiDataListGroupWrapperComponent.prototype, "items", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiDataListGroupWrapperComponent.prototype, "labels", void 0);
    TuiDataListGroupWrapperComponent = TuiDataListGroupWrapperComponent_1 = __decorate([
        Component({
            selector: 'tui-data-list-wrapper[labels]',
            template: "<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n>\n    <tui-opt-group\n        *ngFor=\"let group of items; let index = index\"\n        [label]=\"labels[index]\"\n    >\n        <button\n            *ngFor=\"let item of group\"\n            #elementRef=\"elementRef\"\n            tuiElement\n            tuiOption\n            automation-id=\"tui-data-list-wrapper__option\"\n            [size]=\"size\"\n            [value]=\"item\"\n            [disabled]=\"disabledItemHandler(item)\"\n        >\n            <span\n                polymorpheus-outlet\n                class=\"t-content\"\n                [content]=\"itemContent\"\n                [context]=\"getContext(item, elementRef)\"\n            ></span>\n        </button>\n    </tui-opt-group>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader class=\"t-loader\"></tui-loader>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_DATA_LIST_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiDataListGroupWrapperComponent_1; }),
                },
            ],
            styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}"]
        }),
        __param(0, Inject(TUI_ITEMS_HANDLERS))
    ], TuiDataListGroupWrapperComponent);
    return TuiDataListGroupWrapperComponent;
}(AbstractTuiDataListWrapper));
export { TuiDataListGroupWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2RhdGEtbGlzdC13cmFwcGVyLyIsInNvdXJjZXMiOlsiZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDeEQsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFDLGtCQUFrQixFQUFtQixNQUFNLHNCQUFzQixDQUFDO0FBRTFFLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBYy9EO0lBQXlELG9EQUE2QjtJQVNsRiwwQ0FBd0MsYUFBa0M7UUFBMUUsWUFDSSxrQkFBTSxhQUFhLENBQUMsU0FDdkI7UUFSRCxXQUFLLEdBQTBCLEVBQUUsQ0FBQztRQUlsQyxZQUFNLEdBQXNCLEVBQUUsQ0FBQzs7SUFJL0IsQ0FBQzt5Q0FYUSxnQ0FBZ0M7OztnREFTNUIsTUFBTSxTQUFDLGtCQUFrQjs7SUFOdEM7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7bUVBQ2lCO0lBSWxDO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFO29FQUNjO0lBUHRCLGdDQUFnQztRQVo1QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsK0JBQStCO1lBQ3pDLHk1QkFBc0Q7WUFFdEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSxzQkFBc0I7b0JBQy9CLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLGtDQUFnQyxFQUFoQyxDQUFnQyxDQUFDO2lCQUNsRTthQUNKOztTQUNKLENBQUM7UUFVZSxXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO09BVDlCLGdDQUFnQyxDQVk1QztJQUFELHVDQUFDO0NBQUEsQUFaRCxDQUF5RCwwQkFBMEIsR0FZbEY7U0FaWSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBmb3J3YXJkUmVmLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2RlY29yYXRvcnMnO1xuaW1wb3J0IHtUVUlfREFUQV9MSVNUX0FDQ0VTU09SfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHtUVUlfSVRFTVNfSEFORExFUlMsIFR1aUl0ZW1zSGFuZGxlcnN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcblxuaW1wb3J0IHtBYnN0cmFjdFR1aURhdGFMaXN0V3JhcHBlcn0gZnJvbSAnLi9kYXRhLWxpc3Qtd3JhcHBlcic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWRhdGEtbGlzdC13cmFwcGVyW2xhYmVsc10nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kYXRhLWxpc3QtZ3JvdXAtd3JhcHBlci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9kYXRhLWxpc3Qtd3JhcHBlci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EQVRBX0xJU1RfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlEYXRhTGlzdEdyb3VwV3JhcHBlckNvbXBvbmVudCksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRGF0YUxpc3RHcm91cFdyYXBwZXJDb21wb25lbnQ8VD4gZXh0ZW5kcyBBYnN0cmFjdFR1aURhdGFMaXN0V3JhcHBlcjxUPiB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGl0ZW1zOiByZWFkb25seSBUW11bXSB8IG51bGwgPSBbXTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBsYWJlbHM6IHJlYWRvbmx5IHN0cmluZ1tdID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFRVSV9JVEVNU19IQU5ETEVSUykgaXRlbXNIYW5kbGVyczogVHVpSXRlbXNIYW5kbGVyczxUPikge1xuICAgICAgICBzdXBlcihpdGVtc0hhbmRsZXJzKTtcbiAgICB9XG59XG4iXX0=