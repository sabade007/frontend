import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, Inject, Input, Optional, Output, Self, TemplateRef, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, isNativeFocused, isPresent, setNativeFocused, TUI_STRICT_MATCHER, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_ACCESSOR, TuiDataListDirective, TuiHostedDropdownComponent, TuiPrimitiveTextfieldComponent, } from '@taiga-ui/core';
import { TUI_ARROW_MODE } from '@taiga-ui/kit/components/arrow';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { TUI_COMBO_BOX_PROVIDERS } from './combo-box.providers';
var TuiComboBoxComponent = /** @class */ (function (_super) {
    __extends(TuiComboBoxComponent, _super);
    function TuiComboBoxComponent(control, changeDetectorRef, arrowMode, itemsHandlers) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.arrowMode = arrowMode;
        _this.itemsHandlers = itemsHandlers;
        _this.stringify = _this.itemsHandlers.stringify;
        _this.strictMatcher = TUI_STRICT_MATCHER;
        _this.identityMatcher = _this.itemsHandlers.identityMatcher;
        _this.valueContent = '';
        _this.strict = true;
        _this.search = null;
        _this.searchChange = new EventEmitter();
        _this.datalist = '';
        _this.open = false;
        return _this;
    }
    Object.defineProperty(TuiComboBoxComponent.prototype, "arrow", {
        get: function () {
            return !this.interactive ? this.arrowMode.disabled : this.arrowMode.interactive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiComboBoxComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.textfield ? this.textfield.nativeFocusableElement : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiComboBoxComponent.prototype, "focused", {
        get: function () {
            return (isNativeFocused(this.nativeFocusableElement) ||
                (!!this.hostedDropdown && this.hostedDropdown.focused));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiComboBoxComponent.prototype, "nativeValue", {
        get: function () {
            return this.value === null ? this.search || '' : this.stringify(this.value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiComboBoxComponent.prototype, "showValueTemplate", {
        get: function () {
            return isPresent(this.value) && !this.focused;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiComboBoxComponent.prototype, "computedContent", {
        get: function () {
            return this.valueContent || this.nativeValue;
        },
        enumerable: true,
        configurable: true
    });
    TuiComboBoxComponent.prototype.onActiveZone = function (active) {
        this.updateFocused(active);
    };
    TuiComboBoxComponent.prototype.checkOption = function (option) {
        if (!this.isStrictMatch(option)) {
            return;
        }
        this.updateValue(option);
        this.updateSearch(null);
    };
    TuiComboBoxComponent.prototype.handleOption = function (item) {
        this.focusInput();
        this.close();
        this.updateSearch(null);
        this.updateValue(item);
        if (this.value) {
            this.setNativeValue(this.stringify(item));
        }
    };
    TuiComboBoxComponent.prototype.onFieldKeyDownEnter = function (event) {
        var _a;
        if (this.open) {
            event.preventDefault();
        }
        var options = ((_a = this.accessor) === null || _a === void 0 ? void 0 : _a.getOptions()) || [];
        if (options.length !== 1) {
            return;
        }
        this.updateValue(options[0]);
        this.updateSearch(null);
        this.close();
    };
    TuiComboBoxComponent.prototype.onValueChange = function (value) {
        var _this = this;
        var _a, _b;
        this.updateSearch(value);
        var match = (_a = this.accessor) === null || _a === void 0 ? void 0 : _a.getOptions().find(function (item) { return _this.isStrictMatch(item); });
        if (match !== undefined) {
            this.updateValue(match);
            this.updateSearch(null);
            return;
        }
        if (this.strict || this.search === '') {
            this.updateValue(null);
        }
        (_b = this.hostedDropdown) === null || _b === void 0 ? void 0 : _b.updateOpen(true);
    };
    TuiComboBoxComponent.prototype.updateValue = function (value) {
        _super.prototype.updateValue.call(this, value);
    };
    TuiComboBoxComponent.prototype.onHovered = function (hovered) {
        this.updateHovered(hovered);
    };
    TuiComboBoxComponent.prototype.toggle = function () {
        var _a;
        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(!this.open);
    };
    TuiComboBoxComponent.prototype.isStrictMatch = function (item) {
        return this.strictMatcher(item, this.search || '', this.stringify);
    };
    TuiComboBoxComponent.prototype.close = function () {
        var _a;
        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(false);
    };
    TuiComboBoxComponent.prototype.updateSearch = function (search) {
        if (this.search === search) {
            return;
        }
        this.search = search;
        this.searchChange.emit(search);
    };
    TuiComboBoxComponent.prototype.setNativeValue = function (value) {
        if (this.nativeFocusableElement) {
            this.nativeFocusableElement.value = value;
        }
    };
    TuiComboBoxComponent.prototype.focusInput = function (preventScroll) {
        if (preventScroll === void 0) { preventScroll = false; }
        if (this.nativeFocusableElement) {
            setNativeFocused(this.nativeFocusableElement, true, preventScroll);
        }
    };
    TuiComboBoxComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ARROW_MODE,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ITEMS_HANDLERS,] }] }
    ]; };
    __decorate([
        ContentChild(TUI_DATA_LIST_ACCESSOR)
    ], TuiComboBoxComponent.prototype, "accessor", void 0);
    __decorate([
        ViewChild(TuiHostedDropdownComponent)
    ], TuiComboBoxComponent.prototype, "hostedDropdown", void 0);
    __decorate([
        ViewChild(TuiPrimitiveTextfieldComponent)
    ], TuiComboBoxComponent.prototype, "textfield", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "stringify", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "strictMatcher", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "identityMatcher", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "valueContent", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "strict", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiComboBoxComponent.prototype, "search", void 0);
    __decorate([
        Output()
    ], TuiComboBoxComponent.prototype, "searchChange", void 0);
    __decorate([
        ContentChild(TuiDataListDirective, { read: TemplateRef })
    ], TuiComboBoxComponent.prototype, "datalist", void 0);
    TuiComboBoxComponent = __decorate([
        Component({
            selector: 'tui-combo-box',
            template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive\"\n    [content]=\"datalist || ''\"\n    [(open)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-primitive-textfield\n        automation-id=\"tui-combo-box__textfield\"\n        class=\"t-textfield\"\n        [pseudoFocused]=\"computedFocused\"\n        [pseudoHovered]=\"computedHovered\"\n        [invalid]=\"computedInvalid\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [iconContent]=\"arrow ? icon : ''\"\n        [disabled]=\"computedDisabled\"\n        [focusable]=\"computedFocusable\"\n        [value]=\"nativeValue\"\n        (valueChange)=\"onValueChange($event)\"\n        (hoveredChange)=\"onHovered($event)\"\n        (click)=\"toggle()\"\n        (keydown.enter)=\"onFieldKeyDownEnter($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n        <div\n            *ngIf=\"showValueTemplate\"\n            polymorpheus-outlet\n            automation-id=\"tui-combo-box__template\"\n            class=\"t-value\"\n            [content]=\"computedContent\"\n            [context]=\"{$implicit: value!, active: computedFocused}\"\n        ></div>\n    </tui-primitive-textfield>\n\n    <ng-template #icon>\n        <div\n            polymorpheus-outlet\n            class=\"t-icon\"\n            [content]=\"arrow\"\n        ></div>\n    </ng-template>\n</tui-hosted-dropdown>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: TUI_COMBO_BOX_PROVIDERS,
            styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-value{display:flex;width:100%;align-items:center}.t-icon{pointer-events:auto}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(TUI_ARROW_MODE)),
        __param(3, Inject(TUI_ITEMS_HANDLERS))
    ], TuiComboBoxComponent);
    return TuiComboBoxComponent;
}(AbstractTuiNullableControl));
export { TuiComboBoxComponent };
//# sourceMappingURL=data:application/json;base64,