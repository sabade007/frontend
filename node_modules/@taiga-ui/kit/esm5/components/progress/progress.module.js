import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TuiRepeatTimesModule } from '@taiga-ui/cdk';
import { TuiProgressBarComponent } from './progress-bar/progress-bar.component';
import { TuiProgressColorSegmentsDirective } from './progress-bar/progress-color-segments.directive';
import { TuiProgressCircleComponent } from './progress-circle/progress-circle.component';
import { TuiProgressLabelComponent } from './progress-label/progress-label.component';
import { TuiProgressSegmentedComponent } from './progress-segmented/progress-segmented.component';
import { TuiProgressColorSegmentsPipe } from './utils/progress-color-segments.pipe';
import { TuiProgressColorSegmentsAsyncPipe } from './utils/progress-color-segments-async.pipe';
var TuiProgressModule = /** @class */ (function () {
    function TuiProgressModule() {
    }
    TuiProgressModule = __decorate([
        NgModule({
            imports: [CommonModule, TuiRepeatTimesModule],
            declarations: [
                TuiProgressBarComponent,
                TuiProgressColorSegmentsDirective,
                TuiProgressColorSegmentsPipe,
                TuiProgressColorSegmentsAsyncPipe,
                TuiProgressCircleComponent,
                TuiProgressLabelComponent,
                TuiProgressSegmentedComponent,
            ],
            exports: [
                TuiProgressBarComponent,
                TuiProgressCircleComponent,
                TuiProgressColorSegmentsDirective,
                TuiProgressColorSegmentsPipe,
                TuiProgressColorSegmentsAsyncPipe,
                TuiProgressLabelComponent,
                TuiProgressSegmentedComponent,
            ],
        })
    ], TuiProgressModule);
    return TuiProgressModule;
}());
export { TuiProgressModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3Byb2dyZXNzLyIsInNvdXJjZXMiOlsicHJvZ3Jlc3MubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDOUUsT0FBTyxFQUFDLGlDQUFpQyxFQUFDLE1BQU0sa0RBQWtELENBQUM7QUFDbkcsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sNkNBQTZDLENBQUM7QUFDdkYsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDcEYsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sbURBQW1ELENBQUM7QUFDaEcsT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDbEYsT0FBTyxFQUFDLGlDQUFpQyxFQUFDLE1BQU0sNENBQTRDLENBQUM7QUF1QjdGO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixpQkFBaUI7UUFyQjdCLFFBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsQ0FBQztZQUM3QyxZQUFZLEVBQUU7Z0JBQ1YsdUJBQXVCO2dCQUN2QixpQ0FBaUM7Z0JBQ2pDLDRCQUE0QjtnQkFDNUIsaUNBQWlDO2dCQUNqQywwQkFBMEI7Z0JBQzFCLHlCQUF5QjtnQkFDekIsNkJBQTZCO2FBQ2hDO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLHVCQUF1QjtnQkFDdkIsMEJBQTBCO2dCQUMxQixpQ0FBaUM7Z0JBQ2pDLDRCQUE0QjtnQkFDNUIsaUNBQWlDO2dCQUNqQyx5QkFBeUI7Z0JBQ3pCLDZCQUE2QjthQUNoQztTQUNKLENBQUM7T0FDVyxpQkFBaUIsQ0FBRztJQUFELHdCQUFDO0NBQUEsQUFBakMsSUFBaUM7U0FBcEIsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpUmVwZWF0VGltZXNNb2R1bGV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5pbXBvcnQge1R1aVByb2dyZXNzQmFyQ29tcG9uZW50fSBmcm9tICcuL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50JztcbmltcG9ydCB7VHVpUHJvZ3Jlc3NDb2xvclNlZ21lbnRzRGlyZWN0aXZlfSBmcm9tICcuL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1jb2xvci1zZWdtZW50cy5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlQcm9ncmVzc0NpcmNsZUNvbXBvbmVudH0gZnJvbSAnLi9wcm9ncmVzcy1jaXJjbGUvcHJvZ3Jlc3MtY2lyY2xlLmNvbXBvbmVudCc7XG5pbXBvcnQge1R1aVByb2dyZXNzTGFiZWxDb21wb25lbnR9IGZyb20gJy4vcHJvZ3Jlc3MtbGFiZWwvcHJvZ3Jlc3MtbGFiZWwuY29tcG9uZW50JztcbmltcG9ydCB7VHVpUHJvZ3Jlc3NTZWdtZW50ZWRDb21wb25lbnR9IGZyb20gJy4vcHJvZ3Jlc3Mtc2VnbWVudGVkL3Byb2dyZXNzLXNlZ21lbnRlZC5jb21wb25lbnQnO1xuaW1wb3J0IHtUdWlQcm9ncmVzc0NvbG9yU2VnbWVudHNQaXBlfSBmcm9tICcuL3V0aWxzL3Byb2dyZXNzLWNvbG9yLXNlZ21lbnRzLnBpcGUnO1xuaW1wb3J0IHtUdWlQcm9ncmVzc0NvbG9yU2VnbWVudHNBc3luY1BpcGV9IGZyb20gJy4vdXRpbHMvcHJvZ3Jlc3MtY29sb3Itc2VnbWVudHMtYXN5bmMucGlwZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgVHVpUmVwZWF0VGltZXNNb2R1bGVdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBUdWlQcm9ncmVzc0JhckNvbXBvbmVudCxcbiAgICAgICAgVHVpUHJvZ3Jlc3NDb2xvclNlZ21lbnRzRGlyZWN0aXZlLFxuICAgICAgICBUdWlQcm9ncmVzc0NvbG9yU2VnbWVudHNQaXBlLFxuICAgICAgICBUdWlQcm9ncmVzc0NvbG9yU2VnbWVudHNBc3luY1BpcGUsXG4gICAgICAgIFR1aVByb2dyZXNzQ2lyY2xlQ29tcG9uZW50LFxuICAgICAgICBUdWlQcm9ncmVzc0xhYmVsQ29tcG9uZW50LFxuICAgICAgICBUdWlQcm9ncmVzc1NlZ21lbnRlZENvbXBvbmVudCxcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgVHVpUHJvZ3Jlc3NCYXJDb21wb25lbnQsXG4gICAgICAgIFR1aVByb2dyZXNzQ2lyY2xlQ29tcG9uZW50LFxuICAgICAgICBUdWlQcm9ncmVzc0NvbG9yU2VnbWVudHNEaXJlY3RpdmUsXG4gICAgICAgIFR1aVByb2dyZXNzQ29sb3JTZWdtZW50c1BpcGUsXG4gICAgICAgIFR1aVByb2dyZXNzQ29sb3JTZWdtZW50c0FzeW5jUGlwZSxcbiAgICAgICAgVHVpUHJvZ3Jlc3NMYWJlbENvbXBvbmVudCxcbiAgICAgICAgVHVpUHJvZ3Jlc3NTZWdtZW50ZWRDb21wb25lbnQsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NNb2R1bGUge31cbiJdfQ==