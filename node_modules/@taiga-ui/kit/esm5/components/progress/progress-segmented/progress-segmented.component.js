import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
// eslint-disable-next-line @typescript-eslint/naming-convention
export function nonNegativeInt(value) {
    return Number.isInteger(value) && value >= 0;
}
// eslint-disable-next-line @typescript-eslint/naming-convention
export function positiveInt(value) {
    return Number.isInteger(value) && value > 0;
}
var TuiProgressSegmentedComponent = /** @class */ (function () {
    function TuiProgressSegmentedComponent() {
        this.value = 0;
        this.max = 1;
        this.size = 'm';
        this.colors = 'var(--tui-primary)';
    }
    TuiProgressSegmentedComponent.prototype.getActiveColor = function (index) {
        if (index === void 0) { index = 0; }
        return typeof this.colors === 'string'
            ? this.colors
            : this.colors[index] || this.colors[this.colors.length - 1];
    };
    __decorate([
        Input(),
        tuiDefaultProp(nonNegativeInt, 'Must be non-negative integer between 0 and max')
    ], TuiProgressSegmentedComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        tuiDefaultProp(positiveInt, 'Must be positive integer')
    ], TuiProgressSegmentedComponent.prototype, "max", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-size')
    ], TuiProgressSegmentedComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiProgressSegmentedComponent.prototype, "colors", void 0);
    TuiProgressSegmentedComponent = __decorate([
        Component({
            selector: 'tui-progress-segmented',
            template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<span\n    *tuiRepeatTimes=\"let index of max\"\n    aria-hidden=\"true\"\n    class=\"t-segment\"\n    [style.background]=\"index < value ? getActiveColor(index) : null\"\n></span>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:flex}.t-segment{transition-property:background-color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;flex:1 1 100%;border-radius:var(--tui-radius-xs);background-color:var(--tui-base-03)}.t-segment:not(:last-child){margin-right:.25rem}:host[data-size='s'] .t-segment{height:.25rem}:host[data-size='m'] .t-segment{height:.5rem}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}"]
        })
    ], TuiProgressSegmentedComponent);
    return TuiProgressSegmentedComponent;
}());
export { TuiProgressSegmentedComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3Mtc2VnbWVudGVkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9wcm9ncmVzcy8iLCJzb3VyY2VzIjpbInByb2dyZXNzLXNlZ21lbnRlZC9wcm9ncmVzcy1zZWdtZW50ZWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUc3QyxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFhO0lBQ3hDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLFdBQVcsQ0FBQyxLQUFhO0lBQ3JDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ2hELENBQUM7QUFRRDtJQUFBO1FBR0ksVUFBSyxHQUFHLENBQUMsQ0FBQztRQUlWLFFBQUcsR0FBRyxDQUFDLENBQUM7UUFJUixTQUFJLEdBQWEsR0FBRyxDQUFDO1FBSXJCLFdBQU0sR0FBK0Isb0JBQW9CLENBQUM7SUFPOUQsQ0FBQztJQUxHLHNEQUFjLEdBQWQsVUFBZSxLQUFpQjtRQUFqQixzQkFBQSxFQUFBLFNBQWlCO1FBQzVCLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLFFBQVE7WUFDbEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNO1lBQ2IsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBbEJEO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxDQUFDLGNBQWMsRUFBRSxnREFBZ0QsQ0FBQztnRUFDdkU7SUFJVjtRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsQ0FBQyxXQUFXLEVBQUUsMEJBQTBCLENBQUM7OERBQ2hEO0lBSVI7UUFGQyxLQUFLLEVBQUU7UUFDUCxXQUFXLENBQUMsZ0JBQWdCLENBQUM7K0RBQ1Q7SUFJckI7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7aUVBQ3lDO0lBZmpELDZCQUE2QjtRQU56QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLHlTQUFpRDtZQUVqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDbEQsQ0FBQztPQUNXLDZCQUE2QixDQXNCekM7SUFBRCxvQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBdEJZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplU30gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gbm9uTmVnYXRpdmVJbnQodmFsdWU6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSAmJiB2YWx1ZSA+PSAwO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gcG9zaXRpdmVJbnQodmFsdWU6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSAmJiB2YWx1ZSA+IDA7XG59XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByb2dyZXNzLXNlZ21lbnRlZCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLXNlZ21lbnRlZC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzcy1zZWdtZW50ZWQuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQcm9ncmVzc1NlZ21lbnRlZENvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3Aobm9uTmVnYXRpdmVJbnQsICdNdXN0IGJlIG5vbi1uZWdhdGl2ZSBpbnRlZ2VyIGJldHdlZW4gMCBhbmQgbWF4JylcbiAgICB2YWx1ZSA9IDA7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcChwb3NpdGl2ZUludCwgJ011c3QgYmUgcG9zaXRpdmUgaW50ZWdlcicpXG4gICAgbWF4ID0gMTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgc2l6ZTogVHVpU2l6ZVMgPSAnbSc7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgY29sb3JzOiBzdHJpbmcgfCByZWFkb25seSBzdHJpbmdbXSA9ICd2YXIoLS10dWktcHJpbWFyeSknO1xuXG4gICAgZ2V0QWN0aXZlQ29sb3IoaW5kZXg6IG51bWJlciA9IDApOiBzdHJpbmcgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLmNvbG9ycyA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgID8gdGhpcy5jb2xvcnNcbiAgICAgICAgICAgIDogdGhpcy5jb2xvcnNbaW5kZXhdIHx8IHRoaXMuY29sb3JzW3RoaXMuY29sb3JzLmxlbmd0aCAtIDFdO1xuICAgIH1cbn1cbiJdfQ==