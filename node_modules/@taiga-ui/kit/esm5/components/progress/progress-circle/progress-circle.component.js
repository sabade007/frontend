import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, ViewChild, } from '@angular/core';
import { USER_AGENT, WINDOW } from '@ng-web-apis/common';
import { CHROMIUM_EDGE_START_VERSION, tuiDefaultProp, tuiIsEdgeOlderThan, } from '@taiga-ui/cdk';
import { of } from 'rxjs';
import { delay } from 'rxjs/operators';
// @dynamic
var TuiProgressCircleComponent = /** @class */ (function () {
    function TuiProgressCircleComponent(userAgent, win, el) {
        this.userAgent = userAgent;
        this.win = win;
        this.el = el;
        this.value = 0;
        this.max = 1;
        this.color = null;
        this.size = 'm';
        this.animationDelay$ = of(true).pipe(delay(0));
    }
    Object.defineProperty(TuiProgressCircleComponent.prototype, "progressPercentage", {
        get: function () {
            return this.value / this.max;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiProgressCircleComponent.prototype, "oldEdgeRadiusFallback", {
        get: function () {
            if (!tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent)) {
                return null;
            }
            var strokeWidth = parseInt(this.win.getComputedStyle(this.progressCircle.nativeElement).strokeWidth, 10);
            return (this.el.nativeElement.offsetWidth - strokeWidth) / 2;
        },
        enumerable: true,
        configurable: true
    });
    TuiProgressCircleComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [USER_AGENT,] }] },
        { type: Window, decorators: [{ type: Inject, args: [WINDOW,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] }
    ]; };
    __decorate([
        ViewChild('progressCircle', { static: true })
    ], TuiProgressCircleComponent.prototype, "progressCircle", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiProgressCircleComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiProgressCircleComponent.prototype, "max", void 0);
    __decorate([
        Input(),
        HostBinding('style.--tui-progress-color'),
        tuiDefaultProp()
    ], TuiProgressCircleComponent.prototype, "color", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-size'),
        tuiDefaultProp()
    ], TuiProgressCircleComponent.prototype, "size", void 0);
    __decorate([
        HostBinding('style.--progress-percentage')
    ], TuiProgressCircleComponent.prototype, "progressPercentage", null);
    TuiProgressCircleComponent = __decorate([
        Component({
            selector: 'tui-progress-circle',
            template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<svg\n    height=\"100%\"\n    width=\"100%\"\n    aria-hidden=\"true\"\n    class=\"t-svg\"\n>\n    <circle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-track\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n\n    <circle\n        #progressCircle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-progress\"\n        [class.t-progress_filled]=\"animationDelay$ | async\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n</svg>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{position:relative;display:block;color:var(--tui-primary);transform:rotate(-90deg);transform-origin:center;font-size:1rem}:host[data-size='s']{width:2em;height:2em}:host[data-size='s'] .t-track{\n  r: 0.75em;\n  stroke-width:.5em}:host[data-size='s'] .t-progress{\n  r: 0.75em;\n  stroke-width:.5em;stroke-dasharray:4.71238898em;stroke-dashoffset:4.71238898em}:host[data-size='s'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(4.71238898em - var(--progress-percentage) * 4.71238898em)}:host[data-size='m']{width:3em;height:3em}:host[data-size='m'] .t-track{\n  r: 1.3125em;\n  stroke-width:.375em}:host[data-size='m'] .t-progress{\n  r: 1.3125em;\n  stroke-width:.375em;stroke-dasharray:8.24668072em;stroke-dashoffset:8.24668072em}:host[data-size='m'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(8.24668072em - var(--progress-percentage) * 8.24668072em)}:host[data-size='l']{width:4em;height:4em}:host[data-size='l'] .t-track{\n  r: 1.8125em;\n  stroke-width:.375em}:host[data-size='l'] .t-progress{\n  r: 1.8125em;\n  stroke-width:.375em;stroke-dasharray:11.38827337em;stroke-dashoffset:11.38827337em}:host[data-size='l'] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(11.38827337em - var(--progress-percentage) * 11.38827337em)}:host[data-size=xl]{width:7em;height:7em}:host[data-size=xl] .t-track{\n  r: 3.3125em;\n  stroke-width:.375em}:host[data-size=xl] .t-progress{\n  r: 3.3125em;\n  stroke-width:.375em;stroke-dasharray:20.81305133em;stroke-dashoffset:20.81305133em}:host[data-size=xl] .t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(20.81305133em - var(--progress-percentage) * 20.81305133em)}.t-track{fill:transparent;stroke:var(--tui-base-03)}.t-progress{fill:transparent;stroke:var(--tui-progress-color,currentColor);stroke-linecap:round}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}"]
        }),
        __param(0, Inject(USER_AGENT)),
        __param(1, Inject(WINDOW)),
        __param(2, Inject(ElementRef))
    ], TuiProgressCircleComponent);
    return TuiProgressCircleComponent;
}());
export { TuiProgressCircleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9wcm9ncmVzcy8iLCJzb3VyY2VzIjpbInByb2dyZXNzLWNpcmNsZS9wcm9ncmVzcy1jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEVBQ0wsU0FBUyxHQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUNILDJCQUEyQixFQUMzQixjQUFjLEVBQ2Qsa0JBQWtCLEdBQ3JCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLFdBQVc7QUFPWDtJQTBDSSxvQ0FDeUMsU0FBaUIsRUFDckIsR0FBVyxFQUNQLEVBQTJCO1FBRjNCLGNBQVMsR0FBVCxTQUFTLENBQVE7UUFDckIsUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUNQLE9BQUUsR0FBRixFQUFFLENBQXlCO1FBdkNwRSxVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBSVYsUUFBRyxHQUFHLENBQUMsQ0FBQztRQUtSLFVBQUssR0FBa0IsSUFBSSxDQUFDO1FBSzVCLFNBQUksR0FBeUIsR0FBRyxDQUFDO1FBT2pDLG9CQUFlLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQW1CdkMsQ0FBQztJQXZCSixzQkFBSSwwREFBa0I7YUFBdEI7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNqQyxDQUFDOzs7T0FBQTtJQUlELHNCQUFJLDZEQUFxQjthQUF6QjtZQUNJLElBQUksQ0FBQyxrQkFBa0IsQ0FBQywyQkFBMkIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ2xFLE9BQU8sSUFBSSxDQUFDO2FBQ2Y7WUFFRCxJQUFNLFdBQVcsR0FBRyxRQUFRLENBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxXQUFXLEVBQ3hFLEVBQUUsQ0FDTCxDQUFDO1lBRUYsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakUsQ0FBQzs7O09BQUE7OzZDQUdJLE1BQU0sU0FBQyxVQUFVO2dCQUNvQixNQUFNLHVCQUEzQyxNQUFNLFNBQUMsTUFBTTtnQkFDMkIsVUFBVSx1QkFBbEQsTUFBTSxTQUFDLFVBQVU7O0lBM0N0QjtRQURDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUMsQ0FBQztzRUFDbUI7SUFJL0Q7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7NkRBQ1A7SUFJVjtRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTsyREFDVDtJQUtSO1FBSEMsS0FBSyxFQUFFO1FBQ1AsV0FBVyxDQUFDLDRCQUE0QixDQUFDO1FBQ3pDLGNBQWMsRUFBRTs2REFDVztJQUs1QjtRQUhDLEtBQUssRUFBRTtRQUNQLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztRQUM3QixjQUFjLEVBQUU7NERBQ2dCO0lBR2pDO1FBREMsV0FBVyxDQUFDLDZCQUE2QixDQUFDO3dFQUcxQztJQXpCUSwwQkFBMEI7UUFOdEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQixnbEJBQThDO1lBRTlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztTQUNsRCxDQUFDO1FBNENPLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2xCLFdBQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ2QsV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7T0E3Q2QsMEJBQTBCLENBK0N0QztJQUFELGlDQUFDO0NBQUEsQUEvQ0QsSUErQ0M7U0EvQ1ksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgVmlld0NoaWxkLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VVNFUl9BR0VOVCwgV0lORE9XfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7XG4gICAgQ0hST01JVU1fRURHRV9TVEFSVF9WRVJTSU9OLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIHR1aUlzRWRnZU9sZGVyVGhhbixcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVNpemVTLCBUdWlTaXplWEx9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7b2Z9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtkZWxheX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG4vLyBAZHluYW1pY1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktcHJvZ3Jlc3MtY2lyY2xlJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHJvZ3Jlc3MtY2lyY2xlLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Byb2dyZXNzLWNpcmNsZS5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVByb2dyZXNzQ2lyY2xlQ29tcG9uZW50IHtcbiAgICBAVmlld0NoaWxkKCdwcm9ncmVzc0NpcmNsZScsIHtzdGF0aWM6IHRydWV9KVxuICAgIHByaXZhdGUgcmVhZG9ubHkgcHJvZ3Jlc3NDaXJjbGUhOiBFbGVtZW50UmVmPFNWR0NpcmNsZUVsZW1lbnQ+O1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHZhbHVlID0gMDtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBtYXggPSAxO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLi0tdHVpLXByb2dyZXNzLWNvbG9yJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGNvbG9yOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzaXplOiBUdWlTaXplUyB8IFR1aVNpemVYTCA9ICdtJztcblxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuLS1wcm9ncmVzcy1wZXJjZW50YWdlJylcbiAgICBnZXQgcHJvZ3Jlc3NQZXJjZW50YWdlKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlIC8gdGhpcy5tYXg7XG4gICAgfVxuXG4gICAgYW5pbWF0aW9uRGVsYXkkID0gb2YodHJ1ZSkucGlwZShkZWxheSgwKSk7XG5cbiAgICBnZXQgb2xkRWRnZVJhZGl1c0ZhbGxiYWNrKCk6IG51bWJlciB8IG51bGwge1xuICAgICAgICBpZiAoIXR1aUlzRWRnZU9sZGVyVGhhbihDSFJPTUlVTV9FREdFX1NUQVJUX1ZFUlNJT04sIHRoaXMudXNlckFnZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzdHJva2VXaWR0aCA9IHBhcnNlSW50KFxuICAgICAgICAgICAgdGhpcy53aW4uZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnByb2dyZXNzQ2lyY2xlLm5hdGl2ZUVsZW1lbnQpLnN0cm9rZVdpZHRoLFxuICAgICAgICAgICAgMTAsXG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuICh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGggLSBzdHJva2VXaWR0aCkgLyAyO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFVTRVJfQUdFTlQpIHByaXZhdGUgcmVhZG9ubHkgdXNlckFnZW50OiBzdHJpbmcsXG4gICAgICAgIEBJbmplY3QoV0lORE9XKSBwcml2YXRlIHJlYWRvbmx5IHdpbjogV2luZG93LFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICkge31cbn1cbiJdfQ==