import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, HostBinding, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, TUI_FOCUSABLE_ITEM_ACCESSOR, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TuiBrightness, TuiModeDirective, TuiSizeL } from '@taiga-ui/core';
import { TuiRadioComponent } from '@taiga-ui/kit/components/radio';
var TuiRadioLabeledComponent = /** @class */ (function (_super) {
    __extends(TuiRadioLabeledComponent, _super);
    function TuiRadioLabeledComponent(control, changeDetectorRef, modeDirective) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.modeDirective = modeDirective;
        _this.size = 'm';
        _this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        _this.pseudoDisabled = false;
        return _this;
    }
    TuiRadioLabeledComponent_1 = TuiRadioLabeledComponent;
    Object.defineProperty(TuiRadioLabeledComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.radio ? this.radio.nativeFocusableElement : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiRadioLabeledComponent.prototype, "focused", {
        get: function () {
            return !!this.radio && this.radio.focused;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiRadioLabeledComponent.prototype, "computedDisabled", {
        get: function () {
            return this.disabled || this.pseudoDisabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiRadioLabeledComponent.prototype, "mode", {
        get: function () {
            return this.modeDirective ? this.modeDirective.mode : null;
        },
        enumerable: true,
        configurable: true
    });
    TuiRadioLabeledComponent.prototype.onFocused = function (focused) {
        this.updateFocused(focused);
    };
    TuiRadioLabeledComponent.prototype.onHovered = function (hovered) {
        this.updateHovered(hovered);
    };
    TuiRadioLabeledComponent.prototype.onPressed = function (pressed) {
        this.updatePressed(pressed);
    };
    TuiRadioLabeledComponent.prototype.onModelChange = function (value) {
        this.updateValue(value);
    };
    var TuiRadioLabeledComponent_1;
    TuiRadioLabeledComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: TuiModeDirective, decorators: [{ type: Optional }, { type: Inject, args: [TuiModeDirective,] }] }
    ]; };
    __decorate([
        ViewChild(TuiRadioComponent)
    ], TuiRadioLabeledComponent.prototype, "radio", void 0);
    __decorate([
        Input()
    ], TuiRadioLabeledComponent.prototype, "item", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-size'),
        tuiDefaultProp()
    ], TuiRadioLabeledComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioLabeledComponent.prototype, "identityMatcher", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiRadioLabeledComponent.prototype, "pseudoDisabled", void 0);
    __decorate([
        HostBinding('class._disabled')
    ], TuiRadioLabeledComponent.prototype, "computedDisabled", null);
    __decorate([
        HostBinding('attr.data-mode')
    ], TuiRadioLabeledComponent.prototype, "mode", null);
    TuiRadioLabeledComponent = TuiRadioLabeledComponent_1 = __decorate([
        Component({
            selector: 'tui-radio-labeled',
            template: "<label\n    class=\"t-wrapper\"\n    (tuiHoveredChange)=\"onHovered($event)\"\n    (tuiPressedChange)=\"onPressed($event)\"\n>\n    <tui-radio\n        [focusable]=\"focusable\"\n        [identityMatcher]=\"identityMatcher\"\n        [name]=\"computedName || ''\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [pseudoDisabled]=\"computedDisabled\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [pseudoFocused]=\"pseudoFocused\"\n        [pseudoHovered]=\"computedHovered\"\n        [pseudoPressed]=\"computedPressed\"\n        [size]=\"size\"\n        [item]=\"item\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n        (focusedChange)=\"onFocused($event)\"\n    ></tui-radio>\n    <div class=\"t-content\">\n        <ng-content></ng-content>\n    </div>\n</label>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiRadioLabeledComponent_1; }),
                },
            ],
            styles: [":host{position:relative;display:block;font:var(--tui-font-text-s);line-height:1rem}:host._readonly{pointer-events:none}.t-wrapper{display:inline-flex;max-width:100%;cursor:pointer;vertical-align:top}:host._disabled .t-wrapper{cursor:default}:host[data-mode=onDark] .t-wrapper{color:var(--tui-text-01-night)}.t-content{word-wrap:break-word;min-width:0}:host[data-size='m'] .t-content{margin-left:.5rem}:host[data-size='l'] .t-content{font:var(--tui-font-text-m);margin-left:.75rem}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Optional()),
        __param(2, Inject(TuiModeDirective))
    ], TuiRadioLabeledComponent);
    return TuiRadioLabeledComponent;
}(AbstractTuiNullableControl));
export { TuiRadioLabeledComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tbGFiZWxlZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcmFkaW8tbGFiZWxlZC8iLCJzb3VyY2VzIjpbInJhZGlvLWxhYmVsZWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUNMLFFBQVEsRUFDUixJQUFJLEVBQ0osU0FBUyxHQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6QyxPQUFPLEVBQ0gsMEJBQTBCLEVBQzFCLDRCQUE0QixFQUM1QiwyQkFBMkIsRUFDM0IsY0FBYyxHQUlqQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsYUFBYSxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBY2pFO0lBQ1ksNENBQTZCO0lBc0JyQyxrQ0FJSSxPQUF5QixFQUNFLGlCQUFvQyxFQUc5QyxhQUFzQztRQVIzRCxZQVVJLGtCQUFNLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxTQUNwQztRQUhvQixtQkFBYSxHQUFiLGFBQWEsQ0FBeUI7UUFsQjNELFVBQUksR0FBYSxHQUFHLENBQUM7UUFJckIscUJBQWUsR0FBMEIsNEJBQTRCLENBQUM7UUFJdEUsb0JBQWMsR0FBRyxLQUFLLENBQUM7O0lBYXZCLENBQUM7aUNBbENRLHdCQUF3QjtJQW9DakMsc0JBQUksNERBQXNCO2FBQTFCO1lBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDakUsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw2Q0FBTzthQUFYO1lBQ0ksT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTtJQUdELHNCQUFJLHNEQUFnQjthQUFwQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQ2hELENBQUM7OztPQUFBO0lBR0Qsc0JBQUksMENBQUk7YUFBUjtZQUNJLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMvRCxDQUFDOzs7T0FBQTtJQUVELDRDQUFTLEdBQVQsVUFBVSxPQUFnQjtRQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCw0Q0FBUyxHQUFULFVBQVUsT0FBZ0I7UUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsNENBQVMsR0FBVCxVQUFVLE9BQWdCO1FBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELGdEQUFhLEdBQWIsVUFBYyxLQUFRO1FBQ2xCLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQzs7O2dCQXpDWSxTQUFTLHVCQUhqQixRQUFRLFlBQ1IsSUFBSSxZQUNKLE1BQU0sU0FBQyxTQUFTO2dCQUU2QixpQkFBaUIsdUJBQTlELE1BQU0sU0FBQyxpQkFBaUI7Z0JBR08sZ0JBQWdCLHVCQUYvQyxRQUFRLFlBQ1IsTUFBTSxTQUFDLGdCQUFnQjs7SUF6QjVCO1FBREMsU0FBUyxDQUFDLGlCQUFpQixDQUFDOzJEQUNpQjtJQUc5QztRQURDLEtBQUssRUFBRTswREFDQztJQUtUO1FBSEMsS0FBSyxFQUFFO1FBQ1AsV0FBVyxDQUFDLGdCQUFnQixDQUFDO1FBQzdCLGNBQWMsRUFBRTswREFDSTtJQUlyQjtRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTtxRUFDcUQ7SUFJdEU7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7b0VBQ007SUF3QnZCO1FBREMsV0FBVyxDQUFDLGlCQUFpQixDQUFDO29FQUc5QjtJQUdEO1FBREMsV0FBVyxDQUFDLGdCQUFnQixDQUFDO3dEQUc3QjtJQXBEUSx3QkFBd0I7UUFacEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLG1CQUFtQjtZQUM3QixvMUJBQTRDO1lBRTVDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsMkJBQTJCO29CQUNwQyxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSwwQkFBd0IsRUFBeEIsQ0FBd0IsQ0FBQztpQkFDMUQ7YUFDSjs7U0FDSixDQUFDO1FBeUJPLFdBQUEsUUFBUSxFQUFFLENBQUE7UUFDVixXQUFBLElBQUksRUFBRSxDQUFBO1FBQ04sV0FBQSxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUE7UUFFakIsV0FBQSxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtRQUN6QixXQUFBLFFBQVEsRUFBRSxDQUFBO1FBQ1YsV0FBQSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtPQTlCcEIsd0JBQXdCLENBcUVwQztJQUFELCtCQUFDO0NBQUEsQUFyRUQsQ0FDWSwwQkFBMEIsR0FvRXJDO1NBckVZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgQ29tcG9uZW50LFxuICAgIGZvcndhcmRSZWYsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIE9wdGlvbmFsLFxuICAgIFNlbGYsXG4gICAgVmlld0NoaWxkLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdDb250cm9sfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge1xuICAgIEFic3RyYWN0VHVpTnVsbGFibGVDb250cm9sLFxuICAgIFRVSV9ERUZBVUxUX0lERU5USVRZX01BVENIRVIsXG4gICAgVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIFR1aUZvY3VzYWJsZUVsZW1lbnRBY2Nlc3NvcixcbiAgICBUdWlJZGVudGl0eU1hdGNoZXIsXG4gICAgVHVpTmF0aXZlRm9jdXNhYmxlRWxlbWVudCxcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3MsIFR1aU1vZGVEaXJlY3RpdmUsIFR1aVNpemVMfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aVJhZGlvQ29tcG9uZW50fSBmcm9tICdAdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcmFkaW8nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1yYWRpby1sYWJlbGVkJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8tbGFiZWxlZC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9yYWRpby1sYWJlbGVkLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpUmFkaW9MYWJlbGVkQ29tcG9uZW50KSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlSYWRpb0xhYmVsZWRDb21wb25lbnQ8VD5cbiAgICBleHRlbmRzIEFic3RyYWN0VHVpTnVsbGFibGVDb250cm9sPFQ+XG4gICAgaW1wbGVtZW50cyBUdWlGb2N1c2FibGVFbGVtZW50QWNjZXNzb3JcbntcbiAgICBAVmlld0NoaWxkKFR1aVJhZGlvQ29tcG9uZW50KVxuICAgIHByaXZhdGUgcmVhZG9ubHkgcmFkaW8/OiBUdWlSYWRpb0NvbXBvbmVudDxUPjtcblxuICAgIEBJbnB1dCgpXG4gICAgaXRlbT86IFQ7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2l6ZTogVHVpU2l6ZUwgPSAnbSc7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaWRlbnRpdHlNYXRjaGVyOiBUdWlJZGVudGl0eU1hdGNoZXI8VD4gPSBUVUlfREVGQVVMVF9JREVOVElUWV9NQVRDSEVSO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHBzZXVkb0Rpc2FibGVkID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQFNlbGYoKVxuICAgICAgICBASW5qZWN0KE5nQ29udHJvbClcbiAgICAgICAgY29udHJvbDogTmdDb250cm9sIHwgbnVsbCxcbiAgICAgICAgQEluamVjdChDaGFuZ2VEZXRlY3RvclJlZikgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBASW5qZWN0KFR1aU1vZGVEaXJlY3RpdmUpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgbW9kZURpcmVjdGl2ZTogVHVpTW9kZURpcmVjdGl2ZSB8IG51bGwsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGNvbnRyb2wsIGNoYW5nZURldGVjdG9yUmVmKTtcbiAgICB9XG5cbiAgICBnZXQgbmF0aXZlRm9jdXNhYmxlRWxlbWVudCgpOiBUdWlOYXRpdmVGb2N1c2FibGVFbGVtZW50IHwgbnVsbCB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhZGlvID8gdGhpcy5yYWRpby5uYXRpdmVGb2N1c2FibGVFbGVtZW50IDogbnVsbDtcbiAgICB9XG5cbiAgICBnZXQgZm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5yYWRpbyAmJiB0aGlzLnJhZGlvLmZvY3VzZWQ7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fZGlzYWJsZWQnKVxuICAgIGdldCBjb21wdXRlZERpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCB8fCB0aGlzLnBzZXVkb0Rpc2FibGVkO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLW1vZGUnKVxuICAgIGdldCBtb2RlKCk6IFR1aUJyaWdodG5lc3MgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZURpcmVjdGl2ZSA/IHRoaXMubW9kZURpcmVjdGl2ZS5tb2RlIDogbnVsbDtcbiAgICB9XG5cbiAgICBvbkZvY3VzZWQoZm9jdXNlZDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnVwZGF0ZUZvY3VzZWQoZm9jdXNlZCk7XG4gICAgfVxuXG4gICAgb25Ib3ZlcmVkKGhvdmVyZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGVIb3ZlcmVkKGhvdmVyZWQpO1xuICAgIH1cblxuICAgIG9uUHJlc3NlZChwcmVzc2VkOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMudXBkYXRlUHJlc3NlZChwcmVzc2VkKTtcbiAgICB9XG5cbiAgICBvbk1vZGVsQ2hhbmdlKHZhbHVlOiBUKTogdm9pZCB7XG4gICAgICAgIHRoaXMudXBkYXRlVmFsdWUodmFsdWUpO1xuICAgIH1cbn1cbiJdfQ==