import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AbstractTuiDialogService } from '@taiga-ui/cdk';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { TuiPdfViewerComponent } from './pdf-viewer.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/services";
var DIALOG = new PolymorpheusComponent(TuiPdfViewerComponent);
var DEFAULT_OPTIONS = { label: "", actions: "" };
var TuiPdfViewerService = /** @class */ (function (_super) {
    __extends(TuiPdfViewerService, _super);
    function TuiPdfViewerService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.component = DIALOG;
        _this.defaultOptions = DEFAULT_OPTIONS;
        return _this;
    }
    TuiPdfViewerService.prototype.open = function (content, options) {
        if (options === void 0) { options = {}; }
        return _super.prototype.open.call(this, content, options);
    };
    TuiPdfViewerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TuiPdfViewerService_Factory() { return new TuiPdfViewerService(i0.ɵɵinject(i1.TuiIdService)); }, token: TuiPdfViewerService, providedIn: "root" });
    TuiPdfViewerService = __decorate([
        Injectable({
            providedIn: "root",
        })
    ], TuiPdfViewerService);
    return TuiPdfViewerService;
}(AbstractTuiDialogService));
export { TuiPdfViewerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLXZpZXdlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3BkZi12aWV3ZXIvIiwic291cmNlcyI6WyJwZGYtdmlld2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFDLHdCQUF3QixFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUMscUJBQXFCLEVBQXNCLE1BQU0sMEJBQTBCLENBQUM7QUFHcEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7OztBQUc3RCxJQUFNLE1BQU0sR0FBRyxJQUFJLHFCQUFxQixDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDaEUsSUFBTSxlQUFlLEdBQUcsRUFBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQVUsQ0FBQztBQVMxRDtJQUF5Qyx1Q0FFeEM7SUFGRDtRQUFBLHFFQWFDO1FBVnNCLGVBQVMsR0FBRyxNQUFNLENBQUM7UUFDbkIsb0JBQWMsR0FDN0IsZUFBK0MsQ0FBQzs7S0FRdkQ7SUFORyxrQ0FBSSxHQUFKLFVBQ0ksT0FBcUMsRUFDckMsT0FBK0M7UUFBL0Msd0JBQUEsRUFBQSxZQUErQztRQUUvQyxPQUFPLGlCQUFNLElBQUksWUFBQyxPQUFxQixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUM7O0lBWlEsbUJBQW1CO1FBSC9CLFVBQVUsQ0FBQztZQUNSLFVBQVUsRUFBRSxNQUFNO1NBQ3JCLENBQUM7T0FDVyxtQkFBbUIsQ0FhL0I7OEJBaENEO0NBZ0NDLEFBYkQsQ0FBeUMsd0JBQXdCLEdBYWhFO1NBYlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U2FmZVJlc291cmNlVXJsfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7QWJzdHJhY3RUdWlEaWFsb2dTZXJ2aWNlLCBUdWlCYXNlRGlhbG9nQ29udGV4dH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbXBvbmVudCwgUG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7VHVpUGRmVmlld2VyQ29tcG9uZW50fSBmcm9tICcuL3BkZi12aWV3ZXIuY29tcG9uZW50JztcbmltcG9ydCB7VHVpUGRmVmlld2VyT3B0aW9uc30gZnJvbSAnLi9wZGYtdmlld2VyLW9wdGlvbnMnO1xuXG5jb25zdCBESUFMT0cgPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aVBkZlZpZXdlckNvbXBvbmVudCk7XG5jb25zdCBERUZBVUxUX09QVElPTlMgPSB7bGFiZWw6IGBgLCBhY3Rpb25zOiBgYH0gYXMgY29uc3Q7XG5cbnR5cGUgQ29udGVudDxHPiA9IFBvbHltb3JwaGV1c0NvbnRlbnQ8XG4gICAgVHVpQmFzZURpYWxvZ0NvbnRleHQ8Rz4gJiBUdWlQZGZWaWV3ZXJPcHRpb25zPHVua25vd24+XG4+O1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogYHJvb3RgLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQZGZWaWV3ZXJTZXJ2aWNlIGV4dGVuZHMgQWJzdHJhY3RUdWlEaWFsb2dTZXJ2aWNlPFxuICAgIFR1aVBkZlZpZXdlck9wdGlvbnM8dW5rbm93bj5cbj4ge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBjb21wb25lbnQgPSBESUFMT0c7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlZmF1bHRPcHRpb25zOiBUdWlQZGZWaWV3ZXJPcHRpb25zPHVua25vd24+ID1cbiAgICAgICAgREVGQVVMVF9PUFRJT05TIGFzIFR1aVBkZlZpZXdlck9wdGlvbnM8dW5rbm93bj47XG5cbiAgICBvcGVuPEc+KFxuICAgICAgICBjb250ZW50OiBDb250ZW50PEc+IHwgU2FmZVJlc291cmNlVXJsLFxuICAgICAgICBvcHRpb25zOiBQYXJ0aWFsPFR1aVBkZlZpZXdlck9wdGlvbnM8YW55Pj4gPSB7fSxcbiAgICApOiBPYnNlcnZhYmxlPEc+IHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLm9wZW4oY29udGVudCBhcyBDb250ZW50PEc+LCBvcHRpb25zKTtcbiAgICB9XG59XG4iXX0=