import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { DomSanitizer, SafeValue } from '@angular/platform-browser';
import { TUI_IS_MOBILE, tuiDefaultProp, tuiIsObserved, tuiPure } from '@taiga-ui/cdk';
import { TUI_DIGITAL_INFORMATION_UNITS, TUI_FILE_TEXTS } from '@taiga-ui/kit/tokens';
import { formatSize } from '@taiga-ui/kit/utils/files';
import { Observable, of } from 'rxjs';
import { map } from 'rxjs/operators';
// @dynamic
var TuiFileComponent = /** @class */ (function () {
    function TuiFileComponent(isMobile, sanitizer, fileTexts$, units$) {
        this.isMobile = isMobile;
        this.sanitizer = sanitizer;
        this.fileTexts$ = fileTexts$;
        this.units$ = units$;
        this.file = { name: '' };
        this.state = 'normal';
        this.size = 'm';
        this.showSize = true;
        this.leftContent = '';
        this.removed = new EventEmitter();
        this.focused = false;
    }
    Object.defineProperty(TuiFileComponent.prototype, "preview", {
        get: function () {
            return this.isBig ? this.createPreview(this.file, this.sanitizer) : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "isBig", {
        get: function () {
            return this.size === 'l';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "isLoading", {
        get: function () {
            return this.state === "loading" /* Loading */;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "isError", {
        get: function () {
            return this.state === "error" /* Error */;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "isDeleted", {
        get: function () {
            return this.state === "deleted" /* Deleted */;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "allowDelete", {
        get: function () {
            return tuiIsObserved(this.removed);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "icon", {
        get: function () {
            if (this.state === "normal" /* Normal */ && this.isBig) {
                return 'tuiIconDefaultDocLarge';
            }
            switch (this.state) {
                case "deleted" /* Deleted */:
                    return 'tuiIconTrashLarge';
                case "error" /* Error */:
                    return 'tuiIconAlertCircleLarge';
                default:
                    return 'tuiIconCheckCircleLarge';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "src", {
        get: function () {
            return this.file.src || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "name", {
        get: function () {
            return this.getName(this.file);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "type", {
        get: function () {
            return this.getType(this.file);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "content$", {
        get: function () {
            return this.calculateContent$(this.state, this.file, this.fileTexts$);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiFileComponent.prototype, "fileSize$", {
        get: function () {
            return this.calculateFileSize$(this.file, this.units$);
        },
        enumerable: true,
        configurable: true
    });
    TuiFileComponent.prototype.onRemoveClick = function () {
        this.removed.emit();
    };
    TuiFileComponent.prototype.onFocusVisible = function (focusVisible) {
        this.focused = focusVisible;
    };
    TuiFileComponent.prototype.calculateContent$ = function (state, file, fileTexts$) {
        return state === "error" /* Error */ && !file.content
            ? fileTexts$.pipe(map(function (texts) { return texts.loadingError; }))
            : of(this.file.content || '');
    };
    TuiFileComponent.prototype.calculateFileSize$ = function (file, units$) {
        return units$.pipe(map(function (units) { return formatSize(units, file.size); }));
    };
    TuiFileComponent.prototype.createPreview = function (file, sanitizer) {
        if (file.src) {
            return file.src;
        }
        // TODO: iframe warning
        if (file instanceof File && file.type && file.type.startsWith('image/')) {
            return sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));
        }
        return '';
    };
    TuiFileComponent.prototype.getName = function (file) {
        return file.name.split('.').slice(0, -1).join('.');
    };
    TuiFileComponent.prototype.getType = function (file) {
        return "." + file.name.split('.').pop() || '';
    };
    TuiFileComponent.ctorParameters = function () { return [
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
        { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_FILE_TEXTS,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_DIGITAL_INFORMATION_UNITS,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiFileComponent.prototype, "file", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiFileComponent.prototype, "state", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiFileComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiFileComponent.prototype, "showSize", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiFileComponent.prototype, "leftContent", void 0);
    __decorate([
        Output()
    ], TuiFileComponent.prototype, "removed", void 0);
    __decorate([
        HostBinding('class._focused')
    ], TuiFileComponent.prototype, "focused", void 0);
    __decorate([
        HostBinding('class._link')
    ], TuiFileComponent.prototype, "src", null);
    __decorate([
        tuiPure
    ], TuiFileComponent.prototype, "calculateContent$", null);
    __decorate([
        tuiPure
    ], TuiFileComponent.prototype, "calculateFileSize$", null);
    __decorate([
        tuiPure
    ], TuiFileComponent.prototype, "createPreview", null);
    __decorate([
        tuiPure
    ], TuiFileComponent.prototype, "getName", null);
    __decorate([
        tuiPure
    ], TuiFileComponent.prototype, "getType", null);
    TuiFileComponent = __decorate([
        Component({
            selector: 'tui-file',
            changeDetection: ChangeDetectionStrategy.OnPush,
            template: "<ng-container\n    *ngIf=\"!src; else withLink\"\n    [ngTemplateOutlet]=\"fileInfoTemplate\"\n></ng-container>\n\n<ng-template #withLink>\n    <a\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        class=\"t-link\"\n        [href]=\"src\"\n        (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    >\n        <ng-container [ngTemplateOutlet]=\"fileInfoTemplate\"></ng-container>\n    </a>\n</ng-template>\n\n<ng-template #fileInfoTemplate>\n    <div\n        polymorpheus-outlet\n        class=\"t-preview\"\n        [class.t-preview_big]=\"isBig\"\n        [content]=\"leftContent || defaultLeftContent\"\n    ></div>\n    <div class=\"t-wrapper\">\n        <div class=\"t-text\">\n            <div\n                automation-id=\"tui-file__name\"\n                class=\"t-name\"\n            >\n                {{ name }}\n            </div>\n            <div\n                automation-id=\"tui-file__type\"\n                class=\"t-type\"\n            >\n                {{ type }}\n            </div>\n            <div\n                *ngIf=\"showSize && (fileSize$ | async) as fileSize\"\n                automation-id=\"tui-file__size\"\n                class=\"t-size\"\n            >\n                {{ fileSize }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"content$ | async as content\"\n            polymorpheus-outlet\n            automation-id=\"tui-file__content\"\n            class=\"t-content\"\n            [content]=\"content\"\n        ></div>\n        <ng-content></ng-content>\n    </div>\n    <ng-container *ngIf=\"allowDelete\">\n        <button\n            *ngIf=\"fileTexts$ | async as texts\"\n            automation-id=\"tui-file__remove\"\n            tuiIconButton\n            type=\"button\"\n            size=\"xs\"\n            icon=\"tuiIconCloseLarge\"\n            appearance=\"icon\"\n            class=\"t-remove\"\n            [title]=\"texts.remove\"\n            [class.t-remove_mobile]=\"isMobile\"\n            (click.prevent)=\"onRemoveClick()\"\n        ></button>\n    </ng-container>\n</ng-template>\n\n<ng-template #defaultLeftContent>\n    <img\n        *ngIf=\"preview; else loader\"\n        automation-id=\"tui-file__preview\"\n        class=\"t-image\"\n        [src]=\"preview\"\n    />\n    <ng-template #loader>\n        <tui-loader\n            *ngIf=\"isLoading; else svg\"\n            automation-id=\"tui-file__loader\"\n            class=\"t-loader\"\n            [inheritColor]=\"isBig\"\n        ></tui-loader>\n    </ng-template>\n    <ng-template #svg>\n        <tui-svg\n            automation-id=\"tui-file__icon\"\n            class=\"t-icon\"\n            [class.t-icon_deleted]=\"isDeleted\"\n            [class.t-icon_error]=\"isError\"\n            [src]=\"icon\"\n        ></tui-svg>\n    </ng-template>\n</ng-template>\n",
            styles: [":host{position:relative;display:flex;align-items:center;font:var(--tui-font-text-m);border:1px solid var(--tui-base-03);border-radius:var(--tui-radius-m)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host:not(._link){padding:.5625rem 2.1875rem .5625rem .5625rem}:host:hover .t-remove{opacity:1}:host._focused{border-color:var(--tui-focus);box-shadow:0 0 0 1px inset var(--tui-focus)}.t-link{display:flex;flex:1;padding:.5625rem 2.1875rem .5625rem .5625rem;text-decoration:none;outline:0;cursor:pointer;color:var(--tui-text-01);max-width:calc(100% - 2.75rem)}.t-link:hover{background-color:var(--tui-base-02)}.t-preview{position:relative;display:flex;align-items:center;justify-content:center;flex-shrink:0;width:1.5rem;height:1.5rem;margin-right:.75rem;border-radius:var(--tui-radius-m);overflow:hidden;color:var(--tui-base-06)}.t-preview_big{width:4rem;height:4rem;margin-right:1rem}.t-preview_big:before{position:absolute;top:0;left:0;width:100%;height:100%;content:'';background:var(--tui-base-08);opacity:.08}.t-image{max-width:100%;max-height:100%}.t-loader{position:absolute;top:0;left:0;width:100%;height:100%}.t-icon{position:absolute;top:0;left:0;width:100%;height:100%;color:var(--tui-success-fill)}.t-icon_error{color:var(--tui-error-fill)}.t-icon_deleted{color:var(--tui-base-06)}.t-remove{transition-property:opacity;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;position:absolute;top:.625rem;right:.625rem;opacity:0}.t-remove:focus,.t-remove_mobile{opacity:1}.t-wrapper{display:flex;flex-direction:column;justify-content:center;overflow:hidden}.t-text{display:flex}.t-size{flex-shrink:0;opacity:var(--tui-disabled-opacity);margin-left:.5rem}.t-type{flex-shrink:0}.t-name{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-content{font:var(--tui-font-text-s);color:var(--tui-error-fill)}"]
        }),
        __param(0, Inject(TUI_IS_MOBILE)),
        __param(1, Inject(DomSanitizer)),
        __param(2, Inject(TUI_FILE_TEXTS)),
        __param(3, Inject(TUI_DIGITAL_INFORMATION_UNITS))
    ], TuiFileComponent);
    return TuiFileComponent;
}());
export { TuiFileComponent };
//# sourceMappingURL=data:application/json;base64,