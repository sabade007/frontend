import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiAssert } from '@taiga-ui/cdk';
import { TuiSliderComponent } from '../../slider.component';
var TuiSliderThumbLabelComponent = /** @class */ (function () {
    function TuiSliderThumbLabelComponent() {
    }
    Object.defineProperty(TuiSliderThumbLabelComponent.prototype, "size", {
        get: function () {
            var _a;
            return ((_a = this.slider) === null || _a === void 0 ? void 0 : _a.size) || 'm';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderThumbLabelComponent.prototype, "ratio", {
        get: function () {
            var _a;
            return (((_a = this.slider) === null || _a === void 0 ? void 0 : _a.valuePercentage) || 0) / 100;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderThumbLabelComponent.prototype, "ghostLeft", {
        get: function () {
            var _a;
            return this.ratio * (((_a = this.slider) === null || _a === void 0 ? void 0 : _a.elementRef.nativeElement.offsetWidth) || 0);
        },
        enumerable: true,
        configurable: true
    });
    TuiSliderThumbLabelComponent.prototype.ngAfterContentInit = function () {
        var _a;
        tuiAssert.assert(Boolean((_a = this.control) === null || _a === void 0 ? void 0 : _a.valueChanges), '\n[tuiSliderThumbLabel] expected <input tuiSlider type="range" /> to use Angular Forms.\n' +
            'Use [(ngModel)] or [formControl] or formControlName for correct work.');
    };
    __decorate([
        ContentChild(TuiSliderComponent)
    ], TuiSliderThumbLabelComponent.prototype, "slider", void 0);
    __decorate([
        ContentChild(NgControl)
    ], TuiSliderThumbLabelComponent.prototype, "control", void 0);
    TuiSliderThumbLabelComponent = __decorate([
        Component({
            selector: '[tuiSliderThumbLabel]',
            template: "<ng-container *ngIf=\"control?.valueChanges | async\"></ng-container>\n\n<div\n    class=\"t-ghost\"\n    [attr.data-size]=\"size\"\n    [style.left.px]=\"ghostLeft\"\n    [style.--tui-slider-thumb-ratio]=\"ratio\"\n>\n    <ng-content></ng-content>\n</div>\n\n<ng-content select=\"input[type=range]\"></ng-content>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{position:relative}.t-ghost{position:absolute;top:0;bottom:0;margin:auto;border-radius:50%;pointer-events:none}.t-ghost[data-size='s']{width:.5rem;height:.5rem;transform:translateX(calc(var(--tui-slider-thumb-ratio) * -.5rem))}.t-ghost[data-size='m']{width:1rem;height:1rem;transform:translateX(calc(var(--tui-slider-thumb-ratio) * -1rem))}"]
        })
    ], TuiSliderThumbLabelComponent);
    return TuiSliderThumbLabelComponent;
}());
export { TuiSliderThumbLabelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXRodW1iLWxhYmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9zbGlkZXIvIiwic291cmNlcyI6WyJoZWxwZXJzL3NsaWRlci10aHVtYi1sYWJlbC9zbGlkZXItdGh1bWItbGFiZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBRUgsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEdBQ2YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3pDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHeEMsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFRMUQ7SUFBQTtJQTBCQSxDQUFDO0lBbkJHLHNCQUFJLDhDQUFJO2FBQVI7O1lBQ0ksT0FBTyxPQUFBLElBQUksQ0FBQyxNQUFNLDBDQUFFLElBQUksS0FBSSxHQUFHLENBQUM7UUFDcEMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSwrQ0FBSzthQUFUOztZQUNJLE9BQU8sQ0FBQyxPQUFBLElBQUksQ0FBQyxNQUFNLDBDQUFFLGVBQWUsS0FBSSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDckQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxtREFBUzthQUFiOztZQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLE9BQUEsSUFBSSxDQUFDLE1BQU0sMENBQUUsVUFBVSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEtBQUksQ0FBQyxDQUFDLENBQUM7UUFDakYsQ0FBQzs7O09BQUE7SUFFRCx5REFBa0IsR0FBbEI7O1FBQ0ksU0FBUyxDQUFDLE1BQU0sQ0FDWixPQUFPLE9BQUMsSUFBSSxDQUFDLE9BQU8sMENBQUUsWUFBWSxDQUFDLEVBQ25DLDJGQUEyRjtZQUN2Rix1RUFBdUUsQ0FDOUUsQ0FBQztJQUNOLENBQUM7SUF2QkQ7UUFEQyxZQUFZLENBQUMsa0JBQWtCLENBQUM7Z0VBQ0k7SUFHckM7UUFEQyxZQUFZLENBQUMsU0FBUyxDQUFDO2lFQUNLO0lBTHBCLDRCQUE0QjtRQU54QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsdUJBQXVCO1lBQ2pDLHdVQUFpRDtZQUVqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDbEQsQ0FBQztPQUNXLDRCQUE0QixDQTBCeEM7SUFBRCxtQ0FBQztDQUFBLEFBMUJELElBMEJDO1NBMUJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgQ29udGVudENoaWxkLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdDb250cm9sfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge3R1aUFzc2VydH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVNpemVTfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbmltcG9ydCB7VHVpU2xpZGVyQ29tcG9uZW50fSBmcm9tICcuLi8uLi9zbGlkZXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdbdHVpU2xpZGVyVGh1bWJMYWJlbF0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zbGlkZXItdGh1bWItbGFiZWwudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2xpZGVyLXRodW1iLWxhYmVsLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU2xpZGVyVGh1bWJMYWJlbENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICAgIEBDb250ZW50Q2hpbGQoVHVpU2xpZGVyQ29tcG9uZW50KVxuICAgIHJlYWRvbmx5IHNsaWRlcj86IFR1aVNsaWRlckNvbXBvbmVudDtcblxuICAgIEBDb250ZW50Q2hpbGQoTmdDb250cm9sKVxuICAgIHJlYWRvbmx5IGNvbnRyb2w/OiBOZ0NvbnRyb2w7XG5cbiAgICBnZXQgc2l6ZSgpOiBUdWlTaXplUyB7XG4gICAgICAgIHJldHVybiB0aGlzLnNsaWRlcj8uc2l6ZSB8fCAnbSc7XG4gICAgfVxuXG4gICAgZ2V0IHJhdGlvKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAodGhpcy5zbGlkZXI/LnZhbHVlUGVyY2VudGFnZSB8fCAwKSAvIDEwMDtcbiAgICB9XG5cbiAgICBnZXQgZ2hvc3RMZWZ0KCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhdGlvICogKHRoaXMuc2xpZGVyPy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMCk7XG4gICAgfVxuXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgICAgICB0dWlBc3NlcnQuYXNzZXJ0KFxuICAgICAgICAgICAgQm9vbGVhbih0aGlzLmNvbnRyb2w/LnZhbHVlQ2hhbmdlcyksXG4gICAgICAgICAgICAnXFxuW3R1aVNsaWRlclRodW1iTGFiZWxdIGV4cGVjdGVkIDxpbnB1dCB0dWlTbGlkZXIgdHlwZT1cInJhbmdlXCIgLz4gdG8gdXNlIEFuZ3VsYXIgRm9ybXMuXFxuJyArXG4gICAgICAgICAgICAgICAgJ1VzZSBbKG5nTW9kZWwpXSBvciBbZm9ybUNvbnRyb2xdIG9yIGZvcm1Db250cm9sTmFtZSBmb3IgY29ycmVjdCB3b3JrLicsXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19