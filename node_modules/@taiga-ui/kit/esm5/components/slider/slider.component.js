import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Inject, Injector, Input, Optional, Self, } from '@angular/core';
import { NgControl, NgModel } from '@angular/forms';
import { USER_AGENT } from '@ng-web-apis/common';
import { CHROMIUM_EDGE_START_VERSION, isEdgeOlderThan, tuiDefaultProp, tuiPure, watch, } from '@taiga-ui/cdk';
import { take } from 'rxjs/operators';
import { TuiSliderKeyStepsDirective } from './helpers/slider-key-steps.directive';
import { TUI_SLIDER_OPTIONS } from './slider-options';
var TuiSliderComponent = /** @class */ (function () {
    function TuiSliderComponent(control, changeDetectorRef, options, elementRef, userAgent, injector) {
        var _a;
        this.control = control;
        this.options = options;
        this.elementRef = elementRef;
        this.userAgent = userAgent;
        this.injector = injector;
        this.size = this.options.size;
        this.segments = 1;
        if (control instanceof NgModel) {
            /**
             * The ValueAccessor.writeValue method is called twice on any value accessor during component initialization,
             * when a control is bound using [(ngModel)], first time with a phantom null value.
             * With `changeDetection: ChangeDetectionStrategy.OnPush` the second call of writeValue with real value don't re-render the view.
             * ___
             * See this {@link https://github.com/angular/angular/issues/14988 issue}
             */
            (_a = control.valueChanges) === null || _a === void 0 ? void 0 : _a.pipe(watch(changeDetectorRef), take(1)).subscribe();
        }
    }
    Object.defineProperty(TuiSliderComponent.prototype, "min", {
        get: function () {
            return Number(this.elementRef.nativeElement.min);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "max", {
        get: function () {
            return Number(this.elementRef.nativeElement.max || 100);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "step", {
        get: function () {
            return Number(this.elementRef.nativeElement.step) || 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "value", {
        get: function () {
            var _a = this, elementRef = _a.elementRef, control = _a.control, hasKeySteps = _a.hasKeySteps;
            if (!hasKeySteps && control instanceof NgModel) {
                /**
                 * If developer uses `[(ngModel)]` and programmatically change value,
                 * the `elementRef.nativeElement.value` is equal to the previous value at this moment.
                 */
                return control.viewModel;
            }
            return Number(elementRef.nativeElement.value) || 0;
        },
        set: function (newValue) {
            this.elementRef.nativeElement.value = "" + newValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "valuePercentage", {
        get: function () {
            return (100 * (this.value - this.min)) / (this.max - this.min) || 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "segmentWidth", {
        get: function () {
            return 100 / Math.max(1, this.segments);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "isOldEdge", {
        get: function () {
            return isEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiSliderComponent.prototype, "hasKeySteps", {
        get: function () {
            return Boolean(this.injector.get(TuiSliderKeyStepsDirective, null));
        },
        enumerable: true,
        configurable: true
    });
    TuiSliderComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_SLIDER_OPTIONS,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: String, decorators: [{ type: Inject, args: [USER_AGENT,] }] },
        { type: Injector, decorators: [{ type: Inject, args: [Injector,] }] }
    ]; };
    __decorate([
        Input(),
        HostBinding('attr.data-size'),
        tuiDefaultProp()
    ], TuiSliderComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiSliderComponent.prototype, "segments", void 0);
    __decorate([
        HostBinding('style.--tui-slider-fill-percentage.%')
    ], TuiSliderComponent.prototype, "valuePercentage", null);
    __decorate([
        HostBinding('style.--tui-slider-segment-width.%')
    ], TuiSliderComponent.prototype, "segmentWidth", null);
    __decorate([
        HostBinding('class._old-edge')
    ], TuiSliderComponent.prototype, "isOldEdge", null);
    __decorate([
        tuiPure
    ], TuiSliderComponent.prototype, "hasKeySteps", null);
    TuiSliderComponent = __decorate([
        Component({
            /**
             * We have to call our component as `<input tuiSlider type="range" ... />`
             * because otherwise built-in angular
             * {@link https://github.com/angular/angular/blob/master/packages/forms/src/directives/range_value_accessor.ts#L45 RangeValueAccessor}
             * cannot be matched by its CSS selector.
             */
            selector: 'input[type=range][tuiSlider]',
            template: '',
            host: {
                /**
                 * For change detection.
                 * Webkit does not have built-in method for customization of filling progress (as Firefox).
                 * We draw filling of progress by `background: linear-gradient(...)` of the track.
                 * This function triggers change detection (for {@link valuePercentage} function) when we drag thumb of the input.
                 */
                '(input)': '0',
                '[style.--tui-slider-track-color]': 'options.trackColor',
            },
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:block;width:100%;color:var(--tui-primary);cursor:pointer}:host:active{cursor:ew-resize}:host:disabled{opacity:var(--tui-disabled-opacity);cursor:auto}:host:not(._old-edge){-webkit-appearance:none;-moz-appearance:none;appearance:none;height:.125rem;padding:.4375rem 0;background-color:transparent;background-clip:content-box;outline:0;border-radius:var(--tui-radius-m)}:host:not(._old-edge)::-webkit-slider-container{border-radius:inherit}:host:not(._old-edge)[data-size='m']::-webkit-slider-runnable-track{height:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0 .625rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-base-07) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor var(--tui-slider-fill-percentage),transparent var(--tui-slider-fill-percentage));background-position-x:0,.375rem,0;background-size:calc(100% - 1rem),calc(100% - 1rem),auto}:host:not(._old-edge)[data-size='s']::-webkit-slider-runnable-track{height:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0 .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-base-07) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor var(--tui-slider-fill-percentage),transparent var(--tui-slider-fill-percentage));background-position-x:0,.125rem,0;background-size:calc(100% - .5rem),calc(100% - .5rem),auto}:host:not(._old-edge)[data-size='m']::-moz-range-track{height:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0 .625rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-base-07) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.375rem;background-size:calc(100% - 1rem)}:host:not(._old-edge)[data-size='s']::-moz-range-track{height:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0 .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-base-07) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.125rem;background-size:calc(100% - .5rem)}:host:not(._old-edge)[data-size='m']::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;background-color:currentColor;border:none;border-radius:50%;height:1rem;width:1rem;margin-top:-.4375rem}:not(:disabled):host:not(._old-edge)[data-size='m']::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled):host:not(._old-edge)[data-size='m']::-webkit-slider-thumb:hover{background:var(--tui-primary-hover)}:not(:disabled):host:not(._old-edge)[data-size='m']::-webkit-slider-thumb:active{background:var(--tui-primary-active)}:focus-visible:host:not(._old-edge)[data-size='m']::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-focus)}:host:not(._old-edge)[data-size='s']::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;background-color:currentColor;border:none;border-radius:50%;height:.5rem;width:.5rem;margin-top:-.1875rem}:not(:disabled):host:not(._old-edge)[data-size='s']::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled):host:not(._old-edge)[data-size='s']::-webkit-slider-thumb:hover{background:var(--tui-primary-hover)}:not(:disabled):host:not(._old-edge)[data-size='s']::-webkit-slider-thumb:active{background:var(--tui-primary-active)}:focus-visible:host:not(._old-edge)[data-size='s']::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-focus)}:host:not(._old-edge)[data-size='m']::-moz-range-thumb{-moz-appearance:none;appearance:none;background-color:currentColor;border:none;border-radius:50%;height:1rem;width:1rem}:not(:disabled):host:not(._old-edge)[data-size='m']::-moz-range-thumb{cursor:ew-resize}:not(:disabled):host:not(._old-edge)[data-size='m']::-moz-range-thumb:hover{background:var(--tui-primary-hover)}:not(:disabled):host:not(._old-edge)[data-size='m']::-moz-range-thumb:active{background:var(--tui-primary-active)}:focus-visible:host:not(._old-edge)[data-size='m']::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-focus)}:host:not(._old-edge)[data-size='s']::-moz-range-thumb{-moz-appearance:none;appearance:none;background-color:currentColor;border:none;border-radius:50%;height:.5rem;width:.5rem}:not(:disabled):host:not(._old-edge)[data-size='s']::-moz-range-thumb{cursor:ew-resize}:not(:disabled):host:not(._old-edge)[data-size='s']::-moz-range-thumb:hover{background:var(--tui-primary-hover)}:not(:disabled):host:not(._old-edge)[data-size='s']::-moz-range-thumb:active{background:var(--tui-primary-active)}:focus-visible:host:not(._old-edge)[data-size='s']::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-focus)}:host:not(._old-edge)::-moz-range-progress{background:currentColor;border-radius:inherit;border-top-right-radius:0;border-bottom-right-radius:0}:host._old-edge::-ms-thumb{background:currentColor;border-radius:50%}:host._old-edge::-ms-fill-lower{background:currentColor}:host._old-edge::-ms-track{background:var(--tui-slider-track-color);border:none}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(TUI_SLIDER_OPTIONS)),
        __param(3, Inject(ElementRef)),
        __param(4, Inject(USER_AGENT)),
        __param(5, Inject(Injector))
    ], TuiSliderComponent);
    return TuiSliderComponent;
}());
export { TuiSliderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9zbGlkZXIvIiwic291cmNlcyI6WyJzbGlkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxNQUFNLEVBQ04sUUFBUSxFQUNSLEtBQUssRUFDTCxRQUFRLEVBQ1IsSUFBSSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxTQUFTLEVBQUUsT0FBTyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQy9DLE9BQU8sRUFDSCwyQkFBMkIsRUFDM0IsZUFBZSxFQUNmLGNBQWMsRUFDZCxPQUFPLEVBQ1AsS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUNoRixPQUFPLEVBQUMsa0JBQWtCLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7QUF3QnRFO0lBNERJLDRCQUlxQixPQUF5QixFQUNmLGlCQUFvQyxFQUMxQixPQUF5QixFQUNqQyxVQUF3QyxFQUNoQyxTQUFpQixFQUNuQixRQUFrQjs7UUFMcEMsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFFTCxZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUNqQyxlQUFVLEdBQVYsVUFBVSxDQUE4QjtRQUNoQyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ25CLGFBQVEsR0FBUixRQUFRLENBQVU7UUFqRXpELFNBQUksR0FBYSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUluQyxhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBK0RU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QUdEO1FBREMsT0FBTzt5REFHUDtJQTFEUSxrQkFBa0I7UUF0QjlCLFNBQVMsQ0FBQztZQUNQOzs7OztlQUtHO1lBQ0gsUUFBUSxFQUFFLDhCQUE4QjtZQUN4QyxRQUFRLEVBQUUsRUFBRTtZQUVaLElBQUksRUFBRTtnQkFDRjs7Ozs7bUJBS0c7Z0JBQ0gsU0FBUyxFQUFFLEdBQUc7Z0JBQ2Qsa0NBQWtDLEVBQUUsb0JBQW9CO2FBQzNEO1lBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2xELENBQUM7UUE4RE8sV0FBQSxRQUFRLEVBQUUsQ0FBQTtRQUNWLFdBQUEsSUFBSSxFQUFFLENBQUE7UUFDTixXQUFBLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUVqQixXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO1FBQ3pCLFdBQUEsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUE7UUFDMUIsV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbEIsV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbEIsV0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7T0FyRVosa0JBQWtCLENBa0Y5QjtJQUFELHlCQUFDO0NBQUEsQUFsRkQsSUFrRkM7U0FsRlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5qZWN0b3IsXG4gICAgSW5wdXQsXG4gICAgT3B0aW9uYWwsXG4gICAgU2VsZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nQ29udHJvbCwgTmdNb2RlbH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtVU0VSX0FHRU5UfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7XG4gICAgQ0hST01JVU1fRURHRV9TVEFSVF9WRVJTSU9OLFxuICAgIGlzRWRnZU9sZGVyVGhhbixcbiAgICB0dWlEZWZhdWx0UHJvcCxcbiAgICB0dWlQdXJlLFxuICAgIHdhdGNoLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQge1R1aVNsaWRlcktleVN0ZXBzRGlyZWN0aXZlfSBmcm9tICcuL2hlbHBlcnMvc2xpZGVyLWtleS1zdGVwcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUVUlfU0xJREVSX09QVElPTlMsIFR1aVNsaWRlck9wdGlvbnN9IGZyb20gJy4vc2xpZGVyLW9wdGlvbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICAvKipcbiAgICAgKiBXZSBoYXZlIHRvIGNhbGwgb3VyIGNvbXBvbmVudCBhcyBgPGlucHV0IHR1aVNsaWRlciB0eXBlPVwicmFuZ2VcIiAuLi4gLz5gXG4gICAgICogYmVjYXVzZSBvdGhlcndpc2UgYnVpbHQtaW4gYW5ndWxhclxuICAgICAqIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2Zvcm1zL3NyYy9kaXJlY3RpdmVzL3JhbmdlX3ZhbHVlX2FjY2Vzc29yLnRzI0w0NSBSYW5nZVZhbHVlQWNjZXNzb3J9XG4gICAgICogY2Fubm90IGJlIG1hdGNoZWQgYnkgaXRzIENTUyBzZWxlY3Rvci5cbiAgICAgKi9cbiAgICBzZWxlY3RvcjogJ2lucHV0W3R5cGU9cmFuZ2VdW3R1aVNsaWRlcl0nLFxuICAgIHRlbXBsYXRlOiAnJyxcbiAgICBzdHlsZVVybHM6IFsnLi9zbGlkZXIuc3R5bGUubGVzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZvciBjaGFuZ2UgZGV0ZWN0aW9uLlxuICAgICAgICAgKiBXZWJraXQgZG9lcyBub3QgaGF2ZSBidWlsdC1pbiBtZXRob2QgZm9yIGN1c3RvbWl6YXRpb24gb2YgZmlsbGluZyBwcm9ncmVzcyAoYXMgRmlyZWZveCkuXG4gICAgICAgICAqIFdlIGRyYXcgZmlsbGluZyBvZiBwcm9ncmVzcyBieSBgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC4uLilgIG9mIHRoZSB0cmFjay5cbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiB0cmlnZ2VycyBjaGFuZ2UgZGV0ZWN0aW9uIChmb3Ige0BsaW5rIHZhbHVlUGVyY2VudGFnZX0gZnVuY3Rpb24pIHdoZW4gd2UgZHJhZyB0aHVtYiBvZiB0aGUgaW5wdXQuXG4gICAgICAgICAqL1xuICAgICAgICAnKGlucHV0KSc6ICcwJyxcbiAgICAgICAgJ1tzdHlsZS4tLXR1aS1zbGlkZXItdHJhY2stY29sb3JdJzogJ29wdGlvbnMudHJhY2tDb2xvcicsXG4gICAgfSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU2xpZGVyQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2l6ZTogVHVpU2l6ZVMgPSB0aGlzLm9wdGlvbnMuc2l6ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzZWdtZW50cyA9IDE7XG5cbiAgICBnZXQgbWluKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBOdW1iZXIodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQubWluKTtcbiAgICB9XG5cbiAgICBnZXQgbWF4KCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBOdW1iZXIodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQubWF4IHx8IDEwMCk7XG4gICAgfVxuXG4gICAgZ2V0IHN0ZXAoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE51bWJlcih0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5zdGVwKSB8fCAxO1xuICAgIH1cblxuICAgIGdldCB2YWx1ZSgpOiBudW1iZXIge1xuICAgICAgICBjb25zdCB7ZWxlbWVudFJlZiwgY29udHJvbCwgaGFzS2V5U3RlcHN9ID0gdGhpcztcblxuICAgICAgICBpZiAoIWhhc0tleVN0ZXBzICYmIGNvbnRyb2wgaW5zdGFuY2VvZiBOZ01vZGVsKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIElmIGRldmVsb3BlciB1c2VzIGBbKG5nTW9kZWwpXWAgYW5kIHByb2dyYW1tYXRpY2FsbHkgY2hhbmdlIHZhbHVlLFxuICAgICAgICAgICAgICogdGhlIGBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWVgIGlzIGVxdWFsIHRvIHRoZSBwcmV2aW91cyB2YWx1ZSBhdCB0aGlzIG1vbWVudC5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRyb2wudmlld01vZGVsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIE51bWJlcihlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWUpIHx8IDA7XG4gICAgfVxuXG4gICAgc2V0IHZhbHVlKG5ld1ZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSBgJHtuZXdWYWx1ZX1gO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuLS10dWktc2xpZGVyLWZpbGwtcGVyY2VudGFnZS4lJylcbiAgICBnZXQgdmFsdWVQZXJjZW50YWdlKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoMTAwICogKHRoaXMudmFsdWUgLSB0aGlzLm1pbikpIC8gKHRoaXMubWF4IC0gdGhpcy5taW4pIHx8IDA7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdzdHlsZS4tLXR1aS1zbGlkZXItc2VnbWVudC13aWR0aC4lJylcbiAgICBnZXQgc2VnbWVudFdpZHRoKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAxMDAgLyBNYXRoLm1heCgxLCB0aGlzLnNlZ21lbnRzKTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9vbGQtZWRnZScpXG4gICAgZ2V0IGlzT2xkRWRnZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIGlzRWRnZU9sZGVyVGhhbihDSFJPTUlVTV9FREdFX1NUQVJUX1ZFUlNJT04sIHRoaXMudXNlckFnZW50KTtcbiAgICB9XG5cbiAgICBAdHVpUHVyZVxuICAgIGdldCBoYXNLZXlTdGVwcygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5pbmplY3Rvci5nZXQoVHVpU2xpZGVyS2V5U3RlcHNEaXJlY3RpdmUsIG51bGwpKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQFNlbGYoKVxuICAgICAgICBASW5qZWN0KE5nQ29udHJvbClcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb250cm9sOiBOZ0NvbnRyb2wgfCBudWxsLFxuICAgICAgICBASW5qZWN0KENoYW5nZURldGVjdG9yUmVmKSBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgIEBJbmplY3QoVFVJX1NMSURFUl9PUFRJT05TKSByZWFkb25seSBvcHRpb25zOiBUdWlTbGlkZXJPcHRpb25zLFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTElucHV0RWxlbWVudD4sXG4gICAgICAgIEBJbmplY3QoVVNFUl9BR0VOVCkgcHJpdmF0ZSByZWFkb25seSB1c2VyQWdlbnQ6IHN0cmluZyxcbiAgICAgICAgQEluamVjdChJbmplY3RvcikgcHJpdmF0ZSByZWFkb25seSBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgKSB7XG4gICAgICAgIGlmIChjb250cm9sIGluc3RhbmNlb2YgTmdNb2RlbCkge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgVmFsdWVBY2Nlc3Nvci53cml0ZVZhbHVlIG1ldGhvZCBpcyBjYWxsZWQgdHdpY2Ugb24gYW55IHZhbHVlIGFjY2Vzc29yIGR1cmluZyBjb21wb25lbnQgaW5pdGlhbGl6YXRpb24sXG4gICAgICAgICAgICAgKiB3aGVuIGEgY29udHJvbCBpcyBib3VuZCB1c2luZyBbKG5nTW9kZWwpXSwgZmlyc3QgdGltZSB3aXRoIGEgcGhhbnRvbSBudWxsIHZhbHVlLlxuICAgICAgICAgICAgICogV2l0aCBgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hgIHRoZSBzZWNvbmQgY2FsbCBvZiB3cml0ZVZhbHVlIHdpdGggcmVhbCB2YWx1ZSBkb24ndCByZS1yZW5kZXIgdGhlIHZpZXcuXG4gICAgICAgICAgICAgKiBfX19cbiAgICAgICAgICAgICAqIFNlZSB0aGlzIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xNDk4OCBpc3N1ZX1cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgY29udHJvbC52YWx1ZUNoYW5nZXM/LnBpcGUod2F0Y2goY2hhbmdlRGV0ZWN0b3JSZWYpLCB0YWtlKDEpKS5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==