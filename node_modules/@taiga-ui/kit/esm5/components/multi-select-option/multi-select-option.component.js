import { __decorate, __extends } from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { isPresent } from '@taiga-ui/cdk';
import { sizeBigger } from '@taiga-ui/core';
import { TuiSelectOptionComponent } from '@taiga-ui/kit/components/select-option';
var TuiMultiSelectOptionComponent = /** @class */ (function (_super) {
    __extends(TuiMultiSelectOptionComponent, _super);
    function TuiMultiSelectOptionComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TuiMultiSelectOptionComponent.prototype, "size", {
        get: function () {
            return sizeBigger(this.option.size) ? 'l' : 'm';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiMultiSelectOptionComponent.prototype, "selected", {
        get: function () {
            var _this = this;
            return (isPresent(this.option.value) &&
                isPresent(this.control.value) &&
                !!this.control.value.find(function (item) {
                    return _this.matcher(item, _this.option.value);
                }));
        },
        enumerable: true,
        configurable: true
    });
    TuiMultiSelectOptionComponent = __decorate([
        Component({
            selector: 'tui-multi-select-option',
            template: "<tui-primitive-checkbox\n    class=\"t-checkbox\"\n    [size]=\"size\"\n    [value]=\"selected$ | async\"\n></tui-primitive-checkbox>\n<ng-container [ngTemplateOutlet]=\"context.$implicit\"></ng-container>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["@keyframes retrigger{from{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;overflow:hidden;animation:1s retrigger}.t-checkbox{margin-right:.75rem}"]
        })
    ], TuiMultiSelectOptionComponent);
    return TuiMultiSelectOptionComponent;
}(TuiSelectOptionComponent));
export { TuiMultiSelectOptionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0LW9wdGlvbi8iLCJzb3VyY2VzIjpbIm11bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLFVBQVUsRUFBVyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBUWhGO0lBQXNELGlEQUEyQjtJQUFqRjs7SUFjQSxDQUFDO0lBYkcsc0JBQUksK0NBQUk7YUFBUjtZQUNJLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQ3BELENBQUM7OztPQUFBO0lBRUQsc0JBQWMsbURBQVE7YUFBdEI7WUFBQSxpQkFRQztZQVBHLE9BQU8sQ0FDSCxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQzVCLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztnQkFDN0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFDLElBQU87b0JBQzlCLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFxQixDQUFDO2dCQUFyRCxDQUFxRCxDQUN4RCxDQUNKLENBQUM7UUFDTixDQUFDOzs7T0FBQTtJQWJRLDZCQUE2QjtRQU56QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUseUJBQXlCO1lBQ25DLDJOQUFrRDtZQUVsRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDbEQsQ0FBQztPQUNXLDZCQUE2QixDQWN6QztJQUFELG9DQUFDO0NBQUEsQUFkRCxDQUFzRCx3QkFBd0IsR0FjN0U7U0FkWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtpc1ByZXNlbnR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtzaXplQmlnZ2VyLCBUdWlTaXplTH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtUdWlTZWxlY3RPcHRpb25Db21wb25lbnR9IGZyb20gJ0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9zZWxlY3Qtb3B0aW9uJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktbXVsdGktc2VsZWN0LW9wdGlvbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL211bHRpLXNlbGVjdC1vcHRpb24udGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbXVsdGktc2VsZWN0LW9wdGlvbi5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aU11bHRpU2VsZWN0T3B0aW9uQ29tcG9uZW50PFQ+IGV4dGVuZHMgVHVpU2VsZWN0T3B0aW9uQ29tcG9uZW50PFQ+IHtcbiAgICBnZXQgc2l6ZSgpOiBUdWlTaXplTCB7XG4gICAgICAgIHJldHVybiBzaXplQmlnZ2VyKHRoaXMub3B0aW9uLnNpemUpID8gJ2wnIDogJ20nO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBnZXQgc2VsZWN0ZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBpc1ByZXNlbnQodGhpcy5vcHRpb24udmFsdWUpICYmXG4gICAgICAgICAgICBpc1ByZXNlbnQodGhpcy5jb250cm9sLnZhbHVlKSAmJlxuICAgICAgICAgICAgISF0aGlzLmNvbnRyb2wudmFsdWUuZmluZCgoaXRlbTogVCkgPT5cbiAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZXIoaXRlbSwgdGhpcy5vcHRpb24udmFsdWUgYXMgdW5rbm93biBhcyBUKSxcbiAgICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=