{"version":3,"file":"taiga-ui-kit-components-input-copy.js","sources":["ng://@taiga-ui/kit/components/input-copy/input-copy.providers.ts","ng://@taiga-ui/kit/components/input-copy/input-copy.component.ts","ng://@taiga-ui/kit/components/input-copy/input-copy.directive.ts","ng://@taiga-ui/kit/components/input-copy/input-copy.module.ts","ng://@taiga-ui/kit/components/input-copy/taiga-ui-kit-components-input-copy.ts"],"sourcesContent":["import {forwardRef, Provider} from '@angular/core';\nimport {AbstractTuiControl, TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk';\nimport {TUI_VALUE_ACCESSOR_PROVIDER} from '@taiga-ui/kit/providers';\n\nimport {TuiInputCopyComponent} from './input-copy.component';\n\nexport const TUI_INPUT_COPY_PROVIDERS: Provider[] = [\n    TUI_VALUE_ACCESSOR_PROVIDER,\n    {\n        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n        useExisting: forwardRef(() => TuiInputCopyComponent),\n    },\n    {\n        provide: AbstractTuiControl,\n        useExisting: forwardRef(() => TuiInputCopyComponent),\n    },\n];\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiDirection,\n    TuiHintModeT,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {TUI_COPY_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {merge, Observable, of, Subject, timer} from 'rxjs';\nimport {mapTo, startWith, switchMap} from 'rxjs/operators';\n\nimport {TUI_INPUT_COPY_PROVIDERS} from './input-copy.providers';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-copy',\n    templateUrl: './input-copy.template.html',\n    styleUrls: ['./input-copy.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: TUI_INPUT_COPY_PROVIDERS,\n})\nexport class TuiInputCopyComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private readonly copy$ = new Subject<void>();\n\n    @Input()\n    @tuiDefaultProp()\n    successMessage: PolymorpheusContent = '';\n\n    @Input()\n    @tuiDefaultProp()\n    messageDirection: TuiDirection = 'bottom-left';\n\n    @Input()\n    @tuiDefaultProp()\n    messageMode: TuiHintModeT | null = null;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_COPY_TEXTS) private readonly copyTexts$: Observable<[string, string]>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    @HostBinding('class._has-value')\n    get hasValue(): boolean {\n        return !!this.value;\n    }\n\n    @tuiPure\n    get hintText$(): Observable<PolymorpheusContent> {\n        return this.copyTexts$.pipe(\n            switchMap(texts =>\n                this.copy$.pipe(\n                    switchMap(() =>\n                        merge(\n                            of(this.successMessage || texts[1]),\n                            timer(3000).pipe(mapTo(texts[0])),\n                        ),\n                    ),\n                    startWith(texts[0]),\n                ),\n            ),\n        );\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): string {\n        return this.textfieldSize.size === 's' ? 'tuiIconCopy' : 'tuiIconCopyLarge';\n    }\n\n    onValueChange(value: string): void {\n        this.updateValue(value);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean): void {\n        this.updatePressed(pressed);\n    }\n\n    copy(): void {\n        if (!this.textfield?.nativeFocusableElement) {\n            return;\n        }\n\n        this.textfield.nativeFocusableElement.select();\n        this.documentRef.execCommand('copy');\n        this.copy$.next();\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n}\n","import {Directive, forwardRef} from '@angular/core';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputCopyComponent} from './input-copy.component';\n\n@Directive({\n    selector: 'tui-input-copy',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputCopyDirective),\n        },\n    ],\n})\nexport class TuiInputCopyDirective extends TuiAbstractTextfieldHost<TuiInputCopyComponent> {\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiAlertModule,\n    TuiHintModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputCopyComponent} from './input-copy.component';\nimport {TuiInputCopyDirective} from './input-copy.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiHintModule,\n        TuiPrimitiveTextfieldModule,\n        TuiAlertModule,\n    ],\n    declarations: [TuiInputCopyComponent, TuiInputCopyDirective],\n    exports: [TuiInputCopyComponent, TuiInputCopyDirective, TuiTextfieldComponent],\n})\nexport class TuiInputCopyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;MAMa,wBAAwB,GAAe;IAChD,2BAA2B;IAC3B;QACI,OAAO,EAAE,2BAA2B;QACpC,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;KACvD;IACD;QACI,OAAO,EAAE,kBAAkB;QAC3B,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;KACvD;;;ACmBL;IAQa,qBAAqB,GAAlC,MAAa,qBACT,SAAQ,kBAA0B;IAoBlC,YAII,OAAyB,EACE,iBAAoC,EAC5B,WAAqB,EAEvC,aAAwC,EAChB,UAAwC;QAEjF,KAAK,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QALC,gBAAW,GAAX,WAAW,CAAU;QAEvC,kBAAa,GAAb,aAAa,CAA2B;QAChB,eAAU,GAAV,UAAU,CAA8B;QAvBpE,UAAK,GAAG,IAAI,OAAO,EAAQ,CAAC;QAI7C,mBAAc,GAAwB,EAAE,CAAC;QAIzC,qBAAgB,GAAiB,aAAa,CAAC;QAI/C,gBAAW,GAAwB,IAAI,CAAC;KAcvC;IAGD,IAAI,QAAQ;QACR,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;KACvB;IAGD,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACvB,SAAS,CAAC,KAAK,IACX,IAAI,CAAC,KAAK,CAAC,IAAI,CACX,SAAS,CAAC,MACN,KAAK,CACD,EAAE,CAAC,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EACnC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACpC,CACJ,EACD,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACtB,CACJ,CACJ,CAAC;KACL;IAED,IAAI,sBAAsB;QACtB,OAAO,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,SAAS;cACzC,IAAI;cACJ,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;KAC/C;IAED,IAAI,OAAO;QACP,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;KACrD;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,GAAG,GAAG,aAAa,GAAG,kBAAkB,CAAC;KAC/E;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,SAAS,CAAC,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,SAAS,CAAC,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,SAAS,CAAC,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,IAAI;;QACA,IAAI,QAAC,IAAI,CAAC,SAAS,0CAAE,sBAAsB,CAAA,EAAE;YACzC,OAAO;SACV;QAED,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;IAES,gBAAgB;QACtB,OAAO,EAAE,CAAC;KACb;EACJ;;YA3EgB,SAAS,uBAHjB,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,SAAS;YAE6B,iBAAiB,uBAA9D,MAAM,SAAC,iBAAiB;YACuB,QAAQ,uBAAvD,MAAM,SAAC,QAAQ;YAEgB,yBAAyB,uBADxD,MAAM,SAAC,kBAAkB;YAE2B,UAAU,uBAA9D,MAAM,SAAC,cAAc;;AAzB1B;IADC,SAAS,CAAC,8BAA8B,CAAC;wDACkB;AAM5D;IAFC,KAAK,EAAE;IACP,cAAc,EAAE;6DACwB;AAIzC;IAFC,KAAK,EAAE;IACP,cAAc,EAAE;+DAC8B;AAI/C;IAFC,KAAK,EAAE;IACP,cAAc,EAAE;0DACuB;AAiBxC;IADC,WAAW,CAAC,kBAAkB,CAAC;qDAG/B;AAGD;IADC,OAAO;sDAeP;AAvDQ,qBAAqB;IAPjC,SAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,+sCAAyC;QAEzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,SAAS,EAAE,wBAAwB;;KACtC,CAAC;IAuBO,WAAA,QAAQ,EAAE,CAAA;IACV,WAAA,IAAI,EAAE,CAAA;IACN,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;IAEjB,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;IACzB,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;IAChB,WAAA,MAAM,CAAC,kBAAkB,CAAC,CAAA;IAE1B,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;GA9BlB,qBAAqB,CAoGjC;;;IChIY,qBAAqB,6BAAlC,MAAa,qBAAsB,SAAQ,wBAA+C;IACtF,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAClC;EACJ;AAJY,qBAAqB;IATjC,SAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,UAAU,CAAC,MAAM,uBAAqB,CAAC;aACvD;SACJ;KACJ,CAAC;GACW,qBAAqB,CAIjC;;ICQY,kBAAkB,GAA/B,MAAa,kBAAkB;EAAG;AAArB,kBAAkB;IAZ9B,QAAQ,CAAC;QACN,OAAO,EAAE;YACL,YAAY;YACZ,kBAAkB;YAClB,YAAY;YACZ,aAAa;YACb,2BAA2B;YAC3B,cAAc;SACjB;QACD,YAAY,EAAE,CAAC,qBAAqB,EAAE,qBAAqB,CAAC;QAC5D,OAAO,EAAE,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC;KACjF,CAAC;GACW,kBAAkB,CAAG;;AC1BlC;;;;;;"}