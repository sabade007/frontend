{"version":3,"file":"taiga-ui-kit-components-input-month.js","sources":["ng://@taiga-ui/kit/components/input-month/input-month.providers.ts","ng://@taiga-ui/kit/components/input-month/input-month.component.ts","ng://@taiga-ui/kit/components/input-month/input-month.directive.ts","ng://@taiga-ui/kit/components/input-month/input-month.module.ts","ng://@taiga-ui/kit/components/input-month/taiga-ui-kit-components-input-month.ts"],"sourcesContent":["import {forwardRef, Provider} from '@angular/core';\nimport {AbstractTuiControl, TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk';\nimport {TuiMonthPipe} from '@taiga-ui/core';\nimport {\n    LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n    TUI_MONTH_FORMATTER_PROVIDER,\n} from '@taiga-ui/kit/providers';\n\nimport {TuiInputMonthComponent} from './input-month.component';\n\nexport const TUI_INPUT_MONTH_PROVIDERS: Provider[] = [\n    {\n        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n        useExisting: forwardRef(() => TuiInputMonthComponent),\n    },\n    {\n        provide: AbstractTuiControl,\n        useExisting: forwardRef(() => TuiInputMonthComponent),\n    },\n    LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n    TUI_MONTH_FORMATTER_PROVIDER,\n    TuiMonthPipe,\n];\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    TuiBooleanHandler,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiHandler,\n    TuiMonth,\n    TuiYear,\n} from '@taiga-ui/cdk';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {Observable} from 'rxjs';\n\nimport {TUI_INPUT_MONTH_PROVIDERS} from './input-month.providers';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-month',\n    templateUrl: './input-month.template.html',\n    styleUrls: ['./input-month.style.less'],\n    providers: TUI_INPUT_MONTH_PROVIDERS,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiInputMonthComponent\n    extends AbstractTuiNullableControl<TuiMonth>\n    implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiMonth = TUI_FIRST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiMonth = TUI_LAST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiMonth> = ALWAYS_FALSE_HANDLER;\n\n    open = false;\n    activeYear: TuiYear = this.value || TuiDay.currentLocal();\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_MONTH_FORMATTER)\n        readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): string {\n        return sizeBigger(this.textfieldSize.size)\n            ? 'tuiIconCalendarLarge'\n            : 'tuiIconCalendar';\n    }\n\n    onValueChange(value: string): void {\n        if (value) {\n            return;\n        }\n\n        this.updateValue(null);\n        this.onOpenChange(true);\n    }\n\n    onMonthClick(month: TuiMonth): void {\n        this.updateValue(month);\n        this.close();\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onOpenChange(open: boolean): void {\n        if (open && this.value) {\n            this.activeYear = this.value;\n        }\n\n        this.open = open;\n    }\n\n    toggle(): void {\n        this.open = !this.open;\n    }\n\n    setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n}\n","import {Directive, DoCheck, forwardRef, Inject, Self} from '@angular/core';\nimport {AbstractTuiControl, TuiDestroyService, TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {TuiInputMonthComponent} from './input-month.component';\n\n@Directive({\n    selector: 'tui-input-month',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputMonthDirective),\n        },\n        TuiDestroyService,\n    ],\n})\nexport class TuiInputMonthDirective\n    extends TuiAbstractTextfieldHost<TuiInputMonthComponent>\n    implements DoCheck\n{\n    private readonly value$ = new Subject<TuiMonth | null>();\n\n    private localizedValue = '';\n\n    constructor(\n        @Inject(AbstractTuiControl) host: TuiInputMonthComponent,\n        @Inject(TUI_MONTH_FORMATTER)\n        formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        super(host);\n\n        this.value$\n            .pipe(distinctUntilChanged(), switchMap(formatter), takeUntil(destroy$))\n            .subscribe(localizedValue => {\n                this.localizedValue = localizedValue;\n            });\n    }\n\n    get readOnly(): boolean {\n        return true;\n    }\n\n    get value(): string {\n        return this.localizedValue;\n    }\n\n    ngDoCheck(): void {\n        this.value$.next(this.host.value);\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiMapperPipeModule, TuiPreventDefaultModule} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n} from '@taiga-ui/core';\nimport {TuiCalendarMonthModule} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthComponent} from './input-month.component';\nimport {TuiInputMonthDirective} from './input-month.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiCalendarMonthModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiSvgModule,\n        TuiPreventDefaultModule,\n        TuiMapperPipeModule,\n    ],\n    declarations: [TuiInputMonthComponent, TuiInputMonthDirective],\n    exports: [TuiInputMonthComponent, TuiInputMonthDirective, TuiTextfieldComponent],\n})\nexport class TuiInputMonthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}