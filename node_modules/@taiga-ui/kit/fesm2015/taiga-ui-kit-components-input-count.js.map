{"version":3,"file":"taiga-ui-kit-components-input-count.js","sources":["ng://@taiga-ui/kit/components/input-count/input-count-options.ts","ng://@taiga-ui/kit/components/input-count/input-count.component.ts","ng://@taiga-ui/kit/components/input-count/input-count.directive.ts","ng://@taiga-ui/kit/components/input-count/input-count.module.ts","ng://@taiga-ui/kit/components/input-count/taiga-ui-kit-components-input-count.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputCountOptions {\n    readonly icons: Readonly<{\n        up: PolymorpheusContent<Record<string, unknown>>;\n        down: PolymorpheusContent<Record<string, unknown>>;\n    }>;\n    readonly appearance: string;\n    readonly hideButtons: boolean;\n    readonly min: number;\n    readonly max: number;\n    readonly step: number;\n    readonly postfix: string;\n}\n\n/**\n * @deprecated: use TuiInputCountOptions instead\n * todo: remove in 3.0\n */\nexport type InputCountOptions = TuiInputCountOptions;\n\n// TODO: 3.0 remove in ivy compilation\nexport const PASSWORD_ICON_UP = `tuiIconPlus`;\nexport const PASSWORD_ICON_DOWN = `tuiIconMinus`;\n\n/** Default values for the input count options. */\nexport const TUI_INPUT_COUNT_DEFAULT_OPTIONS: TuiInputCountOptions = {\n    icons: {\n        up: PASSWORD_ICON_UP,\n        down: PASSWORD_ICON_DOWN,\n    },\n    appearance: `textfield`,\n    hideButtons: false,\n    min: 0,\n    max: Infinity,\n    step: 1,\n    postfix: ``,\n};\n\nexport const TUI_INPUT_COUNT_OPTIONS = new InjectionToken<TuiInputCountOptions>(\n    `Default parameters for input count component`,\n    {\n        factory: () => TUI_INPUT_COUNT_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputCountOptionsProvider: (\n    options: Partial<TuiInputCountOptions>,\n) => ValueProvider = (options: Partial<TuiInputCountOptions>) => ({\n    provide: TUI_INPUT_COUNT_OPTIONS,\n    useValue: {...TUI_INPUT_COUNT_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    AbstractTuiNullableControl,\n    clamp,\n    isNativeFocused,\n    isPresent,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TUI_IS_MOBILE,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    formatNumber,\n    TUI_NUMBER_FORMAT,\n    TUI_TEXTFIELD_APPEARANCE,\n    TUI_TEXTFIELD_SIZE,\n    tuiCreateNumberMask,\n    tuiMaskedNumberStringToNumber,\n    TuiNumberFormatSettings,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldSizeDirective,\n    TuiTextMaskOptions,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_PLUS_MINUS_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskConfig} from 'angular2-text-mask';\nimport {Observable} from 'rxjs';\n\nimport {TUI_INPUT_COUNT_OPTIONS, TuiInputCountOptions} from './input-count-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-count',\n    templateUrl: './input-count.template.html',\n    styleUrls: ['./input-count.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCountComponent),\n        },\n        {\n            provide: AbstractTuiControl,\n            useExisting: forwardRef(() => TuiInputCountComponent),\n        },\n    ],\n})\nexport class TuiInputCountComponent\n    extends AbstractTuiNullableControl<number>\n    implements TuiWithOptionalMinMax<number>, TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    private unfinishedValue: string | null = '';\n\n    @Input()\n    @tuiDefaultProp()\n    step = this.options.step;\n\n    @Input()\n    @tuiDefaultProp()\n    min = this.options.min;\n\n    @Input()\n    @tuiDefaultProp()\n    max = this.options.max;\n\n    @Input()\n    @tuiDefaultProp()\n    hideButtons = this.options.hideButtons;\n\n    @Input()\n    @tuiDefaultProp()\n    prefix = '';\n\n    @Input()\n    @tuiDefaultProp()\n    postfix = this.options.postfix;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_APPEARANCE)\n        private readonly appearance: string,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_PLUS_MINUS_TEXTS)\n        readonly minusTexts$: Observable<[string, string]>,\n        @Inject(TUI_IS_MOBILE) private readonly isMobile: boolean,\n        @Inject(TUI_INPUT_COUNT_OPTIONS)\n        readonly options: TuiInputCountOptions,\n        @Inject(TUI_NUMBER_FORMAT)\n        private readonly numberFormat: TuiNumberFormatSettings,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    @tuiPure\n    getMask(allowNegative: boolean): TextMaskConfig {\n        return {\n            mask: tuiCreateNumberMask({\n                allowNegative,\n                decimalSymbol: this.numberFormat.decimalSeparator,\n                thousandSymbol: this.numberFormat.thousandSeparator,\n            }),\n            guide: false,\n        } as TuiTextMaskOptions as unknown as TextMaskConfig;\n    }\n\n    // TODO: 3.0 Remove in v.3\n    @HostBinding('class._hide-buttons')\n    get buttonsHidden(): boolean {\n        return this.hideButtons || this.appearance === 'table';\n    }\n\n    get iconUp(): PolymorpheusContent<Record<string, unknown>> {\n        return this.options.icons.up;\n    }\n\n    get iconDown(): PolymorpheusContent<Record<string, unknown>> {\n        return this.options.icons.down;\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.primitiveTextfield || this.computedDisabled\n            ? null\n            : this.primitiveTextfield.nativeFocusableElement;\n    }\n\n    @HostBinding('attr.data-size')\n    get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    get exampleText(): string {\n        return String(this.min);\n    }\n\n    get computedValue(): string {\n        return this.focused ? this.nativeValue : this.formatNumber(this.value);\n    }\n\n    get minusButtonDisabled(): boolean {\n        return !this.interactive || (isPresent(this.value) && this.value <= this.min);\n    }\n\n    get plusButtonDisabled(): boolean {\n        return !this.interactive || (isPresent(this.value) && this.value >= this.max);\n    }\n\n    onButtonMouseDown(event: MouseEvent, disabled: boolean = false): void {\n        if (disabled || !this.nativeFocusableElement || this.isMobile) {\n            return;\n        }\n\n        event.preventDefault();\n        setNativeFocused(this.nativeFocusableElement);\n    }\n\n    onFocused(focused: boolean): void {\n        if (!focused) {\n            this.onBlur();\n        }\n\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean): void {\n        this.updatePressed(pressed);\n    }\n\n    onValueChange(): void {\n        if (this.isNativeValueNotFinished) {\n            this.unfinishedValue = this.nativeValue;\n\n            return;\n        }\n\n        this.unfinishedValue = null;\n\n        const capped = this.capValue(this.nativeNumberValue);\n\n        if (this.isNotNumber(capped)) {\n            this.updateValue(null);\n\n            return;\n        }\n\n        const newValue = this.formatNumber(capped);\n\n        if (this.nativeValue !== newValue) {\n            this.nativeValue = newValue;\n        }\n\n        this.updateValue(capped);\n    }\n\n    decreaseValue(): void {\n        if (this.readOnly) {\n            return;\n        }\n\n        const newValue = (this.value || 0) - this.step;\n\n        this.safeUpdateValue(newValue);\n    }\n\n    increaseValue(): void {\n        if (this.readOnly) {\n            return;\n        }\n\n        const newValue = (this.value || 0) + this.step;\n\n        this.safeUpdateValue(newValue);\n    }\n\n    onKeydown(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'ArrowUp':\n            case 'Up':\n                this.increaseValue();\n                event.preventDefault();\n                break;\n            case 'ArrowDown':\n            case 'Down':\n                this.decreaseValue();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    }\n\n    private get nativeNumberValue(): number {\n        return parseInt(\n            this.nativeValue.split(this.numberFormat.thousandSeparator).join(''),\n            10,\n        );\n    }\n\n    private get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    private set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    private safeUpdateValue(newValue: number): void {\n        const value = clamp(newValue, this.min, this.max);\n\n        this.updateValue(value);\n        this.nativeValue = this.formatNumber(value);\n    }\n\n    private capValue(value: number): number | null {\n        const capped = Math.min(value, this.max);\n\n        return Number.isNaN(capped) || capped < this.min ? null : capped;\n    }\n\n    private onBlur(): void {\n        const nativeNumberValue = this.unfinishedValue\n            ? tuiMaskedNumberStringToNumber(\n                  this.unfinishedValue,\n                  this.numberFormat.decimalSeparator,\n                  this.numberFormat.thousandSeparator,\n              )\n            : this.nativeNumberValue;\n\n        this.unfinishedValue = null;\n\n        if (this.isNotNumber(nativeNumberValue)) {\n            this.updateValue(null);\n\n            return;\n        }\n\n        const value = Math.max(nativeNumberValue || 0, this.min);\n        const formattedValue = this.formatNumber(value);\n\n        this.nativeValue = formattedValue;\n        this.updateValue(value);\n\n        if (this.primitiveTextfield) {\n            this.primitiveTextfield.value = formattedValue;\n        }\n    }\n\n    private formatNumber(value: number | null): string {\n        return this.isNotNumber(value)\n            ? ''\n            : formatNumber(\n                  value,\n                  null,\n                  this.numberFormat.decimalSeparator,\n                  this.numberFormat.thousandSeparator,\n              );\n    }\n\n    private isNotNumber(value: number | null): value is null {\n        return !isPresent(value) || Number.isNaN(value);\n    }\n\n    private get isNativeValueNotFinished(): boolean {\n        const {nativeNumberValue} = this;\n\n        return nativeNumberValue < 0\n            ? nativeNumberValue > this.max\n            : nativeNumberValue < this.min;\n    }\n}\n","import {Directive, forwardRef} from '@angular/core';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputCountComponent} from './input-count.component';\n\n@Directive({\n    selector: 'tui-input-count',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputCountDirective),\n        },\n    ],\n})\nexport class TuiInputCountDirective extends TuiAbstractTextfieldHost<TuiInputCountComponent> {\n    onValueChange(): void {\n        this.host.onValueChange();\n    }\n\n    process(input: HTMLInputElement): void {\n        input.autocomplete = 'off';\n        input.inputMode = 'numeric';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiButtonModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputCountComponent} from './input-count.component';\nimport {TuiInputCountDirective} from './input-count.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        TuiButtonModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n        PolymorpheusModule,\n    ],\n    declarations: [TuiInputCountComponent, TuiInputCountDirective],\n    exports: [TuiInputCountComponent, TuiInputCountDirective, TuiTextfieldComponent],\n})\nexport class TuiInputCountModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}