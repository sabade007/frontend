{"version":3,"file":"taiga-ui-kit-components-input-phone-international.js","sources":["ng://@taiga-ui/kit/components/input-phone-international/input-phone-international.options.ts","ng://@taiga-ui/kit/components/input-phone-international/utils/extract-value-from-event.ts","ng://@taiga-ui/kit/components/input-phone-international/input-phone-international.component.ts","ng://@taiga-ui/kit/components/input-phone-international/input-phone-international.module.ts","ng://@taiga-ui/kit/components/input-phone-international/taiga-ui-kit-components-input-phone-international.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport interface TuiInputPhoneInternationalOptions {\n    readonly countries: readonly TuiCountryIsoCode[];\n    readonly countryIsoCode: TuiCountryIsoCode;\n}\n\nexport const TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS: TuiInputPhoneInternationalOptions =\n    {\n        countries: [],\n        countryIsoCode: TuiCountryIsoCode.RU,\n    };\n\nexport const TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS =\n    new InjectionToken<TuiInputPhoneInternationalOptions>(\n        `Default parameters for input phone international component`,\n        {\n            factory: () => TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n        },\n    );\n\nexport const tuiInputPhoneInternationalOptionsProvider: (\n    options: Partial<TuiInputPhoneInternationalOptions>,\n) => ValueProvider = (options: Partial<TuiInputPhoneInternationalOptions>) => ({\n    provide: TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n    useValue: {...TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS, ...options},\n});\n","import {getClipboardDataText} from '@taiga-ui/cdk';\n\n/**\n * @deprecated: use {@link tuiExtractValueFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function extractValueFromEvent(event: ClipboardEvent | DragEvent): string {\n    // TODO: iframe warning\n    return event instanceof DragEvent\n        ? event.dataTransfer?.getData(`text/plain`) || ``\n        : getClipboardDataText(event);\n}\n\nexport const tuiExtractValueFromEvent = extractValueFromEvent;\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    CHAR_PLUS,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiMapper,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_MASK_SYMBOLS_REGEXP,\n    TUI_NON_DIGITS_REGEXP,\n    TuiFlagPipe,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeM,\n    TuiSizeS,\n} from '@taiga-ui/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {TUI_ARROW} from '@taiga-ui/kit/components/arrow';\nimport {TuiInputPhoneComponent} from '@taiga-ui/kit/components/input-phone';\nimport {TuiToCountryCodePipe} from '@taiga-ui/kit/pipes';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {TUI_COUNTRIES, TUI_COUNTRIES_MASKS} from '@taiga-ui/kit/tokens';\nimport {tuiGetMaxAllowedPhoneLength, tuiIsoToCountryCode} from '@taiga-ui/kit/utils';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\nimport {\n    TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n    TuiInputPhoneInternationalOptions,\n} from './input-phone-international.options';\nimport {tuiExtractValueFromEvent} from './utils/extract-value-from-event';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-phone-international',\n    templateUrl: './input-phone-international.template.html',\n    styleUrls: ['./input-phone-international.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputPhoneInternationalComponent),\n        },\n        FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n        // TODO: for backward compatibility only. Drop in v4.0\n        TuiFlagPipe,\n        TuiToCountryCodePipe,\n    ],\n})\nexport class TuiInputPhoneInternationalComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiInputPhoneComponent)\n    private readonly inputPhoneComponent?: TuiInputPhoneComponent;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input('countryIsoCode')\n    @tuiDefaultProp()\n    set isoCode(code: TuiCountryIsoCode) {\n        this.inputPhoneComponent?.writeValue(this.value);\n        this.countryIsoCode = code;\n    }\n\n    @Input()\n    countries = this.options.countries;\n\n    @Output()\n    readonly countryIsoCodeChange = new EventEmitter<TuiCountryIsoCode>();\n\n    countryIsoCode = this.options.countryIsoCode;\n\n    open = false;\n\n    readonly arrow: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    > = TUI_ARROW;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_COUNTRIES)\n        readonly countriesNames$: Observable<Record<TuiCountryIsoCode, string>>,\n        @Inject(TUI_COUNTRIES_MASKS)\n        readonly countriesMasks: Record<TuiCountryIsoCode, string>,\n        @Inject(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS)\n        private readonly options: TuiInputPhoneInternationalOptions,\n        @Inject(TuiFlagPipe)\n        private readonly flagPipe: TuiFlagPipe,\n        @Inject(TuiToCountryCodePipe)\n        private readonly extractCountryCodePipe: TuiToCountryCodePipe,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLElement | null {\n        return this.inputPhoneComponent && !this.computedDisabled\n            ? this.inputPhoneComponent.nativeFocusableElement\n            : null;\n    }\n\n    get focused(): boolean {\n        return (\n            (!!this.primitiveTextfield && this.primitiveTextfield.focused) ||\n            (!!this.inputPhoneComponent && this.inputPhoneComponent.focused)\n        );\n    }\n\n    get inputPhoneCountryCode(): string {\n        return tuiIsoToCountryCode(this.countriesMasks, this.countryIsoCode);\n    }\n\n    get phoneMaskAfterCountryCode(): string {\n        const countryCode = this.inputPhoneCountryCode;\n\n        return this.calculateMaskAfterCountryCode(\n            this.countriesMasks[this.countryIsoCode],\n            countryCode,\n        );\n    }\n\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    get countryFlagPath(): string {\n        return this.getFlagPath(this.countryIsoCode);\n    }\n\n    @HostListener('paste.capture.prevent.stop', ['$event'])\n    @HostListener('drop.capture.prevent.stop', ['$event'])\n    onPaste(event: ClipboardEvent | DragEvent): void {\n        let value = tuiExtractValueFromEvent(event).replace(TUI_NON_DIGITS_REGEXP, '');\n        const countryIsoCode = this.extractCountryCodePipe.transform(\n            value,\n            this.countries,\n        );\n\n        if (!countryIsoCode) {\n            this.updateValue(\n                `${this.inputPhoneCountryCode}${value}`\n                    .replace(TUI_MASK_SYMBOLS_REGEXP, '')\n                    .slice(\n                        0,\n                        tuiGetMaxAllowedPhoneLength(\n                            this.countriesMasks,\n                            this.countryIsoCode,\n                        ),\n                    ),\n            );\n\n            return;\n        }\n\n        if (countryIsoCode === TuiCountryIsoCode.RU) {\n            value = value.replace(/^8/, '7');\n        }\n\n        this.updateCountryIsoCode(countryIsoCode);\n        this.updateValue(`${CHAR_PLUS}${value}`);\n    }\n\n    readonly isoToCountryCodeMapper: TuiMapper<TuiCountryIsoCode, string> = item =>\n        tuiIsoToCountryCode(this.countriesMasks, item);\n\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    getFlagPath(code: TuiCountryIsoCode): string {\n        return this.flagPipe.transform(code);\n    }\n\n    onItemClick(isoCode: TuiCountryIsoCode): void {\n        this.open = false;\n        this.updateCountryIsoCode(isoCode);\n        // recalculates mask inside inputPhone to prevent isoCode conflict\n        this.changeDetectorRef.detectChanges();\n\n        const maxLength = tuiGetMaxAllowedPhoneLength(this.countriesMasks, isoCode);\n\n        if (this.value.length > maxLength) {\n            this.updateValue(this.value.slice(0, maxLength));\n        }\n\n        if (this.nativeFocusableElement) {\n            setNativeFocused(this.nativeFocusableElement);\n        }\n    }\n\n    setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    /**\n     * @deprecated use `{{ countryIsoCode | tuiIsoToCountryCode }}`\n     * TODO drop in v4.0\n     */\n    isoToCountryCode(isoCode: TuiCountryIsoCode): string {\n        return tuiIsoToCountryCode(this.countriesMasks, isoCode);\n    }\n\n    onModelChange(value: string): void {\n        this.updateValue(value);\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    @tuiPure\n    private calculateMaskAfterCountryCode(mask: string, countryCode: string): string {\n        return mask.replace(countryCode, '').trim();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n\n    private updateCountryIsoCode(code: TuiCountryIsoCode): void {\n        this.countryIsoCode = code;\n        this.countryIsoCodeChange.emit(code);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiActiveZoneModule, TuiMapperPipeModule} from '@taiga-ui/cdk';\nimport {\n    TuiDataListModule,\n    TuiFlagPipeModule,\n    TuiGroupModule,\n    TuiHintControllerModule,\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiArrowModule} from '@taiga-ui/kit/components/arrow';\nimport {TuiInputPhoneModule} from '@taiga-ui/kit/components/input-phone';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputPhoneInternationalComponent} from './input-phone-international.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiInputPhoneModule,\n        TuiGroupModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHintControllerModule,\n        TuiHostedDropdownModule,\n        TuiDataListModule,\n        TuiArrowModule,\n        TuiFlagPipeModule,\n        TuiMapperPipeModule,\n        TuiActiveZoneModule,\n    ],\n    declarations: [TuiInputPhoneInternationalComponent],\n    exports: [TuiInputPhoneInternationalComponent],\n})\nexport class TuiInputPhoneInternationalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}