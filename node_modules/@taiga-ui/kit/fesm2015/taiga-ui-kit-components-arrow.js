import { __decorate, __param } from 'tslib';
import { InjectionToken, Inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { sizeBigger, TuiHostedDropdownComponent, TuiTextfieldSizeDirective, TUI_TEXTFIELD_SIZE, TuiSvgModule } from '@taiga-ui/core';
import { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { CommonModule } from '@angular/common';

// TODO: 3.0 remove in ivy compilation
const TUI_ARROW_ICON_SMALL = `tuiIconChevronDown`;
const TUI_ARROW_ICON_LARGE = `tuiIconChevronDownLarge`;
/** Default values for arrow options */
const TUI_ARROW_DEFAULT_OPTIONS = {
    iconSmall: TUI_ARROW_ICON_SMALL,
    iconLarge: TUI_ARROW_ICON_LARGE,
};
const TUI_ARROW_OPTIONS = new InjectionToken(`Default parameters for arrow component`, {
    factory: () => TUI_ARROW_DEFAULT_OPTIONS,
});
const tuiArrowOptionsProvider = (options) => ({
    provide: TUI_ARROW_OPTIONS,
    useValue: Object.assign(Object.assign({}, TUI_ARROW_DEFAULT_OPTIONS), options),
});
const TUI_ARROW_MODE = new InjectionToken(`Type of icon in dropdowns for interactive or disable mode`, {
    factory: () => ({
        interactive: TUI_ARROW,
        disabled: TUI_ARROW,
    }),
});
const tuiArrowModeProvider = (options) => ({
    provide: TUI_ARROW_MODE,
    useValue: Object.assign({ interactive: TUI_ARROW, disabled: TUI_ARROW }, options),
});

let TuiArrowComponent = class TuiArrowComponent {
    constructor(dropdown, textfieldSize, options) {
        this.dropdown = dropdown;
        this.textfieldSize = textfieldSize;
        this.options = options;
    }
    get arrowIcon() {
        return sizeBigger(this.textfieldSize.size)
            ? this.options.iconLarge
            : this.options.iconSmall;
    }
};
TuiArrowComponent.ctorParameters = () => [
    { type: TuiHostedDropdownComponent, decorators: [{ type: Inject, args: [TuiHostedDropdownComponent,] }] },
    { type: TuiTextfieldSizeDirective, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_SIZE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ARROW_OPTIONS,] }] }
];
TuiArrowComponent = __decorate([
    Component({
        selector: 'tui-arrow',
        template: "<span\n    polymorpheus-outlet\n    class=\"t-icon\"\n    [class.t-icon_rotated]=\"dropdown.openChange | async\"\n    [content]=\"arrowIcon\"\n>\n    <ng-template let-icon>\n        <tui-svg [src]=\"icon\"></tui-svg>\n    </ng-template>\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [".t-icon{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:block;cursor:pointer;pointer-events:none}.t-icon_rotated{transform:rotate(180deg)}"]
    }),
    __param(0, Inject(TuiHostedDropdownComponent)),
    __param(1, Inject(TUI_TEXTFIELD_SIZE)),
    __param(2, Inject(TUI_ARROW_OPTIONS))
], TuiArrowComponent);
const TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);

let TuiArrowModule = class TuiArrowModule {
};
TuiArrowModule = __decorate([
    NgModule({
        imports: [CommonModule, TuiSvgModule, PolymorpheusModule],
        declarations: [TuiArrowComponent],
        exports: [TuiArrowComponent],
        entryComponents: [TuiArrowComponent],
    })
], TuiArrowModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_ARROW, TUI_ARROW_DEFAULT_OPTIONS, TUI_ARROW_ICON_LARGE, TUI_ARROW_ICON_SMALL, TUI_ARROW_MODE, TUI_ARROW_OPTIONS, TuiArrowComponent, TuiArrowModule, tuiArrowModeProvider, tuiArrowOptionsProvider };
//# sourceMappingURL=taiga-ui-kit-components-arrow.js.map
