{"version":3,"file":"taiga-ui-kit-components-arrow.js","sources":["ng://@taiga-ui/kit/components/arrow/arrow-options.ts","ng://@taiga-ui/kit/components/arrow/arrow.component.ts","ng://@taiga-ui/kit/components/arrow/arrow.module.ts","ng://@taiga-ui/kit/components/arrow/taiga-ui-kit-components-arrow.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeM, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_ARROW} from './arrow.component';\n\nexport interface TuiArrowOptions {\n    readonly iconSmall: PolymorpheusContent;\n    readonly iconLarge: PolymorpheusContent;\n}\n\n// TODO: 3.0 remove in ivy compilation\nexport const TUI_ARROW_ICON_SMALL = `tuiIconChevronDown`;\nexport const TUI_ARROW_ICON_LARGE = `tuiIconChevronDownLarge`;\n\n/** Default values for arrow options */\nexport const TUI_ARROW_DEFAULT_OPTIONS: TuiArrowOptions = {\n    iconSmall: TUI_ARROW_ICON_SMALL,\n    iconLarge: TUI_ARROW_ICON_LARGE,\n};\n\nexport const TUI_ARROW_OPTIONS = new InjectionToken<TuiArrowOptions>(\n    `Default parameters for arrow component`,\n    {\n        factory: () => TUI_ARROW_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiArrowOptionsProvider: (\n    options: Partial<TuiArrowOptions>,\n) => ValueProvider = (options: Partial<TuiArrowOptions>) => ({\n    provide: TUI_ARROW_OPTIONS,\n    useValue: {...TUI_ARROW_DEFAULT_OPTIONS, ...options},\n});\n\nexport interface TuiArrowMode {\n    readonly interactive: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    >;\n    readonly disabled: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    >;\n}\n\nexport const TUI_ARROW_MODE: InjectionToken<TuiArrowMode> = new InjectionToken(\n    `Type of icon in dropdowns for interactive or disable mode`,\n    {\n        factory: () => ({\n            interactive: TUI_ARROW,\n            disabled: TUI_ARROW,\n        }),\n    },\n);\n\nexport const tuiArrowModeProvider: (options: Partial<TuiArrowMode>) => ValueProvider = (\n    options: Partial<TuiArrowMode>,\n) => ({\n    provide: TUI_ARROW_MODE,\n    useValue: {\n        interactive: TUI_ARROW,\n        disabled: TUI_ARROW,\n        ...options,\n    },\n});\n","import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiHostedDropdownComponent,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {PolymorpheusComponent, PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_ARROW_OPTIONS, TuiArrowOptions} from './arrow-options';\n\n@Component({\n    selector: 'tui-arrow',\n    templateUrl: './arrow.template.html',\n    styleUrls: ['./arrow.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiArrowComponent {\n    constructor(\n        @Inject(TuiHostedDropdownComponent)\n        readonly dropdown: TuiHostedDropdownComponent,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_ARROW_OPTIONS) private readonly options: TuiArrowOptions,\n    ) {}\n\n    get arrowIcon(): PolymorpheusContent {\n        return sizeBigger(this.textfieldSize.size)\n            ? this.options.iconLarge\n            : this.options.iconSmall;\n    }\n}\n\nexport const TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiArrowComponent} from './arrow.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule, PolymorpheusModule],\n    declarations: [TuiArrowComponent],\n    exports: [TuiArrowComponent],\n    entryComponents: [TuiArrowComponent],\n})\nexport class TuiArrowModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAYA;MACa,oBAAoB,GAAG,qBAAqB;MAC5C,oBAAoB,GAAG,0BAA0B;AAE9D;MACa,yBAAyB,GAAoB;IACtD,SAAS,EAAE,oBAAoB;IAC/B,SAAS,EAAE,oBAAoB;EACjC;MAEW,iBAAiB,GAAG,IAAI,cAAc,CAC/C,wCAAwC,EACxC;IACI,OAAO,EAAE,MAAM,yBAAyB;CAC3C,EACH;MAEW,uBAAuB,GAEf,CAAC,OAAiC,MAAM;IACzD,OAAO,EAAE,iBAAiB;IAC1B,QAAQ,kCAAM,yBAAyB,GAAK,OAAO,CAAC;CACvD,EAAE;MAWU,cAAc,GAAiC,IAAI,cAAc,CAC1E,2DAA2D,EAC3D;IACI,OAAO,EAAE,OAAO;QACZ,WAAW,EAAE,SAAS;QACtB,QAAQ,EAAE,SAAS;KACtB,CAAC;CACL,EACH;MAEW,oBAAoB,GAAsD,CACnF,OAA8B,MAC5B;IACF,OAAO,EAAE,cAAc;IACvB,QAAQ,kBACJ,WAAW,EAAE,SAAS,EACtB,QAAQ,EAAE,SAAS,IAChB,OAAO,CACb;CACJ;;IC/CY,iBAAiB,GAA9B,MAAa,iBAAiB;IAC1B,YAEa,QAAoC,EAE5B,aAAwC,EACb,OAAwB;QAH3D,aAAQ,GAAR,QAAQ,CAA4B;QAE5B,kBAAa,GAAb,aAAa,CAA2B;QACb,YAAO,GAAP,OAAO,CAAiB;KACpE;IAEJ,IAAI,SAAS;QACT,OAAO,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;cACpC,IAAI,CAAC,OAAO,CAAC,SAAS;cACtB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KAChC;EACJ;;YAX0B,0BAA0B,uBAD5C,MAAM,SAAC,0BAA0B;YAGF,yBAAyB,uBADxD,MAAM,SAAC,kBAAkB;4CAEzB,MAAM,SAAC,iBAAiB;;AANpB,iBAAiB;IAN7B,SAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,mQAAoC;QAEpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;KAClD,CAAC;IAGO,WAAA,MAAM,CAAC,0BAA0B,CAAC,CAAA;IAElC,WAAA,MAAM,CAAC,kBAAkB,CAAC,CAAA;IAE1B,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;GANrB,iBAAiB,CAc7B;MAEY,SAAS,GAAG,IAAI,qBAAqB,CAAC,iBAAiB;;ICpBvD,cAAc,GAA3B,MAAa,cAAc;EAAG;AAAjB,cAAc;IAN1B,QAAQ,CAAC;QACN,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,kBAAkB,CAAC;QACzD,YAAY,EAAE,CAAC,iBAAiB,CAAC;QACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;QAC5B,eAAe,EAAE,CAAC,iBAAiB,CAAC;KACvC,CAAC;GACW,cAAc,CAAG;;ACb9B;;;;;;"}