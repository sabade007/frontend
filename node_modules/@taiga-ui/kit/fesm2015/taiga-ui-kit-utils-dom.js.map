{"version":3,"file":"taiga-ui-kit-utils-dom.js","sources":["ng://@taiga-ui/kit/utils/dom/get-word-range.ts","ng://@taiga-ui/kit/utils/dom/scroll-to-element.ts","ng://@taiga-ui/kit/utils/dom/set-range-offset.ts","ng://@taiga-ui/kit/utils/dom/taiga-ui-kit-utils-dom.ts"],"sourcesContent":["import {CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_SPACE, svgNodeFilter} from '@taiga-ui/cdk';\n\n/**\n * @deprecated: use {@link tuiGetWordRange} instead\n * Creates a cloned range with its boundaries set at word boundaries\n *\n * @param currentRange a range to clone\n * @return modified range\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getWordRange(currentRange: Range): Range {\n    const range = currentRange.cloneRange();\n    const {startContainer, startOffset, endContainer, endOffset} = range;\n    const {ownerDocument} = startContainer;\n\n    if (!ownerDocument) {\n        return range;\n    }\n\n    const treeWalker = ownerDocument.createTreeWalker(\n        ownerDocument.body,\n        NodeFilter.SHOW_TEXT,\n        svgNodeFilter,\n        false,\n    );\n\n    treeWalker.currentNode = startContainer;\n\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content =\n            container === startContainer\n                ? textContent.slice(0, Math.max(0, startOffset + 1))\n                : textContent;\n        const offset =\n            Math.max(\n                content.lastIndexOf(` `),\n                content.lastIndexOf(CHAR_NO_BREAK_SPACE),\n                content.lastIndexOf(CHAR_ZERO_WIDTH_SPACE),\n            ) + 1;\n\n        range.setStart(container, 0);\n\n        if (offset) {\n            range.setStart(container, offset);\n            break;\n        }\n    } while (treeWalker.previousNode());\n\n    treeWalker.currentNode = endContainer;\n\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content =\n            container === endContainer ? textContent.slice(endOffset + 1) : textContent;\n        const offset = [\n            content.indexOf(` `),\n            content.indexOf(CHAR_NO_BREAK_SPACE),\n            content.indexOf(CHAR_ZERO_WIDTH_SPACE),\n        ].reduce(\n            (result, item) =>\n                result === -1 || item === -1\n                    ? Math.max(result, item)\n                    : Math.min(result, item),\n            -1,\n        );\n\n        range.setEnd(container, textContent.length);\n\n        if (offset !== -1) {\n            range.setEnd(container, offset + textContent.length - content.length);\n            break;\n        }\n    } while (treeWalker.nextNode());\n\n    return range;\n}\n\nexport const tuiGetWordRange = getWordRange;\n","/**\n * @deprecated: use {@link tuiScrollToElement} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function scrollToElement(element: HTMLElement, container: HTMLElement): void {\n    const scrolledWidth = container.offsetWidth + container.scrollLeft;\n    const elementWidth = element.offsetWidth;\n    const elementX =\n        container.scrollLeft +\n        element.getBoundingClientRect().left -\n        container.getBoundingClientRect().left;\n    const elementDidNotFitRight = elementX + elementWidth > scrolledWidth;\n    const elementDidNotFitLeft = container.scrollLeft > elementX;\n    const deltaXRight = elementX + elementWidth - scrolledWidth;\n    const deltaXLeft = elementX - container.scrollLeft;\n\n    if (elementDidNotFitRight) {\n        container.scrollLeft += deltaXRight;\n    }\n\n    if (elementDidNotFitLeft) {\n        container.scrollLeft += deltaXLeft;\n    }\n}\n\nexport const tuiScrollToElement = scrollToElement;\n","import {svgNodeFilter} from '@taiga-ui/cdk';\n\n/**\n * @deprecated: use {@link tuiSetRangeOffset} instead\n * Range.setStart/set-end, except it uses offset in characters only\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function setRangeOffset(\n    range: Range,\n    node: HTMLElement,\n    offset: number,\n    method: 'setEnd' | 'setStart',\n): void {\n    const {ownerDocument} = node;\n\n    if (!ownerDocument) {\n        return;\n    }\n\n    const treeWalker = ownerDocument.createTreeWalker(\n        node,\n        NodeFilter.SHOW_TEXT,\n        svgNodeFilter,\n        false,\n    );\n\n    treeWalker.currentNode = node;\n\n    while (treeWalker.nextNode()) {\n        if (treeWalker.currentNode.nodeType === Node.TEXT_NODE) {\n            const length = treeWalker.currentNode.nodeValue\n                ? treeWalker.currentNode.nodeValue.length\n                : 0;\n\n            if (offset > length) {\n                offset -= length;\n            } else {\n                range[method](treeWalker.currentNode, offset);\n            }\n        }\n    }\n}\n\nexport const tuiSetRangeOffset = setRangeOffset;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}