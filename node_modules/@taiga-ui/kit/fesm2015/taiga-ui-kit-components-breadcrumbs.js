import { __decorate } from 'tslib';
import { Directive, Input, HostBinding, Component, ChangeDetectionStrategy, ContentChildren, TemplateRef, forwardRef, NgModule } from '@angular/core';
import { tuiDefaultProp, EMPTY_QUERY, TuiMapperPipeModule, TuiLetModule } from '@taiga-ui/cdk';
import { DEFAULT_ROUTER_LINK_OPTIONS } from '@taiga-ui/kit/constants';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { TuiModeDirective, TuiLinkModule, TuiSvgModule, TuiModeModule } from '@taiga-ui/core';
import { Subject } from 'rxjs';

let TuiBreadcrumbDirective = class TuiBreadcrumbDirective {
};
TuiBreadcrumbDirective = __decorate([
    Directive({
        selector: 'ng-template[tuiBreadcrumb]',
    })
], TuiBreadcrumbDirective);

/** @deprecated use `<tui-breadcrumbs>` from {@link TuiBreadcrumbsWrapperComponent} */
let TuiBreadcrumbsComponent = class TuiBreadcrumbsComponent {
    constructor() {
        this.items = [];
        this.size = 'm';
        this.routerLinkOptions = ({ routerLinkOptions, }) => routerLinkOptions || DEFAULT_ROUTER_LINK_OPTIONS;
    }
};
__decorate([
    Input(),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "items", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "size", void 0);
TuiBreadcrumbsComponent = __decorate([
    Component({
        selector: 'tui-breadcrumbs[items]',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<ng-container *ngFor=\"let item of items; last as lastItem\">\n    <ng-container *tuiLet=\"item | tuiMapper: routerLinkOptions as options\">\n        <a\n            #rla=\"routerLinkActive\"\n            tuiLink\n            tuiMode=\"onLight\"\n            routerLinkActive=\"t-active-link\"\n            [attr.tabindex]=\"rla.isActive ? -1 : null\"\n            [fragment]=\"options.fragment\"\n            [preserveFragment]=\"options.preserveFragment\"\n            [replaceUrl]=\"options.replaceUrl\"\n            [routerLink]=\"item.routerLink\"\n            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions || {exact: false}\"\n            [skipLocationChange]=\"options.skipLocationChange\"\n            [queryParams]=\"options.queryParams\"\n            [target]=\"options.target\"\n        >\n            {{ item.caption }}\n        </a>\n        <tui-svg\n            *ngIf=\"!lastItem\"\n            src=\"tuiIconChevronRight\"\n            class=\"t-icon\"\n        ></tui-svg>\n    </ng-container>\n</ng-container>\n",
        styles: [":host{display:flex;align-items:center;height:2.5rem}:host[data-size='m']{font:var(--tui-font-text-s)}:host[data-size='l']{font:var(--tui-font-text-m)}.t-icon{margin:0 .25rem;color:var(--tui-text-03)}a.t-active-link[data-mode=onLight]{color:var(--tui-text-03);pointer-events:none}"]
    })
], TuiBreadcrumbsComponent);

var TuiBreadcrumbsWrapperComponent_1;
let TuiBreadcrumbsWrapperComponent = TuiBreadcrumbsWrapperComponent_1 = class TuiBreadcrumbsWrapperComponent {
    constructor() {
        this.size = 'm';
        this.items = EMPTY_QUERY;
        this.change$ = new Subject();
        this.mode = 'onLight';
    }
    ngOnChanges() { }
};
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiBreadcrumbsWrapperComponent.prototype, "size", void 0);
__decorate([
    ContentChildren(TuiBreadcrumbDirective, { read: TemplateRef })
], TuiBreadcrumbsWrapperComponent.prototype, "items", void 0);
TuiBreadcrumbsWrapperComponent = TuiBreadcrumbsWrapperComponent_1 = __decorate([
    Component({
        selector: 'tui-breadcrumbs:not([items])',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<ng-container *ngIf=\"items.changes | async\"></ng-container>\n<ng-container *ngFor=\"let item of items; let last = last\">\n    <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n    <tui-svg\n        *ngIf=\"!last\"\n        src=\"tuiIconChevronRight\"\n        class=\"t-icon\"\n    ></tui-svg>\n</ng-container>\n",
        providers: [
            {
                provide: TuiModeDirective,
                useExisting: forwardRef(() => TuiBreadcrumbsWrapperComponent_1),
            },
        ],
        styles: [":host{display:flex;align-items:center;height:2.5rem;font:var(--tui-font-text-s)}:host[data-size='l']{font:var(--tui-font-text-m)}.t-icon{margin:0 .25rem;color:var(--tui-text-03)}"]
    })
], TuiBreadcrumbsWrapperComponent);

let TuiBreadcrumbsModule = class TuiBreadcrumbsModule {
};
TuiBreadcrumbsModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            RouterModule,
            TuiMapperPipeModule,
            TuiLetModule,
            TuiLinkModule,
            TuiSvgModule,
            TuiModeModule,
        ],
        declarations: [
            TuiBreadcrumbsComponent,
            TuiBreadcrumbsWrapperComponent,
            TuiBreadcrumbDirective,
        ],
        exports: [
            TuiBreadcrumbsComponent,
            TuiBreadcrumbsWrapperComponent,
            TuiBreadcrumbDirective,
        ],
    })
], TuiBreadcrumbsModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiBreadcrumbDirective, TuiBreadcrumbsComponent, TuiBreadcrumbsModule, TuiBreadcrumbsWrapperComponent };
//# sourceMappingURL=taiga-ui-kit-components-breadcrumbs.js.map
