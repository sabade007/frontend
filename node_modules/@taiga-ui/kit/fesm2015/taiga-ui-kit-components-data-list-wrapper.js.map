{"version":3,"file":"taiga-ui-kit-components-data-list-wrapper.js","sources":["ng://@taiga-ui/kit/components/data-list-wrapper/data-list-wrapper.ts","ng://@taiga-ui/kit/components/data-list-wrapper/data-list-group-wrapper.component.ts","ng://@taiga-ui/kit/components/data-list-wrapper/data-list-wrapper.component.ts","ng://@taiga-ui/kit/components/data-list-wrapper/data-list-wrapper.module.ts","ng://@taiga-ui/kit/components/data-list-wrapper/taiga-ui-kit-components-data-list-wrapper.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Input,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport {EMPTY_QUERY, isNativeFocused, isPresent, tuiDefaultProp} from '@taiga-ui/cdk';\nimport {\n    TuiOptionComponent,\n    TuiSizeL,\n    TuiSizeXS,\n    TuiValueContentContext,\n} from '@taiga-ui/core';\nimport {TuiItemsHandlers} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n@Directive()\nexport abstract class AbstractTuiDataListWrapper<T> {\n    @ViewChildren(forwardRef(() => TuiOptionComponent))\n    protected readonly optionsQuery: QueryList<TuiOptionComponent<T>> = EMPTY_QUERY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiItemsHandlers<T>['disabledItemHandler'] =\n        this.itemsHandlers.disabledItemHandler;\n\n    @Input()\n    @tuiDefaultProp()\n    emptyContent: PolymorpheusContent = ``;\n\n    @Input()\n    @tuiDefaultProp()\n    size: TuiSizeL | TuiSizeXS = `m`;\n\n    protected constructor(protected readonly itemsHandlers: TuiItemsHandlers<T>) {}\n\n    @Input()\n    @tuiDefaultProp()\n    itemContent: PolymorpheusContent<TuiValueContentContext<T>> = ({$implicit}) =>\n        this.itemsHandlers.stringify($implicit);\n\n    getContext(\n        $implicit: T,\n        {nativeElement}: ElementRef<HTMLElement>,\n    ): TuiValueContentContext<T> {\n        return {$implicit, active: isNativeFocused(nativeElement)};\n    }\n\n    getOptions(includeDisabled: boolean = false): readonly T[] {\n        return this.optionsQuery\n            .toArray()\n            .filter(({disabled}) => includeDisabled || !disabled)\n            .map(({value}) => value)\n            .filter(isPresent);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk/decorators';\nimport {TUI_DATA_LIST_ACCESSOR} from '@taiga-ui/core/tokens';\nimport {TUI_ITEMS_HANDLERS, TuiItemsHandlers} from '@taiga-ui/kit/tokens';\n\nimport {AbstractTuiDataListWrapper} from './data-list-wrapper';\n\n@Component({\n    selector: 'tui-data-list-wrapper[labels]',\n    templateUrl: './data-list-group-wrapper.template.html',\n    styleUrls: ['./data-list-wrapper.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_DATA_LIST_ACCESSOR,\n            useExisting: forwardRef(() => TuiDataListGroupWrapperComponent),\n        },\n    ],\n})\nexport class TuiDataListGroupWrapperComponent<T> extends AbstractTuiDataListWrapper<T> {\n    @Input()\n    @tuiDefaultProp()\n    items: readonly T[][] | null = [];\n\n    @Input()\n    @tuiDefaultProp()\n    labels: readonly string[] = [];\n\n    constructor(@Inject(TUI_ITEMS_HANDLERS) itemsHandlers: TuiItemsHandlers<T>) {\n        super(itemsHandlers);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TUI_DATA_LIST_ACCESSOR} from '@taiga-ui/core';\nimport {TUI_ITEMS_HANDLERS, TuiItemsHandlers} from '@taiga-ui/kit/tokens';\n\nimport {AbstractTuiDataListWrapper} from './data-list-wrapper';\n\n@Component({\n    selector: 'tui-data-list-wrapper:not([labels])',\n    templateUrl: './data-list-wrapper.template.html',\n    styleUrls: ['./data-list-wrapper.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_DATA_LIST_ACCESSOR,\n            useExisting: forwardRef(() => TuiDataListWrapperComponent),\n        },\n    ],\n})\nexport class TuiDataListWrapperComponent<T> extends AbstractTuiDataListWrapper<T> {\n    @Input()\n    @tuiDefaultProp()\n    items: readonly T[] | null = [];\n\n    constructor(@Inject(TUI_ITEMS_HANDLERS) itemsHandlers: TuiItemsHandlers<T>) {\n        super(itemsHandlers);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiElementModule} from '@taiga-ui/cdk';\nimport {TuiDataListDirective, TuiDataListModule, TuiLoaderModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiDataListGroupWrapperComponent} from './data-list-group-wrapper.component';\nimport {TuiDataListWrapperComponent} from './data-list-wrapper.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiElementModule,\n        TuiDataListModule,\n        TuiLoaderModule,\n    ],\n    declarations: [TuiDataListWrapperComponent, TuiDataListGroupWrapperComponent],\n    exports: [\n        TuiDataListWrapperComponent,\n        TuiDataListGroupWrapperComponent,\n        TuiDataListDirective,\n    ],\n})\nexport class TuiDataListWrapperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiDefaultProp","TUI_DATA_LIST_ACCESSOR"],"mappings":"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"}