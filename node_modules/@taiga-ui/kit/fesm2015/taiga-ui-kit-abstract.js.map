{"version":3,"file":"taiga-ui-kit-abstract.js","sources":["ng://@taiga-ui/kit/abstract/input-slider.ts","ng://@taiga-ui/kit/abstract/slider/slider.ts","ng://@taiga-ui/kit/abstract/taiga-ui-kit-abstract.ts"],"sourcesContent":["import {Directive, HostBinding, Input} from '@angular/core';\nimport {AbstractTuiControl, tuiDefaultProp, tuiPure} from '@taiga-ui/cdk';\nimport {\n    TuiPluralize,\n    tuiPluralizeToICU,\n    TuiSizeL,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function quantumAssertion(quantum: number): boolean {\n    return quantum > 0;\n}\n\n/**\n * @internal\n * @deprecated TODO: 3.0 delete me after `InputSlider` and `InputRange` stop using it\n */\n@Directive()\nexport abstract class AbstractTuiInputSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number>\n{\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * Use `valueContent` for `InputSlider`.\n     * Use `leftValueContent` for `InputRange`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:\n     *** {@link legacyMinMaxLabel}\n     */\n    @Input()\n    @tuiDefaultProp()\n    minLabel = ``;\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * Use `valueContent` for `InputSlider`.\n     * Use `rightValueContent` for `InputRange`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete backward-compatibility helpers inside `InputSlider` and `InputRange`:\n     *** {@link legacyMinMaxLabel}\n     */\n    @Input()\n    @tuiDefaultProp()\n    maxLabel = ``;\n\n    // TODO: remove setter in v3.0:\n    @Input()\n    @tuiDefaultProp()\n    set pluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.pluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    /**\n     * @deprecated This input-property will be deleted in next major update.\n     * You can create ticks labels below this input by yourself. It is easy!\n     * Mixin `tui-slider-ticks-labels` will help with it. See examples in demo page `InputSlider`.\n     * ___\n     * TODO remove in v3.0.\n     * Dont forget to delete:\n     *** {@link segmentsPluralizeMap}\n     *** {@link getTickPrefix}\n     *** TuiFormatNumberPipeModule\n     *** TuiRepeatTimesModule\n     */\n    @Input()\n    @tuiDefaultProp()\n    set segmentsPluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.segmentsPluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp(quantumAssertion, `Quantum must be positive`)\n    quantum = 1;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    /**\n     * @deprecated use `tuiTextfieldSize` instead\n     * TODO delete in v3.0\n     */\n    @Input()\n    @HostBinding(`attr.data-size`)\n    @tuiDefaultProp()\n    size: TuiSizeL = `l`;\n\n    /**\n     * @deprecated replace by input-property {@link pluralize} in v3.0\n     */\n    pluralizeMap: Record<string, string> | null = null;\n    /** @deprecated TODO remove in v3.0 */\n    segmentsPluralizeMap: Record<string, string> | null = null;\n    /** @deprecated TODO remove in v3.0 */\n    readonly pluralizeMapFallback = {\n        one: ``,\n        few: ``,\n        many: ``,\n        other: ``,\n    };\n\n    /** @deprecated TODO remove in v3.0 */\n    @tuiPure\n    getTickPrefix(segment: number, segments: number, texts: [string, string]): string {\n        if (segments !== 1) {\n            return ``;\n        }\n\n        return segment === 0 ? `${texts[0]}` : `${texts[1]}`;\n    }\n\n    @HostBinding(`class._segmented`)\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get computedSteps(): number {\n        return this.steps || this.length / this.quantum;\n    }\n\n    get step(): number {\n        return this.length / this.computedSteps;\n    }\n\n    get computedKeySteps(): TuiKeySteps {\n        return this.computePureKeySteps(this.keySteps, this.min, this.max);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    @tuiPure\n    private computePureKeySteps(\n        keySteps: TuiKeySteps | null,\n        min: number,\n        max: number,\n    ): TuiKeySteps {\n        return [[0, min], ...(keySteps || []), [100, max]];\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    clamp,\n    nonNegativeFiniteAssertion,\n    quantize,\n    round,\n    setNativeFocused,\n    tuiAssertIsHTMLElement,\n    tuiDefaultProp,\n    TuiEventWith,\n    TuiNativeFocusableElement,\n    typedFromEvent,\n} from '@taiga-ui/cdk';\nimport {\n    TuiPluralize,\n    tuiPluralizeToICU,\n    TuiSizeS,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TUI_FROM_TO_TEXTS} from '@taiga-ui/kit/tokens';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {Observable, race, Subject} from 'rxjs';\nimport {map, switchMap, takeUntil} from 'rxjs/operators';\n\nexport const SLIDER_KEYBOARD_STEP = 0.05;\nexport const DOT_WIDTH: {[key: string]: number} = {\n    s: 8,\n    m: 16,\n};\n\n/**\n * @awful TODO: 3.0 remove\n * @internal\n * @dynamic\n */\n@Directive()\nexport abstract class AbstractTuiSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number>\n{\n    // @bad TODO: handle pointer events instead of mouse and touch events\n    private readonly pointerDown$ = new Subject<\n        TuiEventWith<MouseEvent | TouchEvent, HTMLElement>\n    >();\n\n    @ViewChild(`dotLeft`, {read: ElementRef})\n    protected dotLeft?: ElementRef<TuiNativeFocusableElement>;\n\n    @ViewChild(`dotRight`, {read: ElementRef})\n    protected dotRight?: ElementRef<TuiNativeFocusableElement>;\n\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp(nonNegativeFiniteAssertion, `Quantum must be a non-negative number`)\n    quantum = 0;\n\n    // TODO: remove setter in v3.0:\n    @Input()\n    @tuiDefaultProp()\n    set pluralize(pluralize: Record<string, string> | TuiPluralize | null) {\n        this.pluralizeMap = Array.isArray(pluralize)\n            ? tuiPluralizeToICU(pluralize)\n            : pluralize;\n    }\n\n    @Input()\n    @HostBinding(`attr.data-size`)\n    @tuiDefaultProp()\n    size: TuiSizeS = `m`;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    focusVisibleLeft = false;\n\n    focusVisibleRight = false;\n\n    pluralizeMap: Record<string, string> | null = null;\n\n    protected constructor(\n        ngControl: NgControl | null,\n        changeDetectorRef: ChangeDetectorRef,\n        private readonly documentRef: Document,\n        @Inject(TUI_FROM_TO_TEXTS)\n        readonly fromToTexts$: Observable<[string, string]>,\n    ) {\n        super(ngControl, changeDetectorRef);\n    }\n\n    @HostBinding(`class._segmented`)\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get discrete(): boolean {\n        return this.steps > 0;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get computedStep(): number {\n        if (this.steps) {\n            return 1 / this.steps;\n        }\n\n        return this.quantum ? this.quantum / this.length : SLIDER_KEYBOARD_STEP;\n    }\n\n    get isLeftFocusable(): boolean {\n        return !this.disabled && this.focusable && this.right !== 100;\n    }\n\n    get isRightFocusable(): boolean {\n        return !this.disabled && this.focusable && this.left !== 100;\n    }\n\n    abstract get left(): number;\n    abstract get right(): number;\n    abstract processValue(value: number, right?: boolean): void;\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        const mouseMoves$ = typedFromEvent(this.documentRef, `mousemove`);\n        const mouseUps$ = typedFromEvent(this.documentRef, `mouseup`);\n        const touchMoves$ = typedFromEvent(this.documentRef, `touchmove`);\n        const touchEnds$ = typedFromEvent(this.documentRef, `touchend`);\n        let isPointerDownRight: boolean;\n\n        this.pointerDown$\n            .pipe(\n                map((event: MouseEvent | TouchEvent) => {\n                    tuiAssertIsHTMLElement(event.currentTarget);\n\n                    const rect = event.currentTarget.getBoundingClientRect();\n                    const clientX =\n                        event instanceof MouseEvent\n                            ? event.clientX\n                            : event.touches[0].clientX;\n                    const fraction = clamp(\n                        this.getFractionFromEvents(rect, clientX),\n                        0,\n                        1,\n                    );\n                    const deltaLeft = fraction * 100 - this.left;\n                    const deltaRight = fraction * 100 - 100 + this.right;\n\n                    isPointerDownRight =\n                        Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n                        deltaRight > 0 ||\n                        (this.left === 0 && this.right === 100);\n\n                    const calibratedFraction = clamp(\n                        this.getCalibratedFractionFromEvents(\n                            rect,\n                            clientX,\n                            isPointerDownRight,\n                        ),\n                        0,\n                        1,\n                    );\n                    const value = this.getValueFromFraction(\n                        this.fractionGuard(calibratedFraction),\n                    );\n\n                    this.processValue(value, isPointerDownRight);\n                    this.processFocus(isPointerDownRight);\n\n                    return rect;\n                }),\n                switchMap(rect =>\n                    race([touchMoves$, mouseMoves$]).pipe(\n                        map(event =>\n                            this.getCalibratedFractionFromEvents(\n                                rect,\n                                event instanceof MouseEvent\n                                    ? event.clientX\n                                    : event.touches[0].clientX,\n                                isPointerDownRight,\n                            ),\n                        ),\n                        takeUntil(race([mouseUps$, touchEnds$])),\n                    ),\n                ),\n                map(fraction => this.fractionGuard(fraction)),\n            )\n            .subscribe(fraction => {\n                this.processValue(\n                    this.getValueFromFraction(fraction),\n                    isPointerDownRight,\n                );\n            });\n    }\n\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.pointerDown$.complete();\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event as TuiEventWith<MouseEvent, HTMLElement>);\n    }\n\n    onTouchStart(event: TouchEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event as TuiEventWith<TouchEvent, HTMLElement>);\n    }\n\n    getSegmentLabel(segment: number): number {\n        return round(this.getValueFromFraction(segment / this.segments), 2);\n    }\n\n    getSegmentPrefix(segment: number, texts: [string, string]): string {\n        if (this.segments !== 1) {\n            return ``;\n        }\n\n        if (segment === 0) {\n            return `${texts[0]} `;\n        }\n\n        return `${texts[1]} `;\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    onLeftFocusVisible(focusVisible: boolean): void {\n        this.focusVisibleLeft = focusVisible;\n    }\n\n    onRightFocusVisible(focusVisible: boolean): void {\n        this.focusVisibleRight = focusVisible;\n    }\n\n    getValueFromFraction(fraction: number): number {\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(fraction, true)\n            : round(\n                  this.fractionGuard(fraction) * this.length + this.min,\n                  TUI_FLOATING_PRECISION,\n              );\n    }\n\n    fractionGuard(fraction: number): number {\n        return this.discrete\n            ? clamp(quantize(fraction, 1 / this.steps), 0, 1)\n            : clamp(fraction, 0, 1);\n    }\n\n    protected getFractionFromValue(value: number): number {\n        const fraction = (value - this.min) / this.length;\n\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(value, false)\n            : clamp(Number.isFinite(fraction) ? fraction : 1, 0, 1);\n    }\n\n    protected getCalibratedFractionFromEvents(\n        rect: ClientRect,\n        clientX: number,\n        _: boolean,\n    ): number {\n        return this.getFractionFromEvents(rect, clientX);\n    }\n\n    protected valueGuard(value: number): number {\n        return this.quantum\n            ? clamp(\n                  round(\n                      Math.round(value / this.quantum) * this.quantum,\n                      TUI_FLOATING_PRECISION,\n                  ),\n                  this.min,\n                  this.max,\n              )\n            : clamp(value, this.min, this.max);\n    }\n\n    private processFocus(right: boolean): void {\n        if (!this.focusable || !this.dotRight || !this.dotLeft) {\n            return;\n        }\n\n        if (right) {\n            setNativeFocused(this.dotRight.nativeElement);\n        } else {\n            setNativeFocused(this.dotLeft.nativeElement);\n        }\n    }\n\n    /**\n     * Function for converting the fullness of the slider to a value and vice versa\n     * taking into account the steps of linear dependence.\n     *\n     * @param value passed value\n     * @param isFraction translation is carried out from fullness to value\n     */\n    private fractionValueKeyStepConverter(value: number, isFraction: boolean): number {\n        const steps = [[0, this.min]].concat(this.keySteps as unknown as TuiKeySteps, [\n            [100, this.max],\n        ]);\n\n        let prevFraction = 0;\n        let nextFraction = 100;\n        let prevValue = this.min;\n        let nextValue = this.max;\n\n        for (let i = 1; i < steps.length; i++) {\n            if (\n                (isFraction && steps[i][0] / 100 > value) ||\n                (!isFraction && steps[i][1] > value)\n            ) {\n                prevFraction = steps[i - 1][0] || 0;\n                nextFraction = steps[i][0];\n                prevValue = steps[i - 1][1];\n                nextValue = steps[i][1];\n                break;\n            }\n        }\n\n        const deltaFraction = nextFraction - prevFraction;\n        const deltaValue = nextValue - prevValue;\n\n        return isFraction\n            ? round(\n                  ((value * 100 - prevFraction) / deltaFraction) * deltaValue + prevValue,\n                  TUI_FLOATING_PRECISION,\n              )\n            : clamp(\n                  ((value - prevValue) / deltaValue) * deltaFraction + prevFraction,\n                  0,\n                  100,\n              ) / 100;\n    }\n\n    private getFractionFromEvents(rect: ClientRect, clientX: number): number {\n        const value = clientX - rect.left - DOT_WIDTH[this.size] / 2;\n        const total = rect.width - DOT_WIDTH[this.size];\n\n        return round(value / total, TUI_FLOATING_PRECISION);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}