{"version":3,"file":"taiga-ui-kit-components-tree.js","sources":["ng://@taiga-ui/kit/components/tree/directives/tree-children.directive.ts","ng://@taiga-ui/kit/components/tree/components/tree-item-content/tree-item-content.component.ts","ng://@taiga-ui/kit/components/tree/misc/tree.constants.ts","ng://@taiga-ui/kit/components/tree/misc/tree.tokens.ts","ng://@taiga-ui/kit/components/tree/components/tree-item/tree-item.providers.ts","ng://@taiga-ui/kit/components/tree/components/tree-item/tree-item.component.ts","ng://@taiga-ui/kit/components/tree/components/tree/tree.component.ts","ng://@taiga-ui/kit/components/tree/directives/tree-controller.directive.ts","ng://@taiga-ui/kit/components/tree/directives/tree-item-controller.directive.ts","ng://@taiga-ui/kit/components/tree/directives/tree-node.directive.ts","ng://@taiga-ui/kit/components/tree/misc/tree.service.ts","ng://@taiga-ui/kit/components/tree/tree.module.ts","ng://@taiga-ui/kit/components/tree/taiga-ui-kit-components-tree.ts"],"sourcesContent":["import {Directive, Input} from '@angular/core';\nimport {EMPTY_ARRAY, tuiDefaultProp, TuiHandler} from '@taiga-ui/cdk';\n\n@Directive({\n    selector: 'tui-tree[childrenHandler]',\n})\nexport class TuiTreeChildrenDirective<T> {\n    @Input()\n    @tuiDefaultProp()\n    childrenHandler: TuiHandler<T, readonly T[]> =\n        TuiTreeChildrenDirective.defaultHandler;\n\n    static defaultHandler<G>(item: G): readonly G[] {\n        return Array.isArray(item) ? item : EMPTY_ARRAY;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    forwardRef,\n    HostBinding,\n    Inject,\n} from '@angular/core';\nimport {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_DEFAULT_TREE_CONTROLLER} from '../../misc/tree.constants';\nimport {TuiTreeController, TuiTreeItemContext} from '../../misc/tree.interfaces';\nimport {TUI_TREE_CONTROLLER} from '../../misc/tree.tokens';\n\n@Component({\n    selector: 'tui-tree-item-content',\n    templateUrl: 'tree-item-content.template.html',\n    styleUrls: ['tree-item-content.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiTreeItemContentComponent {\n    constructor(\n        @Inject(POLYMORPHEUS_CONTEXT) readonly context: TuiTreeItemContext,\n        @Inject(forwardRef(() => TUI_TREE_CONTROLLER))\n        private readonly controller: TuiTreeController,\n    ) {}\n\n    get isExpanded(): boolean {\n        return this.context.$implicit.isExpanded;\n    }\n\n    @HostBinding('class._expandable')\n    get isExpandable(): boolean {\n        return (\n            this.context.$implicit.isExpandable &&\n            this.controller !== TUI_DEFAULT_TREE_CONTROLLER\n        );\n    }\n\n    onClick(): void {\n        this.controller.toggle(this.context.$implicit);\n    }\n}\n","import {ALWAYS_TRUE_HANDLER, EMPTY_FUNCTION} from '@taiga-ui/cdk';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiTreeItemContentComponent} from '../components/tree-item-content/tree-item-content.component';\nimport {TuiTreeController} from './tree.interfaces';\n\nexport const TUI_TREE_ITEM_CONTENT = new PolymorpheusComponent(\n    TuiTreeItemContentComponent,\n);\n\nexport const TUI_DEFAULT_TREE_CONTROLLER: TuiTreeController = {\n    isExpanded: ALWAYS_TRUE_HANDLER,\n    toggle: EMPTY_FUNCTION as () => void,\n};\n","import {InjectionToken} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_DEFAULT_TREE_CONTROLLER, TUI_TREE_ITEM_CONTENT} from './tree.constants';\nimport {\n    TuiTreeAccessor,\n    TuiTreeController,\n    TuiTreeItemContext,\n    TuiTreeLoader,\n} from './tree.interfaces';\n\nexport const TUI_TREE_ACCESSOR = new InjectionToken<TuiTreeAccessor<unknown>>(\n    `Controller for tracking value - TuiTreeItemComponent pairs`,\n);\n\nexport const TUI_TREE_CONTROLLER = new InjectionToken<TuiTreeController>(\n    `Controller for expanding the tree`,\n    {\n        factory: () => TUI_DEFAULT_TREE_CONTROLLER,\n    },\n);\n\nexport const TUI_TREE_NODE = new InjectionToken(`A node of a tree view`);\n\nexport const TUI_TREE_LOADING = new InjectionToken(\n    `A tree node placeholder for loading`,\n    {factory: () => ({})},\n);\n\nexport const TUI_TREE_START = new InjectionToken(`A tree node starting point`);\n\nexport const TUI_TREE_LOADER = new InjectionToken<TuiTreeLoader<unknown>>(\n    `A service to load tree progressively`,\n);\n\nexport const TUI_TREE_CONTENT = new InjectionToken<\n    PolymorpheusContent<TuiTreeItemContext>\n>(`Content for a tree item`, {\n    factory: () => TUI_TREE_ITEM_CONTENT,\n});\n\nexport const TUI_TREE_LEVEL = new InjectionToken<number>(\n    `Nesting level of current TreeView node`,\n    {\n        factory: () => -1,\n    },\n);\n","import {forwardRef, Provider, SkipSelf} from '@angular/core';\n\nimport {TUI_TREE_LEVEL, TUI_TREE_NODE} from '../../misc/tree.tokens';\nimport {TuiTreeItemComponent} from './tree-item.component';\n\nexport const TUI_TREE_ITEM_PROVIDERS: Provider[] = [\n    {\n        provide: TUI_TREE_LEVEL,\n        deps: [[new SkipSelf(), TUI_TREE_LEVEL]],\n        useFactory: treeLevelFactory,\n    },\n    {\n        provide: TUI_TREE_NODE,\n        useExisting: forwardRef(() => TuiTreeItemComponent),\n    },\n];\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function treeLevelFactory(level: number): number {\n    return ++level;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    QueryList,\n} from '@angular/core';\nimport {EMPTY_QUERY} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Subject} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {TuiTreeController, TuiTreeItemContext} from '../../misc/tree.interfaces';\nimport {\n    TUI_TREE_CONTENT,\n    TUI_TREE_CONTROLLER,\n    TUI_TREE_LEVEL,\n    TUI_TREE_NODE,\n} from '../../misc/tree.tokens';\nimport {TUI_TREE_ITEM_PROVIDERS} from './tree-item.providers';\n\n@Component({\n    selector: 'tui-tree-item',\n    templateUrl: './tree-item.template.html',\n    styleUrls: ['./tree-item.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: TUI_TREE_ITEM_PROVIDERS,\n    host: {\n        role: 'treeitem',\n    },\n})\nexport class TuiTreeItemComponent implements DoCheck {\n    @ContentChildren(TUI_TREE_NODE as any)\n    private readonly nested: QueryList<unknown> = EMPTY_QUERY;\n\n    private readonly change$ = new Subject<void>();\n\n    readonly expanded$ = this.change$.pipe(\n        startWith(null),\n        map(() => this.isExpanded),\n        distinctUntilChanged(),\n    );\n\n    readonly attached$ = this.change$.pipe(\n        map(() => this.elementRef.nativeElement.isConnected),\n        distinctUntilChanged(),\n    );\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(forwardRef(() => TUI_TREE_CONTROLLER))\n        private readonly controller: TuiTreeController,\n        @Inject(forwardRef(() => TUI_TREE_LEVEL))\n        readonly level: number,\n        @Inject(forwardRef(() => TUI_TREE_CONTENT))\n        readonly content: PolymorpheusContent<TuiTreeItemContext>,\n    ) {}\n\n    @HostBinding('class._expandable')\n    get isExpandable(): boolean {\n        return !!this.nested.length;\n    }\n\n    get isExpanded(): boolean {\n        return this.controller.isExpanded(this);\n    }\n\n    ngDoCheck(): void {\n        this.change$.next();\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    DoCheck,\n    Inject,\n    Input,\n    Optional,\n    ViewChild,\n} from '@angular/core';\nimport {TuiHandler} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Subject} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {TuiTreeChildrenDirective} from '../../directives/tree-children.directive';\nimport {TuiTreeContext} from '../../misc/tree.interfaces';\nimport {TUI_TREE_NODE} from '../../misc/tree.tokens';\nimport {TuiTreeItemComponent} from '../tree-item/tree-item.component';\n\n@Component({\n    selector: 'tui-tree[value]',\n    templateUrl: 'tree.template.html',\n    styleUrls: ['tree.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_TREE_NODE,\n            useExisting: TuiTreeComponent,\n        },\n    ],\n    host: {\n        role: 'tree',\n    },\n})\nexport class TuiTreeComponent<T> implements DoCheck {\n    private readonly check$ = new Subject<void>();\n\n    @Input()\n    value!: T;\n\n    @ViewChild(TuiTreeItemComponent)\n    readonly item?: TuiTreeItemComponent;\n\n    @ViewChild(TuiTreeComponent)\n    readonly child?: TuiTreeComponent<T>;\n\n    readonly children$ = this.check$.pipe(\n        startWith(null),\n        map(() => this.handler(this.value)),\n        distinctUntilChanged(),\n    );\n\n    constructor(\n        @Optional()\n        @Inject(TuiTreeChildrenDirective)\n        readonly directive: TuiTreeChildrenDirective<T> | null,\n    ) {}\n\n    @Input()\n    content: PolymorpheusContent<TuiTreeContext<T>> = ({$implicit}) => String($implicit);\n\n    ngDoCheck(): void {\n        this.check$.next();\n        this.item?.ngDoCheck();\n        this.child?.ngDoCheck();\n    }\n\n    private get handler(): TuiHandler<T, readonly T[]> {\n        return this.directive?.childrenHandler ?? TuiTreeChildrenDirective.defaultHandler;\n    }\n}\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {isPresent, tuiDefaultProp} from '@taiga-ui/cdk';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeAccessor, TuiTreeController} from '../misc/tree.interfaces';\nimport {TUI_TREE_ACCESSOR, TUI_TREE_CONTROLLER} from '../misc/tree.tokens';\n\n@Directive({\n    selector: '[tuiTreeController][map]',\n    exportAs: 'tuiTreeController',\n    providers: [\n        {\n            provide: TUI_TREE_ACCESSOR,\n            useExisting: TuiTreeControllerDirective,\n        },\n        {\n            provide: TUI_TREE_CONTROLLER,\n            useExisting: TuiTreeControllerDirective,\n        },\n    ],\n})\nexport class TuiTreeControllerDirective<T>\n    implements TuiTreeController, TuiTreeAccessor<T>\n{\n    @Input('tuiTreeController')\n    @tuiDefaultProp()\n    fallback = true;\n\n    @Input()\n    @tuiDefaultProp()\n    map: Map<T, boolean> = new Map();\n\n    @Output()\n    readonly toggled = new EventEmitter<T>();\n\n    readonly items = new Map<TuiTreeItemComponent, T>();\n\n    register(item: TuiTreeItemComponent, value: T): void {\n        this.items.set(item, value);\n    }\n\n    unregister(item: TuiTreeItemComponent): void {\n        this.items.delete(item);\n    }\n\n    isExpanded(item: TuiTreeItemComponent): boolean {\n        const value = this.items.get(item);\n\n        return (value && this.map.get(value)) ?? this.fallback;\n    }\n\n    toggle(item: TuiTreeItemComponent): void {\n        const value = this.items.get(item);\n        const expanded = this.isExpanded(item);\n\n        if (!isPresent(value)) {\n            return;\n        }\n\n        this.toggled.emit(value);\n        this.map.set(value, !expanded);\n    }\n}\n","import {Directive, Input} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeController} from '../misc/tree.interfaces';\nimport {TUI_TREE_CONTROLLER} from '../misc/tree.tokens';\n\n@Directive({\n    selector: '[tuiTreeController]:not([map])',\n    exportAs: 'tuiTreeController',\n    providers: [\n        {\n            provide: TUI_TREE_CONTROLLER,\n            useExisting: TuiTreeItemControllerDirective,\n        },\n    ],\n})\nexport class TuiTreeItemControllerDirective implements TuiTreeController {\n    private readonly map = new WeakMap<TuiTreeItemComponent, boolean>();\n\n    @Input('tuiTreeController')\n    @tuiDefaultProp()\n    fallback = true;\n\n    isExpanded(item: TuiTreeItemComponent): boolean {\n        return this.map.get(item) ?? this.fallback;\n    }\n\n    toggle(item: TuiTreeItemComponent): void {\n        this.map.set(item, !this.isExpanded(item));\n    }\n}\n","import {Directive, Inject, Input, OnDestroy, Optional} from '@angular/core';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeAccessor} from '../misc/tree.interfaces';\nimport {TUI_TREE_ACCESSOR} from '../misc/tree.tokens';\n\n@Directive({\n    selector: 'tui-tree-item[tuiTreeNode]',\n})\nexport class TuiTreeNodeDirective<T> implements OnDestroy {\n    @Input('tuiTreeNode')\n    set value(value: T) {\n        this.directive?.register(this.component, value);\n    }\n\n    constructor(\n        @Optional()\n        @Inject(TUI_TREE_ACCESSOR)\n        private readonly directive: TuiTreeAccessor<T>,\n        @Inject(TuiTreeItemComponent)\n        private readonly component: TuiTreeItemComponent,\n    ) {}\n\n    ngOnDestroy(): void {\n        this.directive?.unregister(this.component);\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, mapTo, startWith, switchMap, tap} from 'rxjs/operators';\n\nimport {TuiTreeLoader} from './tree.interfaces';\nimport {TUI_TREE_LOADER, TUI_TREE_LOADING, TUI_TREE_START} from './tree.tokens';\n\n// @dynamic\n@Injectable()\nexport class TuiTreeService<T> {\n    private readonly map = new Map<T, readonly T[]>([[this.loading, []]]);\n\n    private readonly load$ = new Subject<T>();\n\n    readonly data$ = this.load$.pipe(\n        switchMap(item =>\n            this.loader.loadChildren(item).pipe(\n                tap(children => this.map.set(item, children)),\n                map(children => children.filter(item => !this.loader.hasChildren(item))),\n                tap(children => children.forEach(child => this.map.set(child, []))),\n            ),\n        ),\n        startWith(null),\n        mapTo(this.start),\n    );\n\n    constructor(\n        @Inject(TUI_TREE_LOADING) private readonly loading: T,\n        @Inject(TUI_TREE_START) private readonly start: T,\n        @Inject(TUI_TREE_LOADER) private readonly loader: TuiTreeLoader<T>,\n    ) {}\n\n    getChildren(item: T): readonly T[] {\n        return this.map.get(item) ?? [this.loading];\n    }\n\n    loadChildren(item: T): void {\n        if (this.map.get(item)) {\n            return;\n        }\n\n        this.map.set(item, [this.loading]);\n        this.load$.next(item);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk';\nimport {TuiButtonModule, TuiExpandModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiTreeComponent} from './components/tree/tree.component';\nimport {TuiTreeItemComponent} from './components/tree-item/tree-item.component';\nimport {TuiTreeItemContentComponent} from './components/tree-item-content/tree-item-content.component';\nimport {TuiTreeChildrenDirective} from './directives/tree-children.directive';\nimport {TuiTreeControllerDirective} from './directives/tree-controller.directive';\nimport {TuiTreeItemControllerDirective} from './directives/tree-item-controller.directive';\nimport {TuiTreeNodeDirective} from './directives/tree-node.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiExpandModule,\n        TuiLetModule,\n        TuiButtonModule,\n    ],\n    entryComponents: [TuiTreeItemContentComponent],\n    declarations: [\n        TuiTreeComponent,\n        TuiTreeItemComponent,\n        TuiTreeItemContentComponent,\n        TuiTreeChildrenDirective,\n        TuiTreeItemControllerDirective,\n        TuiTreeControllerDirective,\n        TuiTreeNodeDirective,\n    ],\n    exports: [\n        TuiTreeComponent,\n        TuiTreeItemComponent,\n        TuiTreeChildrenDirective,\n        TuiTreeItemControllerDirective,\n        TuiTreeControllerDirective,\n    ],\n})\nexport class TuiTreeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}