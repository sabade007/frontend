{"version":3,"file":"taiga-ui-kit-tokens.js","sources":["ng://@taiga-ui/kit/tokens/calendar-data-stream.ts","ng://@taiga-ui/kit/tokens/countries-masks.ts","ng://@taiga-ui/kit/tokens/date-inputs-value-transformers.ts","ng://@taiga-ui/kit/tokens/i18n.ts","ng://@taiga-ui/kit/tokens/items-handlers.ts","ng://@taiga-ui/kit/tokens/mobile-aware.ts","ng://@taiga-ui/kit/tokens/mobile-calendar.ts","ng://@taiga-ui/kit/tokens/month-formatter.ts","ng://@taiga-ui/kit/tokens/tab-margin.ts","ng://@taiga-ui/kit/tokens/tag-status.ts","ng://@taiga-ui/kit/tokens/validation-errors.ts","ng://@taiga-ui/kit/tokens/taiga-ui-kit-tokens.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\nimport {TuiDay, TuiDayRange} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\n\nexport const TUI_CALENDAR_DATA_STREAM = new InjectionToken<\n    Observable<TuiDay | TuiDayRange | null>\n>(`Stream that emits calendar data change`);\n","import {InjectionToken} from '@angular/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {COUNTRIES_MASKS} from '@taiga-ui/kit/constants';\n\nexport const TUI_COUNTRIES_MASKS: InjectionToken<Record<TuiCountryIsoCode, string>> =\n    new InjectionToken<Record<TuiCountryIsoCode, string>>(`Countries masks`, {\n        factory: () => COUNTRIES_MASKS,\n    });\n","import {InjectionToken} from '@angular/core';\nimport {TuiControlValueTransformer, TuiDay, TuiDayRange, TuiTime} from '@taiga-ui/cdk';\n\nexport const TUI_DATE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDay | null>\n>(`Control value transformer of TuiDay to custom value format for InputDate* components`);\n\nexport const TUI_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDayRange | null>\n>(`Control value transformer for InputDateRange component`);\n\nexport const TUI_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<[TuiDay | null, TuiTime | null]>\n>(`Control value transformer for InputDateTime component`);\n","import {InjectionToken} from '@angular/core';\nimport {TuiDateMode} from '@taiga-ui/cdk';\nimport {extractI18n, TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {Observable} from 'rxjs';\n\nexport const TUI_CANCEL_WORD = new InjectionToken(`i18n 'cancel' word`, {\n    factory: extractI18n(`cancel`),\n});\n\nexport const TUI_DONE_WORD = new InjectionToken(`i18n 'done' word`, {\n    factory: extractI18n(`done`),\n});\n\nexport const TUI_MORE_WORD = new InjectionToken(`i18n 'more' word`, {\n    factory: extractI18n(`more`),\n});\n\nexport const TUI_HIDE_TEXT = new InjectionToken(`i18n 'hide' word`, {\n    factory: extractI18n(`hide`),\n});\n\nexport const TUI_SHOW_ALL_TEXT = new InjectionToken(`i18n 'show all' word`, {\n    factory: extractI18n(`showAll`),\n});\n\nexport const TUI_OTHER_DATE_TEXT = new InjectionToken(`i18n 'Other date' text`, {\n    factory: extractI18n(`otherDate`),\n});\n\nexport const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = new InjectionToken(\n    `choose day or range i18n texts`,\n    {\n        factory: extractI18n(`mobileCalendarTexts`),\n    },\n);\n\nexport const TUI_FROM_TO_TEXTS = new InjectionToken(`from and to i18n texts`, {\n    factory: extractI18n(`range`),\n});\n\nexport const TUI_PLUS_MINUS_TEXTS = new InjectionToken(`plus and minus i18n texts`, {\n    factory: extractI18n(`countTexts`),\n});\n\nexport const TUI_TIME_TEXTS = new InjectionToken(`time i18n texts`, {\n    factory: extractI18n(`time`),\n});\n\nexport const TUI_DATE_TEXTS = new InjectionToken<Observable<Record<TuiDateMode, string>>>(\n    `date format i18n texts`,\n    {\n        factory: extractI18n(`dateTexts`),\n    },\n);\n\nexport const TUI_DIGITAL_INFORMATION_UNITS = new InjectionToken(\n    `short bytes, kilobytes and megabytes i18n texts`,\n    {\n        factory: extractI18n(`digitalInformationUnits`),\n    },\n);\n\nexport const TUI_COPY_TEXTS = new InjectionToken(`copy i18n texts`, {\n    factory: extractI18n(`copyTexts`),\n});\n\nexport const TUI_PASSWORD_TEXTS = new InjectionToken(`password i18n texts`, {\n    factory: extractI18n(`passwordTexts`),\n});\n\nexport const TUI_CALENDAR_MONTHS = new InjectionToken(`short calendar months i18n`, {\n    factory: extractI18n(`shortCalendarMonths`),\n});\n\nexport const TUI_FILE_TEXTS = new InjectionToken(`file i18n texts`, {\n    factory: extractI18n(`fileTexts`),\n});\n\nexport const TUI_PAGINATION_TEXTS = new InjectionToken(`pagination i18n texts`, {\n    factory: extractI18n(`pagination`),\n});\n\nexport const TUI_INPUT_FILE_TEXTS = new InjectionToken(`tui-input-file i18n texts`, {\n    factory: extractI18n(`inputFileTexts`),\n});\n\nexport const TUI_COUNTRIES: InjectionToken<\n    Observable<Record<TuiCountryIsoCode, string>>\n> = new InjectionToken(`Localized countries names`, {\n    factory: extractI18n(`countries`),\n});\n","import {InjectionToken, ValueProvider} from '@angular/core';\nimport {\n    ALWAYS_FALSE_HANDLER,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_DEFAULT_STRINGIFY,\n    TuiBooleanHandler,\n    TuiIdentityMatcher,\n    TuiStringHandler,\n} from '@taiga-ui/cdk';\n\nexport interface TuiItemsHandlers<T> {\n    readonly stringify: TuiStringHandler<T>;\n    readonly identityMatcher: TuiIdentityMatcher<T>;\n    readonly disabledItemHandler: TuiBooleanHandler<T>;\n}\n\nexport const TUI_DEFAULT_ITEMS_HANDLERS: TuiItemsHandlers<unknown> = {\n    stringify: TUI_DEFAULT_STRINGIFY,\n    identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,\n    disabledItemHandler: ALWAYS_FALSE_HANDLER,\n};\n\nexport const TUI_ITEMS_HANDLERS = new InjectionToken<TuiItemsHandlers<unknown>>(\n    `Default items handlers for components`,\n    {\n        factory: () => TUI_DEFAULT_ITEMS_HANDLERS,\n    },\n);\n\nexport const tuiItemsHandlersProvider: <T>(\n    options: Partial<TuiItemsHandlers<T>>,\n) => ValueProvider = <T>(options: Partial<TuiItemsHandlers<T>>) => ({\n    provide: TUI_ITEMS_HANDLERS,\n    useValue: {...TUI_DEFAULT_ITEMS_HANDLERS, ...options},\n});\n","import {InjectionToken} from '@angular/core';\n\n/** @deprecated use {@link TuiMobileTabsDirective} from @taiga-ui/addon-mobile */\nexport const TUI_MOBILE_AWARE = new InjectionToken<boolean>(\n    `A flag enabling mobile-specific behavior for supporting components`,\n    {\n        factory: () => false,\n    },\n);\n","import {InjectionToken, Type} from '@angular/core';\n\nexport const TUI_MOBILE_CALENDAR = new InjectionToken<Type<unknown>>(\n    `A component for mobile data picker`,\n);\n","import {InjectionToken} from '@angular/core';\nimport {TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\n\nexport const TUI_MONTH_FORMATTER = new InjectionToken<\n    TuiHandler<TuiMonth | null, Observable<string>>\n>(`A function to get localized formatted month`);\n","import {InjectionToken} from '@angular/core';\n\nexport const TUI_TAB_MARGIN = new InjectionToken<number>(`Margin between tabs`, {\n    factory: () => 24,\n});\n","import {InjectionToken} from '@angular/core';\nimport {TuiStatus} from '@taiga-ui/kit/enums';\n\n// TODO: 3.0 use TUI_TAG_OPTIONS instead of it\nexport const TUI_TAG_STATUS = new InjectionToken<TuiStatus>(\n    `Status for tags inside InputTag component`,\n    {\n        factory: () => TuiStatus.Primary,\n    },\n);\n","import {InjectionToken} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\nexport const TUI_VALIDATION_ERRORS = new InjectionToken<\n    Record<string, Observable<PolymorpheusContent> | PolymorpheusContent>\n>(`Validation errors`, {\n    factory: () => ({}),\n});\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;MAIa,wBAAwB,GAAG,IAAI,cAAc,CAExD,wCAAwC;;MCF7B,mBAAmB,GAC5B,IAAI,cAAc,CAAoC,iBAAiB,EAAE;IACrE,OAAO,EAAE,MAAM,eAAe;CACjC;;MCJQ,0BAA0B,GAAG,IAAI,cAAc,CAE1D,sFAAsF,EAAE;MAE7E,gCAAgC,GAAG,IAAI,cAAc,CAEhE,wDAAwD,EAAE;MAE/C,+BAA+B,GAAG,IAAI,cAAc,CAE/D,uDAAuD;;MCR5C,eAAe,GAAG,IAAI,cAAc,CAAC,oBAAoB,EAAE;IACpE,OAAO,EAAE,WAAW,CAAC,QAAQ,CAAC;CACjC,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC;CAC/B,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC;CAC/B,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC;CAC/B,EAAE;MAEU,iBAAiB,GAAG,IAAI,cAAc,CAAC,sBAAsB,EAAE;IACxE,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC;CAClC,EAAE;MAEU,mBAAmB,GAAG,IAAI,cAAc,CAAC,wBAAwB,EAAE;IAC5E,OAAO,EAAE,WAAW,CAAC,WAAW,CAAC;CACpC,EAAE;MAEU,6BAA6B,GAAG,IAAI,cAAc,CAC3D,gCAAgC,EAChC;IACI,OAAO,EAAE,WAAW,CAAC,qBAAqB,CAAC;CAC9C,EACH;MAEW,iBAAiB,GAAG,IAAI,cAAc,CAAC,wBAAwB,EAAE;IAC1E,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC;CAChC,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,2BAA2B,EAAE;IAChF,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC;CACrC,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC;CAC/B,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAC5C,wBAAwB,EACxB;IACI,OAAO,EAAE,WAAW,CAAC,WAAW,CAAC;CACpC,EACH;MAEW,6BAA6B,GAAG,IAAI,cAAc,CAC3D,iDAAiD,EACjD;IACI,OAAO,EAAE,WAAW,CAAC,yBAAyB,CAAC;CAClD,EACH;MAEW,cAAc,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,WAAW,CAAC;CACpC,EAAE;MAEU,kBAAkB,GAAG,IAAI,cAAc,CAAC,qBAAqB,EAAE;IACxE,OAAO,EAAE,WAAW,CAAC,eAAe,CAAC;CACxC,EAAE;MAEU,mBAAmB,GAAG,IAAI,cAAc,CAAC,4BAA4B,EAAE;IAChF,OAAO,EAAE,WAAW,CAAC,qBAAqB,CAAC;CAC9C,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;IAChE,OAAO,EAAE,WAAW,CAAC,WAAW,CAAC;CACpC,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,uBAAuB,EAAE;IAC5E,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC;CACrC,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,2BAA2B,EAAE;IAChF,OAAO,EAAE,WAAW,CAAC,gBAAgB,CAAC;CACzC,EAAE;MAEU,aAAa,GAEtB,IAAI,cAAc,CAAC,2BAA2B,EAAE;IAChD,OAAO,EAAE,WAAW,CAAC,WAAW,CAAC;CACpC;;MC1EY,0BAA0B,GAA8B;IACjE,SAAS,EAAE,qBAAqB;IAChC,eAAe,EAAE,4BAA4B;IAC7C,mBAAmB,EAAE,oBAAoB;EAC3C;MAEW,kBAAkB,GAAG,IAAI,cAAc,CAChD,uCAAuC,EACvC;IACI,OAAO,EAAE,MAAM,0BAA0B;CAC5C,EACH;MAEW,wBAAwB,GAEhB,CAAI,OAAqC,MAAM;IAChE,OAAO,EAAE,kBAAkB;IAC3B,QAAQ,kCAAM,0BAA0B,GAAK,OAAO,CAAC;CACxD;;AChCD;MACa,gBAAgB,GAAG,IAAI,cAAc,CAC9C,oEAAoE,EACpE;IACI,OAAO,EAAE,MAAM,KAAK;CACvB;;MCLQ,mBAAmB,GAAG,IAAI,cAAc,CACjD,oCAAoC;;MCC3B,mBAAmB,GAAG,IAAI,cAAc,CAEnD,6CAA6C;;MCJlC,cAAc,GAAG,IAAI,cAAc,CAAS,qBAAqB,EAAE;IAC5E,OAAO,EAAE,MAAM,EAAE;CACpB;;ACDD;MACa,cAAc,GAAG,IAAI,cAAc,CAC5C,2CAA2C,EAC3C;IACI,OAAO,EAAE;CACZ;;MCJQ,qBAAqB,GAAG,IAAI,cAAc,CAErD,mBAAmB,EAAE;IACnB,OAAO,EAAE,OAAO,EAAE,CAAC;CACtB;;ACRD;;;;;;"}