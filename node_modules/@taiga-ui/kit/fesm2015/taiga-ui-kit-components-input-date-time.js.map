{"version":3,"file":"taiga-ui-kit-components-input-date-time.js","sources":["ng://@taiga-ui/kit/components/input-date-time/input-date-time.providers.ts","ng://@taiga-ui/kit/components/input-date-time/input-date-time.component.ts","ng://@taiga-ui/kit/components/input-date-time/input-date-time.directive.ts","ng://@taiga-ui/kit/components/input-date-time/input-date-time.module.ts","ng://@taiga-ui/kit/components/input-date-time/taiga-ui-kit-components-input-date-time.ts"],"sourcesContent":["import {forwardRef, Optional, Self} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiControlValueTransformer,\n    TuiDay,\n    TuiTime,\n} from '@taiga-ui/cdk';\nimport {LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {\n    TUI_CALENDAR_DATA_STREAM,\n    TUI_DATE_TIME_VALUE_TRANSFORMER,\n} from '@taiga-ui/kit/tokens';\nimport {TuiReplayControlValueChangesFactory} from '@taiga-ui/kit/utils/miscellaneous';\nimport {Observable} from 'rxjs';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\n\n// TODO: 3.0 remove in ivy compilation\nexport const TIME_STREAM_FACTORY = <T extends [TuiDay | null, TuiTime | null]>(\n    control: NgControl | null,\n    valueTransformer: TuiControlValueTransformer<T>,\n): Observable<T | null> | null =>\n    TuiReplayControlValueChangesFactory<T>(control, valueTransformer);\n\nexport const TUI_INPUT_DATE_TIME_PROVIDERS = [\n    {\n        provide: AbstractTuiControl,\n        useExisting: forwardRef(() => TuiInputDateTimeComponent),\n    },\n    {\n        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n        useExisting: forwardRef(() => TuiInputDateTimeComponent),\n    },\n    {\n        provide: TUI_CALENDAR_DATA_STREAM,\n        deps: [\n            [new Optional(), new Self(), NgControl],\n            [new Optional(), forwardRef(() => TUI_DATE_TIME_VALUE_TRANSFORMER)],\n        ],\n        useFactory: TIME_STREAM_FACTORY,\n    },\n    LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n];\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    ALWAYS_FALSE_HANDLER,\n    changeDateSeparator,\n    clamp,\n    DATE_FILLER_LENGTH,\n    nullableSame,\n    TUI_DATE_FORMAT,\n    TUI_DATE_SEPARATOR,\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    TuiActiveZoneDirective,\n    TuiBooleanHandler,\n    TuiContextWithImplicit,\n    TuiControlValueTransformer,\n    TuiDateMode,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiMonth,\n    tuiPure,\n    TuiTime,\n    TuiTimeMode,\n} from '@taiga-ui/cdk';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n    TuiTextMaskOptions,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {DATE_TIME_SEPARATOR} from '@taiga-ui/kit/constants';\nimport {\n    TUI_DATE_TEXTS,\n    TUI_DATE_TIME_VALUE_TRANSFORMER,\n    TUI_TIME_TEXTS,\n} from '@taiga-ui/kit/tokens';\nimport {\n    tuiCreateAutoCorrectedDateTimePipe,\n    tuiCreateDateMask,\n    tuiCreateTimeMask,\n} from '@taiga-ui/kit/utils/mask';\nimport {TextMaskConfig} from 'angular2-text-mask';\nimport {combineLatest, Observable} from 'rxjs';\nimport {map, pluck} from 'rxjs/operators';\n\nimport {TUI_INPUT_DATE_TIME_PROVIDERS} from './input-date-time.providers';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-date-time',\n    templateUrl: './input-date-time.template.html',\n    styleUrls: ['./input-date-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: TUI_INPUT_DATE_TIME_PROVIDERS,\n})\nexport class TuiInputDateTimeComponent\n    extends AbstractTuiControl<[TuiDay | null, TuiTime | null]>\n    implements\n        TuiWithOptionalMinMax<TuiDay | [TuiDay, TuiTime]>,\n        TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private month: TuiMonth | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiDay | [TuiDay, TuiTime] = TUI_FIRST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiDay | [TuiDay, TuiTime] = TUI_LAST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiDay> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    defaultActiveYearMonth = TuiMonth.currentLocal();\n\n    @Input()\n    @tuiDefaultProp()\n    timeMode: TuiTimeMode = 'HH:MM';\n\n    open = false;\n\n    readonly type!: TuiContextWithImplicit<TuiActiveZoneDirective>;\n\n    readonly filler$: Observable<string> = combineLatest([\n        this.dateTexts$.pipe(\n            map(dateTexts =>\n                changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator),\n            ),\n        ),\n        this.timeTexts$.pipe(pluck(this.timeMode)),\n    ]).pipe(map(fillers => this.getDateTimeString(...fillers)));\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_DATE_FORMAT) readonly dateFormat: TuiDateMode,\n        @Inject(TUI_DATE_SEPARATOR) readonly dateSeparator: string,\n        @Inject(TUI_TIME_TEXTS)\n        readonly timeTexts$: Observable<Record<TuiTimeMode, string>>,\n        @Inject(TUI_DATE_TEXTS)\n        readonly dateTexts$: Observable<Record<TuiDateMode, string>>,\n        @Optional()\n        @Inject(TUI_DATE_TIME_VALUE_TRANSFORMER)\n        readonly valueTransformer: TuiControlValueTransformer<\n            [TuiDay | null, TuiTime | null]\n        > | null,\n    ) {\n        super(control, changeDetectorRef, valueTransformer);\n    }\n\n    get fillerLength(): number {\n        return DATE_FILLER_LENGTH + DATE_TIME_SEPARATOR.length + this.timeMode.length;\n    }\n\n    get textMaskOptions(): TextMaskConfig {\n        return this.calculateMask(\n            this.value[0],\n            this.calendarMinDay,\n            this.calendarMaxDay,\n            this.timeMode,\n            this.dateFormat,\n            this.dateSeparator,\n        ) as unknown as TextMaskConfig;\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): string {\n        return sizeBigger(this.textfieldSize.size)\n            ? 'tuiIconCalendarLarge'\n            : 'tuiIconCalendar';\n    }\n\n    get computedValue(): string {\n        const {value, nativeValue, timeMode} = this;\n        const [date, time] = value;\n        const hasTimeInputChars = nativeValue.length > DATE_FILLER_LENGTH;\n\n        if (!date || (!time && hasTimeInputChars)) {\n            return nativeValue;\n        }\n\n        return this.getDateTimeString(date, time, timeMode);\n    }\n\n    get calendarValue(): TuiDay | null {\n        return this.value[0];\n    }\n\n    get calendarMinDay(): TuiDay {\n        return Array.isArray(this.min) ? this.min[0] : this.min;\n    }\n\n    get calendarMaxDay(): TuiDay {\n        return Array.isArray(this.max) ? this.max[0] : this.max;\n    }\n\n    get computedActiveYearMonth(): TuiMonth {\n        return this.month || this.value[0] || this.defaultActiveYearMonth;\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    @HostListener('click')\n    onClick(): void {\n        this.open = !this.open;\n    }\n\n    onValueChange(value: string): void {\n        if (!value) {\n            this.onOpenChange(true);\n        }\n\n        if (value.length < DATE_FILLER_LENGTH) {\n            this.updateValue([null, null]);\n\n            return;\n        }\n\n        const [date, time] = value.split(DATE_TIME_SEPARATOR);\n\n        const parsedDate = TuiDay.normalizeParse(date, this.dateFormat);\n        const parsedTime =\n            time && time.length === this.timeMode.length\n                ? this.clampTime(TuiTime.fromString(time), parsedDate)\n                : null;\n\n        this.open = false;\n        this.updateValue([parsedDate, parsedTime]);\n    }\n\n    onDayClick(day: TuiDay): void {\n        const modifiedTime = this.value[1] && this.clampTime(this.value[1], day);\n\n        this.updateValue([day, modifiedTime]);\n        this.updateNativeValue(day);\n        this.open = false;\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onMonthChange(month: TuiMonth): void {\n        this.month = month;\n    }\n\n    onOpenChange(open: boolean): void {\n        this.open = open;\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (\n            focused ||\n            this.value[0] === null ||\n            this.value[1] !== null ||\n            this.nativeValue.length <= this.fillerLength + DATE_TIME_SEPARATOR.length ||\n            this.timeMode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const [, time] = this.nativeValue.split(DATE_TIME_SEPARATOR);\n\n        if (!time) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(time);\n\n        this.updateValue([this.value[0], parsedTime]);\n\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n\n    setDisabledState(): void {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    writeValue(value: [TuiDay | null, TuiTime | null] | null): void {\n        super.writeValue(value);\n\n        this.nativeValue =\n            this.value && (this.value[0] || this.value[1]) ? this.computedValue : '';\n    }\n\n    protected getFallbackValue(): [TuiDay | null, TuiTime | null] {\n        return [null, null];\n    }\n\n    protected valueIdenticalComparator(\n        oldValue: [TuiDay | null, TuiTime | null],\n        newValue: [TuiDay | null, TuiTime | null],\n    ): boolean {\n        return (\n            nullableSame(oldValue[0], newValue[0], (a, b) => a.daySame(b)) &&\n            nullableSame(oldValue[1], newValue[1], (a, b) => String(a) === String(b))\n        );\n    }\n\n    @tuiPure\n    private calculateMask(\n        day: TuiDay | null,\n        min: TuiDay,\n        max: TuiDay,\n        timeMode: TuiTimeMode,\n        dateFormat: TuiDateMode,\n        dateSeparator: string,\n    ): TuiTextMaskOptions {\n        return {\n            mask: [\n                ...tuiCreateDateMask(dateFormat, dateSeparator),\n                ',',\n                ' ',\n                ...tuiCreateTimeMask(timeMode),\n            ],\n            pipe: tuiCreateAutoCorrectedDateTimePipe({\n                value: day,\n                min,\n                max,\n                dateFormat,\n                dateSeparator,\n                timeMode,\n            }),\n            guide: false,\n        };\n    }\n\n    @tuiPure\n    private getDateTimeString(\n        date: TuiDay | string,\n        time: TuiTime | string | null,\n        timeMode: TuiTimeMode = 'HH:MM',\n    ): string {\n        const dateString =\n            date instanceof TuiDay\n                ? date.toString(this.dateFormat, this.dateSeparator)\n                : date;\n        const timeString = time instanceof TuiTime ? time.toString(timeMode) : time || '';\n\n        return `${dateString}${DATE_TIME_SEPARATOR}${timeString}`;\n    }\n\n    private updateNativeValue(day: TuiDay): void {\n        const time = this.nativeValue.split(DATE_TIME_SEPARATOR)[1] || '';\n\n        this.nativeValue = this.getDateTimeString(day, time);\n    }\n\n    private clampTime(time: TuiTime, day: TuiDay): TuiTime {\n        const ms = time.toAbsoluteMilliseconds();\n        const min =\n            Array.isArray(this.min) && day.daySame(this.calendarMinDay)\n                ? this.min[1].toAbsoluteMilliseconds()\n                : -Infinity;\n        const max =\n            Array.isArray(this.max) && day.daySame(this.calendarMaxDay)\n                ? this.max[1].toAbsoluteMilliseconds()\n                : Infinity;\n\n        return TuiTime.fromAbsoluteMilliseconds(clamp(ms, min, max));\n    }\n}\n","import {Directive, forwardRef} from '@angular/core';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\n\n@Directive({\n    selector: 'tui-input-date-time',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputDateTimeDirective),\n        },\n    ],\n})\nexport class TuiInputDateTimeDirective extends TuiAbstractTextfieldHost<TuiInputDateTimeComponent> {\n    get value(): string {\n        return this.host.computedValue;\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    process(input: HTMLInputElement): void {\n        input.inputMode = 'numeric';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiPreventDefaultModule} from '@taiga-ui/cdk';\nimport {\n    TuiCalendarModule,\n    TuiHostedDropdownModule,\n    TuiLinkModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\nimport {TuiInputDateTimeDirective} from './input-date-time.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        PolymorpheusModule,\n        TuiPreventDefaultModule,\n        TuiCalendarModule,\n        TuiSvgModule,\n        TuiLinkModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputDateTimeComponent, TuiInputDateTimeDirective],\n    exports: [\n        TuiInputDateTimeComponent,\n        TuiInputDateTimeDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputDateTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}