import { InjectionToken } from '@angular/core';
import { COUNTRIES_MASKS } from '@taiga-ui/kit/constants';
import { extractI18n } from '@taiga-ui/i18n';
import { TUI_DEFAULT_STRINGIFY, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER } from '@taiga-ui/cdk';

const TUI_CALENDAR_DATA_STREAM = new InjectionToken(`Stream that emits calendar data change`);

const TUI_COUNTRIES_MASKS = new InjectionToken(`Countries masks`, {
    factory: () => COUNTRIES_MASKS,
});

const TUI_DATE_VALUE_TRANSFORMER = new InjectionToken(`Control value transformer of TuiDay to custom value format for InputDate* components`);
const TUI_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken(`Control value transformer for InputDateRange component`);
const TUI_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken(`Control value transformer for InputDateTime component`);

const TUI_CANCEL_WORD = new InjectionToken(`i18n 'cancel' word`, {
    factory: extractI18n(`cancel`),
});
const TUI_DONE_WORD = new InjectionToken(`i18n 'done' word`, {
    factory: extractI18n(`done`),
});
const TUI_MORE_WORD = new InjectionToken(`i18n 'more' word`, {
    factory: extractI18n(`more`),
});
const TUI_HIDE_TEXT = new InjectionToken(`i18n 'hide' word`, {
    factory: extractI18n(`hide`),
});
const TUI_SHOW_ALL_TEXT = new InjectionToken(`i18n 'show all' word`, {
    factory: extractI18n(`showAll`),
});
const TUI_OTHER_DATE_TEXT = new InjectionToken(`i18n 'Other date' text`, {
    factory: extractI18n(`otherDate`),
});
const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = new InjectionToken(`choose day or range i18n texts`, {
    factory: extractI18n(`mobileCalendarTexts`),
});
const TUI_FROM_TO_TEXTS = new InjectionToken(`from and to i18n texts`, {
    factory: extractI18n(`range`),
});
const TUI_PLUS_MINUS_TEXTS = new InjectionToken(`plus and minus i18n texts`, {
    factory: extractI18n(`countTexts`),
});
const TUI_TIME_TEXTS = new InjectionToken(`time i18n texts`, {
    factory: extractI18n(`time`),
});
const TUI_DATE_TEXTS = new InjectionToken(`date format i18n texts`, {
    factory: extractI18n(`dateTexts`),
});
const TUI_DIGITAL_INFORMATION_UNITS = new InjectionToken(`short bytes, kilobytes and megabytes i18n texts`, {
    factory: extractI18n(`digitalInformationUnits`),
});
const TUI_COPY_TEXTS = new InjectionToken(`copy i18n texts`, {
    factory: extractI18n(`copyTexts`),
});
const TUI_PASSWORD_TEXTS = new InjectionToken(`password i18n texts`, {
    factory: extractI18n(`passwordTexts`),
});
const TUI_CALENDAR_MONTHS = new InjectionToken(`short calendar months i18n`, {
    factory: extractI18n(`shortCalendarMonths`),
});
const TUI_FILE_TEXTS = new InjectionToken(`file i18n texts`, {
    factory: extractI18n(`fileTexts`),
});
const TUI_PAGINATION_TEXTS = new InjectionToken(`pagination i18n texts`, {
    factory: extractI18n(`pagination`),
});
const TUI_INPUT_FILE_TEXTS = new InjectionToken(`tui-input-file i18n texts`, {
    factory: extractI18n(`inputFileTexts`),
});
const TUI_COUNTRIES = new InjectionToken(`Localized countries names`, {
    factory: extractI18n(`countries`),
});

const TUI_DEFAULT_ITEMS_HANDLERS = {
    stringify: TUI_DEFAULT_STRINGIFY,
    identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,
    disabledItemHandler: ALWAYS_FALSE_HANDLER,
};
const TUI_ITEMS_HANDLERS = new InjectionToken(`Default items handlers for components`, {
    factory: () => TUI_DEFAULT_ITEMS_HANDLERS,
});
const tuiItemsHandlersProvider = (options) => ({
    provide: TUI_ITEMS_HANDLERS,
    useValue: Object.assign(Object.assign({}, TUI_DEFAULT_ITEMS_HANDLERS), options),
});

/** @deprecated use {@link TuiMobileTabsDirective} from @taiga-ui/addon-mobile */
const TUI_MOBILE_AWARE = new InjectionToken(`A flag enabling mobile-specific behavior for supporting components`, {
    factory: () => false,
});

const TUI_MOBILE_CALENDAR = new InjectionToken(`A component for mobile data picker`);

const TUI_MONTH_FORMATTER = new InjectionToken(`A function to get localized formatted month`);

const TUI_TAB_MARGIN = new InjectionToken(`Margin between tabs`, {
    factory: () => 24,
});

// TODO: 3.0 use TUI_TAG_OPTIONS instead of it
const TUI_TAG_STATUS = new InjectionToken(`Status for tags inside InputTag component`, {
    factory: () => "primary" /* Primary */,
});

const TUI_VALIDATION_ERRORS = new InjectionToken(`Validation errors`, {
    factory: () => ({}),
});

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_CALENDAR_DATA_STREAM, TUI_CALENDAR_MONTHS, TUI_CANCEL_WORD, TUI_CHOOSE_DAY_OR_RANGE_TEXTS, TUI_COPY_TEXTS, TUI_COUNTRIES, TUI_COUNTRIES_MASKS, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_DATE_TEXTS, TUI_DATE_TIME_VALUE_TRANSFORMER, TUI_DATE_VALUE_TRANSFORMER, TUI_DEFAULT_ITEMS_HANDLERS, TUI_DIGITAL_INFORMATION_UNITS, TUI_DONE_WORD, TUI_FILE_TEXTS, TUI_FROM_TO_TEXTS, TUI_HIDE_TEXT, TUI_INPUT_FILE_TEXTS, TUI_ITEMS_HANDLERS, TUI_MOBILE_AWARE, TUI_MOBILE_CALENDAR, TUI_MONTH_FORMATTER, TUI_MORE_WORD, TUI_OTHER_DATE_TEXT, TUI_PAGINATION_TEXTS, TUI_PASSWORD_TEXTS, TUI_PLUS_MINUS_TEXTS, TUI_SHOW_ALL_TEXT, TUI_TAB_MARGIN, TUI_TAG_STATUS, TUI_TIME_TEXTS, TUI_VALIDATION_ERRORS, tuiItemsHandlersProvider };
//# sourceMappingURL=taiga-ui-kit-tokens.js.map
