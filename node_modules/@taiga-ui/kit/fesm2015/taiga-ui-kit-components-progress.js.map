{"version":3,"file":"taiga-ui-kit-components-progress.js","sources":["ng://@taiga-ui/kit/components/progress/progress-bar/progress-bar.component.ts","ng://@taiga-ui/kit/components/progress/utils/calculate-color-segments.ts","ng://@taiga-ui/kit/components/progress/progress-bar/progress-color-segments.directive.ts","ng://@taiga-ui/kit/components/progress/progress-circle/progress-circle.component.ts","ng://@taiga-ui/kit/components/progress/progress-label/progress-label.component.ts","ng://@taiga-ui/kit/components/progress/progress-segmented/progress-segmented.component.ts","ng://@taiga-ui/kit/components/progress/utils/abstract-color-segments.ts","ng://@taiga-ui/kit/components/progress/utils/progress-color-segments.pipe.ts","ng://@taiga-ui/kit/components/progress/utils/progress-color-segments-async.pipe.ts","ng://@taiga-ui/kit/components/progress/progress.module.ts","ng://@taiga-ui/kit/components/progress/taiga-ui-kit-components-progress.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\n@Component({\n    selector: 'progress[tuiProgressBar]',\n    template: '',\n    styleUrls: ['./progress-bar.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiProgressBarComponent {\n    @Input()\n    @HostBinding('style.--tui-progress-color')\n    color?: string;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeS = 'm';\n}\n","/**\n * TODO: 3.0 move inside {@link TuiProgressColorSegmentsDirective} (as a private method)\n * (after deletion of {@link TuiProgressColorSegmentsPipe} and {@link TuiProgressColorSegmentsAsyncPipe})\n */\nimport {px} from '@taiga-ui/cdk';\n\nexport const calculateColorSegments = (\n    colors: string[],\n    progressWidth: number,\n): string => {\n    const segmentWidth = Math.ceil(progressWidth / colors.length);\n    const colorsString = colors.reduce(\n        (acc, color, i) =>\n            `${acc}, ${color} ${px(i * segmentWidth)} ${px((i + 1) * segmentWidth)}`,\n        ``,\n    );\n\n    return `linear-gradient(to right ${colorsString})`;\n};\n","import {Directive, ElementRef, Inject, Input} from '@angular/core';\nimport {USER_AGENT} from '@ng-web-apis/common';\nimport {\n    CHROMIUM_EDGE_START_VERSION,\n    isEdgeOlderThan,\n    isIE,\n    TuiDestroyService,\n    tuiPure,\n    TuiResizeService,\n} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {calculateColorSegments} from '../utils/calculate-color-segments';\n\n@Directive({\n    selector: 'progress[tuiProgressBar][tuiProgressColorSegments]',\n    host: {\n        '[$.style.--tui-progress-color]': 'calcSegments$',\n        '($.style.--tui-progress-color)': '0',\n    },\n    providers: [TuiDestroyService, TuiResizeService],\n})\nexport class TuiProgressColorSegmentsDirective {\n    private readonly isOldBrowsers =\n        isEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent) ||\n        isIE(this.userAgent);\n\n    @Input('tuiProgressColorSegments')\n    colors: string[] = [];\n\n    @tuiPure\n    get calcSegments$(): Observable<string> {\n        return this.resize$.pipe(\n            map(() =>\n                this.isOldBrowsers\n                    ? this.colors[0]\n                    : calculateColorSegments(\n                          this.colors,\n                          this.elementRef.nativeElement.offsetWidth,\n                      ),\n            ),\n        );\n    }\n\n    constructor(\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLProgressElement>,\n        @Inject(TuiResizeService) private readonly resize$: Observable<unknown>,\n        @Inject(USER_AGENT) private readonly userAgent: string,\n    ) {}\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {USER_AGENT, WINDOW} from '@ng-web-apis/common';\nimport {\n    CHROMIUM_EDGE_START_VERSION,\n    tuiDefaultProp,\n    tuiIsEdgeOlderThan,\n} from '@taiga-ui/cdk';\nimport {TuiSizeS, TuiSizeXL} from '@taiga-ui/core';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\n\n// @dynamic\n@Component({\n    selector: 'tui-progress-circle',\n    templateUrl: './progress-circle.template.html',\n    styleUrls: ['./progress-circle.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiProgressCircleComponent {\n    @ViewChild('progressCircle', {static: true})\n    private readonly progressCircle!: ElementRef<SVGCircleElement>;\n\n    @Input()\n    @tuiDefaultProp()\n    value = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = 1;\n\n    @Input()\n    @HostBinding('style.--tui-progress-color')\n    @tuiDefaultProp()\n    color: string | null = null;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeS | TuiSizeXL = 'm';\n\n    @HostBinding('style.--progress-percentage')\n    get progressPercentage(): number {\n        return this.value / this.max;\n    }\n\n    animationDelay$ = of(true).pipe(delay(0));\n\n    get oldEdgeRadiusFallback(): number | null {\n        if (!tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent)) {\n            return null;\n        }\n\n        const strokeWidth = parseInt(\n            this.win.getComputedStyle(this.progressCircle.nativeElement).strokeWidth,\n            10,\n        );\n\n        return (this.el.nativeElement.offsetWidth - strokeWidth) / 2;\n    }\n\n    constructor(\n        @Inject(USER_AGENT) private readonly userAgent: string,\n        @Inject(WINDOW) private readonly win: Window,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n    ) {}\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n    selector: 'label[tuiProgressLabel]',\n    templateUrl: './progress-label.template.html',\n    styleUrls: ['./progress-label.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiProgressLabelComponent {}\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function nonNegativeInt(value: number): boolean {\n    return Number.isInteger(value) && value >= 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function positiveInt(value: number): boolean {\n    return Number.isInteger(value) && value > 0;\n}\n\n@Component({\n    selector: 'tui-progress-segmented',\n    templateUrl: './progress-segmented.template.html',\n    styleUrls: ['./progress-segmented.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiProgressSegmentedComponent {\n    @Input()\n    @tuiDefaultProp(nonNegativeInt, 'Must be non-negative integer between 0 and max')\n    value = 0;\n\n    @Input()\n    @tuiDefaultProp(positiveInt, 'Must be positive integer')\n    max = 1;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    size: TuiSizeS = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    colors: string | readonly string[] = 'var(--tui-primary)';\n\n    getActiveColor(index: number = 0): string | null {\n        return typeof this.colors === 'string'\n            ? this.colors\n            : this.colors[index] || this.colors[this.colors.length - 1];\n    }\n}\n","import {ElementRef, Inject, Injectable, PipeTransform} from '@angular/core';\nimport {USER_AGENT} from '@ng-web-apis/common';\nimport {CHROMIUM_EDGE_START_VERSION, isEdgeOlderThan, isIE} from '@taiga-ui/cdk';\n\nimport {calculateColorSegments} from './calculate-color-segments';\n\n// TODO: 3.0 delete\n@Injectable()\nexport abstract class AbstractTuiColorSegments<T> implements PipeTransform {\n    private readonly isOldBrowsers =\n        isEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent) ||\n        isIE(this.userAgent);\n\n    constructor(\n        @Inject(USER_AGENT) private readonly userAgent: string,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    ) {}\n\n    abstract transform(colors: string[]): T;\n\n    protected calculate(colors: string[]): string {\n        if (this.isOldBrowsers) {\n            return colors[0];\n        }\n\n        const elementWidth = this.elementRef.nativeElement.offsetWidth;\n\n        return calculateColorSegments(colors, elementWidth);\n    }\n}\n","import {Pipe} from '@angular/core';\n\nimport {AbstractTuiColorSegments} from './abstract-color-segments';\n\n// TODO: 3.0 delete\n@Pipe({name: `tuiProgressColorSegments`})\nexport class TuiProgressColorSegmentsPipe extends AbstractTuiColorSegments<string> {\n    /**\n     * @deprecated use tuiProgressColorSegments directive instead\n     * {@link TuiProgressColorSegmentsDirective}\n     * @example: `<progress tuiProgressBar [tuiProgressColorSegments]=\"colors\">`\n     */\n    transform(colors: string[]): string {\n        return this.calculate(colors);\n    }\n}\n","import {Pipe} from '@angular/core';\nimport {Observable, timer} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AbstractTuiColorSegments} from './abstract-color-segments';\n\n// TODO: 3.0 delete\n@Pipe({name: `tuiProgressColorSegmentsAsync`})\nexport class TuiProgressColorSegmentsAsyncPipe extends AbstractTuiColorSegments<\n    Observable<string>\n> {\n    /**\n     * @deprecated use tuiProgressColorSegments directive instead\n     * {@link TuiProgressColorSegmentsDirective}\n     * @example: `<progress tuiProgressBar [tuiProgressColorSegments]=\"colors\">`\n     */\n    transform(colors: string[]): Observable<string> {\n        return timer(0).pipe(map(() => this.calculate(colors)));\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiRepeatTimesModule} from '@taiga-ui/cdk';\n\nimport {TuiProgressBarComponent} from './progress-bar/progress-bar.component';\nimport {TuiProgressColorSegmentsDirective} from './progress-bar/progress-color-segments.directive';\nimport {TuiProgressCircleComponent} from './progress-circle/progress-circle.component';\nimport {TuiProgressLabelComponent} from './progress-label/progress-label.component';\nimport {TuiProgressSegmentedComponent} from './progress-segmented/progress-segmented.component';\nimport {TuiProgressColorSegmentsPipe} from './utils/progress-color-segments.pipe';\nimport {TuiProgressColorSegmentsAsyncPipe} from './utils/progress-color-segments-async.pipe';\n\n@NgModule({\n    imports: [CommonModule, TuiRepeatTimesModule],\n    declarations: [\n        TuiProgressBarComponent,\n        TuiProgressColorSegmentsDirective,\n        TuiProgressColorSegmentsPipe,\n        TuiProgressColorSegmentsAsyncPipe,\n        TuiProgressCircleComponent,\n        TuiProgressLabelComponent,\n        TuiProgressSegmentedComponent,\n    ],\n    exports: [\n        TuiProgressBarComponent,\n        TuiProgressCircleComponent,\n        TuiProgressColorSegmentsDirective,\n        TuiProgressColorSegmentsPipe,\n        TuiProgressColorSegmentsAsyncPipe,\n        TuiProgressLabelComponent,\n        TuiProgressSegmentedComponent,\n    ],\n})\nexport class TuiProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}