import { __decorate, __param } from 'tslib';
import { Inject, HostBinding, HostListener, Component, ChangeDetectionStrategy, ɵɵdefineInjectable, ɵɵinject, Injectable, Directive, NgModule } from '@angular/core';
import { TUI_ANIMATION_OPTIONS, TUI_CLOSE_WORD, tuiSlideInTop, tuiFadeIn, TuiButtonModule } from '@taiga-ui/core';
import { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import { AbstractTuiDialogService, AbstractTuiDialogDirective, TUI_DIALOGS } from '@taiga-ui/cdk';
import { TuiIdService } from '@taiga-ui/cdk/services';
import { CommonModule } from '@angular/common';

let TuiPdfViewerComponent = class TuiPdfViewerComponent {
    constructor(options, closeWord$, context) {
        this.options = options;
        this.closeWord$ = closeWord$;
        this.context = context;
        this.animation = Object.assign({ value: '' }, this.options);
    }
    onKeyDownEsc() {
        this.context.$implicit.complete();
    }
};
TuiPdfViewerComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ANIMATION_OPTIONS,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [POLYMORPHEUS_CONTEXT,] }] }
];
__decorate([
    HostBinding('@tuiSlideInTop'),
    HostBinding('@tuiFadeIn')
], TuiPdfViewerComponent.prototype, "animation", void 0);
__decorate([
    HostListener('document:keydown.esc')
], TuiPdfViewerComponent.prototype, "onKeyDownEsc", null);
TuiPdfViewerComponent = __decorate([
    Component({
        selector: 'tui-pdf-viewer',
        template: "<header class=\"t-header\">\n    <h2 class=\"t-title\">{{ context.label }}</h2>\n    <div\n        polymorpheus-outlet\n        class=\"t-actions\"\n        [content]=\"context.actions\"\n        [context]=\"context\"\n    ></div>\n    <button\n        tuiIconButton\n        shape=\"rounded\"\n        appearance=\"\"\n        size=\"s\"\n        icon=\"tuiIconCloseLarge\"\n        class=\"t-close\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"context.$implicit.complete()\"\n    ></button>\n</header>\n<section\n    polymorpheus-outlet\n    class=\"t-content\"\n    [content]=\"context.content\"\n    [context]=\"context\"\n>\n    <ng-template let-content>\n        <iframe\n            class=\"t-iframe\"\n            [src]=\"content\"\n        ></iframe>\n    </ng-template>\n</section>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        animations: [tuiSlideInTop, tuiFadeIn],
        styles: [":host{display:block;width:100%;height:100%;box-sizing:border-box;color:var(--tui-text-01-night);background:#333639}.t-header{display:flex;align-items:center;height:4rem;padding:0 1rem 0 1.5625rem;box-shadow:inset 0 -1px #535659}.t-title{margin:0;font:var(--tui-font-text-m)}.t-actions{display:flex;margin-left:auto}.t-close{transition-property:background;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;margin-left:.75rem;color:var(--tui-text-01-night);background:rgba(255,255,255,.32)}.t-close:hover{background:rgba(255,255,255,.4)}.t-content{height:calc(100% - 4rem);overflow:hidden}.t-iframe{width:100%;height:100%}"]
    }),
    __param(0, Inject(TUI_ANIMATION_OPTIONS)),
    __param(1, Inject(TUI_CLOSE_WORD)),
    __param(2, Inject(POLYMORPHEUS_CONTEXT))
], TuiPdfViewerComponent);

const DIALOG = new PolymorpheusComponent(TuiPdfViewerComponent);
const DEFAULT_OPTIONS = { label: ``, actions: `` };
let TuiPdfViewerService = class TuiPdfViewerService extends AbstractTuiDialogService {
    constructor() {
        super(...arguments);
        this.component = DIALOG;
        this.defaultOptions = DEFAULT_OPTIONS;
    }
    open(content, options = {}) {
        return super.open(content, options);
    }
};
TuiPdfViewerService.ɵprov = ɵɵdefineInjectable({ factory: function TuiPdfViewerService_Factory() { return new TuiPdfViewerService(ɵɵinject(TuiIdService)); }, token: TuiPdfViewerService, providedIn: "root" });
TuiPdfViewerService = __decorate([
    Injectable({
        providedIn: `root`,
    })
], TuiPdfViewerService);

let TuiPdfViewerDirective = class TuiPdfViewerDirective extends AbstractTuiDialogDirective {
};
TuiPdfViewerDirective = __decorate([
    Directive({
        selector: 'ng-template[tuiPdfViewer]',
        providers: [
            {
                provide: AbstractTuiDialogService,
                useExisting: TuiPdfViewerService,
            },
        ],
        inputs: ['options: tuiPdfViewerOptions', 'open: tuiPdfViewer'],
        outputs: ['openChange: tuiPdfViewerChange'],
    })
], TuiPdfViewerDirective);

let TuiPdfViewerModule = class TuiPdfViewerModule {
};
TuiPdfViewerModule = __decorate([
    NgModule({
        imports: [CommonModule, TuiButtonModule, PolymorpheusModule],
        declarations: [TuiPdfViewerComponent, TuiPdfViewerDirective],
        exports: [TuiPdfViewerComponent, TuiPdfViewerDirective],
        providers: [
            {
                provide: TUI_DIALOGS,
                useExisting: TuiPdfViewerService,
                multi: true,
            },
        ],
        entryComponents: [TuiPdfViewerComponent],
    })
], TuiPdfViewerModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPdfViewerComponent, TuiPdfViewerDirective, TuiPdfViewerModule, TuiPdfViewerService };
//# sourceMappingURL=taiga-ui-kit-components-pdf-viewer.js.map
