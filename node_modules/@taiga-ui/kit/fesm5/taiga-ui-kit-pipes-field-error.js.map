{"version":3,"file":"taiga-ui-kit-pipes-field-error.js","sources":["ng://@taiga-ui/kit/pipes/field-error/field-error-pipe.ts","ng://@taiga-ui/kit/pipes/field-error/field-error-content-pipe.ts","ng://@taiga-ui/kit/pipes/field-error/field-error.module.ts","ng://@taiga-ui/kit/pipes/field-error/taiga-ui-kit-pipes-field-error.ts"],"sourcesContent":["import {Inject, Optional, Pipe, PipeTransform, Self} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    FormArrayName,\n    FormGroupDirective,\n    FormGroupName,\n    NgControl,\n} from '@angular/forms';\nimport {tuiPure, TuiValidationError} from '@taiga-ui/cdk';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {isObservable, Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nconst EMPTY_RECORD = {};\n\n// @dynamic\n@Pipe({\n    name: `tuiFieldError`,\n    pure: false,\n})\nexport class TuiFieldErrorPipe implements PipeTransform, ControlValueAccessor {\n    private order: readonly string[] = [];\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        private readonly ngControl: NgControl | null,\n        @Optional()\n        @Self()\n        @Inject(FormArrayName)\n        private readonly formArrayName: FormArrayName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupName)\n        private readonly formGroupName: FormGroupName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupDirective)\n        private readonly formGroup: FormGroupDirective | null,\n        @Inject(TUI_VALIDATION_ERRORS)\n        private readonly validationErrors: Record<\n            string,\n            Observable<PolymorpheusContent> | PolymorpheusContent\n        >,\n    ) {\n        if (this.ngControl && !this.ngControl.valueAccessor) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    transform(order: readonly string[]): Observable<TuiValidationError | null> {\n        this.order = order;\n\n        return this.computedError;\n    }\n\n    get computedError(): Observable<TuiValidationError | null> {\n        return (this.invalid && this.touched && this.error) || of(null);\n    }\n\n    registerOnChange(): void {}\n\n    registerOnTouched(): void {}\n\n    setDisabledState(): void {}\n\n    writeValue(): void {}\n\n    private get error(): Observable<TuiValidationError> | null {\n        const {errorId} = this;\n\n        if (!errorId) {\n            return null;\n        }\n\n        const firstError = this.controlErrors[errorId];\n        const errorContent = this.validationErrors[errorId];\n\n        return this.getError(firstError, errorContent);\n    }\n\n    private get invalid(): boolean {\n        return !!this.control?.invalid;\n    }\n\n    private get touched(): boolean {\n        return !!this.control?.touched;\n    }\n\n    private get control(): AbstractControl | null {\n        return (\n            this.ngControl?.control ||\n            this.formArrayName?.control ||\n            this.formGroupName?.control ||\n            this.formGroup?.control ||\n            null\n        );\n    }\n\n    private get errorId(): string {\n        return this.getErrorId(this.order, this.controlErrors);\n    }\n\n    private get controlErrors(): Record<string, unknown> {\n        return this.control?.errors || EMPTY_RECORD;\n    }\n\n    @tuiPure\n    private getErrorId(\n        order: readonly string[],\n        controlErrors: Record<string, unknown>,\n    ): string {\n        const id = order?.find(errorId => controlErrors[errorId]);\n        const fallback = Object.keys(controlErrors)[0];\n\n        return id || fallback || ``;\n    }\n\n    @tuiPure\n    private getError(\n        firstError: any,\n        errorContent?: Observable<PolymorpheusContent> | PolymorpheusContent,\n    ): Observable<TuiValidationError> {\n        if (firstError instanceof TuiValidationError) {\n            return of(firstError);\n        }\n\n        if (errorContent === undefined && typeof firstError === `string`) {\n            return of(new TuiValidationError(firstError));\n        }\n\n        if (isObservable(errorContent)) {\n            return errorContent.pipe(\n                map(error => new TuiValidationError(error || ``, firstError)),\n            );\n        }\n\n        return of(new TuiValidationError(errorContent || ``, firstError));\n    }\n}\n","import {AsyncPipe} from '@angular/common';\nimport {Inject, Injector, OnDestroy, Pipe, PipeTransform} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFieldErrorPipe} from './field-error-pipe';\n\n// @dynamic\n@Pipe({\n    name: `tuiFieldErrorContent`,\n    pure: false,\n})\nexport class TuiFieldErrorContentPipe implements PipeTransform, OnDestroy {\n    private readonly localInjector = Injector.create({\n        providers: [{provide: AsyncPipe}, {provide: TuiFieldErrorPipe}],\n        parent: this.injector,\n    });\n\n    private readonly asyncPipe = this.localInjector.get(AsyncPipe);\n    private readonly fieldErrorPipe = this.localInjector.get(TuiFieldErrorPipe);\n\n    constructor(@Inject(Injector) private readonly injector: Injector) {}\n\n    transform(order: readonly string[]): PolymorpheusContent {\n        return this.getErrorContent(order);\n    }\n\n    ngOnDestroy(): void {\n        this.asyncPipe.ngOnDestroy();\n    }\n\n    private getErrorContent(order: readonly string[]): PolymorpheusContent {\n        const error = this.asyncPipe.transform(this.fieldErrorPipe.transform(order));\n\n        if (!error) {\n            return ``;\n        }\n\n        return typeof error.message === `function`\n            ? error.message(error.context)\n            : error.message;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiFieldErrorContentPipe} from './field-error-content-pipe';\nimport {TuiFieldErrorPipe} from './field-error-pipe';\n\n@NgModule({\n    declarations: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n    exports: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n})\nexport class TuiFieldErrorPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;AAeA,IAAM,YAAY,GAAG,EAAE,CAAC;AAExB;;IAQI,2BAIqB,SAA2B,EAI3B,aAAmC,EAInC,aAAmC,EAInC,SAAoC,EAEpC,gBAGhB;QAjBgB,cAAS,GAAT,SAAS,CAAkB;QAI3B,kBAAa,GAAb,aAAa,CAAsB;QAInC,kBAAa,GAAb,aAAa,CAAsB;QAInC,cAAS,GAAT,SAAS,CAA2B;QAEpC,qBAAgB,GAAhB,gBAAgB,CAGhC;QAvBG,UAAK,GAAsB,EAAE,CAAC;QAyBlC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YACjD,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;SACvC;KACJ;IAED,qCAAS,GAAT,UAAU,KAAwB;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC7B;IAED,sBAAI,4CAAa;aAAjB;YACI,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACnE;;;OAAA;IAED,4CAAgB,GAAhB,eAA2B;IAE3B,6CAAiB,GAAjB,eAA4B;IAE5B,4CAAgB,GAAhB,eAA2B;IAE3B,sCAAU,GAAV,eAAqB;IAErB,sBAAY,oCAAK;aAAjB;YACW,IAAA,sBAAO,CAAS;YAEvB,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,IAAI,CAAC;aACf;YAED,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAEpD,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;SAClD;;;OAAA;IAED,sBAAY,sCAAO;aAAnB;;YACI,OAAO,CAAC,QAAC,IAAI,CAAC,OAAO,0CAAE,OAAO,CAAA,CAAC;SAClC;;;OAAA;IAED,sBAAY,sCAAO;aAAnB;;YACI,OAAO,CAAC,QAAC,IAAI,CAAC,OAAO,0CAAE,OAAO,CAAA,CAAC;SAClC;;;OAAA;IAED,sBAAY,sCAAO;aAAnB;;YACI,QACI,OAAA,IAAI,CAAC,SAAS,0CAAE,OAAO,YACvB,IAAI,CAAC,aAAa,0CAAE,OAAO,CAAA,WAC3B,IAAI,CAAC,aAAa,0CAAE,OAAO,CAAA,WAC3B,IAAI,CAAC,SAAS,0CAAE,OAAO,CAAA;gBACvB,IAAI,EACN;SACL;;;OAAA;IAED,sBAAY,sCAAO;aAAnB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1D;;;OAAA;IAED,sBAAY,4CAAa;aAAzB;;YACI,OAAO,OAAA,IAAI,CAAC,OAAO,0CAAE,MAAM,KAAI,YAAY,CAAC;SAC/C;;;OAAA;IAGO,sCAAU,GAAlB,UACI,KAAwB,EACxB,aAAsC;QAEtC,IAAM,EAAE,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,aAAa,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;QAC1D,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/C,OAAO,EAAE,IAAI,QAAQ,IAAI,EAAE,CAAC;KAC/B;IAGO,oCAAQ,GAAhB,UACI,UAAe,EACf,YAAoE;QAEpE,IAAI,UAAU,YAAY,kBAAkB,EAAE;YAC1C,OAAO,EAAE,CAAC,UAAU,CAAC,CAAC;SACzB;QAED,IAAI,YAAY,KAAK,SAAS,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAC9D,OAAO,EAAE,CAAC,IAAI,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;SACjD;QAED,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;YAC5B,OAAO,YAAY,CAAC,IAAI,CACpB,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,IAAI,kBAAkB,CAAC,KAAK,IAAI,EAAE,EAAE,UAAU,CAAC,GAAA,CAAC,CAChE,CAAC;SACL;QAED,OAAO,EAAE,CAAC,IAAI,kBAAkB,CAAC,YAAY,IAAI,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;KACrE;;gBAhH+B,SAAS,uBAHpC,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,SAAS;gBAKe,aAAa,uBAH5C,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,aAAa;gBAKW,aAAa,uBAH5C,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,aAAa;gBAKO,kBAAkB,uBAH7C,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,kBAAkB;gDAEzB,MAAM,SAAC,qBAAqB;;IAqEjC;QADC,OAAO;uDASP;IAGD;QADC,OAAO;qDAoBP;IAvHQ,iBAAiB;QAJ7B,IAAI,CAAC;YACF,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,KAAK;SACd,CAAC;QAKO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;QAEjB,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,aAAa,CAAC,CAAA;QAErB,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,aAAa,CAAC,CAAA;QAErB,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,kBAAkB,CAAC,CAAA;QAE1B,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;OApBzB,iBAAiB,CAwH7B;IAAD,wBAAC;CAxHD;;AChBA;;IAcI,kCAA+C,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QARhD,kBAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC7C,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,SAAS,EAAC,EAAE,EAAC,OAAO,EAAE,iBAAiB,EAAC,CAAC;YAC/D,MAAM,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QAEc,cAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC9C,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAEP;IAErE,4CAAS,GAAT,UAAU,KAAwB;QAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KACtC;IAED,8CAAW,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;IAEO,kDAAe,GAAvB,UAAwB,KAAwB;QAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,EAAE,CAAC;SACb;QAED,OAAO,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU;cACpC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;cAC5B,KAAK,CAAC,OAAO,CAAC;KACvB;;gBApBwD,QAAQ,uBAApD,MAAM,SAAC,QAAQ;;IATnB,wBAAwB;QAJpC,IAAI,CAAC;YACF,IAAI,EAAE,sBAAsB;YAC5B,IAAI,EAAE,KAAK;SACd,CAAC;QAUe,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;OATpB,wBAAwB,CA8BpC;IAAD,+BAAC;CA9BD;;;ICFA;KAAuC;IAA1B,uBAAuB;QAJnC,QAAQ,CAAC;YACN,YAAY,EAAE,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;YAC3D,OAAO,EAAE,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;SACzD,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAvC;;ACTA;;;;;;"}