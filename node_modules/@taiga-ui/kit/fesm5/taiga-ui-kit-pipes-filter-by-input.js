import { __decorate, __extends, __param } from 'tslib';
import { isPresent, tuiPure, TUI_DEFAULT_MATCHER, TUI_DEFAULT_STRINGIFY, TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';
import { isFlat } from '@taiga-ui/kit/utils';
import { Inject, Pipe, NgModule } from '@angular/core';

/**
 * @deprecated
 * TODO: 3.0 replace with {@link AbstractTuiFilterByInput}
 */
var TuiFilterByInputBase = /** @class */ (function () {
    function TuiFilterByInputBase() {
    }
    Object.defineProperty(TuiFilterByInputBase.prototype, "query", {
        get: function () {
            return this.accessor.nativeFocusableElement
                ? this.accessor.nativeFocusableElement.value || ""
                : "";
        },
        enumerable: true,
        configurable: true
    });
    TuiFilterByInputBase.prototype.filter = function (items, matcher, stringify, query) {
        if (!items) {
            return null;
        }
        return isFlat(items)
            ? this.filterFlat(items, matcher, stringify, query)
            : this.filter2d(items, matcher, stringify, query);
    };
    TuiFilterByInputBase.prototype.filterFlat = function (items, matcher, stringify, query) {
        var match = this.getMatch(items, stringify, query);
        return isPresent(match)
            ? items
            : items.filter(function (item) { return matcher(item, query, stringify); });
    };
    TuiFilterByInputBase.prototype.filter2d = function (items, matcher, stringify, query) {
        var _this = this;
        var match = items.find(function (item) {
            return isPresent(_this.getMatch(item, stringify, query));
        });
        return isPresent(match)
            ? items
            : items.map(function (inner) { return _this.filterFlat(inner, matcher, stringify, query); });
    };
    TuiFilterByInputBase.prototype.getMatch = function (items, stringify, query) {
        return items.find(function (item) { return stringify(item).toLocaleLowerCase() === query.toLocaleLowerCase(); });
    };
    __decorate([
        tuiPure
    ], TuiFilterByInputBase.prototype, "filter", null);
    return TuiFilterByInputBase;
}());
var AbstractTuiFilterByInput = /** @class */ (function (_super) {
    __extends(AbstractTuiFilterByInput, _super);
    function AbstractTuiFilterByInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AbstractTuiFilterByInput;
}(TuiFilterByInputBase));

var TuiFilterByInputPipe = /** @class */ (function (_super) {
    __extends(TuiFilterByInputPipe, _super);
    function TuiFilterByInputPipe(accessor) {
        var _this = _super.call(this) || this;
        _this.accessor = accessor;
        return _this;
    }
    TuiFilterByInputPipe.prototype.transform = function (items, matcher) {
        if (matcher === void 0) { matcher = TUI_DEFAULT_MATCHER; }
        return this.filter(items, matcher, TUI_DEFAULT_STRINGIFY, this.query);
    };
    TuiFilterByInputPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_FOCUSABLE_ITEM_ACCESSOR,] }] }
    ]; };
    TuiFilterByInputPipe = __decorate([
        Pipe({
            name: "tuiFilterByInput",
            pure: false,
        }),
        __param(0, Inject(TUI_FOCUSABLE_ITEM_ACCESSOR))
    ], TuiFilterByInputPipe);
    return TuiFilterByInputPipe;
}(AbstractTuiFilterByInput));

var TuiFilterByInputWithPipe = /** @class */ (function (_super) {
    __extends(TuiFilterByInputWithPipe, _super);
    function TuiFilterByInputWithPipe(accessor) {
        var _this = _super.call(this) || this;
        _this.accessor = accessor;
        return _this;
    }
    TuiFilterByInputWithPipe.prototype.transform = function (items, stringify) {
        return this.filter(items, TUI_DEFAULT_MATCHER, stringify, this.query);
    };
    TuiFilterByInputWithPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_FOCUSABLE_ITEM_ACCESSOR,] }] }
    ]; };
    TuiFilterByInputWithPipe = __decorate([
        Pipe({
            name: "tuiFilterByInputWith",
            pure: false,
        }),
        __param(0, Inject(TUI_FOCUSABLE_ITEM_ACCESSOR))
    ], TuiFilterByInputWithPipe);
    return TuiFilterByInputWithPipe;
}(AbstractTuiFilterByInput));

var TuiFilterByInputPipeModule = /** @class */ (function () {
    function TuiFilterByInputPipeModule() {
    }
    TuiFilterByInputPipeModule = __decorate([
        NgModule({
            declarations: [TuiFilterByInputPipe, TuiFilterByInputWithPipe],
            exports: [TuiFilterByInputPipe, TuiFilterByInputWithPipe],
        })
    ], TuiFilterByInputPipeModule);
    return TuiFilterByInputPipeModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { AbstractTuiFilterByInput, TuiFilterByInputBase, TuiFilterByInputPipe, TuiFilterByInputPipeModule, TuiFilterByInputWithPipe };
//# sourceMappingURL=taiga-ui-kit-pipes-filter-by-input.js.map
