import { __read } from 'tslib';
import { round } from '@taiga-ui/cdk';
import { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';

/**
 * @internal
 */
function tuiHorizontalDirectionToNumber(direction) {
    switch (direction) {
        case "left":
            return -1;
        case "right":
            return 1;
    }
}

function tuiFindKeyStepsBoundariesByFn(keySteps, fn) {
    var keyStepUpperIndex = keySteps.findIndex(function (keyStep, i) { return i && fn(keyStep); });
    var lowerStep = keySteps[keyStepUpperIndex - 1];
    var upperStep = keySteps[keyStepUpperIndex];
    return [lowerStep, upperStep];
}
function tuiPercentageToKeyStepValue(valuePercentage, keySteps) {
    var _a = __read(tuiFindKeyStepsBoundariesByFn(keySteps, function (_a) {
        var _b = __read(_a, 2), keyStepPercentage = _b[0], _ = _b[1];
        return valuePercentage <= keyStepPercentage;
    }), 2), _b = __read(_a[0], 2), lowerStepPercent = _b[0], lowerStepValue = _b[1], _c = __read(_a[1], 2), upperStepPercent = _c[0], upperStepValue = _c[1];
    var ratio = (valuePercentage - lowerStepPercent) / (upperStepPercent - lowerStepPercent);
    var controlValue = (upperStepValue - lowerStepValue) * ratio + lowerStepValue;
    return round(controlValue, TUI_FLOATING_PRECISION);
}
function tuiKeyStepValueToPercentage(value, keySteps) {
    var _a = __read(tuiFindKeyStepsBoundariesByFn(keySteps, function (_a) {
        var _b = __read(_a, 2), _ = _b[0], keyStepValue = _b[1];
        return value <= keyStepValue;
    }), 2), _b = __read(_a[0], 2), lowerStepPercent = _b[0], lowerStepValue = _b[1], _c = __read(_a[1], 2), upperStepPercent = _c[0], upperStepValue = _c[1];
    var ratio = (value - lowerStepValue) / (upperStepValue - lowerStepValue) || 0;
    return (upperStepPercent - lowerStepPercent) * ratio + lowerStepPercent;
}
function tuiCheckKeyStepsHaveMinMaxPercents(steps) {
    return !steps.length || (steps[0][0] === 0 && steps[steps.length - 1][0] === 100);
}

/**
 * Generated bundle index. Do not edit.
 */

export { tuiCheckKeyStepsHaveMinMaxPercents, tuiHorizontalDirectionToNumber, tuiKeyStepValueToPercentage, tuiPercentageToKeyStepValue };
//# sourceMappingURL=taiga-ui-kit-utils-math.js.map
