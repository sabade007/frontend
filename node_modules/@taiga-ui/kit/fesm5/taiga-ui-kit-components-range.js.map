{"version":3,"file":"taiga-ui-kit-components-range.js","sources":["ng://@taiga-ui/kit/components/range/range.component.ts","ng://@taiga-ui/kit/components/range/range-change.directive.ts","ng://@taiga-ui/kit/components/range/range.module.ts","ng://@taiga-ui/kit/components/range/taiga-ui-kit-components-range.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    QueryList,\n    Self,\n    ViewChildren,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    clamp,\n    EMPTY_QUERY,\n    isNativeFocusedIn,\n    nonNegativeFiniteAssertion,\n    quantize,\n    round,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiAssert,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\nimport {AbstractTuiSlider, SLIDER_KEYBOARD_STEP} from '@taiga-ui/kit/abstract';\nimport {TuiSliderComponent} from '@taiga-ui/kit/components/slider';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TUI_FROM_TO_TEXTS} from '@taiga-ui/kit/tokens';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {\n    tuiCheckKeyStepsHaveMinMaxPercents,\n    tuiKeyStepValueToPercentage,\n    tuiPercentageToKeyStepValue,\n} from '@taiga-ui/kit/utils';\nimport {Observable} from 'rxjs';\n\n/**\n * Turn on new mode for `Range` and `InputRange`.\n * The new version of component will behave almost the same as the same component from the next major release.\n * @deprecated TODO remove me in v3.0 and make `Range` and `InputRange` always \"new\".\n */\n@Directive({\n    selector: 'tui-range[new], tui-input-range[new]',\n})\nexport class TuiNewRangeDirective {}\n\n// @dynamic\n@Component({\n    selector: 'tui-range',\n    templateUrl: './range.template.html',\n    styleUrls: ['./range.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.tabindex]': '-1',\n        '[attr.aria-disabled]': 'computedDisabled',\n    },\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiRangeComponent),\n        },\n    ],\n})\n/**\n * `AbstractTuiSlider` includes all legacy code (it can be deleted in v3.0)\n * TODO replace `extends AbstractTuiSlider<[number, number]>` by `extends AbstractTuiControl<[number, number]> implements TuiWithOptionalMinMax<number>, TuiFocusableElementAccessor`\n */\nexport class TuiRangeComponent\n    extends AbstractTuiSlider<[number, number]>\n    implements TuiFocusableElementAccessor\n{\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    /**\n     * TODO: make `100` as default value (to be like native sliders) in v3.0\n     */\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    /**\n     * TODO: think about replacing this props by `step` (to be like native slider).\n     * It can be done after removing backward compatibility code inside {@link computePureKeySteps} in v3.0\n     */\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    /**\n     * TODO: think about replacing this props by `step` (to be like native slider).\n     * It can be done after removing backward compatibility code inside {@link computePureKeySteps} in v3.0\n     * */\n    @Input()\n    @tuiDefaultProp(nonNegativeFiniteAssertion, 'Quantum must be a non-negative number')\n    quantum = 0;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeS = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    @ViewChildren(TuiSliderComponent, {read: ElementRef})\n    slidersRefs: QueryList<ElementRef<HTMLInputElement>> = EMPTY_QUERY;\n\n    lastActiveThumb: 'left' | 'right' = 'right';\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) documentRef: Document,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(TUI_FROM_TO_TEXTS) fromToTexts$: Observable<[string, string]>,\n        @Optional()\n        @Inject(TuiNewRangeDirective)\n        readonly isNew: TuiNewRangeDirective | null,\n    ) {\n        super(control, changeDetectorRef, documentRef, fromToTexts$);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n\n        if (this.computedDisabled || !sliderLeftRef || !sliderRightRef) {\n            return null;\n        }\n\n        return this.isLeftFocusable\n            ? sliderLeftRef.nativeElement\n            : sliderRightRef.nativeElement;\n    }\n\n    get focused(): boolean {\n        return isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n\n    get fractionStep(): number {\n        if (this.steps) {\n            return 1 / this.steps;\n        }\n\n        return this.quantum ? this.quantum / (this.max - this.min) : SLIDER_KEYBOARD_STEP;\n    }\n\n    get computedKeySteps(): TuiKeySteps {\n        return this.computePureKeySteps(this.keySteps, this.min, this.max);\n    }\n\n    @HostBinding('style.--left.%')\n    get left(): number {\n        return this.getPercentageFromValue(this.value[0]);\n    }\n\n    @HostBinding('style.--right.%')\n    get right(): number {\n        return 100 - this.getPercentageFromValue(this.value[1]);\n    }\n\n    @HostListener('focusin', ['true'])\n    @HostListener('focusout', ['false'])\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    @HostListener('keydown.arrowUp.prevent', ['1', '$event.target'])\n    @HostListener('keydown.arrowRight.prevent', ['1', '$event.target'])\n    @HostListener('keydown.arrowLeft.prevent', ['-1', '$event.target'])\n    @HostListener('keydown.arrowDown.prevent', ['-1', '$event.target'])\n    changeByStep(coefficient: number, target: HTMLElement): void {\n        const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n        const leftThumbElement = sliderLeftRef.nativeElement;\n        const rightThumbElement = sliderRightRef.nativeElement;\n\n        const isRightThumb =\n            target === this.elementRef.nativeElement\n                ? this.lastActiveThumb === 'right'\n                : target === rightThumbElement;\n        const activeThumbElement = isRightThumb ? rightThumbElement : leftThumbElement;\n        const previousValue = isRightThumb ? this.value[1] : this.value[0];\n        /** @bad TODO think about a solution without twice conversion */\n        const previousFraction = this.getPercentageFromValue(previousValue) / 100;\n        const newFractionValue = previousFraction + coefficient * this.fractionStep;\n\n        this.processValue(this.getValueFromFraction(newFractionValue), isRightThumb);\n\n        if (activeThumbElement) {\n            activeThumbElement.focus();\n        }\n    }\n\n    processValue(value: number, right: boolean): void {\n        const guardedValue = this.valueGuard(value);\n\n        if (right) {\n            this.updateEnd(guardedValue);\n        } else {\n            this.updateStart(guardedValue);\n        }\n\n        this.lastActiveThumb = right ? 'right' : 'left';\n    }\n\n    fractionGuard(fraction: number): number {\n        return clamp(quantize(fraction, this.fractionStep), 0, 1);\n    }\n\n    getValueFromFraction(fraction: number): number {\n        const percentage = this.fractionGuard(fraction) * 100;\n\n        return tuiPercentageToKeyStepValue(percentage, this.computedKeySteps);\n    }\n\n    getPercentageFromValue(value: number): number {\n        return tuiKeyStepValueToPercentage(value, this.computedKeySteps);\n    }\n\n    protected valueGuard(value: number): number {\n        return clamp(\n            this.quantum\n                ? round(\n                      Math.round(value / this.quantum) * this.quantum,\n                      TUI_FLOATING_PRECISION,\n                  )\n                : value,\n            this.min,\n            this.max,\n        );\n    }\n\n    protected getFallbackValue(): [number, number] {\n        return [0, 0];\n    }\n\n    @tuiPure\n    private computePureKeySteps(\n        keySteps: TuiKeySteps | null,\n        min: number,\n        max: number,\n    ): TuiKeySteps {\n        if (keySteps && tuiCheckKeyStepsHaveMinMaxPercents(keySteps)) {\n            return keySteps;\n        }\n\n        // TODO replace all function by `return keySteps || [[0, min], [100, max]]` in v3.0\n        tuiAssert.assert(\n            !keySteps,\n            '\\n' +\n                'Input property [keySteps] should contain min and max percents.\\n' +\n                'We have taken [min] and [max] properties of your component for now (but it will not work in v3.0).\\n' +\n                'See example how properly use [keySteps]: https://taiga-ui.dev/components/range#key-steps',\n        );\n\n        return [[0, min], ...(keySteps || []), [100, max]];\n    }\n\n    private updateStart(value: number): void {\n        this.updateValue([Math.min(value, this.value[1]), this.value[1]]);\n    }\n\n    private updateEnd(value: number): void {\n        this.updateValue([this.value[0], Math.max(value, this.value[0])]);\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Directive, ElementRef, EventEmitter, Inject, Output} from '@angular/core';\nimport {clamp, round, TuiDestroyService, typedFromEvent} from '@taiga-ui/cdk';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {merge, Observable} from 'rxjs';\nimport {filter, map, repeat, startWith, switchMap, takeUntil, tap} from 'rxjs/operators';\n\nimport {TuiRangeComponent} from './range.component';\n\n// @dynamic\n@Directive({\n    selector: 'tui-range',\n    providers: [TuiDestroyService],\n})\nexport class TuiRangeChangeDirective {\n    /**\n     * TODO replace with pointer events (when all supported browsers can handle them).\n     * Dont forget to use setPointerCapture instead of listening all documentRef events\n     */\n    private readonly pointerDown$ = merge(\n        typedFromEvent(this.elementRef.nativeElement, 'touchstart', {passive: true}).pipe(\n            filter(({touches}) => touches.length === 1),\n            map(({touches}) => touches[0]),\n        ),\n        typedFromEvent(this.elementRef.nativeElement, 'mousedown', {passive: true}),\n    );\n\n    private readonly pointerMove$ = merge(\n        typedFromEvent(this.documentRef, 'touchmove').pipe(\n            filter(({touches}) => touches.length === 1),\n            map(({touches}) => touches[0]),\n        ),\n        typedFromEvent(this.documentRef, 'mousemove'),\n    );\n\n    private readonly pointerUp$ = merge(\n        typedFromEvent(this.documentRef, 'touchend', {passive: true}),\n        typedFromEvent(this.documentRef, 'mouseup', {passive: true}),\n    );\n\n    @Output()\n    activeThumbChange = new EventEmitter<'left' | 'right'>();\n\n    constructor(\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(TuiRangeComponent) private readonly range: TuiRangeComponent,\n        @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        let activeThumb: 'left' | 'right';\n\n        this.pointerDown$\n            .pipe(\n                tap(({clientX, target}) => {\n                    activeThumb = this.detectActiveThumb(clientX, target);\n                    this.activeThumbChange.emit(activeThumb);\n\n                    if (this.range.focusable) {\n                        elementRef.nativeElement.focus();\n                    }\n                }),\n                switchMap(event => this.pointerMove$.pipe(startWith(event))),\n                map(({clientX}) => clamp(this.getFractionFromEvents(clientX), 0, 1)),\n                takeUntil(this.pointerUp$),\n                repeat(),\n                takeUntil(destroy$),\n            )\n            .subscribe(fraction => {\n                const value = this.range.getValueFromFraction(\n                    this.range.fractionGuard(fraction),\n                );\n\n                this.range.processValue(value, activeThumb === 'right');\n            });\n    }\n\n    private getFractionFromEvents(clickClientX: number): number {\n        const hostRect = this.elementRef.nativeElement.getBoundingClientRect();\n        const value = clickClientX - hostRect.left;\n        const total = hostRect.width;\n\n        return round(value / total, TUI_FLOATING_PRECISION);\n    }\n\n    private detectActiveThumb(\n        clientX: number,\n        target: EventTarget | null,\n    ): 'left' | 'right' {\n        const [leftSliderRef, rightSliderRef] = this.range.slidersRefs;\n\n        switch (target) {\n            case leftSliderRef.nativeElement:\n                return 'left';\n            case rightSliderRef.nativeElement:\n                return 'right';\n            default:\n                return this.findNearestActiveThumb(clientX);\n        }\n    }\n\n    private findNearestActiveThumb(clientX: number): 'left' | 'right' {\n        const fraction = this.getFractionFromEvents(clientX);\n        const deltaLeft = fraction * 100 - this.range.left;\n        const deltaRight = fraction * 100 - 100 + this.range.right;\n\n        return Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n            deltaRight > 0 ||\n            (this.range.left === 0 && this.range.right === 100)\n            ? 'right'\n            : 'left';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiFocusableModule, TuiRepeatTimesModule} from '@taiga-ui/cdk';\nimport {TuiFormatNumberPipeModule} from '@taiga-ui/core';\nimport {TuiSliderModule} from '@taiga-ui/kit/components/slider';\n\nimport {TuiNewRangeDirective, TuiRangeComponent} from './range.component';\nimport {TuiRangeChangeDirective} from './range-change.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiRepeatTimesModule,\n        TuiFocusableModule,\n        TuiFormatNumberPipeModule,\n        TuiSliderModule,\n        FormsModule,\n    ],\n    declarations: [TuiRangeComponent, TuiRangeChangeDirective, TuiNewRangeDirective],\n    exports: [TuiRangeComponent, TuiRangeChangeDirective, TuiNewRangeDirective],\n})\nexport class TuiRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}