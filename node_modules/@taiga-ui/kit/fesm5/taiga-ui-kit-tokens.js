import { InjectionToken } from '@angular/core';
import { COUNTRIES_MASKS } from '@taiga-ui/kit/constants';
import { extractI18n } from '@taiga-ui/i18n';
import { __assign } from 'tslib';
import { TUI_DEFAULT_STRINGIFY, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER } from '@taiga-ui/cdk';

var TUI_CALENDAR_DATA_STREAM = new InjectionToken("Stream that emits calendar data change");

var TUI_COUNTRIES_MASKS = new InjectionToken("Countries masks", {
    factory: function () { return COUNTRIES_MASKS; },
});

var TUI_DATE_VALUE_TRANSFORMER = new InjectionToken("Control value transformer of TuiDay to custom value format for InputDate* components");
var TUI_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken("Control value transformer for InputDateRange component");
var TUI_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken("Control value transformer for InputDateTime component");

var TUI_CANCEL_WORD = new InjectionToken("i18n 'cancel' word", {
    factory: extractI18n("cancel"),
});
var TUI_DONE_WORD = new InjectionToken("i18n 'done' word", {
    factory: extractI18n("done"),
});
var TUI_MORE_WORD = new InjectionToken("i18n 'more' word", {
    factory: extractI18n("more"),
});
var TUI_HIDE_TEXT = new InjectionToken("i18n 'hide' word", {
    factory: extractI18n("hide"),
});
var TUI_SHOW_ALL_TEXT = new InjectionToken("i18n 'show all' word", {
    factory: extractI18n("showAll"),
});
var TUI_OTHER_DATE_TEXT = new InjectionToken("i18n 'Other date' text", {
    factory: extractI18n("otherDate"),
});
var TUI_CHOOSE_DAY_OR_RANGE_TEXTS = new InjectionToken("choose day or range i18n texts", {
    factory: extractI18n("mobileCalendarTexts"),
});
var TUI_FROM_TO_TEXTS = new InjectionToken("from and to i18n texts", {
    factory: extractI18n("range"),
});
var TUI_PLUS_MINUS_TEXTS = new InjectionToken("plus and minus i18n texts", {
    factory: extractI18n("countTexts"),
});
var TUI_TIME_TEXTS = new InjectionToken("time i18n texts", {
    factory: extractI18n("time"),
});
var TUI_DATE_TEXTS = new InjectionToken("date format i18n texts", {
    factory: extractI18n("dateTexts"),
});
var TUI_DIGITAL_INFORMATION_UNITS = new InjectionToken("short bytes, kilobytes and megabytes i18n texts", {
    factory: extractI18n("digitalInformationUnits"),
});
var TUI_COPY_TEXTS = new InjectionToken("copy i18n texts", {
    factory: extractI18n("copyTexts"),
});
var TUI_PASSWORD_TEXTS = new InjectionToken("password i18n texts", {
    factory: extractI18n("passwordTexts"),
});
var TUI_CALENDAR_MONTHS = new InjectionToken("short calendar months i18n", {
    factory: extractI18n("shortCalendarMonths"),
});
var TUI_FILE_TEXTS = new InjectionToken("file i18n texts", {
    factory: extractI18n("fileTexts"),
});
var TUI_PAGINATION_TEXTS = new InjectionToken("pagination i18n texts", {
    factory: extractI18n("pagination"),
});
var TUI_INPUT_FILE_TEXTS = new InjectionToken("tui-input-file i18n texts", {
    factory: extractI18n("inputFileTexts"),
});
var TUI_COUNTRIES = new InjectionToken("Localized countries names", {
    factory: extractI18n("countries"),
});

var TUI_DEFAULT_ITEMS_HANDLERS = {
    stringify: TUI_DEFAULT_STRINGIFY,
    identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,
    disabledItemHandler: ALWAYS_FALSE_HANDLER,
};
var TUI_ITEMS_HANDLERS = new InjectionToken("Default items handlers for components", {
    factory: function () { return TUI_DEFAULT_ITEMS_HANDLERS; },
});
var tuiItemsHandlersProvider = function (options) { return ({
    provide: TUI_ITEMS_HANDLERS,
    useValue: __assign(__assign({}, TUI_DEFAULT_ITEMS_HANDLERS), options),
}); };

/** @deprecated use {@link TuiMobileTabsDirective} from @taiga-ui/addon-mobile */
var TUI_MOBILE_AWARE = new InjectionToken("A flag enabling mobile-specific behavior for supporting components", {
    factory: function () { return false; },
});

var TUI_MOBILE_CALENDAR = new InjectionToken("A component for mobile data picker");

var TUI_MONTH_FORMATTER = new InjectionToken("A function to get localized formatted month");

var TUI_TAB_MARGIN = new InjectionToken("Margin between tabs", {
    factory: function () { return 24; },
});

// TODO: 3.0 use TUI_TAG_OPTIONS instead of it
var TUI_TAG_STATUS = new InjectionToken("Status for tags inside InputTag component", {
    factory: function () { return "primary" /* Primary */; },
});

var TUI_VALIDATION_ERRORS = new InjectionToken("Validation errors", {
    factory: function () { return ({}); },
});

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_CALENDAR_DATA_STREAM, TUI_CALENDAR_MONTHS, TUI_CANCEL_WORD, TUI_CHOOSE_DAY_OR_RANGE_TEXTS, TUI_COPY_TEXTS, TUI_COUNTRIES, TUI_COUNTRIES_MASKS, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_DATE_TEXTS, TUI_DATE_TIME_VALUE_TRANSFORMER, TUI_DATE_VALUE_TRANSFORMER, TUI_DEFAULT_ITEMS_HANDLERS, TUI_DIGITAL_INFORMATION_UNITS, TUI_DONE_WORD, TUI_FILE_TEXTS, TUI_FROM_TO_TEXTS, TUI_HIDE_TEXT, TUI_INPUT_FILE_TEXTS, TUI_ITEMS_HANDLERS, TUI_MOBILE_AWARE, TUI_MOBILE_CALENDAR, TUI_MONTH_FORMATTER, TUI_MORE_WORD, TUI_OTHER_DATE_TEXT, TUI_PAGINATION_TEXTS, TUI_PASSWORD_TEXTS, TUI_PLUS_MINUS_TEXTS, TUI_SHOW_ALL_TEXT, TUI_TAB_MARGIN, TUI_TAG_STATUS, TUI_TIME_TEXTS, TUI_VALIDATION_ERRORS, tuiItemsHandlersProvider };
//# sourceMappingURL=taiga-ui-kit-tokens.js.map
