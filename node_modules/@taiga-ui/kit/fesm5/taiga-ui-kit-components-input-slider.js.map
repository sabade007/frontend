{"version":3,"file":"taiga-ui-kit-components-input-slider.js","sources":["ng://@taiga-ui/kit/components/input-slider/input-slider.component.ts","ng://@taiga-ui/kit/components/input-slider/input-slider.module.ts","ng://@taiga-ui/kit/components/input-slider/taiga-ui-kit-components-input-slider.ts"],"sourcesContent":["import {I18nPluralPipe} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    clamp,\n    isNativeFocused,\n    round,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiAssert,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n} from '@taiga-ui/cdk';\nimport {\n    getFractionPartPadded,\n    HINT_CONTROLLER_PROVIDER,\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n    TuiDecimalT,\n    TuiSizeL,\n    TuiTextfieldController,\n} from '@taiga-ui/core';\nimport {AbstractTuiInputSlider} from '@taiga-ui/kit/abstract';\nimport {TuiInputNumberComponent} from '@taiga-ui/kit/components/input-number';\nimport {\n    TuiSliderComponent,\n    tuiSliderOptionsProvider,\n} from '@taiga-ui/kit/components/slider';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TUI_FROM_TO_TEXTS} from '@taiga-ui/kit/tokens';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\n/**\n * Turn on new `InputSlider`'s version.\n * The new version will behave almost the same as `InputSlider` from the next major release.\n * @deprecated TODO remove me in v3.0 and make `InputSlider` always \"new\".\n */\n@Directive({\n    selector: 'tui-input-slider[new]',\n})\nexport class TuiNewInputSliderDirective {}\n\n// @dynamic\n@Component({\n    selector: 'tui-input-slider',\n    templateUrl: './input-slider.template.html',\n    styleUrls: ['./input-slider.style.less'],\n    host: {\n        /**\n         * TODO delete it in v3.0\n         * Dont forget to clear html-tags\n         */\n        '[class._show-ticks-labels]': '!isNew',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        I18nPluralPipe,\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputSliderComponent),\n        },\n        tuiSliderOptionsProvider({trackColor: 'transparent'}),\n        HINT_CONTROLLER_PROVIDER,\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ],\n})\n/**\n * TODO replace `extends AbstractTuiInputSlider<number>` by `extends AbstractTuiControl<number> implements TuiWithOptionalMinMax<number>`\n * in v3.0\n */\nexport class TuiInputSliderComponent\n    extends AbstractTuiInputSlider<number>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiInputNumberComponent)\n    private readonly inputNumberRef?: TuiInputNumberComponent;\n\n    @ViewChild(TuiSliderComponent, {read: ElementRef})\n    private readonly sliderRef?: ElementRef<HTMLInputElement>;\n\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp(quantumAssertion, 'Quantum must be positive')\n    quantum = 1;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    valueContent: PolymorpheusContent<TuiContextWithImplicit<number>> = '';\n\n    @Input()\n    @tuiDefaultProp()\n    prefix = '';\n\n    @Input()\n    @tuiDefaultProp()\n    postfix = '';\n\n    /**\n     * @deprecated use `tuiTextfieldCustomContent` instead\n     * TODO delete in v3.0\n     */\n    @Input()\n    @tuiDefaultProp()\n    secondary = '';\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)\n        readonly controller: TuiTextfieldController,\n        @Inject(TUI_FROM_TO_TEXTS) readonly fromToTexts$: Observable<[string, string]>,\n        @Optional()\n        @Inject(TuiNewInputSliderDirective)\n        readonly isNew: TuiNewInputSliderDirective | null,\n        @Inject(I18nPluralPipe) readonly i18nPlural: I18nPluralPipe,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return !this.inputNumberRef?.nativeFocusableElement || this.computedDisabled\n            ? null\n            : this.inputNumberRef.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return (\n            isNativeFocused(this.nativeFocusableElement) ||\n            isNativeFocused(this.sliderRef?.nativeElement || null)\n        );\n    }\n\n    get computedSteps(): number {\n        return this.steps || (this.max - this.min) / this.quantum;\n    }\n\n    get precision(): number {\n        return getFractionPartPadded(this.quantum).length;\n    }\n\n    get decimal(): TuiDecimalT {\n        return this.precision ? 'not-zero' : 'never';\n    }\n\n    get showValueContent(): boolean {\n        return Boolean(this.computedValueContent && !this.focused);\n    }\n\n    /**\n     * TODO remove old property `size` in v3.0\n     */\n    get computedSize(): TuiSizeL {\n        if (this.isNew) {\n            tuiAssert.assert(\n                this.controller.size !== 's',\n                // eslint-disable-next-line @typescript-eslint/quotes\n                \"Size 's' is not supported by this input.\",\n            );\n\n            return this.controller.size === 'l' ? 'l' : 'm';\n        }\n\n        return this.size;\n    }\n\n    /**\n     * @deprecated for backward compatibility\n     * TODO replace by just `this.valueContent` in v3.0\n     */\n    get computedValueContent(): PolymorpheusContent<TuiContextWithImplicit<number>> {\n        return this.minLabel || this.maxLabel\n            ? legacyMinMaxLabel(this)\n            : this.valueContent;\n    }\n\n    focusTextInput(): void {\n        const focusableElement = this.inputNumberRef?.nativeFocusableElement;\n\n        if (focusableElement) {\n            setNativeFocused(focusableElement);\n        }\n    }\n\n    safelyUpdateValue(value: number | null): void {\n        this.updateValue(this.valueGuard(value ?? this.safeCurrentValue));\n    }\n\n    onVerticalArrowKeyDown(coefficient: number): void {\n        if (this.readOnly || !this.step) {\n            return;\n        }\n\n        const value = this.value + coefficient * this.step;\n\n        if (value !== this.value) {\n            this.safelyUpdateValue(value);\n        }\n\n        this.updateTextInputValue(this.valueGuard(value));\n    }\n\n    onSliderChange(newValue: number): void {\n        this.safelyUpdateValue(newValue);\n        this.updateTextInputValue(this.value);\n    }\n\n    onFocused(focused: boolean): void {\n        const {value, textInputValue, safeCurrentValue, inputNumberRef} = this;\n\n        if (!focused && textInputValue !== inputNumberRef?.getFormattedValue(value)) {\n            this.updateTextInputValue(value ?? safeCurrentValue);\n        }\n\n        this.updateFocused(focused);\n    }\n\n    onPressed(pressed: boolean): void {\n        this.updatePressed(pressed);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    private get textInputValue(): string {\n        return this.inputNumberRef?.nativeValue || '';\n    }\n\n    protected getFallbackValue(): number {\n        return 0;\n    }\n\n    protected valueGuard(value: number): number {\n        const roundedValue = round(\n            Math.round(value / this.quantum) * this.quantum,\n            TUI_FLOATING_PRECISION,\n        );\n\n        return clamp(roundedValue, this.min, this.max);\n    }\n\n    private updateTextInputValue(value: number): void {\n        if (this.inputNumberRef) {\n            this.inputNumberRef.nativeValue =\n                this.inputNumberRef.getFormattedValue(value);\n        }\n    }\n}\n\nfunction quantumAssertion(quantum: number): boolean {\n    return quantum > 0;\n}\n\n/**\n * @deprecated helper for backward compatibility.\n * TODO remove in v3.0\n */\nfunction legacyMinMaxLabel({\n    min,\n    max,\n    minLabel,\n    maxLabel,\n    i18nPlural,\n    pluralizeMap,\n}: TuiInputSliderComponent): (\n    context: TuiContextWithImplicit<number>,\n) => number | string {\n    return ({$implicit: value}: TuiContextWithImplicit<number>) => {\n        const valueWithPlural = `${value} ${\n            pluralizeMap ? i18nPlural.transform(value, pluralizeMap) : ''\n        }`;\n\n        switch (value) {\n            case min:\n                return minLabel || valueWithPlural;\n            case max:\n                return maxLabel || valueWithPlural;\n            default:\n                return valueWithPlural;\n        }\n    };\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TuiFocusableModule, TuiRepeatTimesModule} from '@taiga-ui/cdk';\nimport {TuiFormatNumberPipeModule, TuiTextfieldControllerModule} from '@taiga-ui/core';\nimport {TuiInputNumberModule} from '@taiga-ui/kit/components/input-number';\nimport {TuiSliderModule} from '@taiga-ui/kit/components/slider';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {\n    TuiInputSliderComponent,\n    TuiNewInputSliderDirective,\n} from './input-slider.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TuiFocusableModule,\n        TuiSliderModule,\n        TuiFormatNumberPipeModule,\n        TuiRepeatTimesModule,\n        PolymorpheusModule,\n        TuiInputNumberModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputSliderComponent, TuiNewInputSliderDirective],\n    exports: [TuiInputSliderComponent, TuiNewInputSliderDirective],\n})\nexport class TuiInputSliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}