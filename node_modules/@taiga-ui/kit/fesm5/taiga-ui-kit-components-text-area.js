import { __extends, __decorate, __param } from 'tslib';
import { forwardRef, Optional, Self, Inject, ChangeDetectorRef, ViewChild, ContentChild, ElementRef, Input, HostBinding, HostListener, Component, ChangeDetectionStrategy, Directive, NgModule } from '@angular/core';
import { NgControl, FormsModule } from '@angular/forms';
import { TUI_FOCUSABLE_ITEM_ACCESSOR, AbstractTuiControl, isNativeFocused, setNativeFocused, TUI_IS_IOS, tuiDefaultProp, TuiFocusableModule, TuiHoveredModule } from '@taiga-ui/cdk';
import { TEXTFIELD_CONTROLLER_PROVIDER, HINT_CONTROLLER_PROVIDER, MODE_PROVIDER, getBorder, TUI_TEXTFIELD_APPEARANCE, TUI_MODE, TuiTextfieldController, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiHintControllerDirective, TUI_HINT_WATCHED_CONTROLLER, TuiTextfieldComponent, TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost, TuiScrollbarModule, TuiTooltipModule, TuiWrapperModule, TuiDescribedByModule, TuiSvgModule, TuiPrimitiveTextfieldModule } from '@taiga-ui/core';
import { Observable } from 'rxjs';
import { CommonModule } from '@angular/common';

var TUI_TEXT_AREA_PROVIDERS = [
    {
        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
        useExisting: forwardRef(function () { return TuiTextAreaComponent; }),
    },
    {
        provide: AbstractTuiControl,
        useExisting: forwardRef(function () { return TuiTextAreaComponent; }),
    },
    TEXTFIELD_CONTROLLER_PROVIDER,
    HINT_CONTROLLER_PROVIDER,
    MODE_PROVIDER,
];

var DEFAULT_ROWS = 20;
var LINE_HEIGHT_M = 20;
var LINE_HEIGHT_L = 24;
var TuiTextAreaComponent = /** @class */ (function (_super) {
    __extends(TuiTextAreaComponent, _super);
    function TuiTextAreaComponent(control, changeDetectorRef, appearance, isIOS, mode$, controller, hintController) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.appearance = appearance;
        _this.isIOS = isIOS;
        _this.mode$ = mode$;
        _this.controller = controller;
        _this.hintController = hintController;
        _this.rows = DEFAULT_ROWS;
        _this.expandable = false;
        return _this;
    }
    Object.defineProperty(TuiTextAreaComponent.prototype, "labelOutside", {
        get: function () {
            return this.controller.labelOutside;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "nativeFocusableElement", {
        get: function () {
            var _a, _b;
            if (this.computedDisabled) {
                return null;
            }
            return (((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeElement) || ((_b = this.focusableElement) === null || _b === void 0 ? void 0 : _b.nativeElement) || null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "focused", {
        get: function () {
            return isNativeFocused(this.nativeFocusableElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "size", {
        get: function () {
            return this.controller.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "border", {
        get: function () {
            return getBorder(false, this.hasCleaner, this.hasTooltip);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasCleaner", {
        get: function () {
            return this.controller.cleaner && this.hasValue && this.interactive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasTooltip", {
        get: function () {
            return !!this.hintController.content && !this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasValue", {
        get: function () {
            return this.value !== '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasCounter", {
        get: function () {
            return !!this.controller.maxLength && this.interactive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasPlaceholder", {
        get: function () {
            return !this.controller.labelOutside || (!this.hasValue && !this.hasExampleText);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "hasExampleText", {
        get: function () {
            var _a;
            var text = this.controller.exampleText || ((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeElement.placeholder);
            return !!text && this.focused && !this.hasValue && !this.readOnly;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "computeMaxHeight", {
        get: function () {
            return this.expandable ? this.rows * this.lineHeight : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "placeholderRaised", {
        get: function () {
            return (!this.controller.labelOutside &&
                ((this.computedFocused && !this.readOnly) || this.hasValue));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "fittedContent", {
        get: function () {
            return this.value.slice(0, this.controller.maxLength || Infinity);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiTextAreaComponent.prototype, "extraContent", {
        get: function () {
            return this.value.slice(this.controller.maxLength || Infinity);
        },
        enumerable: true,
        configurable: true
    });
    TuiTextAreaComponent.prototype.onFocused = function (focused) {
        this.updateFocused(focused);
    };
    TuiTextAreaComponent.prototype.onHovered = function (hovered) {
        this.updateHovered(hovered);
    };
    TuiTextAreaComponent.prototype.onPressed = function (pressed) {
        this.updatePressed(pressed);
    };
    TuiTextAreaComponent.prototype.onValueChange = function (value) {
        this.updateValue(value);
    };
    TuiTextAreaComponent.prototype.onMouseDown = function (event) {
        if (event.target === this.nativeFocusableElement) {
            return;
        }
        event.preventDefault();
        if (this.nativeFocusableElement) {
            setNativeFocused(this.nativeFocusableElement);
        }
    };
    TuiTextAreaComponent.prototype.getFallbackValue = function () {
        return '';
    };
    Object.defineProperty(TuiTextAreaComponent.prototype, "lineHeight", {
        get: function () {
            return this.controller.size === 'm' ? LINE_HEIGHT_M : LINE_HEIGHT_L;
        },
        enumerable: true,
        configurable: true
    });
    TuiTextAreaComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: String, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_APPEARANCE,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_IOS,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
        { type: TuiTextfieldController, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_WATCHED_CONTROLLER,] }] },
        { type: TuiHintControllerDirective, decorators: [{ type: Inject, args: [TUI_HINT_WATCHED_CONTROLLER,] }] }
    ]; };
    __decorate([
        ViewChild('focusableElement')
    ], TuiTextAreaComponent.prototype, "focusableElement", void 0);
    __decorate([
        ContentChild(TuiTextfieldComponent, { read: ElementRef })
    ], TuiTextAreaComponent.prototype, "textfield", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTextAreaComponent.prototype, "rows", void 0);
    __decorate([
        Input(),
        HostBinding('class._expandable'),
        tuiDefaultProp()
    ], TuiTextAreaComponent.prototype, "expandable", void 0);
    __decorate([
        HostBinding('class._label-outside')
    ], TuiTextAreaComponent.prototype, "labelOutside", null);
    __decorate([
        HostBinding('attr.data-size')
    ], TuiTextAreaComponent.prototype, "size", null);
    __decorate([
        HostBinding('style.--border-end.rem')
    ], TuiTextAreaComponent.prototype, "border", null);
    __decorate([
        HostBinding('class._has-tooltip')
    ], TuiTextAreaComponent.prototype, "hasTooltip", null);
    __decorate([
        HostBinding('class._has-value')
    ], TuiTextAreaComponent.prototype, "hasValue", null);
    __decorate([
        HostBinding('class._has-counter')
    ], TuiTextAreaComponent.prototype, "hasCounter", null);
    __decorate([
        HostListener('focusin', ['true']),
        HostListener('focusout', ['false'])
    ], TuiTextAreaComponent.prototype, "onFocused", null);
    TuiTextAreaComponent = __decorate([
        Component({
            selector: 'tui-text-area',
            template: "<tui-wrapper\n    automation-id=\"tui-text-area__wrapper\"\n    class=\"t-outline\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [readOnly]=\"readOnly\"\n    [invalid]=\"computedInvalid\"\n>\n    <div\n        *ngIf=\"hasCounter\"\n        automation-id=\"tui-text-area__counter\"\n        class=\"t-counter\"\n    >\n        {{ value.length }}/{{ controller.maxLength }}\n    </div>\n\n    <label\n        class=\"t-content\"\n        (tuiHoveredChange)=\"onHovered($event)\"\n        (mousedown)=\"onMouseDown($event)\"\n    >\n        <div class=\"t-wrapper\">\n            <div\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-text-area__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <tui-scrollbar\n                automation-id=\"tui-text-area__scrollbar\"\n                class=\"t-box\"\n                [style.maxHeight.px]=\"computeMaxHeight\"\n            >\n                <div class=\"t-input-wrapper\">\n                    <div class=\"t-relative\">\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"t-pseudo-content\"\n                        >\n                            <span [textContent]=\"fittedContent || controller.exampleText\"></span>\n                            <span\n                                class=\"t-pseudo-content__extra\"\n                                [textContent]=\"extraContent\"\n                            ></span>\n                            &nbsp;\n                        </div>\n                        <textarea\n                            #focusableElement\n                            automation-id=\"tui-text-area__native\"\n                            class=\"t-input\"\n                            [placeholder]=\"controller.exampleText\"\n                            [id]=\"id\"\n                            [tuiDescribedBy]=\"id\"\n                            [tuiFocusable]=\"computedFocusable\"\n                            [disabled]=\"computedDisabled\"\n                            [ngModel]=\"value\"\n                            [readOnly]=\"readOnly\"\n                            (ngModelChange)=\"onValueChange($event)\"\n                        ></textarea>\n                        <ng-content select=\"textarea\"></ng-content>\n                    </div>\n                </div>\n            </tui-scrollbar>\n        </div>\n        <div class=\"t-icons\">\n            <tui-svg\n                *ngIf=\"hasCleaner\"\n                src=\"tuiIconCloseLarge\"\n                class=\"t-cleaner\"\n                (click.stop)=\"onValueChange('')\"\n            ></tui-svg>\n            <tui-tooltip\n                *ngIf=\"hasTooltip\"\n                automation-id=\"tui-text-area__tooltip\"\n                class=\"t-tooltip\"\n                [describeId]=\"id\"\n                [direction]=\"hintController.direction\"\n                [mode]=\"hintController.mode\"\n                [content]=\"hintController.content || ''\"\n                [showDelay]=\"hintController.showDelay\"\n                [hideDelay]=\"hintController.hideDelay\"\n            ></tui-tooltip>\n        </div>\n    </label>\n</tui-wrapper>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: TUI_TEXT_AREA_PROVIDERS,
            host: {
                '($.data-mode.attr)': 'mode$',
                '[class._ios]': 'isIOS',
            },
            styles: [":host{position:relative;z-index:0;display:flex;font:var(--tui-font-text-m);flex-direction:column;min-height:6.75rem;border-radius:var(--tui-radius-m);color:var(--tui-text-01)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-size='m']{font:var(--tui-font-text-s);min-height:5.5rem}:host[data-size='m']._has-counter{min-height:6.625rem}:host[data-size='l']._has-counter{min-height:7.875rem}.t-outline{min-height:inherit}.t-content{display:block;margin-top:0;margin-bottom:0;min-height:inherit;box-sizing:border-box;overflow:hidden;cursor:text}:host._disabled .t-content{cursor:auto;opacity:var(--tui-disabled-opacity)}:host:not(._expandable) .t-content{position:absolute;top:0;left:0;bottom:1px;right:0;min-height:auto}:host._has-counter:not(._expandable) .t-content{bottom:1.6875rem}.t-wrapper{position:relative;width:100%;height:100%;min-height:inherit;padding-bottom:.4375rem;box-sizing:border-box}:host[data-size='m']._label-outside .t-wrapper{padding-top:.75rem}:host[data-size='l']._label-outside .t-wrapper{padding-top:1rem}:host[data-size='m']:not(._label-outside) .t-wrapper{padding-top:1.375rem}:host[data-size='l']:not(._label-outside) .t-wrapper{padding-top:1.625rem}:host-context(table)[data-size='m']._label-outside .t-wrapper{padding-bottom:.75rem}:host-context(table)[data-size='l']._label-outside .t-wrapper{padding-bottom:1rem}.t-input-wrapper{min-height:inherit;width:100%;flex:1}.t-relative{position:relative;min-height:inherit}.t-box{display:flex;min-height:100%;width:100%}:host:not(._expandable) .t-box{height:100%}:host._has-counter._expandable .t-box{margin-bottom:1.25rem}.t-pseudo-content{white-space:pre-wrap;word-wrap:break-word;pointer-events:none;color:transparent;overflow:hidden;border:solid transparent;border-width:0 var(--border-end,0) 0 var(--border-start,0);border-inline-start-width:var(--border-start,0);border-inline-end-width:var(--border-end,0)}:host[data-size='m'] .t-pseudo-content{padding:0 .75rem}:host[data-size='l'] .t-pseudo-content{padding:0 1rem}.t-pseudo-content__extra{background-color:var(--tui-error-bg-night)}.t-input{padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;box-sizing:border-box;resize:none;overflow:hidden;outline:0;border:solid transparent;border-width:0 var(--border-end,0) 0 var(--border-start,0);border-inline-start-width:var(--border-start,0);border-inline-end-width:var(--border-end,0)}.t-input:-webkit-autofill,.t-input:-webkit-autofill:focus,.t-input:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-input:not(:last-of-type){display:none}.t-input::-ms-input-placeholder{color:var(--tui-text-03);opacity:0}.t-input::placeholder{color:var(--tui-text-03);opacity:0}:host[data-mode=onDark] .t-input::-ms-input-placeholder{color:var(--tui-text-03-night)}:host[data-mode=onDark] .t-input::placeholder{color:var(--tui-text-03-night)}:host._focused .t-input:not(:read-only)::-ms-input-placeholder{opacity:1}:host._focused .t-input:not(:-moz-read-only)::placeholder{opacity:1}:host._focused .t-input:not(:read-only)::placeholder{opacity:1}:host[data-size='m'] .t-input{padding:0 .75rem}:host[data-size='l'] .t-input{padding:0 1rem}:host[data-mode=onDark]._disabled .t-input{color:var(--tui-text-03-night)}@supports (-webkit-marquee-repetition:infinite) and (object-fit:fill){:host._ios .t-input{padding-left:.8125rem}}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:var(--tui-text-02);pointer-events:none;will-change:transform;transform:translateY(0);position:absolute;left:0;max-width:100%;padding:0 1rem;border:solid transparent;border-width:0 var(--border-end,0) 0 var(--border-start,0);border-inline-start-width:var(--border-start,0);border-inline-end-width:var(--border-end,0);box-sizing:border-box}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size='m'] .t-placeholder_raised{font:var(--tui-font-text-xs);transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill)}:host[data-mode=onDark]._invalid:not(._focused) .t-placeholder_raised,:host[data-mode=onDark]._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .t-placeholder,:host[data-size='l']._focused._label-outside .t-placeholder,:host[data-size='m']._focused._label-outside .t-placeholder{color:var(--tui-text-03)}:host[data-size='l'] .t-placeholder{font-size:.9375rem}:host[data-size='l'] .t-placeholder_raised{font-size:.8156rem}:host[data-size='l']._focused:not(._label-outside) .t-placeholder,:host[data-size='m']._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01)}:host[data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}:host[data-size='l'][data-mode=onDark]._focused:not(._label-outside) .t-placeholder,:host[data-size='m'][data-mode=onDark]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01-night)}:host[data-mode=onDark]._focused .t-placeholder,:host[data-size='l'][data-mode=onDark]._focused._label-outside .t-placeholder,:host[data-size='m'][data-mode=onDark]._focused._label-outside .t-placeholder{color:var(--tui-text-02-night)}@supports (-webkit-hyphens:none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}:host[data-size='m'] .t-placeholder{top:.75rem;padding:0 .75rem}:host[data-size='l'] .t-placeholder{top:1rem}:host._label-outside .t-placeholder{overflow:initial;height:auto;white-space:initial}.t-icons{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;justify-content:flex-end;pointer-events:none;padding:1rem .75rem}:host[data-size='m'] .t-icons{padding:.75rem}.t-cleaner{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;cursor:pointer;transition-property:color,transform;pointer-events:auto}.t-cleaner:hover{color:var(--tui-text-02)}:host._disabled .t-cleaner,:host._readonly .t-cleaner{pointer-events:none}:host[data-mode=onDark] .t-cleaner{color:var(--tui-text-03-night)}:host[data-mode=onDark] .t-cleaner:hover{color:var(--tui-text-01-night)}.t-tooltip{pointer-events:auto}.t-counter{position:absolute;right:.75rem;bottom:.5rem;font:var(--tui-font-text-s);pointer-events:none;margin-top:auto;text-align:right;color:var(--tui-text-03)}:host[data-mode=onDark] .t-counter{color:var(--tui-text-03-night)}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(TUI_TEXTFIELD_APPEARANCE)),
        __param(3, Inject(TUI_IS_IOS)),
        __param(4, Inject(TUI_MODE)),
        __param(5, Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)),
        __param(6, Inject(TUI_HINT_WATCHED_CONTROLLER))
    ], TuiTextAreaComponent);
    return TuiTextAreaComponent;
}(AbstractTuiControl));

var TuiTextAreaDirective = /** @class */ (function (_super) {
    __extends(TuiTextAreaDirective, _super);
    function TuiTextAreaDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuiTextAreaDirective_1 = TuiTextAreaDirective;
    TuiTextAreaDirective.prototype.onValueChange = function (value) {
        this.host.onValueChange(value);
    };
    var TuiTextAreaDirective_1;
    TuiTextAreaDirective = TuiTextAreaDirective_1 = __decorate([
        Directive({
            selector: 'tui-text-area',
            providers: [
                {
                    provide: TUI_TEXTFIELD_HOST,
                    useExisting: forwardRef(function () { return TuiTextAreaDirective_1; }),
                },
            ],
        })
    ], TuiTextAreaDirective);
    return TuiTextAreaDirective;
}(TuiAbstractTextfieldHost));

var TuiTextAreaModule = /** @class */ (function () {
    function TuiTextAreaModule() {
    }
    TuiTextAreaModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                TuiFocusableModule,
                TuiHoveredModule,
                TuiScrollbarModule,
                TuiTooltipModule,
                TuiWrapperModule,
                TuiDescribedByModule,
                TuiSvgModule,
                TuiPrimitiveTextfieldModule,
            ],
            declarations: [TuiTextAreaComponent, TuiTextAreaDirective],
            exports: [TuiTextAreaComponent, TuiTextAreaDirective, TuiTextfieldComponent],
        })
    ], TuiTextAreaModule);
    return TuiTextAreaModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { DEFAULT_ROWS, LINE_HEIGHT_L, LINE_HEIGHT_M, TUI_TEXT_AREA_PROVIDERS, TuiTextAreaComponent, TuiTextAreaDirective, TuiTextAreaModule };
//# sourceMappingURL=taiga-ui-kit-components-text-area.js.map
