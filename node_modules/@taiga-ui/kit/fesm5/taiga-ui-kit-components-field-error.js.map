{"version":3,"file":"taiga-ui-kit-components-field-error.js","sources":["ng://@taiga-ui/kit/components/field-error/field-error.component.ts","ng://@taiga-ui/kit/components/field-error/field-error.module.ts","ng://@taiga-ui/kit/components/field-error/taiga-ui-kit-components-field-error.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Input,\n    Optional,\n    Self,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormArrayName,\n    FormGroupDirective,\n    FormGroupName,\n    NgControl,\n} from '@angular/forms';\nimport {tuiDefaultProp, tuiPure, TuiValidationError} from '@taiga-ui/cdk';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {EMPTY, isObservable, merge, Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nconst EMPTY_RECORD = {};\n// @dynamic\n@Component({\n    selector: 'tui-field-error',\n    // @bad TODO: find a way to get 'touched' state change\n    // https://github.com/angular/angular/issues/10887\n    changeDetection: ChangeDetectionStrategy.Default,\n    templateUrl: './field-error.template.html',\n    styleUrls: ['./field-error.style.less'],\n})\nexport class TuiFieldErrorComponent {\n    @Input()\n    @tuiDefaultProp()\n    order: readonly string[] = [];\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        private readonly ngControl: NgControl | null,\n        @Optional()\n        @Self()\n        @Inject(FormArrayName)\n        private readonly formArrayName: FormArrayName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupName)\n        private readonly formGroupName: FormGroupName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupDirective)\n        private readonly formGroup: FormGroupDirective | null,\n        @Inject(TUI_VALIDATION_ERRORS)\n        private readonly validationErrors: Record<\n            string,\n            Observable<PolymorpheusContent> | PolymorpheusContent\n        >,\n    ) {\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    @tuiPure\n    get change$(): Observable<unknown> {\n        return merge(\n            this.control?.valueChanges || EMPTY,\n            this.control?.statusChanges || EMPTY,\n        );\n    }\n\n    get computedError(): Observable<TuiValidationError | null> {\n        return (this.invalid && this.touched && this.error) || of(null);\n    }\n\n    registerOnChange(): void {}\n\n    registerOnTouched(): void {}\n\n    setDisabledState(): void {}\n\n    writeValue(): void {}\n\n    private get error(): Observable<TuiValidationError | null> {\n        const {errorId} = this;\n\n        if (!errorId) {\n            return of(null);\n        }\n\n        const firstError = this.controlErrors[errorId];\n        const errorContent = this.validationErrors[errorId];\n\n        return this.getError(firstError, errorContent);\n    }\n\n    private get invalid(): boolean {\n        return !!this.control && this.control.invalid;\n    }\n\n    private get touched(): boolean {\n        return !!this.control && this.control.touched;\n    }\n\n    private get control(): AbstractControl | null {\n        if (this.ngControl) {\n            return this.ngControl.control;\n        }\n\n        if (this.formArrayName) {\n            return this.formArrayName.control;\n        }\n\n        if (this.formGroupName) {\n            return this.formGroupName.control;\n        }\n\n        if (this.formGroup) {\n            return this.formGroup.control;\n        }\n\n        return null;\n    }\n\n    private get errorId(): string {\n        return this.getErrorId(this.order, this.controlErrors);\n    }\n\n    private get controlErrors(): Record<string, unknown> {\n        return this.control?.errors || EMPTY_RECORD;\n    }\n\n    @tuiPure\n    private getErrorId(\n        order: readonly string[],\n        controlErrors: Record<string, unknown>,\n    ): string {\n        const id = order?.find(errorId => controlErrors[errorId]);\n        const fallback = Object.keys(controlErrors)[0];\n\n        return id || fallback || '';\n    }\n\n    @tuiPure\n    private getError(\n        firstError: any,\n        errorContent?: Observable<PolymorpheusContent> | PolymorpheusContent,\n    ): Observable<TuiValidationError> {\n        if (firstError instanceof TuiValidationError) {\n            return of(firstError);\n        }\n\n        if (errorContent === undefined && typeof firstError === 'string') {\n            return of(new TuiValidationError(firstError));\n        }\n\n        if (isObservable(errorContent)) {\n            return errorContent.pipe(\n                map(error => new TuiValidationError(error || '', firstError)),\n            );\n        }\n\n        return of(new TuiValidationError(errorContent || '', firstError));\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TuiErrorModule} from '@taiga-ui/core';\n\nimport {TuiFieldErrorComponent} from './field-error.component';\n\n/**\n * @deprecated use {@link TuiFieldErrorPipeModule} (from '@taiga-ui/kit') instead\n */\n@NgModule({\n    imports: [CommonModule, TuiErrorModule, ReactiveFormsModule],\n    declarations: [TuiFieldErrorComponent],\n    exports: [TuiFieldErrorComponent],\n})\nexport class TuiFieldErrorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}