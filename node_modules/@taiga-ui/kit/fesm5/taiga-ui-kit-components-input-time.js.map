{"version":3,"file":"taiga-ui-kit-components-input-time.js","sources":["ng://@taiga-ui/kit/components/input-time/input-time-options.ts","ng://@taiga-ui/kit/components/input-time/input-time.component.ts","ng://@taiga-ui/kit/components/input-time/input-time.module.ts","ng://@taiga-ui/kit/components/input-time/taiga-ui-kit-components-input-time.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit, TuiTimeMode} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {MAX_TIME_VALUES} from '@taiga-ui/kit/constants';\nimport {TuiTimeFormatParts} from '@taiga-ui/kit/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputTimeOptions {\n    readonly icon: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n    readonly mode: TuiTimeMode;\n    readonly postfix: string;\n    readonly maxValues: Record<TuiTimeFormatParts, number>;\n    readonly itemSize: TuiSizeL | TuiSizeS;\n}\n\n/**\n * @deprecated: use TuiInputTimeOptions instead\n * todo: remove in 3.0\n */\nexport type InputTimeOptions = TuiInputTimeOptions;\n\n// TODO: 3.0 remove in ivy compilation\nexport const INPUT_TIME_ICON = ({\n    $implicit,\n}: TuiContextWithImplicit<TuiSizeL | TuiSizeS>): string =>\n    $implicit === `s` ? `tuiIconTime` : `tuiIconTimeLarge`;\n\nexport const TUI_INPUT_TIME_DEFAULT_OPTIONS: TuiInputTimeOptions = {\n    icon: INPUT_TIME_ICON,\n    mode: `HH:MM`,\n    postfix: ``,\n    maxValues: MAX_TIME_VALUES,\n    itemSize: `m`,\n};\n\nexport const TUI_INPUT_TIME_OPTIONS = new InjectionToken<TuiInputTimeOptions>(\n    `Default parameters for input time component`,\n    {\n        factory: () => TUI_INPUT_TIME_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputTimeOptionsProvider: (\n    options: Partial<TuiInputTimeOptions>,\n) => ValueProvider = (options: Partial<TuiInputTimeOptions>) => ({\n    provide: TUI_INPUT_TIME_OPTIONS,\n    useValue: {...TUI_INPUT_TIME_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    isNativeFocused,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TUI_STRICT_MATCHER,\n    TuiBooleanHandler,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    tuiPure,\n    TuiTime,\n    TuiTimeLike,\n    TuiTimeMode,\n} from '@taiga-ui/cdk';\nimport {TuiPrimitiveTextfieldComponent, TuiTextMaskOptions} from '@taiga-ui/core';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {TUI_TIME_TEXTS} from '@taiga-ui/kit/tokens';\nimport {\n    tuiCreateAutoCorrectedTimePipe,\n    tuiCreateTimeMask,\n} from '@taiga-ui/kit/utils/mask';\nimport {TextMaskConfig} from 'angular2-text-mask';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {TUI_INPUT_TIME_OPTIONS, TuiInputTimeOptions} from './input-time-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-time',\n    templateUrl: './input-time.template.html',\n    styleUrls: ['./input-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputTimeComponent),\n        },\n        FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n    ],\n})\nexport class TuiInputTimeComponent\n    extends AbstractTuiNullableControl<TuiTime>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiTime> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    items: readonly TuiTime[] = [];\n\n    @Input()\n    @tuiDefaultProp()\n    itemSize: TuiInputTimeOptions['itemSize'] = this.options.itemSize;\n\n    @Input()\n    @tuiDefaultProp()\n    strict = false;\n\n    @Input()\n    @tuiDefaultProp()\n    mode: TuiInputTimeOptions['mode'] = this.options.mode;\n\n    @Input()\n    @tuiDefaultProp()\n    postfix: TuiInputTimeOptions['postfix'] = this.options.postfix;\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TIME_TEXTS)\n        private readonly timeTexts$: Observable<Record<TuiTimeMode, string>>,\n        @Inject(TUI_INPUT_TIME_OPTIONS)\n        private readonly options: TuiInputTimeOptions,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    get filtered(): readonly TuiTime[] {\n        return this.filter(this.items, this.mode, this.computedSearch);\n    }\n\n    get textMaskOptions(): TextMaskConfig {\n        return this.calculateMask(this.mode) as unknown as TextMaskConfig;\n    }\n\n    get computedValue(): string {\n        return this.value ? this.value.toString(this.mode) : this.nativeValue;\n    }\n\n    get computedSearch(): string {\n        return this.computedValue.length !== this.mode.length ? this.computedValue : '';\n    }\n\n    get innerPseudoFocused(): boolean | null {\n        if (this.pseudoFocused === false) {\n            return false;\n        }\n\n        if (this.open || this.computedFocused) {\n            return true;\n        }\n\n        return null;\n    }\n\n    get icon(): TuiInputTimeOptions['icon'] {\n        return this.options.icon;\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    @tuiPure\n    getFiller$(mode: TuiTimeMode): Observable<string> {\n        return this.timeTexts$.pipe(map(texts => texts[mode]));\n    }\n\n    @HostListener('click')\n    onClick(): void {\n        this.open = !this.open;\n    }\n\n    onValueChange(value: string): void {\n        this.open = !!this.items.length;\n\n        if (this.control) {\n            this.control.updateValueAndValidity({emitEvent: false});\n        }\n\n        const match = this.getMatch(value);\n\n        if (match !== undefined) {\n            this.updateValue(match);\n\n            return;\n        }\n\n        if (value.length !== this.mode.length) {\n            this.updateValue(null);\n\n            return;\n        }\n\n        const time = TuiTime.fromString(value);\n\n        this.updateValue(this.strict ? this.findNearestTimeFromItems(time) : time);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (\n            focused ||\n            this.value !== null ||\n            this.nativeValue === '' ||\n            this.mode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(this.nativeValue);\n\n        this.updateValue(parsedTime);\n\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onArrowUp(event: Event): void {\n        if (this.items.length) {\n            return;\n        }\n\n        this.processArrow(event, 1);\n    }\n\n    onArrowDown(event: Event): void {\n        if (this.items.length) {\n            return;\n        }\n\n        this.processArrow(event, -1);\n    }\n\n    onMenuClick(item: TuiTime): void {\n        this.focusInput();\n        this.updateValue(item);\n    }\n\n    onOpen(open: boolean): void {\n        this.open = open;\n    }\n\n    writeValue(value: TuiTime | null): void {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n\n    @tuiPure\n    private calculateMask(mode: TuiTimeMode): TuiTextMaskOptions {\n        return {\n            mask: tuiCreateTimeMask(mode, this.options.maxValues),\n            pipe: tuiCreateAutoCorrectedTimePipe(mode, this.options.maxValues),\n            guide: false,\n        };\n    }\n\n    @tuiPure\n    private filter(\n        items: readonly TuiTime[],\n        mode: TuiTimeMode,\n        search: string,\n    ): readonly TuiTime[] {\n        return items.filter(item => item.toString(mode).includes(search));\n    }\n\n    private findNearestTimeFromItems(value: TuiTime): TuiTime | null {\n        return this.items.reduce((previous, current) =>\n            Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n            Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n                ? current\n                : previous,\n        );\n    }\n\n    private getMatch(value: string): TuiTime | undefined {\n        return this.items.find(item => TUI_STRICT_MATCHER(item, value));\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n\n    private processArrow(event: Event, shift: -1 | 1): void {\n        const {target} = event;\n\n        // TODO: iframe warning\n        if (this.readOnly || !(target instanceof HTMLInputElement)) {\n            return;\n        }\n\n        const selectionStart = target.selectionStart || 0;\n\n        this.shiftTime(this.calculateShift(selectionStart, shift));\n\n        target.setSelectionRange(selectionStart, selectionStart);\n        event.preventDefault();\n    }\n\n    private calculateShift(selectionStart: number, shift: number): TuiTimeLike {\n        if (selectionStart <= 2) {\n            return {hours: shift};\n        }\n\n        if (selectionStart <= 5) {\n            return {minutes: shift};\n        }\n\n        if (selectionStart <= 8) {\n            return {seconds: shift};\n        }\n\n        return {ms: shift};\n    }\n\n    private shiftTime(shift: TuiTimeLike): void {\n        if (this.value === null) {\n            return;\n        }\n\n        const increasedTime: TuiTime = this.value.shift(shift);\n\n        // Manual update so we can set caret position properly\n        this.nativeValue = increasedTime.toString(this.mode);\n        this.updateValue(increasedTime);\n    }\n\n    private focusInput(preventScroll: boolean = false): void {\n        if (this.nativeFocusableElement) {\n            setNativeFocused(this.nativeFocusableElement, true, preventScroll);\n            this.close();\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiDataListModule,\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputTimeComponent} from './input-time.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        TuiDataListModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputTimeComponent],\n    exports: [TuiInputTimeComponent],\n})\nexport class TuiInputTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAqBA;IACa,eAAe,GAAG,UAAC,EAEc;QAD1C,wBAAS;IAET,OAAA,SAAS,KAAK,GAAG,GAAG,aAAa,GAAG,kBAAkB;AAAtD,EAAuD;IAE9C,8BAA8B,GAAwB;IAC/D,IAAI,EAAE,eAAe;IACrB,IAAI,EAAE,OAAO;IACb,OAAO,EAAE,EAAE;IACX,SAAS,EAAE,eAAe;IAC1B,QAAQ,EAAE,GAAG;EACf;IAEW,sBAAsB,GAAG,IAAI,cAAc,CACpD,6CAA6C,EAC7C;IACI,OAAO,EAAE,cAAM,OAAA,8BAA8B,GAAA;CAChD,EACH;IAEW,2BAA2B,GAEnB,UAAC,OAAqC,IAAK,QAAC;IAC7D,OAAO,EAAE,sBAAsB;IAC/B,QAAQ,wBAAM,8BAA8B,GAAK,OAAO,CAAC;CAC5D;;ACND;;IAeY,yCAAmC;IAgC3C,+BAII,OAAyB,EACE,iBAAoC,EAE9C,UAAmD,EAEnD,OAA4B;QATjD,YAWI,kBAAM,OAAO,EAAE,iBAAiB,CAAC,SACpC;QALoB,gBAAU,GAAV,UAAU,CAAyC;QAEnD,aAAO,GAAP,OAAO,CAAqB;QAjCjD,yBAAmB,GAA+B,oBAAoB,CAAC;QAIvE,WAAK,GAAuB,EAAE,CAAC;QAI/B,cAAQ,GAAoC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAIlE,YAAM,GAAG,KAAK,CAAC;QAIf,UAAI,GAAgC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAItD,aAAO,GAAmC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAE/D,UAAI,GAAG,KAAK,CAAC;;KAcZ;8BA7CQ,qBAAqB;IA+C9B,sBAAI,yDAAsB;aAA1B;YACI,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;SACxE;;;OAAA;IAED,sBAAI,0CAAO;aAAX;YACI,OAAO,eAAe,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACvD;;;OAAA;IAED,sBAAI,2CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAClE;;;OAAA;IAED,sBAAI,kDAAe;aAAnB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAA8B,CAAC;SACrE;;;OAAA;IAED,sBAAI,gDAAa;aAAjB;YACI,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;SACzE;;;OAAA;IAED,sBAAI,iDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACnF;;;OAAA;IAED,sBAAI,qDAAkB;aAAtB;YACI,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE;gBAC9B,OAAO,KAAK,CAAC;aAChB;YAED,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;gBACnC,OAAO,IAAI,CAAC;aACf;YAED,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,uCAAI;aAAR;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SAC5B;;;OAAA;IAED,sBAAI,8CAAW;aAAf;YACI,OAAO,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;SAC/E;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBAC9B,OAAO;aACV;YAED,IAAI,CAAC,sBAAsB,CAAC,KAAK,GAAG,KAAK,CAAC;SAC7C;;;OARA;IAWD,0CAAU,GAAV,UAAW,IAAiB;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAC;KAC1D;IAGD,uCAAO,GAAP;QACI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC1B;IAED,6CAAa,GAAb,UAAc,KAAa;QACvB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEhC,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;SAC3D;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAExB,OAAO;SACV;QAED,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEvB,OAAO;SACV;QAED,IAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KAC9E;IAED,yCAAS,GAAT,UAAU,OAAgB;QAA1B,iBAqBC;QApBG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE5B,IACI,OAAO;YACP,IAAI,CAAC,KAAK,KAAK,IAAI;YACnB,IAAI,CAAC,WAAW,KAAK,EAAE;YACvB,IAAI,CAAC,IAAI,KAAK,OAAO,EACvB;YACE,OAAO;SACV;QAED,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAExD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAE7B,UAAU,CAAC;YACP,IAAI,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAClE,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACpD;SACJ,CAAC,CAAC;KACN;IAED,yCAAS,GAAT,UAAU,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,yCAAS,GAAT,UAAU,KAAY;QAClB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAC/B;IAED,2CAAW,GAAX,UAAY,KAAY;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;KAChC;IAED,2CAAW,GAAX,UAAY,IAAa;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,sCAAM,GAAN,UAAO,IAAa;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;IAED,0CAAU,GAAV,UAAW,KAAqB;QAC5B,iBAAM,UAAU,YAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACtD;IAGO,6CAAa,GAArB,UAAsB,IAAiB;QACnC,OAAO;YACH,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACrD,IAAI,EAAE,8BAA8B,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YAClE,KAAK,EAAE,KAAK;SACf,CAAC;KACL;IAGO,sCAAM,GAAd,UACI,KAAyB,EACzB,IAAiB,EACjB,MAAc;QAEd,OAAO,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC;KACrE;IAEO,wDAAwB,GAAhC,UAAiC,KAAc;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,OAAO;YACvC,OAAA,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAsB,EAAE,GAAG,KAAK,CAAC,sBAAsB,EAAE,CAAC;gBAC3E,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,GAAG,KAAK,CAAC,sBAAsB,EAAE,CAAC;kBACtE,OAAO;kBACP,QAAQ;SAAA,CACjB,CAAC;KACL;IAEO,wCAAQ,GAAhB,UAAiB,KAAa;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,GAAA,CAAC,CAAC;KACnE;IAEO,qCAAK,GAAb;QACI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;IAEO,4CAAY,GAApB,UAAqB,KAAY,EAAE,KAAa;QACrC,IAAA,qBAAM,CAAU;;QAGvB,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,MAAM,YAAY,gBAAgB,CAAC,EAAE;YACxD,OAAO;SACV;QAED,IAAM,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,CAAC,CAAC;QAElD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;QAE3D,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QACzD,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;IAEO,8CAAc,GAAtB,UAAuB,cAAsB,EAAE,KAAa;QACxD,IAAI,cAAc,IAAI,CAAC,EAAE;YACrB,OAAO,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC;SACzB;QAED,IAAI,cAAc,IAAI,CAAC,EAAE;YACrB,OAAO,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;SAC3B;QAED,IAAI,cAAc,IAAI,CAAC,EAAE;YACrB,OAAO,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;SAC3B;QAED,OAAO,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC;KACtB;IAEO,yCAAS,GAAjB,UAAkB,KAAkB;QAChC,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;YACrB,OAAO;SACV;QAED,IAAM,aAAa,GAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;QAGvD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KACnC;IAEO,0CAAU,GAAlB,UAAmB,aAA8B;QAA9B,8BAAA,EAAA,qBAA8B;QAC7C,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC7B,gBAAgB,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;gBA/OY,SAAS,uBAHjB,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,SAAS;gBAE6B,iBAAiB,uBAA9D,MAAM,SAAC,iBAAiB;gBAEI,UAAU,uBADtC,MAAM,SAAC,cAAc;gDAErB,MAAM,SAAC,sBAAsB;;IApClC;QADC,SAAS,CAAC,8BAA8B,CAAC;4DACkB;IAI5D;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;sEACsD;IAIvE;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;wDACc;IAI/B;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;2DACiD;IAIlE;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;yDACF;IAIf;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;uDACqC;IAItD;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;0DAC8C;IAuE/D;QADC,OAAO;2DAGP;IAGD;QADC,YAAY,CAAC,OAAO,CAAC;wDAGrB;IAsFD;QADC,OAAO;8DAOP;IAGD;QADC,OAAO;uDAOP;IAhNQ,qBAAqB;QAbjC,SAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,moDAAyC;YAEzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,2BAA2B;oBACpC,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,uBAAqB,GAAA,CAAC;iBACvD;gBACD,kCAAkC;aACrC;;SACJ,CAAC;QAmCO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;QAEjB,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;QACzB,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;QAEtB,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;OAzC1B,qBAAqB,CAqRjC;IAAD,4BAAC;CAAA,CApRW,0BAA0B;;;IC9BtC;KAAkC;IAArB,kBAAkB;QAb9B,QAAQ,CAAC;YACN,OAAO,EAAE;gBACL,YAAY;gBACZ,cAAc;gBACd,iBAAiB;gBACjB,uBAAuB;gBACvB,2BAA2B;gBAC3B,sBAAsB;gBACtB,4BAA4B;aAC/B;YACD,YAAY,EAAE,CAAC,qBAAqB,CAAC;YACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;SACnC,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAlC;;AC1BA;;;;;;"}