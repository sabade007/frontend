{"version":3,"file":"taiga-ui-kit-components-input-month-range.js","sources":["ng://@taiga-ui/kit/components/input-month-range/input-month-range.providers.ts","ng://@taiga-ui/kit/components/input-month-range/input-month-range.component.ts","ng://@taiga-ui/kit/components/input-month-range/input-month-range.directive.ts","ng://@taiga-ui/kit/components/input-month-range/input-month-range.module.ts","ng://@taiga-ui/kit/components/input-month-range/taiga-ui-kit-components-input-month-range.ts"],"sourcesContent":["import {forwardRef, Provider} from '@angular/core';\nimport {AbstractTuiControl, TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk';\nimport {TuiMonthPipe} from '@taiga-ui/core';\nimport {\n    LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n    TUI_MONTH_FORMATTER_PROVIDER,\n} from '@taiga-ui/kit/providers';\n\nimport {TuiInputMonthRangeComponent} from './input-month-range.component';\n\nexport const TUI_INPUT_MONTH_RANGE_PROVIDERS: Provider[] = [\n    {\n        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n        useExisting: forwardRef(() => TuiInputMonthRangeComponent),\n    },\n    {\n        provide: AbstractTuiControl,\n        useExisting: forwardRef(() => TuiInputMonthRangeComponent),\n    },\n    LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n    TUI_MONTH_FORMATTER_PROVIDER,\n    TuiMonthPipe,\n];\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    CHAR_EN_DASH,\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiHandler,\n    TuiMonth,\n    TuiMonthRange,\n} from '@taiga-ui/cdk';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TuiMonthContext} from '@taiga-ui/kit/interfaces';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {TuiBooleanHandlerWithContext} from '@taiga-ui/kit/types';\nimport {Observable} from 'rxjs';\n\nimport {TUI_INPUT_MONTH_RANGE_PROVIDERS} from './input-month-range.providers';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-month-range',\n    templateUrl: './input-month-range.template.html',\n    styleUrls: ['./input-month-range.style.less'],\n    providers: TUI_INPUT_MONTH_RANGE_PROVIDERS,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiInputMonthRangeComponent\n    extends AbstractTuiNullableControl<TuiMonthRange>\n    implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiMonth = TUI_FIRST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiMonth = TUI_LAST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandlerWithContext<TuiMonth, TuiMonthContext> =\n        ALWAYS_FALSE_HANDLER;\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_MONTH_FORMATTER)\n        readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): string {\n        return sizeBigger(this.textfieldSize.size)\n            ? 'tuiIconCalendarLarge'\n            : 'tuiIconCalendar';\n    }\n\n    computeValue(from: string | null, to: string | null): string {\n        const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n\n        return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n    }\n\n    onValueChange(value: string): void {\n        if (value) {\n            return;\n        }\n\n        this.updateValue(null);\n        this.onOpenChange(true);\n    }\n\n    onMonthClick(month: TuiMonth): void {\n        if (this.value === null || !this.value.isSingleMonth) {\n            this.writeValue(new TuiMonthRange(month, month));\n\n            return;\n        }\n\n        this.updateValue(TuiMonthRange.sort(this.value.from, month));\n        this.close();\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onOpenChange(open: boolean): void {\n        this.open = open;\n    }\n\n    onActiveZone(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (focused) {\n            return;\n        }\n\n        if (this.value?.isSingleMonth) {\n            this.updateValue(new TuiMonthRange(this.value.from, this.value.from));\n        }\n    }\n\n    setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n}\n","import {Directive, DoCheck, forwardRef, Inject, Self} from '@angular/core';\nimport {\n    AbstractTuiControl,\n    TuiDestroyService,\n    TuiHandler,\n    TuiMonth,\n    TuiMonthRange,\n} from '@taiga-ui/cdk';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {combineLatest, Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {TuiInputMonthRangeComponent} from './input-month-range.component';\n\n@Directive({\n    selector: 'tui-input-month-range',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputMonthRangeDirective),\n        },\n        TuiDestroyService,\n    ],\n})\nexport class TuiInputMonthRangeDirective\n    extends TuiAbstractTextfieldHost<TuiInputMonthRangeComponent>\n    implements DoCheck\n{\n    private readonly value$ = new Subject<TuiMonthRange | null>();\n\n    private localizedValue: [string, string] = ['', ''];\n\n    constructor(\n        @Inject(AbstractTuiControl) host: TuiInputMonthRangeComponent,\n        @Inject(TUI_MONTH_FORMATTER)\n        formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        super(host);\n\n        this.value$\n            .pipe(\n                distinctUntilChanged(),\n                switchMap((value: TuiMonthRange | null) =>\n                    combineLatest([\n                        formatter(value?.from || null),\n                        formatter(value?.to || null),\n                    ]),\n                ),\n                takeUntil(destroy$),\n            )\n            .subscribe(localizedValue => {\n                this.localizedValue = localizedValue;\n            });\n    }\n\n    get readOnly(): boolean {\n        return true;\n    }\n\n    get value(): string {\n        return this.localizedValue[0]\n            ? this.host.computeValue(...this.localizedValue)\n            : '';\n    }\n\n    ngDoCheck(): void {\n        this.value$.next(this.host.value);\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiActiveZoneModule,\n    TuiMapperPipeModule,\n    TuiPreventDefaultModule,\n} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n} from '@taiga-ui/core';\nimport {TuiCalendarMonthModule} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthRangeComponent} from './input-month-range.component';\nimport {TuiInputMonthRangeDirective} from './input-month-range.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiCalendarMonthModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiSvgModule,\n        TuiPreventDefaultModule,\n        TuiActiveZoneModule,\n        TuiMapperPipeModule,\n    ],\n    declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n    exports: [\n        TuiInputMonthRangeComponent,\n        TuiInputMonthRangeDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputMonthRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}