{"version":3,"file":"taiga-ui-kit-components-filter.js","sources":["ng://@taiga-ui/kit/components/filter/filter.component.ts","ng://@taiga-ui/kit/components/filter/filter.module.ts","ng://@taiga-ui/kit/components/filter/taiga-ui-kit-components-filter.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiMultipleControl,\n    ALWAYS_FALSE_HANDLER,\n    isNativeFocusedIn,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_DEFAULT_STRINGIFY,\n    TuiBooleanHandler,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiHandler,\n    TuiIdentityMatcher,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n// @bad TODO: Add active zone to track focus\n@Component({\n    selector: 'tui-filter',\n    templateUrl: './filter.template.html',\n    styleUrls: ['./filter.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiFilterComponent<T> extends AbstractTuiMultipleControl<T> {\n    @Input()\n    @tuiDefaultProp()\n    identityMatcher: TuiIdentityMatcher<T> = TUI_DEFAULT_IDENTITY_MATCHER;\n\n    @Input()\n    @tuiDefaultProp()\n    items: readonly T[] = [];\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeL | TuiSizeS = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<T> = ALWAYS_FALSE_HANDLER;\n\n    @Output()\n    readonly toggledItem = new EventEmitter<T>();\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    @Input()\n    @tuiDefaultProp()\n    content: PolymorpheusContent<any> = ({$implicit}: TuiContextWithImplicit<unknown>) =>\n        TUI_DEFAULT_STRINGIFY($implicit);\n\n    @Input()\n    @tuiDefaultProp()\n    badgeHandler: TuiHandler<T, number> = item => Number(item);\n\n    get focused(): boolean {\n        return isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n\n    @tuiPure\n    getItemContentContext($implicit: T): TuiContextWithImplicit<T> {\n        return {\n            $implicit,\n        };\n    }\n\n    onCheckbox(value: boolean, item: T): void {\n        this.toggledItem.emit(item);\n        this.updateValue(\n            value\n                ? [...this.value, item]\n                : this.value.filter(arrItem => !this.identityMatcher(arrItem, item)),\n        );\n    }\n\n    isCheckboxEnabled(item: T): boolean {\n        return this.value.some(arrItem => this.identityMatcher(arrItem, item));\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiModeModule} from '@taiga-ui/core';\nimport {TuiBadgeModule} from '@taiga-ui/kit/components/badge';\nimport {TuiCheckboxBlockModule} from '@taiga-ui/kit/components/checkbox-block';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFilterComponent} from './filter.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiCheckboxBlockModule,\n        TuiBadgeModule,\n        TuiModeModule,\n    ],\n    declarations: [TuiFilterComponent],\n    exports: [TuiFilterComponent],\n})\nexport class TuiFilterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}