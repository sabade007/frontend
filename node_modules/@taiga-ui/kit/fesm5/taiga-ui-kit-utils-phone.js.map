{"version":3,"file":"taiga-ui-kit-utils-phone.js","sources":["ng://@taiga-ui/kit/utils/phone/get-max-allowed-phone-length.ts","ng://@taiga-ui/kit/utils/phone/iso-to-country-code.ts","ng://@taiga-ui/kit/utils/phone/not-kz-region.ts","ng://@taiga-ui/kit/utils/phone/taiga-ui-kit-utils-phone.ts"],"sourcesContent":["import {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport function tuiGetMaxAllowedPhoneLength(\n    countries: Record<TuiCountryIsoCode, string>,\n    isoCode: TuiCountryIsoCode,\n): number {\n    return countries[isoCode].replace(/[()\\- ]/g, ``).length;\n}\n","import {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {MASK_AFTER_CODE_REGEXP} from '@taiga-ui/kit/constants';\n\nexport function tuiIsoToCountryCode(\n    countriesMasks: Record<TuiCountryIsoCode, string>,\n    isoCode: TuiCountryIsoCode,\n): string {\n    return countriesMasks[isoCode].replace(MASK_AFTER_CODE_REGEXP, ``);\n}\n","export function tuiNotKzRegion(value: string): boolean {\n    const region = Number(value.slice(1, 4));\n\n    return region < 600 || region > 799;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;SAEgB,2BAA2B,CACvC,SAA4C,EAC5C,OAA0B;IAE1B,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC;AAC7D;;SCJgB,mBAAmB,CAC/B,cAAiD,EACjD,OAA0B;IAE1B,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;AACvE;;SCRgB,cAAc,CAAC,KAAa;IACxC,IAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEzC,OAAO,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC;AACxC;;ACJA;;;;;;"}