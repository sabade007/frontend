import { round } from '@taiga-ui/cdk';

var BYTES_PER_KIB = 1024;
var BYTES_PER_MIB = 1024 * BYTES_PER_KIB;
/**
 * @deprecated: use {@link tuiFormatSize} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function formatSize(units, size) {
    if (size === undefined) {
        return null;
    }
    if (size < BYTES_PER_KIB) {
        return size + " " + units[0];
    }
    if (size < BYTES_PER_MIB) {
        return (size / BYTES_PER_KIB).toFixed(0) + " " + units[1];
    }
    return round(size / BYTES_PER_MIB, 2).toLocaleString("ru-RU") + " " + units[2];
}
var tuiFormatSize = formatSize;

/**
 * @deprecated: use {@link tuiGetAcceptArray} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function getAcceptArray(accept) {
    return accept
        .toLowerCase()
        .split(",")
        .map(function (format) { return format.trim(); });
}
var tuiGetAcceptArray = getAcceptArray;

/**
 * Generated bundle index. Do not edit.
 */

export { formatSize, getAcceptArray, tuiFormatSize, tuiGetAcceptArray };
//# sourceMappingURL=taiga-ui-kit-utils-files.js.map
