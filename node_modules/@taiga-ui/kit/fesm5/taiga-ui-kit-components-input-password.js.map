{"version":3,"file":"taiga-ui-kit-components-input-password.js","sources":["ng://@taiga-ui/kit/components/input-password/input-password-options.ts","ng://@taiga-ui/kit/components/input-password/input-password.component.ts","ng://@taiga-ui/kit/components/input-password/input-password.directive.ts","ng://@taiga-ui/kit/components/input-password/input-password.module.ts","ng://@taiga-ui/kit/components/input-password/taiga-ui-kit-components-input-password.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputPasswordOptions {\n    readonly icons: Readonly<{\n        hide: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n        show: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n    }>;\n}\n\n/**\n * @deprecated: use TuiInputPasswordOptions instead\n * todo: remove in 3.0\n */\nexport type InputPasswordOptions = TuiInputPasswordOptions;\n\n// TODO: 3.0 remove in ivy compilation\nexport const PASSWORD_ICON_HIDE = ({\n    $implicit,\n}: TuiContextWithImplicit<TuiSizeL | TuiSizeS>):\n    | 'tuiIconEyeClosed'\n    | 'tuiIconHideLarge' => ($implicit === `s` ? `tuiIconEyeClosed` : `tuiIconHideLarge`);\n\nexport const PASSWORD_ICON_SHOW = ({\n    $implicit,\n}: TuiContextWithImplicit<TuiSizeL | TuiSizeS>): 'tuiIconEyeOpen' | 'tuiIconShowLarge' =>\n    $implicit === `s` ? `tuiIconEyeOpen` : `tuiIconShowLarge`;\n\n/** Default values for the input password options. */\nexport const TUI_INPUT_PASSWORD_DEFAULT_OPTIONS: TuiInputPasswordOptions = {\n    icons: {\n        hide: PASSWORD_ICON_HIDE,\n        show: PASSWORD_ICON_SHOW,\n    },\n};\n\nexport const TUI_INPUT_PASSWORD_OPTIONS = new InjectionToken<TuiInputPasswordOptions>(\n    `Default parameters for input password component`,\n    {\n        factory: () => TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputPasswordOptionsProvider: (\n    options: Partial<TuiInputPasswordOptions>,\n) => ValueProvider = (options: Partial<TuiInputPasswordOptions>) => ({\n    provide: TUI_INPUT_PASSWORD_OPTIONS,\n    useValue: {...TUI_INPUT_PASSWORD_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiContextWithImplicit,\n    TuiFocusableElementAccessor,\n    TuiInputTypeT,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    HINT_CONTROLLER_PROVIDER,\n    MODE_PROVIDER,\n    TUI_HINT_WATCHED_CONTROLLER,\n    TUI_MODE,\n    TUI_TEXTFIELD_SIZE,\n    TuiBrightness,\n    TuiHintControllerDirective,\n    TuiHintModeT,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {TUI_PASSWORD_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {combineLatest, Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nimport {\n    TUI_INPUT_PASSWORD_OPTIONS,\n    TuiInputPasswordOptions,\n} from './input-password-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-password',\n    templateUrl: './input-password.template.html',\n    styleUrls: ['./input-password.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputPasswordComponent),\n        },\n        {\n            provide: AbstractTuiControl,\n            useExisting: forwardRef(() => TuiInputPasswordComponent),\n        },\n        HINT_CONTROLLER_PROVIDER,\n        MODE_PROVIDER,\n    ],\n})\nexport class TuiInputPasswordComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    isPasswordHidden = true;\n\n    readonly computedMode$: Observable<TuiHintModeT | null> = combineLatest([\n        this.mode$.pipe(map(val => (val === 'onDark' ? 'onDark' : null))),\n        this.hintController.change$.pipe(\n            startWith(null),\n            map(() => this.hintController.mode),\n        ),\n    ]).pipe(\n        map(([mode, controller]) => controller || mode),\n        startWith(null),\n    );\n\n    readonly type!: TuiContextWithImplicit<TuiSizeL | TuiSizeS>;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_PASSWORD_TEXTS)\n        readonly passwordTexts$: Observable<[string, string]>,\n        @Inject(TUI_INPUT_PASSWORD_OPTIONS)\n        readonly options: TuiInputPasswordOptions,\n        @Inject(TUI_HINT_WATCHED_CONTROLLER)\n        readonly hintController: TuiHintControllerDirective,\n        @Inject(TUI_MODE)\n        private readonly mode$: Observable<TuiBrightness | null>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>> {\n        return this.isPasswordHidden ? this.options.icons.hide : this.options.icons.show;\n    }\n\n    get context(): TuiContextWithImplicit<TuiSizeL | TuiSizeS> {\n        return this.getContext(this.textfieldSize.size);\n    }\n\n    get inputType(): TuiInputTypeT {\n        return this.isPasswordHidden || !this.interactive ? 'password' : 'text';\n    }\n\n    onValueChange(textValue: string): void {\n        this.updateValue(textValue);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean): void {\n        this.updatePressed(pressed);\n    }\n\n    togglePasswordVisibility(): void {\n        this.isPasswordHidden = !this.isPasswordHidden;\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    @tuiPure\n    private getContext(\n        $implicit: TuiSizeL | TuiSizeS,\n    ): TuiContextWithImplicit<TuiSizeL | TuiSizeS> {\n        return {$implicit};\n    }\n}\n","import {Directive, DoCheck, forwardRef} from '@angular/core';\nimport {TUI_TEXTFIELD_HOST, TuiAbstractTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputPasswordComponent} from './input-password.component';\n\n@Directive({\n    selector: 'tui-input-password',\n    providers: [\n        {\n            provide: TUI_TEXTFIELD_HOST,\n            useExisting: forwardRef(() => TuiInputPasswordDirective),\n        },\n    ],\n})\nexport class TuiInputPasswordDirective\n    extends TuiAbstractTextfieldHost<TuiInputPasswordComponent>\n    implements DoCheck\n{\n    input?: HTMLInputElement;\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    process(input: HTMLInputElement): void {\n        this.input = input;\n    }\n\n    ngDoCheck(): void {\n        if (this.input) {\n            this.input.type = this.host.isPasswordHidden ? 'password' : 'text';\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {\n    TuiHintModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputPasswordComponent} from './input-password.component';\nimport {TuiInputPasswordDirective} from './input-password.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiHintModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n    exports: [\n        TuiInputPasswordComponent,\n        TuiInputPasswordDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputPasswordModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}