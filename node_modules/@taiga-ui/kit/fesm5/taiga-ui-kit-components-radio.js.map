{"version":3,"file":"taiga-ui-kit-components-radio.js","sources":["ng://@taiga-ui/kit/components/radio/radio-options.ts","ng://@taiga-ui/kit/components/radio/radio.component.ts","ng://@taiga-ui/kit/components/radio/radio.module.ts","ng://@taiga-ui/kit/components/radio/taiga-ui-kit-components-radio.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiAppearance} from '@taiga-ui/core/enums';\nimport {TuiSizeL} from '@taiga-ui/core/types';\n\nexport interface TuiRadioOptions {\n    readonly size: TuiSizeL;\n    readonly appearances: Readonly<{\n        unchecked: string;\n        checked: string;\n    }>;\n}\n\n/**\n * @deprecated: use TuiRadioOptions instead\n * todo: remove in 3.0\n */\nexport type RadioOptions = TuiRadioOptions;\n\n/** Default values for the checkbox options. */\nexport const TUI_RADIO_DEFAULT_OPTIONS: TuiRadioOptions = {\n    size: `m`,\n    appearances: {\n        unchecked: TuiAppearance.Outline,\n        checked: TuiAppearance.Primary,\n    },\n};\n\nexport const TUI_RADIO_OPTIONS = new InjectionToken<TuiRadioOptions>(\n    `Default parameters for radio component`,\n    {\n        factory: () => TUI_RADIO_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiRadioOptionsProvider: (\n    options: Partial<TuiRadioOptions>,\n) => ValueProvider = (options: Partial<TuiRadioOptions>) => ({\n    provide: TUI_RADIO_OPTIONS,\n    useValue: {...TUI_RADIO_DEFAULT_OPTIONS, ...options},\n});\n","import {AnimationOptions} from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    isNativeFocused,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiIdentityMatcher,\n    TuiNativeFocusableElement,\n} from '@taiga-ui/cdk';\nimport {TUI_ANIMATION_OPTIONS, tuiScaleIn, TuiSizeL} from '@taiga-ui/core';\nimport {TuiRadioGroupComponent} from '@taiga-ui/kit/components/radio-group';\n\nimport {TUI_RADIO_OPTIONS, TuiRadioOptions} from './radio-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-radio',\n    templateUrl: './radio.template.html',\n    styleUrls: ['./radio.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiRadioComponent),\n        },\n    ],\n    animations: [tuiScaleIn],\n})\nexport class TuiRadioComponent<T>\n    extends AbstractTuiNullableControl<T>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild('focusableElement')\n    private readonly focusableElement?: ElementRef<TuiNativeFocusableElement>;\n\n    @Input()\n    item?: T | null;\n\n    @Input()\n    @tuiDefaultProp()\n    identityMatcher: TuiIdentityMatcher<T> = TUI_DEFAULT_IDENTITY_MATCHER;\n\n    @Input()\n    @tuiDefaultProp()\n    name: string | null = null;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeL = this.options.size;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoDisabled = false;\n\n    readonly animation = {value: '', ...this.animationOptions} as const;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_ANIMATION_OPTIONS)\n        private readonly animationOptions: AnimationOptions,\n        @Inject(TUI_RADIO_OPTIONS)\n        private readonly options: TuiRadioOptions,\n        @Optional()\n        @Inject(TuiRadioGroupComponent)\n        private readonly radioGroup: TuiRadioGroupComponent | null,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get appearance(): string {\n        return this.checked\n            ? this.options.appearances.checked\n            : this.options.appearances.unchecked;\n    }\n\n    @HostBinding('class._disabled')\n    get computedDisabled(): boolean {\n        return this.disabled || this.pseudoDisabled;\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return !this.focusableElement || this.computedDisabled\n            ? null\n            : this.focusableElement.nativeElement;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    get checked(): boolean {\n        return this.value === null\n            ? this.item === null\n            : this.item !== undefined &&\n                  this.item !== null &&\n                  this.identityMatcher(this.value, this.item);\n    }\n\n    get computedName(): string {\n        return this.name || this.radioGroupName || this.controlName || '';\n    }\n\n    get isFocusable(): boolean {\n        return !this.readOnly && this.computedFocusable;\n    }\n\n    onChecked(checked: boolean): void {\n        if (checked) {\n            this.updateValue(this.item !== undefined ? this.item : this.fallbackValue);\n        }\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean): void {\n        this.updatePressed(pressed);\n    }\n\n    onFocusVisible(focusVisible: boolean): void {\n        this.updateFocusVisible(focusVisible);\n    }\n\n    private get radioGroupName(): string | null {\n        return this.radioGroup === null ? null : this.radioGroup.name;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiCheckedModule,\n    TuiFocusableModule,\n    TuiFocusedModule,\n    TuiFocusVisibleModule,\n    TuiHoveredModule,\n    TuiPressedModule,\n} from '@taiga-ui/cdk';\nimport {TuiWrapperModule} from '@taiga-ui/core';\n\nimport {TuiRadioComponent} from './radio.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiCheckedModule,\n        TuiFocusableModule,\n        TuiFocusedModule,\n        TuiHoveredModule,\n        TuiPressedModule,\n        TuiFocusVisibleModule,\n        TuiWrapperModule,\n    ],\n    declarations: [TuiRadioComponent],\n    exports: [TuiRadioComponent],\n})\nexport class TuiRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAkBA;IACa,yBAAyB,GAAoB;IACtD,IAAI,EAAE,GAAG;IACT,WAAW,EAAE;QACT,SAAS;QACT,OAAO;KACV;EACH;IAEW,iBAAiB,GAAG,IAAI,cAAc,CAC/C,wCAAwC,EACxC;IACI,OAAO,EAAE,cAAM,OAAA,yBAAyB,GAAA;CAC3C,EACH;IAEW,uBAAuB,GAEf,UAAC,OAAiC,IAAK,QAAC;IACzD,OAAO,EAAE,iBAAiB;IAC1B,QAAQ,wBAAM,yBAAyB,GAAK,OAAO,CAAC;CACvD;;ACTD;;IAeY,qCAA6B;IA4BrC,2BAII,OAAyB,EACE,iBAAoC,EAE9C,gBAAkC,EAElC,OAAwB,EAGxB,UAAyC;QAZ9D,YAcI,kBAAM,OAAO,EAAE,iBAAiB,CAAC,SACpC;QARoB,sBAAgB,GAAhB,gBAAgB,CAAkB;QAElC,aAAO,GAAP,OAAO,CAAiB;QAGxB,gBAAU,GAAV,UAAU,CAA+B;QA7B9D,qBAAe,GAA0B,4BAA4B,CAAC;QAItE,UAAI,GAAkB,IAAI,CAAC;QAK3B,UAAI,GAAa,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAInC,oBAAc,GAAG,KAAK,CAAC;QAEd,eAAS,GAAG,WAAC,KAAK,EAAE,EAAE,IAAK,KAAI,CAAC,gBAAgB,CAAU,CAAC;;KAiBnE;0BA5CQ,iBAAiB;IA8C1B,sBAAI,yCAAU;aAAd;YACI,OAAO,IAAI,CAAC,OAAO;kBACb,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO;kBAChC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC;SAC5C;;;OAAA;IAGD,sBAAI,+CAAgB;aAApB;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC;SAC/C;;;OAAA;IAED,sBAAI,qDAAsB;aAA1B;YACI,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB;kBAChD,IAAI;kBACJ,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;SAC7C;;;OAAA;IAED,sBAAI,sCAAO;aAAX;YACI,OAAO,eAAe,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACvD;;;OAAA;IAED,sBAAI,sCAAO;aAAX;YACI,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI;kBACpB,IAAI,CAAC,IAAI,KAAK,IAAI;kBAClB,IAAI,CAAC,IAAI,KAAK,SAAS;oBACnB,IAAI,CAAC,IAAI,KAAK,IAAI;oBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACzD;;;OAAA;IAED,sBAAI,2CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;SACrE;;;OAAA;IAED,sBAAI,0CAAW;aAAf;YACI,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC;SACnD;;;OAAA;IAED,qCAAS,GAAT,UAAU,OAAgB;QACtB,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC9E;KACJ;IAED,qCAAS,GAAT,UAAU,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,qCAAS,GAAT,UAAU,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,qCAAS,GAAT,UAAU,OAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,0CAAc,GAAd,UAAe,YAAqB;QAChC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;KACzC;IAED,sBAAY,6CAAc;aAA1B;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;SACjE;;;OAAA;;;gBA1EY,SAAS,uBAHjB,QAAQ,YACR,IAAI,YACJ,MAAM,SAAC,SAAS;gBAE6B,iBAAiB,uBAA9D,MAAM,SAAC,iBAAiB;gDACxB,MAAM,SAAC,qBAAqB;gDAE5B,MAAM,SAAC,iBAAiB;gBAII,sBAAsB,uBAFlD,QAAQ,YACR,MAAM,SAAC,sBAAsB;;IAnClC;QADC,SAAS,CAAC,kBAAkB,CAAC;+DAC4C;IAG1E;QADC,KAAK,EAAE;mDACQ;IAIhB;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;8DACqD;IAItE;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;mDACU;IAK3B;QAHC,KAAK,EAAE;QACP,WAAW,CAAC,gBAAgB,CAAC;QAC7B,cAAc,EAAE;mDACkB;IAInC;QAFC,KAAK,EAAE;QACP,cAAc,EAAE;6DACM;IA4BvB;QADC,WAAW,CAAC,iBAAiB,CAAC;6DAG9B;IAvDQ,iBAAiB;QAb7B,SAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,04BAAoC;YAEpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,2BAA2B;oBACpC,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,mBAAiB,GAAA,CAAC;iBACnD;aACJ;YACD,UAAU,EAAE,CAAC,UAAU,CAAC;;SAC3B,CAAC;QA+BO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;QAEjB,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;QACzB,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;QAE7B,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;QAEzB,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;OAxC1B,iBAAiB,CA4G7B;IAAD,wBAAC;CAAA,CA3GW,0BAA0B;;;ICjBtC;KAA8B;IAAjB,cAAc;QAd1B,QAAQ,CAAC;YACN,OAAO,EAAE;gBACL,YAAY;gBACZ,gBAAgB;gBAChB,kBAAkB;gBAClB,gBAAgB;gBAChB,gBAAgB;gBAChB,gBAAgB;gBAChB,qBAAqB;gBACrB,gBAAgB;aACnB;YACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;YACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;SAC/B,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAA9B;;AC5BA;;;;;;"}