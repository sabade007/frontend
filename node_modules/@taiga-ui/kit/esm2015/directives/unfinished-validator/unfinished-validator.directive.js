var TuiUnfinishedValidatorDirective_1;
import { __decorate, __param } from "tslib";
import { Attribute, Directive, Inject, Injector } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';
import { tuiCreateUnfinishedValidator } from '@taiga-ui/kit/validators';
let TuiUnfinishedValidatorDirective = TuiUnfinishedValidatorDirective_1 = class TuiUnfinishedValidatorDirective {
    constructor(injector, message) {
        this.injector = injector;
        this.message = message;
        this.validate = tuiCreateUnfinishedValidator(() => this.injector.get(TUI_FOCUSABLE_ITEM_ACCESSOR), this.message || '');
    }
};
TuiUnfinishedValidatorDirective.ctorParameters = () => [
    { type: Injector, decorators: [{ type: Inject, args: [Injector,] }] },
    { type: String, decorators: [{ type: Attribute, args: ['tuiUnfinishedValidator',] }] }
];
TuiUnfinishedValidatorDirective = TuiUnfinishedValidatorDirective_1 = __decorate([
    Directive({
        selector: '[tuiUnfinishedValidator]',
        providers: [
            {
                provide: NG_VALIDATORS,
                useExisting: TuiUnfinishedValidatorDirective_1,
                multi: true,
            },
        ],
    }),
    __param(0, Inject(Injector)),
    __param(1, Attribute('tuiUnfinishedValidator'))
], TuiUnfinishedValidatorDirective);
export { TuiUnfinishedValidatorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9kaXJlY3RpdmVzL3VuZmluaXNoZWQtdmFsaWRhdG9yLyIsInNvdXJjZXMiOlsidW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsYUFBYSxFQUFZLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEQsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBWXRFLElBQWEsK0JBQStCLHVDQUE1QyxNQUFhLCtCQUErQjtJQU14QyxZQUVxQixRQUFrQixFQUVsQixPQUFzQjtRQUZ0QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBRWxCLFlBQU8sR0FBUCxPQUFPLENBQWU7UUFUbEMsYUFBUSxHQUFHLDRCQUE0QixDQUM1QyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxFQUNwRCxJQUFJLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FDckIsQ0FBQztJQU9DLENBQUM7Q0FDUCxDQUFBOztZQUprQyxRQUFRLHVCQURsQyxNQUFNLFNBQUMsUUFBUTt5Q0FFZixTQUFTLFNBQUMsd0JBQXdCOztBQVQ5QiwrQkFBK0I7SUFWM0MsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLDBCQUEwQjtRQUNwQyxTQUFTLEVBQUU7WUFDUDtnQkFDSSxPQUFPLEVBQUUsYUFBYTtnQkFDdEIsV0FBVyxFQUFFLGlDQUErQjtnQkFDNUMsS0FBSyxFQUFFLElBQUk7YUFDZDtTQUNKO0tBQ0osQ0FBQztJQVFPLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBRWhCLFdBQUEsU0FBUyxDQUFDLHdCQUF3QixDQUFDLENBQUE7R0FUL0IsK0JBQStCLENBWTNDO1NBWlksK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBdHRyaWJ1dGUsIERpcmVjdGl2ZSwgSW5qZWN0LCBJbmplY3Rvcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05HX1ZBTElEQVRPUlMsIFZhbGlkYXRvcn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtUVUlfRk9DVVNBQkxFX0lURU1fQUNDRVNTT1J9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlDcmVhdGVVbmZpbmlzaGVkVmFsaWRhdG9yfSBmcm9tICdAdGFpZ2EtdWkva2l0L3ZhbGlkYXRvcnMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlVbmZpbmlzaGVkVmFsaWRhdG9yXScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogVHVpVW5maW5pc2hlZFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVVuZmluaXNoZWRWYWxpZGF0b3JEaXJlY3RpdmUgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICAgIHJlYWRvbmx5IHZhbGlkYXRlID0gdHVpQ3JlYXRlVW5maW5pc2hlZFZhbGlkYXRvcihcbiAgICAgICAgKCkgPT4gdGhpcy5pbmplY3Rvci5nZXQoVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SKSxcbiAgICAgICAgdGhpcy5tZXNzYWdlIHx8ICcnLFxuICAgICk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChJbmplY3RvcilcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgICAgIEBBdHRyaWJ1dGUoJ3R1aVVuZmluaXNoZWRWYWxpZGF0b3InKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG1lc3NhZ2U6IHN0cmluZyB8IG51bGwsXG4gICAgKSB7fVxufVxuIl19