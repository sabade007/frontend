import { DATE_FILLER_LENGTH } from '@taiga-ui/cdk';
import { DATE_TIME_SEPARATOR } from '@taiga-ui/kit/constants';
import { normalizeDateValue, } from './create-auto-corrected-date-pipe';
import { tuiCreateAutoCorrectedTimePipe } from './create-auto-corrected-time-pipe';
export function tuiCreateAutoCorrectedDateTimePipe(configs) {
    const timePipe = tuiCreateAutoCorrectedTimePipe(configs.timeMode);
    return value => {
        if (value.length < DATE_FILLER_LENGTH) {
            return { value };
        }
        const [date, time] = value.split(DATE_TIME_SEPARATOR);
        const formattedDate = normalizeDateValue(date, configs);
        if (!time) {
            return { value: formattedDate };
        }
        const pipedTime = timePipe(time, {});
        if (!pipedTime || typeof pipedTime === `string`) {
            return false;
        }
        return {
            value: `${formattedDate}${DATE_TIME_SEPARATOR}${pipedTime.value}`,
            indexesOfPipedChars: pipedTime.indexesOfPipedChars
                ? pipedTime.indexesOfPipedChars.map(i => i + date.length + 2)
                : undefined,
        };
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtdGltZS1waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC91dGlscy9tYXNrLyIsInNvdXJjZXMiOlsiY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtdGltZS1waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxrQkFBa0IsRUFBYyxNQUFNLGVBQWUsQ0FBQztBQU05RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUU1RCxPQUFPLEVBQ0gsa0JBQWtCLEdBRXJCLE1BQU0sbUNBQW1DLENBQUM7QUFDM0MsT0FBTyxFQUFDLDhCQUE4QixFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFNakYsTUFBTSxVQUFVLGtDQUFrQyxDQUM5QyxPQUE0QztJQUU1QyxNQUFNLFFBQVEsR0FBRyw4QkFBOEIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFbEUsT0FBTyxLQUFLLENBQUMsRUFBRTtRQUNYLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxrQkFBa0IsRUFBRTtZQUNuQyxPQUFPLEVBQUMsS0FBSyxFQUFDLENBQUM7U0FDbEI7UUFFRCxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUV0RCxNQUFNLGFBQWEsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFeEQsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sRUFBQyxLQUFLLEVBQUUsYUFBYSxFQUFDLENBQUM7U0FDakM7UUFFRCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQ3RCLElBQUksRUFDSixFQUF1RCxDQUMxRCxDQUFDO1FBRUYsSUFBSSxDQUFDLFNBQVMsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRLEVBQUU7WUFDN0MsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFFRCxPQUFPO1lBQ0gsS0FBSyxFQUFFLEdBQUcsYUFBYSxHQUFHLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxLQUFLLEVBQUU7WUFDakUsbUJBQW1CLEVBQUUsU0FBUyxDQUFDLG1CQUFtQjtnQkFDOUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQzdELENBQUMsQ0FBQyxTQUFTO1NBQ2xCLENBQUM7SUFDTixDQUFDLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEQVRFX0ZJTExFUl9MRU5HVEgsIFR1aVRpbWVNb2RlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgVHVpVGV4dE1hc2tDb25maWcsXG4gICAgVHVpVGV4dE1hc2tPcHRpb25zLFxuICAgIFR1aVRleHRNYXNrUGlwZUhhbmRsZXIsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7REFURV9USU1FX1NFUEFSQVRPUn0gZnJvbSAnQHRhaWdhLXVpL2tpdC9jb25zdGFudHMnO1xuXG5pbXBvcnQge1xuICAgIG5vcm1hbGl6ZURhdGVWYWx1ZSxcbiAgICBUdWlBdXRvQ29ycmVjdGVkRGF0ZVBpcGVDb25maWdzLFxufSBmcm9tICcuL2NyZWF0ZS1hdXRvLWNvcnJlY3RlZC1kYXRlLXBpcGUnO1xuaW1wb3J0IHt0dWlDcmVhdGVBdXRvQ29ycmVjdGVkVGltZVBpcGV9IGZyb20gJy4vY3JlYXRlLWF1dG8tY29ycmVjdGVkLXRpbWUtcGlwZSc7XG5cbmludGVyZmFjZSBUdWlBdXRvQ29ycmVjdGVkRGF0ZVRpbWVQaXBlQ29uZmlncyBleHRlbmRzIFR1aUF1dG9Db3JyZWN0ZWREYXRlUGlwZUNvbmZpZ3Mge1xuICAgIHRpbWVNb2RlOiBUdWlUaW1lTW9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHR1aUNyZWF0ZUF1dG9Db3JyZWN0ZWREYXRlVGltZVBpcGUoXG4gICAgY29uZmlnczogVHVpQXV0b0NvcnJlY3RlZERhdGVUaW1lUGlwZUNvbmZpZ3MsXG4pOiBUdWlUZXh0TWFza1BpcGVIYW5kbGVyIHtcbiAgICBjb25zdCB0aW1lUGlwZSA9IHR1aUNyZWF0ZUF1dG9Db3JyZWN0ZWRUaW1lUGlwZShjb25maWdzLnRpbWVNb2RlKTtcblxuICAgIHJldHVybiB2YWx1ZSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPCBEQVRFX0ZJTExFUl9MRU5HVEgpIHtcbiAgICAgICAgICAgIHJldHVybiB7dmFsdWV9O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgW2RhdGUsIHRpbWVdID0gdmFsdWUuc3BsaXQoREFURV9USU1FX1NFUEFSQVRPUik7XG5cbiAgICAgICAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IG5vcm1hbGl6ZURhdGVWYWx1ZShkYXRlLCBjb25maWdzKTtcblxuICAgICAgICBpZiAoIXRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB7dmFsdWU6IGZvcm1hdHRlZERhdGV9O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcGlwZWRUaW1lID0gdGltZVBpcGUoXG4gICAgICAgICAgICB0aW1lLFxuICAgICAgICAgICAge30gYXMgdW5rbm93biBhcyBUdWlUZXh0TWFza0NvbmZpZyAmIFR1aVRleHRNYXNrT3B0aW9ucyxcbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoIXBpcGVkVGltZSB8fCB0eXBlb2YgcGlwZWRUaW1lID09PSBgc3RyaW5nYCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiBgJHtmb3JtYXR0ZWREYXRlfSR7REFURV9USU1FX1NFUEFSQVRPUn0ke3BpcGVkVGltZS52YWx1ZX1gLFxuICAgICAgICAgICAgaW5kZXhlc09mUGlwZWRDaGFyczogcGlwZWRUaW1lLmluZGV4ZXNPZlBpcGVkQ2hhcnNcbiAgICAgICAgICAgICAgICA/IHBpcGVkVGltZS5pbmRleGVzT2ZQaXBlZENoYXJzLm1hcChpID0+IGkgKyBkYXRlLmxlbmd0aCArIDIpXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgIH07XG4gICAgfTtcbn1cbiJdfQ==