import { svgNodeFilter } from '@taiga-ui/cdk';
/**
 * @deprecated: use {@link tuiSetRangeOffset} instead
 * Range.setStart/set-end, except it uses offset in characters only
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function setRangeOffset(range, node, offset, method) {
    const { ownerDocument } = node;
    if (!ownerDocument) {
        return;
    }
    const treeWalker = ownerDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, svgNodeFilter, false);
    treeWalker.currentNode = node;
    while (treeWalker.nextNode()) {
        if (treeWalker.currentNode.nodeType === Node.TEXT_NODE) {
            const length = treeWalker.currentNode.nodeValue
                ? treeWalker.currentNode.nodeValue.length
                : 0;
            if (offset > length) {
                offset -= length;
            }
            else {
                range[method](treeWalker.currentNode, offset);
            }
        }
    }
}
export const tuiSetRangeOffset = setRangeOffset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXJhbmdlLW9mZnNldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvdXRpbHMvZG9tLyIsInNvdXJjZXMiOlsic2V0LXJhbmdlLW9mZnNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVDOzs7R0FHRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsY0FBYyxDQUMxQixLQUFZLEVBQ1osSUFBaUIsRUFDakIsTUFBYyxFQUNkLE1BQTZCO0lBRTdCLE1BQU0sRUFBQyxhQUFhLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFFN0IsSUFBSSxDQUFDLGFBQWEsRUFBRTtRQUNoQixPQUFPO0tBQ1Y7SUFFRCxNQUFNLFVBQVUsR0FBRyxhQUFhLENBQUMsZ0JBQWdCLENBQzdDLElBQUksRUFDSixVQUFVLENBQUMsU0FBUyxFQUNwQixhQUFhLEVBQ2IsS0FBSyxDQUNSLENBQUM7SUFFRixVQUFVLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztJQUU5QixPQUFPLFVBQVUsQ0FBQyxRQUFRLEVBQUUsRUFBRTtRQUMxQixJQUFJLFVBQVUsQ0FBQyxXQUFXLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDcEQsTUFBTSxNQUFNLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxTQUFTO2dCQUMzQyxDQUFDLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsTUFBTTtnQkFDekMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUVSLElBQUksTUFBTSxHQUFHLE1BQU0sRUFBRTtnQkFDakIsTUFBTSxJQUFJLE1BQU0sQ0FBQzthQUNwQjtpQkFBTTtnQkFDSCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQzthQUNqRDtTQUNKO0tBQ0o7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdmdOb2RlRmlsdGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogdXNlIHtAbGluayB0dWlTZXRSYW5nZU9mZnNldH0gaW5zdGVhZFxuICogUmFuZ2Uuc2V0U3RhcnQvc2V0LWVuZCwgZXhjZXB0IGl0IHVzZXMgb2Zmc2V0IGluIGNoYXJhY3RlcnMgb25seVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gc2V0UmFuZ2VPZmZzZXQoXG4gICAgcmFuZ2U6IFJhbmdlLFxuICAgIG5vZGU6IEhUTUxFbGVtZW50LFxuICAgIG9mZnNldDogbnVtYmVyLFxuICAgIG1ldGhvZDogJ3NldEVuZCcgfCAnc2V0U3RhcnQnLFxuKTogdm9pZCB7XG4gICAgY29uc3Qge293bmVyRG9jdW1lbnR9ID0gbm9kZTtcblxuICAgIGlmICghb3duZXJEb2N1bWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdHJlZVdhbGtlciA9IG93bmVyRG9jdW1lbnQuY3JlYXRlVHJlZVdhbGtlcihcbiAgICAgICAgbm9kZSxcbiAgICAgICAgTm9kZUZpbHRlci5TSE9XX1RFWFQsXG4gICAgICAgIHN2Z05vZGVGaWx0ZXIsXG4gICAgICAgIGZhbHNlLFxuICAgICk7XG5cbiAgICB0cmVlV2Fsa2VyLmN1cnJlbnROb2RlID0gbm9kZTtcblxuICAgIHdoaWxlICh0cmVlV2Fsa2VyLm5leHROb2RlKCkpIHtcbiAgICAgICAgaWYgKHRyZWVXYWxrZXIuY3VycmVudE5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICBjb25zdCBsZW5ndGggPSB0cmVlV2Fsa2VyLmN1cnJlbnROb2RlLm5vZGVWYWx1ZVxuICAgICAgICAgICAgICAgID8gdHJlZVdhbGtlci5jdXJyZW50Tm9kZS5ub2RlVmFsdWUubGVuZ3RoXG4gICAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgICBpZiAob2Zmc2V0ID4gbGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgb2Zmc2V0IC09IGxlbmd0aDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VbbWV0aG9kXSh0cmVlV2Fsa2VyLmN1cnJlbnROb2RlLCBvZmZzZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgdHVpU2V0UmFuZ2VPZmZzZXQgPSBzZXRSYW5nZU9mZnNldDtcbiJdfQ==