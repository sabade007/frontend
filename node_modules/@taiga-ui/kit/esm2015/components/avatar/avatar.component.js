import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';
import { sizeBigger } from '@taiga-ui/core';
import { stringHashToHsl } from '@taiga-ui/kit/utils/format';
import { TUI_AVATAR_OPTIONS } from './avatar-options';
let TuiAvatarComponent = class TuiAvatarComponent {
    constructor(options) {
        this.options = options;
        this.size = this.options.size;
        this.text = '';
        this.autoColor = this.options.autoColor;
        this.rounded = this.options.rounded;
        this.avatarUrl = null;
        this.isUrlValid = false;
    }
    set avatarUrlSetter(avatarUrl) {
        this.avatarUrl = avatarUrl;
        this.isUrlValid = !!avatarUrl && !this.iconAvatar;
    }
    get bgColor() {
        return this.autoColor ? stringHashToHsl(this.text) : '';
    }
    get hasAvatar() {
        return this.avatarUrl !== null && this.isUrlValid;
    }
    get iconAvatar() {
        var _a;
        return (typeof this.avatarUrl === 'string' && !!((_a = this.avatarUrl) === null || _a === void 0 ? void 0 : _a.startsWith('tuiIcon')));
    }
    get computedText() {
        if (this.hasAvatar || this.iconAvatar || this.text === '') {
            return '';
        }
        const words = this.text.split(' ');
        return words.length > 1 && sizeBigger(this.size)
            ? words[0].slice(0, 1) + words[1].slice(0, 1)
            : words[0].slice(0, 1);
    }
    get stringAvatar() {
        return this.iconAvatar ? String(this.avatarUrl) : '';
    }
    onError() {
        this.isUrlValid = false;
    }
};
TuiAvatarComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_AVATAR_OPTIONS,] }] }
];
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiAvatarComponent.prototype, "size", void 0);
__decorate([
    Input('avatarUrl'),
    tuiRequiredSetter()
], TuiAvatarComponent.prototype, "avatarUrlSetter", null);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiAvatarComponent.prototype, "text", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiAvatarComponent.prototype, "autoColor", void 0);
__decorate([
    Input(),
    HostBinding('class._rounded'),
    tuiDefaultProp()
], TuiAvatarComponent.prototype, "rounded", void 0);
__decorate([
    HostBinding('style.background')
], TuiAvatarComponent.prototype, "bgColor", null);
__decorate([
    HostBinding('class._has-avatar')
], TuiAvatarComponent.prototype, "hasAvatar", null);
TuiAvatarComponent = __decorate([
    Component({
        selector: 'tui-avatar',
        template: "<img\n    *ngIf=\"isUrlValid\"\n    loading=\"lazy\"\n    class=\"t-image\"\n    [attr.alt]=\"text\"\n    [src]=\"avatarUrl || ''\"\n    (error)=\"onError()\"\n/>\n<tui-svg\n    *ngIf=\"stringAvatar\"\n    class=\"t-icon\"\n    [src]=\"stringAvatar\"\n></tui-svg>\n<span class=\"t-text\">{{ computedText }}</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{position:relative;display:flex;flex-shrink:0;border-radius:var(--tui-radius-m);color:var(--tui-secondary-active);text-align:center;text-transform:uppercase;justify-content:center;align-items:center;background:var(--tui-avatar-background,currentColor);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden}:host[data-size=xs]{font:var(--tui-font-text-s);width:1.5rem;height:1.5rem}:host[data-size='s']{font:var(--tui-font-text-m);width:2rem;height:2rem}:host[data-size='m']{font:var(--tui-font-text-l);width:3rem;height:3rem}:host[data-size='l']{font:var(--tui-font-heading-5);width:4rem;height:4rem;border-radius:var(--tui-radius-l)}:host[data-size=xl]{font:var(--tui-font-heading-3);width:6rem;height:6rem;border-radius:var(--tui-radius-l)}:host[data-size=xxl]{font:var(--tui-font-heading-1);width:9rem;height:9rem;border-radius:var(--tui-radius-l)}:host._has-avatar{background-color:transparent}:host._rounded{border-radius:100%}.t-image{width:100%;height:100%;object-fit:cover}.t-text{color:var(--tui-avatar-color,var(--tui-text-01))}.t-icon{position:absolute;top:0;left:0;width:100%;height:100%;color:var(--tui-avatar-color,var(--tui-text-01))}:host[data-size=xs] .t-icon{transform:scale(.5)}:host[data-size='m'] .t-icon{transform:scale(1.6)}:host[data-size='l'] .t-icon{transform:scale(2)}:host[data-size=xl] .t-icon{transform:scale(3.2)}::ng-deep .tui-avatar-stack{display:flex;width:-webkit-min-content;width:-moz-min-content;width:min-content}:host-context(.tui-avatar-stack)[data-size=xs]{margin-right:-.625rem;box-shadow:0 0 0 1px var(--tui-avatar-border,var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size='s']{margin-right:-.875rem;box-shadow:0 0 0 1px var(--tui-avatar-border,var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size='m']{margin-right:-1.25rem;box-shadow:0 0 0 2px var(--tui-avatar-border,var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size='l']{margin-right:-1.625rem;box-shadow:0 0 0 2px var(--tui-avatar-border,var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=xl]{margin-right:-2.25rem;box-shadow:0 0 0 3px var(--tui-avatar-border,var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=xxl]{margin-right:-3.375rem;box-shadow:0 0 0 3px var(--tui-avatar-border,var(--tui-base-01))}"]
    }),
    __param(0, Inject(TUI_AVATAR_OPTIONS))
], TuiAvatarComponent);
export { TuiAvatarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9hdmF0YXIvIiwic291cmNlcyI6WyJhdmF0YXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsY0FBYyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFFM0QsT0FBTyxFQUFDLGtCQUFrQixFQUFtQixNQUFNLGtCQUFrQixDQUFDO0FBUXRFLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0lBOEIzQixZQUF5RCxPQUF5QjtRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQTFCbEYsU0FBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBV3pCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFJVixjQUFTLEdBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFLNUMsWUFBTyxHQUFZLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBRXhDLGNBQVMsR0FBb0MsSUFBSSxDQUFDO1FBRWxELGVBQVUsR0FBRyxLQUFLLENBQUM7SUFFa0UsQ0FBQztJQXRCdEYsSUFBSSxlQUFlLENBQUMsU0FBMEM7UUFDMUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN0RCxDQUFDO0lBc0JELElBQUksT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzVELENBQUM7SUFHRCxJQUFJLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDdEQsQ0FBQztJQUVELElBQUksVUFBVTs7UUFDVixPQUFPLENBQ0gsT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFFBQVEsSUFBSSxDQUFDLFFBQUMsSUFBSSxDQUFDLFNBQVMsMENBQUUsVUFBVSxDQUFDLFNBQVMsRUFBQyxDQUNoRixDQUFDO0lBQ04sQ0FBQztJQUVELElBQUksWUFBWTtRQUNaLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxFQUFFO1lBQ3ZELE9BQU8sRUFBRSxDQUFDO1NBQ2I7UUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVuQyxPQUFPLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQzVDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDN0MsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUN6RCxDQUFDO0lBRUQsT0FBTztRQUNILElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7Q0FDSixDQUFBOzs0Q0FyQ2dCLE1BQU0sU0FBQyxrQkFBa0I7O0FBMUJ0QztJQUhDLEtBQUssRUFBRTtJQUNQLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztJQUM3QixjQUFjLEVBQUU7Z0RBQ1E7QUFJekI7SUFGQyxLQUFLLENBQUMsV0FBVyxDQUFDO0lBQ2xCLGlCQUFpQixFQUFFO3lEQUluQjtBQUlEO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO2dEQUNQO0FBSVY7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7cURBQzJCO0FBSzVDO0lBSEMsS0FBSyxFQUFFO0lBQ1AsV0FBVyxDQUFDLGdCQUFnQixDQUFDO0lBQzdCLGNBQWMsRUFBRTttREFDdUI7QUFTeEM7SUFEQyxXQUFXLENBQUMsa0JBQWtCLENBQUM7aURBRy9CO0FBR0Q7SUFEQyxXQUFXLENBQUMsbUJBQW1CLENBQUM7bURBR2hDO0FBeENRLGtCQUFrQjtJQU45QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsWUFBWTtRQUN0Qix1VUFBcUM7UUFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O0tBQ2xELENBQUM7SUErQmUsV0FBQSxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtHQTlCOUIsa0JBQWtCLENBbUU5QjtTQW5FWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTYWZlUmVzb3VyY2VVcmx9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHt0dWlEZWZhdWx0UHJvcCwgdHVpUmVxdWlyZWRTZXR0ZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtzaXplQmlnZ2VyfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge3N0cmluZ0hhc2hUb0hzbH0gZnJvbSAnQHRhaWdhLXVpL2tpdC91dGlscy9mb3JtYXQnO1xuXG5pbXBvcnQge1RVSV9BVkFUQVJfT1BUSU9OUywgVHVpQXZhdGFyT3B0aW9uc30gZnJvbSAnLi9hdmF0YXItb3B0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWF2YXRhcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2F2YXRhci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9hdmF0YXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlBdmF0YXJDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzaXplID0gdGhpcy5vcHRpb25zLnNpemU7XG5cbiAgICBASW5wdXQoJ2F2YXRhclVybCcpXG4gICAgQHR1aVJlcXVpcmVkU2V0dGVyKClcbiAgICBzZXQgYXZhdGFyVXJsU2V0dGVyKGF2YXRhclVybDogU2FmZVJlc291cmNlVXJsIHwgc3RyaW5nIHwgbnVsbCkge1xuICAgICAgICB0aGlzLmF2YXRhclVybCA9IGF2YXRhclVybDtcbiAgICAgICAgdGhpcy5pc1VybFZhbGlkID0gISFhdmF0YXJVcmwgJiYgIXRoaXMuaWNvbkF2YXRhcjtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgdGV4dCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGF1dG9Db2xvcjogYm9vbGVhbiA9IHRoaXMub3B0aW9ucy5hdXRvQ29sb3I7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX3JvdW5kZWQnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgcm91bmRlZDogYm9vbGVhbiA9IHRoaXMub3B0aW9ucy5yb3VuZGVkO1xuXG4gICAgYXZhdGFyVXJsOiBTYWZlUmVzb3VyY2VVcmwgfCBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAgIGlzVXJsVmFsaWQgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX0FWQVRBUl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUF2YXRhck9wdGlvbnMpIHt9XG5cbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLmJhY2tncm91bmQnKVxuICAgIGdldCBiZ0NvbG9yKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dG9Db2xvciA/IHN0cmluZ0hhc2hUb0hzbCh0aGlzLnRleHQpIDogJyc7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5faGFzLWF2YXRhcicpXG4gICAgZ2V0IGhhc0F2YXRhcigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXZhdGFyVXJsICE9PSBudWxsICYmIHRoaXMuaXNVcmxWYWxpZDtcbiAgICB9XG5cbiAgICBnZXQgaWNvbkF2YXRhcigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHR5cGVvZiB0aGlzLmF2YXRhclVybCA9PT0gJ3N0cmluZycgJiYgISF0aGlzLmF2YXRhclVybD8uc3RhcnRzV2l0aCgndHVpSWNvbicpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZ2V0IGNvbXB1dGVkVGV4dCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAodGhpcy5oYXNBdmF0YXIgfHwgdGhpcy5pY29uQXZhdGFyIHx8IHRoaXMudGV4dCA9PT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHdvcmRzID0gdGhpcy50ZXh0LnNwbGl0KCcgJyk7XG5cbiAgICAgICAgcmV0dXJuIHdvcmRzLmxlbmd0aCA+IDEgJiYgc2l6ZUJpZ2dlcih0aGlzLnNpemUpXG4gICAgICAgICAgICA/IHdvcmRzWzBdLnNsaWNlKDAsIDEpICsgd29yZHNbMV0uc2xpY2UoMCwgMSlcbiAgICAgICAgICAgIDogd29yZHNbMF0uc2xpY2UoMCwgMSk7XG4gICAgfVxuXG4gICAgZ2V0IHN0cmluZ0F2YXRhcigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5pY29uQXZhdGFyID8gU3RyaW5nKHRoaXMuYXZhdGFyVXJsKSA6ICcnO1xuICAgIH1cblxuICAgIG9uRXJyb3IoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXNVcmxWYWxpZCA9IGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==