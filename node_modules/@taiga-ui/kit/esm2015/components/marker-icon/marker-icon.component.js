import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { tuiDefaultProp, TuiDestroyService } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_MODE, } from '@taiga-ui/core';
import { Observable } from 'rxjs';
let TuiMarkerIconComponent = class TuiMarkerIconComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.mode = null;
        this.size = 'm';
        this.src = '';
    }
};
TuiMarkerIconComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input(),
    HostBinding('attr.data-marker-mode'),
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "mode", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "src", void 0);
TuiMarkerIconComponent = __decorate([
    Component({
        selector: 'tui-marker-icon',
        template: "<tui-svg\n    class=\"t-icon\"\n    [src]=\"src\"\n></tui-svg>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [TuiDestroyService, MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
        styles: [":host{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;position:relative;display:inline-flex;align-items:center;justify-content:center;flex-shrink:0;border-radius:100%;color:var(--tui-text-03);background-color:var(--tui-base-02);background-size:cover!important;transition-property:color,background-color}:host[data-size=xs]{width:2rem;height:2rem}:host[data-size='s']{width:3rem;height:3rem}:host[data-size='m']{width:4rem;height:4rem}:host[data-size='l']{width:6rem;height:6rem}:host[data-size=xl]{width:8rem;height:8rem}:host[data-mode=onDark]:not([data-marker-mode]){color:var(--tui-base-01);background-color:var(--tui-clear-inverse)}:host[data-marker-mode=primary]{color:var(--tui-primary-text);background-color:var(--tui-primary)}:host[data-marker-mode=white]{color:var(--tui-text-03);background-color:var(--tui-base-01)}:host[data-marker-mode=warning]{color:var(--tui-warning-fill);background-color:var(--tui-warning-bg)}:host[data-marker-mode=secondary]{color:var(--tui-base-01);background-color:var(--tui-info-fill)}:host[data-marker-mode=error]{color:var(--tui-error-fill);background-color:var(--tui-error-bg)}:host[data-marker-mode=success]{color:var(--tui-success-fill);background-color:var(--tui-success-bg)}:host[data-marker-mode=link]{transition-property:color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;cursor:pointer;color:var(--tui-link);background-color:var(--tui-secondary)}:host[data-marker-mode=link]:hover{color:var(--tui-link-hover);background-color:var(--tui-secondary-hover)}:host[data-marker-mode=link]:active{color:var(--tui-link-hover);background-color:var(--tui-secondary-active)}.t-icon{width:3rem;height:3rem}:host[data-size=xs] .t-icon{transform:scale(.667)}:host[data-size='m'] .t-icon{transform:scale(1.333)}:host[data-size='l'] .t-icon{transform:scale(2)}:host[data-size=xl] .t-icon{transform:scale(2.667)}"]
    }),
    __param(0, Inject(TUI_MODE))
], TuiMarkerIconComponent);
export { TuiMarkerIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2VyLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL21hcmtlci1pY29uLyIsInNvdXJjZXMiOlsibWFya2VyLWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsY0FBYyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFDSCxhQUFhLEVBQ2IsUUFBUSxHQUlYLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEIsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQVloQyxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtJQWUvQixZQUF1QyxLQUF1QztRQUF2QyxVQUFLLEdBQUwsS0FBSyxDQUFrQztRQVg5RSxTQUFJLEdBQThCLElBQUksQ0FBQztRQUt2QyxTQUFJLEdBQTBCLEdBQUcsQ0FBQztRQUlsQyxRQUFHLEdBQUcsRUFBRSxDQUFDO0lBRXdFLENBQUM7Q0FDckYsQ0FBQTs7WUFEaUQsVUFBVSx1QkFBM0MsTUFBTSxTQUFDLFFBQVE7O0FBWDVCO0lBSEMsS0FBSyxFQUFFO0lBQ1AsV0FBVyxDQUFDLHVCQUF1QixDQUFDO0lBQ3BDLGNBQWMsRUFBRTtvREFDc0I7QUFLdkM7SUFIQyxLQUFLLEVBQUU7SUFDUCxXQUFXLENBQUMsZ0JBQWdCLENBQUM7SUFDN0IsY0FBYyxFQUFFO29EQUNpQjtBQUlsQztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTttREFDUjtBQWJBLHNCQUFzQjtJQVZsQyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLDRFQUEwQztRQUUxQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLENBQUM7UUFDN0MsSUFBSSxFQUFFO1lBQ0Ysb0JBQW9CLEVBQUUsT0FBTztTQUNoQzs7S0FDSixDQUFDO0lBZ0JlLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0dBZnBCLHNCQUFzQixDQWdCbEM7U0FoQlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3AsIFR1aURlc3Ryb3lTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgTU9ERV9QUk9WSURFUixcbiAgICBUVUlfTU9ERSxcbiAgICBUdWlCcmlnaHRuZXNzLFxuICAgIFR1aVNpemVYTCxcbiAgICBUdWlTaXplWFMsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VHVpTWFya2VySWNvbk1vZGVUfSBmcm9tICdAdGFpZ2EtdWkva2l0L3R5cGVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLW1hcmtlci1pY29uJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbWFya2VyLWljb24udGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbWFya2VyLWljb24uc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlLCBNT0RFX1BST1ZJREVSXSxcbiAgICBob3N0OiB7XG4gICAgICAgICcoJC5kYXRhLW1vZGUuYXR0ciknOiAnbW9kZSQnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aU1hcmtlckljb25Db21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbWFya2VyLW1vZGUnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbW9kZTogVHVpTWFya2VySWNvbk1vZGVUIHwgbnVsbCA9IG51bGw7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2l6ZTogVHVpU2l6ZVhMIHwgVHVpU2l6ZVhTID0gJ20nO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNyYyA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+KSB7fVxufVxuIl19