import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { DEFAULT_ROUTER_LINK_OPTIONS } from '@taiga-ui/kit/constants';
/** @deprecated use `<tui-breadcrumbs>` from {@link TuiBreadcrumbsWrapperComponent} */
let TuiBreadcrumbsComponent = class TuiBreadcrumbsComponent {
    constructor() {
        this.items = [];
        this.size = 'm';
        this.routerLinkOptions = ({ routerLinkOptions, }) => routerLinkOptions || DEFAULT_ROUTER_LINK_OPTIONS;
    }
};
__decorate([
    Input(),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "items", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "size", void 0);
TuiBreadcrumbsComponent = __decorate([
    Component({
        selector: 'tui-breadcrumbs[items]',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<ng-container *ngFor=\"let item of items; last as lastItem\">\n    <ng-container *tuiLet=\"item | tuiMapper: routerLinkOptions as options\">\n        <a\n            #rla=\"routerLinkActive\"\n            tuiLink\n            tuiMode=\"onLight\"\n            routerLinkActive=\"t-active-link\"\n            [attr.tabindex]=\"rla.isActive ? -1 : null\"\n            [fragment]=\"options.fragment\"\n            [preserveFragment]=\"options.preserveFragment\"\n            [replaceUrl]=\"options.replaceUrl\"\n            [routerLink]=\"item.routerLink\"\n            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions || {exact: false}\"\n            [skipLocationChange]=\"options.skipLocationChange\"\n            [queryParams]=\"options.queryParams\"\n            [target]=\"options.target\"\n        >\n            {{ item.caption }}\n        </a>\n        <tui-svg\n            *ngIf=\"!lastItem\"\n            src=\"tuiIconChevronRight\"\n            class=\"t-icon\"\n        ></tui-svg>\n    </ng-container>\n</ng-container>\n",
        styles: [":host{display:flex;align-items:center;height:2.5rem}:host[data-size='m']{font:var(--tui-font-text-s)}:host[data-size='l']{font:var(--tui-font-text-m)}.t-icon{margin:0 .25rem;color:var(--tui-text-03)}a.t-active-link[data-mode=onLight]{color:var(--tui-text-03);pointer-events:none}"]
    })
], TuiBreadcrumbsComponent);
export { TuiBreadcrumbsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2JyZWFkY3J1bWJzLyIsInNvdXJjZXMiOlsiYnJlYWRjcnVtYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUV4RCxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUdwRSxzRkFBc0Y7QUFPdEYsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBdUI7SUFBcEM7UUFHSSxVQUFLLEdBQWtDLEVBQUUsQ0FBQztRQUsxQyxTQUFJLEdBQWEsR0FBRyxDQUFDO1FBRVosc0JBQWlCLEdBQXVDLENBQUMsRUFDOUQsaUJBQWlCLEdBQ3BCLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixJQUFJLDJCQUEyQixDQUFDO0lBQzNELENBQUM7Q0FBQSxDQUFBO0FBVkc7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7c0RBQ3lCO0FBSzFDO0lBSEMsS0FBSyxFQUFFO0lBQ1AsV0FBVyxDQUFDLGdCQUFnQixDQUFDO0lBQzdCLGNBQWMsRUFBRTtxREFDSTtBQVJaLHVCQUF1QjtJQU5uQyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsd0JBQXdCO1FBQ2xDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLDJoQ0FBMEM7O0tBRTdDLENBQUM7R0FDVyx1QkFBdUIsQ0FhbkM7U0FiWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aURlZmF1bHRQcm9wLCBUdWlNYXBwZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplTH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtERUZBVUxUX1JPVVRFUl9MSU5LX09QVElPTlN9IGZyb20gJ0B0YWlnYS11aS9raXQvY29uc3RhbnRzJztcbmltcG9ydCB7VHVpQnJlYWRDcnVtYnNJdGVtfSBmcm9tICdAdGFpZ2EtdWkva2l0L2ludGVyZmFjZXMnO1xuXG4vKiogQGRlcHJlY2F0ZWQgdXNlIGA8dHVpLWJyZWFkY3J1bWJzPmAgZnJvbSB7QGxpbmsgVHVpQnJlYWRjcnVtYnNXcmFwcGVyQ29tcG9uZW50fSAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktYnJlYWRjcnVtYnNbaXRlbXNdJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYnJlYWRjcnVtYnMudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYnJlYWRjcnVtYnMuc3R5bGUubGVzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlCcmVhZGNydW1ic0NvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGl0ZW1zOiByZWFkb25seSBUdWlCcmVhZENydW1ic0l0ZW1bXSA9IFtdO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zaXplJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNpemU6IFR1aVNpemVMID0gJ20nO1xuXG4gICAgcmVhZG9ubHkgcm91dGVyTGlua09wdGlvbnM6IFR1aU1hcHBlcjxUdWlCcmVhZENydW1ic0l0ZW0sIGFueT4gPSAoe1xuICAgICAgICByb3V0ZXJMaW5rT3B0aW9ucyxcbiAgICB9KSA9PiByb3V0ZXJMaW5rT3B0aW9ucyB8fCBERUZBVUxUX1JPVVRFUl9MSU5LX09QVElPTlM7XG59XG4iXX0=