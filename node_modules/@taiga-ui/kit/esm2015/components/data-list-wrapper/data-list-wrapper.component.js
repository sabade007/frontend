var TuiDataListWrapperComponent_1;
import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Inject, Input, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_ACCESSOR } from '@taiga-ui/core';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
let TuiDataListWrapperComponent = TuiDataListWrapperComponent_1 = class TuiDataListWrapperComponent extends AbstractTuiDataListWrapper {
    constructor(itemsHandlers) {
        super(itemsHandlers);
        this.items = [];
    }
};
TuiDataListWrapperComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ITEMS_HANDLERS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "items", void 0);
TuiDataListWrapperComponent = TuiDataListWrapperComponent_1 = __decorate([
    Component({
        selector: 'tui-data-list-wrapper:not([labels])',
        template: "<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n>\n    <button\n        *ngFor=\"let item of items\"\n        #elementRef=\"elementRef\"\n        tuiElement\n        tuiOption\n        automation-id=\"tui-data-list-wrapper__option\"\n        [size]=\"size\"\n        [value]=\"item\"\n        [disabled]=\"disabledItemHandler(item)\"\n    >\n        <span\n            polymorpheus-outlet\n            class=\"t-content\"\n            [content]=\"itemContent\"\n            [context]=\"getContext(item, elementRef)\"\n        ></span>\n    </button>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader\n        automation-id=\"tui-data-list-wrapper__loader\"\n        class=\"t-loader\"\n    ></tui-loader>\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [
            {
                provide: TUI_DATA_LIST_ACCESSOR,
                useExisting: forwardRef(() => TuiDataListWrapperComponent_1),
            },
        ],
        styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}"]
    }),
    __param(0, Inject(TUI_ITEMS_HANDLERS))
], TuiDataListWrapperComponent);
export { TuiDataListWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2RhdGEtbGlzdC13cmFwcGVyLyIsInNvdXJjZXMiOlsiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3QyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUMsa0JBQWtCLEVBQW1CLE1BQU0sc0JBQXNCLENBQUM7QUFFMUUsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFjL0QsSUFBYSwyQkFBMkIsbUNBQXhDLE1BQWEsMkJBQStCLFNBQVEsMEJBQTZCO0lBSzdFLFlBQXdDLGFBQWtDO1FBQ3RFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUh6QixVQUFLLEdBQXdCLEVBQUUsQ0FBQztJQUloQyxDQUFDO0NBQ0osQ0FBQTs7NENBSGdCLE1BQU0sU0FBQyxrQkFBa0I7O0FBRnRDO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFOzBEQUNlO0FBSHZCLDJCQUEyQjtJQVp2QyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUscUNBQXFDO1FBQy9DLCt3QkFBZ0Q7UUFFaEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0MsU0FBUyxFQUFFO1lBQ1A7Z0JBQ0ksT0FBTyxFQUFFLHNCQUFzQjtnQkFDL0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyw2QkFBMkIsQ0FBQzthQUM3RDtTQUNKOztLQUNKLENBQUM7SUFNZSxXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO0dBTDlCLDJCQUEyQixDQVF2QztTQVJZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIGZvcndhcmRSZWYsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUVUlfREFUQV9MSVNUX0FDQ0VTU09SfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1RVSV9JVEVNU19IQU5ETEVSUywgVHVpSXRlbXNIYW5kbGVyc30gZnJvbSAnQHRhaWdhLXVpL2tpdC90b2tlbnMnO1xuXG5pbXBvcnQge0Fic3RyYWN0VHVpRGF0YUxpc3RXcmFwcGVyfSBmcm9tICcuL2RhdGEtbGlzdC13cmFwcGVyJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktZGF0YS1saXN0LXdyYXBwZXI6bm90KFtsYWJlbHNdKScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RhdGEtbGlzdC13cmFwcGVyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RhdGEtbGlzdC13cmFwcGVyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0RBVEFfTElTVF9BQ0NFU1NPUixcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFR1aURhdGFMaXN0V3JhcHBlckNvbXBvbmVudCksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRGF0YUxpc3RXcmFwcGVyQ29tcG9uZW50PFQ+IGV4dGVuZHMgQWJzdHJhY3RUdWlEYXRhTGlzdFdyYXBwZXI8VD4ge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBpdGVtczogcmVhZG9ubHkgVFtdIHwgbnVsbCA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfSVRFTVNfSEFORExFUlMpIGl0ZW1zSGFuZGxlcnM6IFR1aUl0ZW1zSGFuZGxlcnM8VD4pIHtcbiAgICAgICAgc3VwZXIoaXRlbXNIYW5kbGVycyk7XG4gICAgfVxufVxuIl19