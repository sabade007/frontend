var TuiDataListGroupWrapperComponent_1;
import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Inject, Input, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk/decorators';
import { TUI_DATA_LIST_ACCESSOR } from '@taiga-ui/core/tokens';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
let TuiDataListGroupWrapperComponent = TuiDataListGroupWrapperComponent_1 = class TuiDataListGroupWrapperComponent extends AbstractTuiDataListWrapper {
    constructor(itemsHandlers) {
        super(itemsHandlers);
        this.items = [];
        this.labels = [];
    }
};
TuiDataListGroupWrapperComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ITEMS_HANDLERS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListGroupWrapperComponent.prototype, "items", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListGroupWrapperComponent.prototype, "labels", void 0);
TuiDataListGroupWrapperComponent = TuiDataListGroupWrapperComponent_1 = __decorate([
    Component({
        selector: 'tui-data-list-wrapper[labels]',
        template: "<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n>\n    <tui-opt-group\n        *ngFor=\"let group of items; let index = index\"\n        [label]=\"labels[index]\"\n    >\n        <button\n            *ngFor=\"let item of group\"\n            #elementRef=\"elementRef\"\n            tuiElement\n            tuiOption\n            automation-id=\"tui-data-list-wrapper__option\"\n            [size]=\"size\"\n            [value]=\"item\"\n            [disabled]=\"disabledItemHandler(item)\"\n        >\n            <span\n                polymorpheus-outlet\n                class=\"t-content\"\n                [content]=\"itemContent\"\n                [context]=\"getContext(item, elementRef)\"\n            ></span>\n        </button>\n    </tui-opt-group>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader class=\"t-loader\"></tui-loader>\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [
            {
                provide: TUI_DATA_LIST_ACCESSOR,
                useExisting: forwardRef(() => TuiDataListGroupWrapperComponent_1),
            },
        ],
        styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}"]
    }),
    __param(0, Inject(TUI_ITEMS_HANDLERS))
], TuiDataListGroupWrapperComponent);
export { TuiDataListGroupWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2RhdGEtbGlzdC13cmFwcGVyLyIsInNvdXJjZXMiOlsiZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3hELE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUUxRSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQWMvRCxJQUFhLGdDQUFnQyx3Q0FBN0MsTUFBYSxnQ0FBb0MsU0FBUSwwQkFBNkI7SUFTbEYsWUFBd0MsYUFBa0M7UUFDdEUsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBUHpCLFVBQUssR0FBMEIsRUFBRSxDQUFDO1FBSWxDLFdBQU0sR0FBc0IsRUFBRSxDQUFDO0lBSS9CLENBQUM7Q0FDSixDQUFBOzs0Q0FIZ0IsTUFBTSxTQUFDLGtCQUFrQjs7QUFOdEM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7K0RBQ2lCO0FBSWxDO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO2dFQUNjO0FBUHRCLGdDQUFnQztJQVo1QyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsK0JBQStCO1FBQ3pDLHk1QkFBc0Q7UUFFdEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0MsU0FBUyxFQUFFO1lBQ1A7Z0JBQ0ksT0FBTyxFQUFFLHNCQUFzQjtnQkFDL0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxrQ0FBZ0MsQ0FBQzthQUNsRTtTQUNKOztLQUNKLENBQUM7SUFVZSxXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO0dBVDlCLGdDQUFnQyxDQVk1QztTQVpZLGdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIGZvcndhcmRSZWYsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGVjb3JhdG9ycyc7XG5pbXBvcnQge1RVSV9EQVRBX0xJU1RfQUNDRVNTT1J9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1RVSV9JVEVNU19IQU5ETEVSUywgVHVpSXRlbXNIYW5kbGVyc30gZnJvbSAnQHRhaWdhLXVpL2tpdC90b2tlbnMnO1xuXG5pbXBvcnQge0Fic3RyYWN0VHVpRGF0YUxpc3RXcmFwcGVyfSBmcm9tICcuL2RhdGEtbGlzdC13cmFwcGVyJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktZGF0YS1saXN0LXdyYXBwZXJbbGFiZWxzXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RhdGEtbGlzdC1ncm91cC13cmFwcGVyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RhdGEtbGlzdC13cmFwcGVyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0RBVEFfTElTVF9BQ0NFU1NPUixcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFR1aURhdGFMaXN0R3JvdXBXcmFwcGVyQ29tcG9uZW50KSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEYXRhTGlzdEdyb3VwV3JhcHBlckNvbXBvbmVudDxUPiBleHRlbmRzIEFic3RyYWN0VHVpRGF0YUxpc3RXcmFwcGVyPFQ+IHtcbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaXRlbXM6IHJlYWRvbmx5IFRbXVtdIHwgbnVsbCA9IFtdO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGxhYmVsczogcmVhZG9ubHkgc3RyaW5nW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX0lURU1TX0hBTkRMRVJTKSBpdGVtc0hhbmRsZXJzOiBUdWlJdGVtc0hhbmRsZXJzPFQ+KSB7XG4gICAgICAgIHN1cGVyKGl0ZW1zSGFuZGxlcnMpO1xuICAgIH1cbn1cbiJdfQ==