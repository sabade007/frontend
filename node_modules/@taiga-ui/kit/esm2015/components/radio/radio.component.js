var TuiRadioComponent_1;
import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, HostBinding, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, isNativeFocused, TUI_DEFAULT_IDENTITY_MATCHER, TUI_FOCUSABLE_ITEM_ACCESSOR, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TUI_ANIMATION_OPTIONS, tuiScaleIn } from '@taiga-ui/core';
import { TuiRadioGroupComponent } from '@taiga-ui/kit/components/radio-group';
import { TUI_RADIO_OPTIONS } from './radio-options';
// @dynamic
let TuiRadioComponent = TuiRadioComponent_1 = class TuiRadioComponent extends AbstractTuiNullableControl {
    constructor(control, changeDetectorRef, animationOptions, options, radioGroup) {
        super(control, changeDetectorRef);
        this.animationOptions = animationOptions;
        this.options = options;
        this.radioGroup = radioGroup;
        this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        this.name = null;
        this.size = this.options.size;
        this.pseudoDisabled = false;
        this.animation = Object.assign({ value: '' }, this.animationOptions);
    }
    get appearance() {
        return this.checked
            ? this.options.appearances.checked
            : this.options.appearances.unchecked;
    }
    get computedDisabled() {
        return this.disabled || this.pseudoDisabled;
    }
    get nativeFocusableElement() {
        return !this.focusableElement || this.computedDisabled
            ? null
            : this.focusableElement.nativeElement;
    }
    get focused() {
        return isNativeFocused(this.nativeFocusableElement);
    }
    get checked() {
        return this.value === null
            ? this.item === null
            : this.item !== undefined &&
                this.item !== null &&
                this.identityMatcher(this.value, this.item);
    }
    get computedName() {
        return this.name || this.radioGroupName || this.controlName || '';
    }
    get isFocusable() {
        return !this.readOnly && this.computedFocusable;
    }
    onChecked(checked) {
        if (checked) {
            this.updateValue(this.item !== undefined ? this.item : this.fallbackValue);
        }
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onHovered(hovered) {
        this.updateHovered(hovered);
    }
    onPressed(pressed) {
        this.updatePressed(pressed);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
    get radioGroupName() {
        return this.radioGroup === null ? null : this.radioGroup.name;
    }
};
TuiRadioComponent.ctorParameters = () => [
    { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
    { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ANIMATION_OPTIONS,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_RADIO_OPTIONS,] }] },
    { type: TuiRadioGroupComponent, decorators: [{ type: Optional }, { type: Inject, args: [TuiRadioGroupComponent,] }] }
];
__decorate([
    ViewChild('focusableElement')
], TuiRadioComponent.prototype, "focusableElement", void 0);
__decorate([
    Input()
], TuiRadioComponent.prototype, "item", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiRadioComponent.prototype, "identityMatcher", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiRadioComponent.prototype, "name", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-size'),
    tuiDefaultProp()
], TuiRadioComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiRadioComponent.prototype, "pseudoDisabled", void 0);
__decorate([
    HostBinding('class._disabled')
], TuiRadioComponent.prototype, "computedDisabled", null);
TuiRadioComponent = TuiRadioComponent_1 = __decorate([
    Component({
        selector: 'tui-radio',
        template: "<tui-wrapper\n    [appearance]=\"appearance\"\n    [disabled]=\"computedDisabled\"\n    [focused]=\"computedFocusVisible\"\n    [hovered]=\"computedHovered\"\n    [pressed]=\"computedPressed\"\n    [invalid]=\"computedInvalid\"\n>\n    <div\n        *ngIf=\"checked\"\n        class=\"t-mark\"\n        [@tuiScaleIn]=\"animation\"\n    ></div>\n    <input\n        #focusableElement\n        type=\"radio\"\n        class=\"t-native\"\n        [id]=\"id\"\n        [attr.name]=\"computedName\"\n        [disabled]=\"computedDisabled\"\n        [tuiChecked]=\"checked\"\n        [tuiFocusable]=\"isFocusable\"\n        (tuiFocusedChange)=\"onFocused($event)\"\n        (tuiHoveredChange)=\"onHovered($event)\"\n        (tuiPressedChange)=\"onPressed($event)\"\n        (tuiCheckedChange)=\"onChecked($event)\"\n        (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    />\n</tui-wrapper>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [
            {
                provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                useExisting: forwardRef(() => TuiRadioComponent_1),
            },
        ],
        animations: [tuiScaleIn],
        styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0;border-radius:100%}:host[data-size='m']{width:1rem;height:1rem}:host[data-size='l']{width:1.5rem;height:1.5rem}:host._readonly{pointer-events:none}.t-mark{position:absolute;background-color:currentColor;border-radius:100%}:host[data-size='m'] .t-mark{margin:.25rem;width:.5rem;height:.5rem}:host[data-size='l'] .t-mark{margin:.4375rem;width:.625rem;height:.625rem}.t-native{padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native:-webkit-autofill,.t-native:-webkit-autofill:focus,.t-native:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host._disabled .t-native{cursor:default}"]
    }),
    __param(0, Optional()),
    __param(0, Self()),
    __param(0, Inject(NgControl)),
    __param(1, Inject(ChangeDetectorRef)),
    __param(2, Inject(TUI_ANIMATION_OPTIONS)),
    __param(3, Inject(TUI_RADIO_OPTIONS)),
    __param(4, Optional()),
    __param(4, Inject(TuiRadioGroupComponent))
], TuiRadioComponent);
export { TuiRadioComponent };
//# sourceMappingURL=data:application/json;base64,