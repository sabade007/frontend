import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, } from '@angular/core';
import { tuiDefaultProp, tuiIsObserved } from '@taiga-ui/cdk';
import { TUI_CLOSE_WORD } from '@taiga-ui/core';
import { Observable } from 'rxjs';
let TuiPushComponent = class TuiPushComponent {
    constructor(closeWord$) {
        this.closeWord$ = closeWord$;
        this.heading = '';
        this.type = '';
        this.timestamp = 0;
        this.close = new EventEmitter();
    }
    get closeable() {
        return tuiIsObserved(this.close);
    }
};
TuiPushComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPushComponent.prototype, "heading", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPushComponent.prototype, "type", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPushComponent.prototype, "timestamp", void 0);
__decorate([
    Output()
], TuiPushComponent.prototype, "close", void 0);
TuiPushComponent = __decorate([
    Component({
        selector: 'tui-push',
        template: "<div class=\"t-image\">\n    <ng-content select=\"img\"></ng-content>\n</div>\n<button\n    *ngIf=\"closeable\"\n    tuiIconButton\n    icon=\"tuiIconCloseLarge\"\n    size=\"xs\"\n    appearance=\"\"\n    shape=\"rounded\"\n    class=\"t-close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n<div class=\"t-top\">\n    <span class=\"t-icon\">\n        <ng-content select=\"tui-svg\"></ng-content>\n    </span>\n    {{ type }}\n    <span\n        *ngIf=\"timestamp\"\n        class=\"t-time\"\n        [textContent]=\"timestamp | tuiFormatDate | async\"\n    ></span>\n</div>\n<h3 class=\"t-heading\">{{ heading }}</h3>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<div class=\"t-actions\">\n    <span class=\"t-button\">\n        <ng-content select=\"[tuiButton]\"></ng-content>\n    </span>\n    <span class=\"t-link\">\n        <ng-content select=\"[tuiLink]\"></ng-content>\n    </span>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{box-shadow:0 .25rem 1.5rem rgba(0,0,0,.12);position:relative;display:block;width:22.5rem;max-width:100%;box-sizing:border-box;padding:1.25rem 1.25rem .25rem;overflow:hidden;font:var(--tui-font-text-m);border-radius:var(--tui-radius-l);background:var(--tui-elevation-02)}.t-image{display:flex;flex-direction:column;max-height:10.625rem;overflow:hidden;margin:-1.25rem -1.25rem 1.25rem}.t-close{position:absolute;top:.75rem;right:.75rem;color:rgba(0,0,0,.54);background:rgba(242,242,242,.32);-webkit-backdrop-filter:blur(1rem);backdrop-filter:blur(1rem)}.t-top{display:flex;align-items:center;font:var(--tui-font-text-s);color:var(--tui-text-02)}.t-icon{height:1.25rem;margin-right:.5rem;transform:scale(.833);transform-origin:top left;color:var(--tui-link)}.t-time:before{content:'\u2022';display:inline-block;width:1rem;text-align:center}.t-heading{line-height:1.25rem;font-weight:700;margin:.75rem 0 .25rem}.t-content,.t-heading{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;word-break:break-word;overflow:hidden}.t-actions{display:flex;align-items:center;font:var(--tui-font-text-s)}.t-button:not(:empty){margin:.75rem .75rem .75rem 0}.t-link{margin:.75rem 0}.t-link:empty{margin:.5rem}"]
    }),
    __param(0, Inject(TUI_CLOSE_WORD))
], TuiPushComponent);
export { TuiPushComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcHVzaC8iLCJzb3VyY2VzIjpbInB1c2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osTUFBTSxFQUNOLEtBQUssRUFDTCxNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBRSxhQUFhLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFRaEMsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7SUFnQnpCLFlBQTZDLFVBQThCO1FBQTlCLGVBQVUsR0FBVixVQUFVLENBQW9CO1FBYjNFLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFJYixTQUFJLEdBQUcsRUFBRSxDQUFDO1FBSVYsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUdMLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0lBRW9DLENBQUM7SUFFL0UsSUFBSSxTQUFTO1FBQ1QsT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDSixDQUFBOztZQUw0RCxVQUFVLHVCQUF0RCxNQUFNLFNBQUMsY0FBYzs7QUFibEM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7aURBQ0o7QUFJYjtJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTs4Q0FDUDtBQUlWO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO21EQUNIO0FBR2Q7SUFEQyxNQUFNLEVBQUU7K0NBQ2lDO0FBZGpDLGdCQUFnQjtJQU41QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsVUFBVTtRQUNwQix1OEJBQW1DO1FBRW5DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNsRCxDQUFDO0lBaUJlLFdBQUEsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFBO0dBaEIxQixnQkFBZ0IsQ0FxQjVCO1NBckJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3AsIHR1aUlzT2JzZXJ2ZWR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUVUlfQ0xPU0VfV09SRH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktcHVzaCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3B1c2gudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcHVzaC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVB1c2hDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBoZWFkaW5nID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgdHlwZSA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHRpbWVzdGFtcCA9IDA7XG5cbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX0NMT1NFX1dPUkQpIHJlYWRvbmx5IGNsb3NlV29yZCQ6IE9ic2VydmFibGU8c3RyaW5nPikge31cblxuICAgIGdldCBjbG9zZWFibGUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0dWlJc09ic2VydmVkKHRoaXMuY2xvc2UpO1xuICAgIH1cbn1cbiJdfQ==