var TuiPushDirective_1;
import { __decorate, __param } from "tslib";
import { Directive, Inject, Optional, SkipSelf } from '@angular/core';
import { TUI_BUTTON_OPTIONS, TuiButtonOptions, TuiModeDirective } from '@taiga-ui/core';
import { Subject } from 'rxjs';
let TuiPushDirective = TuiPushDirective_1 = class TuiPushDirective extends TuiModeDirective {
    constructor(modeDirective) {
        var _a;
        super();
        this.modeDirective = modeDirective;
        this.size = 's';
        this.shape = null;
        this.change$ = ((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.change$) || new Subject();
    }
    get appearance() {
        var _a;
        return ((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode) === 'onDark' ? 'accent' : 'secondary';
    }
};
TuiPushDirective.ctorParameters = () => [
    { type: TuiModeDirective, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [TuiModeDirective,] }] }
];
TuiPushDirective = TuiPushDirective_1 = __decorate([
    Directive({
        selector: 'tui-push',
        providers: [
            {
                provide: TuiModeDirective,
                useExisting: TuiPushDirective_1,
            },
            {
                provide: TUI_BUTTON_OPTIONS,
                useExisting: TuiPushDirective_1,
            },
        ],
    }),
    __param(0, Optional()),
    __param(0, SkipSelf()),
    __param(0, Inject(TuiModeDirective))
], TuiPushDirective);
export { TuiPushDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcHVzaC8iLCJzb3VyY2VzIjpbInB1c2guZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RixPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBZTdCLElBQWEsZ0JBQWdCLHdCQUE3QixNQUFhLGdCQUFpQixTQUFRLGdCQUFnQjtJQU9sRCxZQUlxQixhQUFzQzs7UUFFdkQsS0FBSyxFQUFFLENBQUM7UUFGUyxrQkFBYSxHQUFiLGFBQWEsQ0FBeUI7UUFWM0QsU0FBSSxHQUE2QixHQUFHLENBQUM7UUFFckMsVUFBSyxHQUFHLElBQUksQ0FBQztRQUVKLFlBQU8sR0FBRyxPQUFBLElBQUksQ0FBQyxhQUFhLDBDQUFFLE9BQU8sS0FBSSxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBU2hFLENBQUM7SUFFRCxJQUFJLFVBQVU7O1FBQ1YsT0FBTyxPQUFBLElBQUksQ0FBQyxhQUFhLDBDQUFFLElBQUksTUFBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQzFFLENBQUM7Q0FDSixDQUFBOztZQVJ1QyxnQkFBZ0IsdUJBSC9DLFFBQVEsWUFDUixRQUFRLFlBQ1IsTUFBTSxTQUFDLGdCQUFnQjs7QUFWbkIsZ0JBQWdCO0lBYjVCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFNBQVMsRUFBRTtZQUNQO2dCQUNJLE9BQU8sRUFBRSxnQkFBZ0I7Z0JBQ3pCLFdBQVcsRUFBRSxrQkFBZ0I7YUFDaEM7WUFDRDtnQkFDSSxPQUFPLEVBQUUsa0JBQWtCO2dCQUMzQixXQUFXLEVBQUUsa0JBQWdCO2FBQ2hDO1NBQ0o7S0FDSixDQUFDO0lBU08sV0FBQSxRQUFRLEVBQUUsQ0FBQTtJQUNWLFdBQUEsUUFBUSxFQUFFLENBQUE7SUFDVixXQUFBLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0dBVnBCLGdCQUFnQixDQW1CNUI7U0FuQlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdCwgT3B0aW9uYWwsIFNraXBTZWxmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VFVJX0JVVFRPTl9PUFRJT05TLCBUdWlCdXR0b25PcHRpb25zLCBUdWlNb2RlRGlyZWN0aXZlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wdXNoJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVHVpTW9kZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBUdWlQdXNoRGlyZWN0aXZlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfQlVUVE9OX09QVElPTlMsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogVHVpUHVzaERpcmVjdGl2ZSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQdXNoRGlyZWN0aXZlIGV4dGVuZHMgVHVpTW9kZURpcmVjdGl2ZSBpbXBsZW1lbnRzIFR1aUJ1dHRvbk9wdGlvbnMge1xuICAgIHNpemU6IFR1aUJ1dHRvbk9wdGlvbnNbJ3NpemUnXSA9ICdzJztcblxuICAgIHNoYXBlID0gbnVsbDtcblxuICAgIHJlYWRvbmx5IGNoYW5nZSQgPSB0aGlzLm1vZGVEaXJlY3RpdmU/LmNoYW5nZSQgfHwgbmV3IFN1YmplY3QoKTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBAU2tpcFNlbGYoKVxuICAgICAgICBASW5qZWN0KFR1aU1vZGVEaXJlY3RpdmUpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgbW9kZURpcmVjdGl2ZTogVHVpTW9kZURpcmVjdGl2ZSB8IG51bGwsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgZ2V0IGFwcGVhcmFuY2UoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZURpcmVjdGl2ZT8ubW9kZSA9PT0gJ29uRGFyaycgPyAnYWNjZW50JyA6ICdzZWNvbmRhcnknO1xuICAgIH1cbn1cbiJdfQ==