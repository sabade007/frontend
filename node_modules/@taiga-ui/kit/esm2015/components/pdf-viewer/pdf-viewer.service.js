import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { AbstractTuiDialogService } from '@taiga-ui/cdk';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { TuiPdfViewerComponent } from './pdf-viewer.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/services";
const DIALOG = new PolymorpheusComponent(TuiPdfViewerComponent);
const DEFAULT_OPTIONS = { label: ``, actions: `` };
let TuiPdfViewerService = class TuiPdfViewerService extends AbstractTuiDialogService {
    constructor() {
        super(...arguments);
        this.component = DIALOG;
        this.defaultOptions = DEFAULT_OPTIONS;
    }
    open(content, options = {}) {
        return super.open(content, options);
    }
};
TuiPdfViewerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TuiPdfViewerService_Factory() { return new TuiPdfViewerService(i0.ɵɵinject(i1.TuiIdService)); }, token: TuiPdfViewerService, providedIn: "root" });
TuiPdfViewerService = __decorate([
    Injectable({
        providedIn: `root`,
    })
], TuiPdfViewerService);
export { TuiPdfViewerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLXZpZXdlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3BkZi12aWV3ZXIvIiwic291cmNlcyI6WyJwZGYtdmlld2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFDLHdCQUF3QixFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUMscUJBQXFCLEVBQXNCLE1BQU0sMEJBQTBCLENBQUM7QUFHcEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7OztBQUc3RCxNQUFNLE1BQU0sR0FBRyxJQUFJLHFCQUFxQixDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDaEUsTUFBTSxlQUFlLEdBQUcsRUFBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQVUsQ0FBQztBQVMxRCxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFvQixTQUFRLHdCQUV4QztJQUZEOztRQUd1QixjQUFTLEdBQUcsTUFBTSxDQUFDO1FBQ25CLG1CQUFjLEdBQzdCLGVBQStDLENBQUM7S0FRdkQ7SUFORyxJQUFJLENBQ0EsT0FBcUMsRUFDckMsVUFBNkMsRUFBRTtRQUUvQyxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBcUIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0osQ0FBQTs7QUFiWSxtQkFBbUI7SUFIL0IsVUFBVSxDQUFDO1FBQ1IsVUFBVSxFQUFFLE1BQU07S0FDckIsQ0FBQztHQUNXLG1CQUFtQixDQWEvQjtTQWJZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1NhZmVSZXNvdXJjZVVybH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQge0Fic3RyYWN0VHVpRGlhbG9nU2VydmljZSwgVHVpQmFzZURpYWxvZ0NvbnRleHR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb21wb25lbnQsIFBvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1R1aVBkZlZpZXdlckNvbXBvbmVudH0gZnJvbSAnLi9wZGYtdmlld2VyLmNvbXBvbmVudCc7XG5pbXBvcnQge1R1aVBkZlZpZXdlck9wdGlvbnN9IGZyb20gJy4vcGRmLXZpZXdlci1vcHRpb25zJztcblxuY29uc3QgRElBTE9HID0gbmV3IFBvbHltb3JwaGV1c0NvbXBvbmVudChUdWlQZGZWaWV3ZXJDb21wb25lbnQpO1xuY29uc3QgREVGQVVMVF9PUFRJT05TID0ge2xhYmVsOiBgYCwgYWN0aW9uczogYGB9IGFzIGNvbnN0O1xuXG50eXBlIENvbnRlbnQ8Rz4gPSBQb2x5bW9ycGhldXNDb250ZW50PFxuICAgIFR1aUJhc2VEaWFsb2dDb250ZXh0PEc+ICYgVHVpUGRmVmlld2VyT3B0aW9uczx1bmtub3duPlxuPjtcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46IGByb290YCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUGRmVmlld2VyU2VydmljZSBleHRlbmRzIEFic3RyYWN0VHVpRGlhbG9nU2VydmljZTxcbiAgICBUdWlQZGZWaWV3ZXJPcHRpb25zPHVua25vd24+XG4+IHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgY29tcG9uZW50ID0gRElBTE9HO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBkZWZhdWx0T3B0aW9uczogVHVpUGRmVmlld2VyT3B0aW9uczx1bmtub3duPiA9XG4gICAgICAgIERFRkFVTFRfT1BUSU9OUyBhcyBUdWlQZGZWaWV3ZXJPcHRpb25zPHVua25vd24+O1xuXG4gICAgb3BlbjxHPihcbiAgICAgICAgY29udGVudDogQ29udGVudDxHPiB8IFNhZmVSZXNvdXJjZVVybCxcbiAgICAgICAgb3B0aW9uczogUGFydGlhbDxUdWlQZGZWaWV3ZXJPcHRpb25zPGFueT4+ID0ge30sXG4gICAgKTogT2JzZXJ2YWJsZTxHPiB7XG4gICAgICAgIHJldHVybiBzdXBlci5vcGVuKGNvbnRlbnQgYXMgQ29udGVudDxHPiwgb3B0aW9ucyk7XG4gICAgfVxufVxuIl19