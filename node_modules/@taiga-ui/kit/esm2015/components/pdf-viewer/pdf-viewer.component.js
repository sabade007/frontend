import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, HostListener, Inject, } from '@angular/core';
import { TUI_ANIMATION_OPTIONS, TUI_CLOSE_WORD, tuiFadeIn, tuiSlideInTop, } from '@taiga-ui/core';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
let TuiPdfViewerComponent = class TuiPdfViewerComponent {
    constructor(options, closeWord$, context) {
        this.options = options;
        this.closeWord$ = closeWord$;
        this.context = context;
        this.animation = Object.assign({ value: '' }, this.options);
    }
    onKeyDownEsc() {
        this.context.$implicit.complete();
    }
};
TuiPdfViewerComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_ANIMATION_OPTIONS,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [POLYMORPHEUS_CONTEXT,] }] }
];
__decorate([
    HostBinding('@tuiSlideInTop'),
    HostBinding('@tuiFadeIn')
], TuiPdfViewerComponent.prototype, "animation", void 0);
__decorate([
    HostListener('document:keydown.esc')
], TuiPdfViewerComponent.prototype, "onKeyDownEsc", null);
TuiPdfViewerComponent = __decorate([
    Component({
        selector: 'tui-pdf-viewer',
        template: "<header class=\"t-header\">\n    <h2 class=\"t-title\">{{ context.label }}</h2>\n    <div\n        polymorpheus-outlet\n        class=\"t-actions\"\n        [content]=\"context.actions\"\n        [context]=\"context\"\n    ></div>\n    <button\n        tuiIconButton\n        shape=\"rounded\"\n        appearance=\"\"\n        size=\"s\"\n        icon=\"tuiIconCloseLarge\"\n        class=\"t-close\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"context.$implicit.complete()\"\n    ></button>\n</header>\n<section\n    polymorpheus-outlet\n    class=\"t-content\"\n    [content]=\"context.content\"\n    [context]=\"context\"\n>\n    <ng-template let-content>\n        <iframe\n            class=\"t-iframe\"\n            [src]=\"content\"\n        ></iframe>\n    </ng-template>\n</section>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        animations: [tuiSlideInTop, tuiFadeIn],
        styles: [":host{display:block;width:100%;height:100%;box-sizing:border-box;color:var(--tui-text-01-night);background:#333639}.t-header{display:flex;align-items:center;height:4rem;padding:0 1rem 0 1.5625rem;box-shadow:inset 0 -1px #535659}.t-title{margin:0;font:var(--tui-font-text-m)}.t-actions{display:flex;margin-left:auto}.t-close{transition-property:background;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;margin-left:.75rem;color:var(--tui-text-01-night);background:rgba(255,255,255,.32)}.t-close:hover{background:rgba(255,255,255,.4)}.t-content{height:calc(100% - 4rem);overflow:hidden}.t-iframe{width:100%;height:100%}"]
    }),
    __param(0, Inject(TUI_ANIMATION_OPTIONS)),
    __param(1, Inject(TUI_CLOSE_WORD)),
    __param(2, Inject(POLYMORPHEUS_CONTEXT))
], TuiPdfViewerComponent);
export { TuiPdfViewerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLXZpZXdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcGRmLXZpZXdlci8iLCJzb3VyY2VzIjpbInBkZi12aWV3ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0gscUJBQXFCLEVBQ3JCLGNBQWMsRUFDZCxTQUFTLEVBQ1QsYUFBYSxHQUNoQixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQzlELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFXaEMsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7SUFLOUIsWUFDb0QsT0FBeUIsRUFDeEMsVUFBOEIsRUFFdEQsT0FBNkM7UUFITixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUN4QyxlQUFVLEdBQVYsVUFBVSxDQUFvQjtRQUV0RCxZQUFPLEdBQVAsT0FBTyxDQUFzQztRQU5qRCxjQUFTLEdBQUcsZ0JBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSyxJQUFJLENBQUMsT0FBTyxDQUFVLENBQUM7SUFPeEQsQ0FBQztJQUdKLFlBQVk7UUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQ0osQ0FBQTs7NENBVlEsTUFBTSxTQUFDLHFCQUFxQjtZQUNnQixVQUFVLHVCQUF0RCxNQUFNLFNBQUMsY0FBYzs0Q0FDckIsTUFBTSxTQUFDLG9CQUFvQjs7QUFMaEM7SUFGQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7SUFDN0IsV0FBVyxDQUFDLFlBQVksQ0FBQzt3REFDaUM7QUFVM0Q7SUFEQyxZQUFZLENBQUMsc0JBQXNCLENBQUM7eURBR3BDO0FBZlEscUJBQXFCO0lBUGpDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsb3pCQUF5QztRQUV6QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDOztLQUN6QyxDQUFDO0lBT08sV0FBQSxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQTtJQUM3QixXQUFBLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQTtJQUN0QixXQUFBLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFBO0dBUnhCLHFCQUFxQixDQWdCakM7U0FoQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBbmltYXRpb25PcHRpb25zfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbmplY3QsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaWFsb2d9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICBUVUlfQU5JTUFUSU9OX09QVElPTlMsXG4gICAgVFVJX0NMT1NFX1dPUkQsXG4gICAgdHVpRmFkZUluLFxuICAgIHR1aVNsaWRlSW5Ub3AsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7UE9MWU1PUlBIRVVTX0NPTlRFWFR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1R1aVBkZlZpZXdlck9wdGlvbnN9IGZyb20gJy4vcGRmLXZpZXdlci1vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktcGRmLXZpZXdlcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3BkZi12aWV3ZXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcGRmLXZpZXdlci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgYW5pbWF0aW9uczogW3R1aVNsaWRlSW5Ub3AsIHR1aUZhZGVJbl0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVBkZlZpZXdlckNvbXBvbmVudDxJLCBPPiB7XG4gICAgQEhvc3RCaW5kaW5nKCdAdHVpU2xpZGVJblRvcCcpXG4gICAgQEhvc3RCaW5kaW5nKCdAdHVpRmFkZUluJylcbiAgICByZWFkb25seSBhbmltYXRpb24gPSB7dmFsdWU6ICcnLCAuLi50aGlzLm9wdGlvbnN9IGFzIGNvbnN0O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0FOSU1BVElPTl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IEFuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoVFVJX0NMT1NFX1dPUkQpIHJlYWRvbmx5IGNsb3NlV29yZCQ6IE9ic2VydmFibGU8c3RyaW5nPixcbiAgICAgICAgQEluamVjdChQT0xZTU9SUEhFVVNfQ09OVEVYVClcbiAgICAgICAgcmVhZG9ubHkgY29udGV4dDogVHVpRGlhbG9nPFR1aVBkZlZpZXdlck9wdGlvbnM8ST4sIE8+LFxuICAgICkge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleWRvd24uZXNjJylcbiAgICBvbktleURvd25Fc2MoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29udGV4dC4kaW1wbGljaXQuY29tcGxldGUoKTtcbiAgICB9XG59XG4iXX0=