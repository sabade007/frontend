import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { TuiLetModule } from '@taiga-ui/cdk';
import { TuiButtonModule, TuiExpandModule } from '@taiga-ui/core';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { TuiTreeComponent } from './components/tree/tree.component';
import { TuiTreeItemComponent } from './components/tree-item/tree-item.component';
import { TuiTreeItemContentComponent } from './components/tree-item-content/tree-item-content.component';
import { TuiTreeChildrenDirective } from './directives/tree-children.directive';
import { TuiTreeControllerDirective } from './directives/tree-controller.directive';
import { TuiTreeItemControllerDirective } from './directives/tree-item-controller.directive';
import { TuiTreeNodeDirective } from './directives/tree-node.directive';
let TuiTreeModule = class TuiTreeModule {
};
TuiTreeModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            PolymorpheusModule,
            TuiExpandModule,
            TuiLetModule,
            TuiButtonModule,
        ],
        entryComponents: [TuiTreeItemContentComponent],
        declarations: [
            TuiTreeComponent,
            TuiTreeItemComponent,
            TuiTreeItemContentComponent,
            TuiTreeChildrenDirective,
            TuiTreeItemControllerDirective,
            TuiTreeControllerDirective,
            TuiTreeNodeDirective,
        ],
        exports: [
            TuiTreeComponent,
            TuiTreeItemComponent,
            TuiTreeChildrenDirective,
            TuiTreeItemControllerDirective,
            TuiTreeControllerDirective,
        ],
    })
], TuiTreeModule);
export { TuiTreeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvdHJlZS8iLCJzb3VyY2VzIjpbInRyZWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBQyxlQUFlLEVBQUUsZUFBZSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDaEUsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFNUQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFDbEUsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sNENBQTRDLENBQUM7QUFDaEYsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sNERBQTRELENBQUM7QUFDdkcsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDOUUsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sd0NBQXdDLENBQUM7QUFDbEYsT0FBTyxFQUFDLDhCQUE4QixFQUFDLE1BQU0sNkNBQTZDLENBQUM7QUFDM0YsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUE0QnRFLElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7Q0FBRyxDQUFBO0FBQWhCLGFBQWE7SUExQnpCLFFBQVEsQ0FBQztRQUNOLE9BQU8sRUFBRTtZQUNMLFlBQVk7WUFDWixrQkFBa0I7WUFDbEIsZUFBZTtZQUNmLFlBQVk7WUFDWixlQUFlO1NBQ2xCO1FBQ0QsZUFBZSxFQUFFLENBQUMsMkJBQTJCLENBQUM7UUFDOUMsWUFBWSxFQUFFO1lBQ1YsZ0JBQWdCO1lBQ2hCLG9CQUFvQjtZQUNwQiwyQkFBMkI7WUFDM0Isd0JBQXdCO1lBQ3hCLDhCQUE4QjtZQUM5QiwwQkFBMEI7WUFDMUIsb0JBQW9CO1NBQ3ZCO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsZ0JBQWdCO1lBQ2hCLG9CQUFvQjtZQUNwQix3QkFBd0I7WUFDeEIsOEJBQThCO1lBQzlCLDBCQUEwQjtTQUM3QjtLQUNKLENBQUM7R0FDVyxhQUFhLENBQUc7U0FBaEIsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUxldE1vZHVsZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aUJ1dHRvbk1vZHVsZSwgVHVpRXhwYW5kTW9kdWxlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1BvbHltb3JwaGV1c01vZHVsZX0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuaW1wb3J0IHtUdWlUcmVlQ29tcG9uZW50fSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZS90cmVlLmNvbXBvbmVudCc7XG5pbXBvcnQge1R1aVRyZWVJdGVtQ29tcG9uZW50fSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZS1pdGVtL3RyZWUtaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHtUdWlUcmVlSXRlbUNvbnRlbnRDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90cmVlLWl0ZW0tY29udGVudC90cmVlLWl0ZW0tY29udGVudC5jb21wb25lbnQnO1xuaW1wb3J0IHtUdWlUcmVlQ2hpbGRyZW5EaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy90cmVlLWNoaWxkcmVuLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRyZWVDb250cm9sbGVyRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvdHJlZS1jb250cm9sbGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRyZWVJdGVtQ29udHJvbGxlckRpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL3RyZWUtaXRlbS1jb250cm9sbGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRyZWVOb2RlRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvdHJlZS1ub2RlLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIFBvbHltb3JwaGV1c01vZHVsZSxcbiAgICAgICAgVHVpRXhwYW5kTW9kdWxlLFxuICAgICAgICBUdWlMZXRNb2R1bGUsXG4gICAgICAgIFR1aUJ1dHRvbk1vZHVsZSxcbiAgICBdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW1R1aVRyZWVJdGVtQ29udGVudENvbXBvbmVudF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFR1aVRyZWVDb21wb25lbnQsXG4gICAgICAgIFR1aVRyZWVJdGVtQ29tcG9uZW50LFxuICAgICAgICBUdWlUcmVlSXRlbUNvbnRlbnRDb21wb25lbnQsXG4gICAgICAgIFR1aVRyZWVDaGlsZHJlbkRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVHJlZUl0ZW1Db250cm9sbGVyRGlyZWN0aXZlLFxuICAgICAgICBUdWlUcmVlQ29udHJvbGxlckRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVHJlZU5vZGVEaXJlY3RpdmUsXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFR1aVRyZWVDb21wb25lbnQsXG4gICAgICAgIFR1aVRyZWVJdGVtQ29tcG9uZW50LFxuICAgICAgICBUdWlUcmVlQ2hpbGRyZW5EaXJlY3RpdmUsXG4gICAgICAgIFR1aVRyZWVJdGVtQ29udHJvbGxlckRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVHJlZUNvbnRyb2xsZXJEaXJlY3RpdmUsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVHJlZU1vZHVsZSB7fVxuIl19