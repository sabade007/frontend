var TuiTreeItemControllerDirective_1;
import { __decorate } from "tslib";
import { Directive, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_TREE_CONTROLLER } from '../misc/tree.tokens';
let TuiTreeItemControllerDirective = TuiTreeItemControllerDirective_1 = class TuiTreeItemControllerDirective {
    constructor() {
        this.map = new WeakMap();
        this.fallback = true;
    }
    isExpanded(item) {
        var _a;
        return (_a = this.map.get(item)) !== null && _a !== void 0 ? _a : this.fallback;
    }
    toggle(item) {
        this.map.set(item, !this.isExpanded(item));
    }
};
__decorate([
    Input('tuiTreeController'),
    tuiDefaultProp()
], TuiTreeItemControllerDirective.prototype, "fallback", void 0);
TuiTreeItemControllerDirective = TuiTreeItemControllerDirective_1 = __decorate([
    Directive({
        selector: '[tuiTreeController]:not([map])',
        exportAs: 'tuiTreeController',
        providers: [
            {
                provide: TUI_TREE_CONTROLLER,
                useExisting: TuiTreeItemControllerDirective_1,
            },
        ],
    })
], TuiTreeItemControllerDirective);
export { TuiTreeItemControllerDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1pdGVtLWNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3RyZWUvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL3RyZWUtaXRlbS1jb250cm9sbGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFJN0MsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFZeEQsSUFBYSw4QkFBOEIsc0NBQTNDLE1BQWEsOEJBQThCO0lBQTNDO1FBQ3FCLFFBQUcsR0FBRyxJQUFJLE9BQU8sRUFBaUMsQ0FBQztRQUlwRSxhQUFRLEdBQUcsSUFBSSxDQUFDO0lBU3BCLENBQUM7SUFQRyxVQUFVLENBQUMsSUFBMEI7O1FBQ2pDLGFBQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1DQUFJLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDL0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUEwQjtRQUM3QixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNKLENBQUE7QUFURztJQUZDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztJQUMxQixjQUFjLEVBQUU7Z0VBQ0Q7QUFMUCw4QkFBOEI7SUFWMUMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGdDQUFnQztRQUMxQyxRQUFRLEVBQUUsbUJBQW1CO1FBQzdCLFNBQVMsRUFBRTtZQUNQO2dCQUNJLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLFdBQVcsRUFBRSxnQ0FBOEI7YUFDOUM7U0FDSjtLQUNKLENBQUM7R0FDVyw4QkFBOEIsQ0FjMUM7U0FkWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlEZWZhdWx0UHJvcH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmltcG9ydCB7VHVpVHJlZUl0ZW1Db21wb25lbnR9IGZyb20gJy4uL2NvbXBvbmVudHMvdHJlZS1pdGVtL3RyZWUtaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHtUdWlUcmVlQ29udHJvbGxlcn0gZnJvbSAnLi4vbWlzYy90cmVlLmludGVyZmFjZXMnO1xuaW1wb3J0IHtUVUlfVFJFRV9DT05UUk9MTEVSfSBmcm9tICcuLi9taXNjL3RyZWUudG9rZW5zJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVHJlZUNvbnRyb2xsZXJdOm5vdChbbWFwXSknLFxuICAgIGV4cG9ydEFzOiAndHVpVHJlZUNvbnRyb2xsZXInLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVFJFRV9DT05UUk9MTEVSLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IFR1aVRyZWVJdGVtQ29udHJvbGxlckRpcmVjdGl2ZSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUcmVlSXRlbUNvbnRyb2xsZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBUdWlUcmVlQ29udHJvbGxlciB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBtYXAgPSBuZXcgV2Vha01hcDxUdWlUcmVlSXRlbUNvbXBvbmVudCwgYm9vbGVhbj4oKTtcblxuICAgIEBJbnB1dCgndHVpVHJlZUNvbnRyb2xsZXInKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgZmFsbGJhY2sgPSB0cnVlO1xuXG4gICAgaXNFeHBhbmRlZChpdGVtOiBUdWlUcmVlSXRlbUNvbXBvbmVudCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGl0ZW0pID8/IHRoaXMuZmFsbGJhY2s7XG4gICAgfVxuXG4gICAgdG9nZ2xlKGl0ZW06IFR1aVRyZWVJdGVtQ29tcG9uZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMubWFwLnNldChpdGVtLCAhdGhpcy5pc0V4cGFuZGVkKGl0ZW0pKTtcbiAgICB9XG59XG4iXX0=