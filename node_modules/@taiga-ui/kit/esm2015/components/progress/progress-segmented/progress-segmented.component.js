import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
// eslint-disable-next-line @typescript-eslint/naming-convention
export function nonNegativeInt(value) {
    return Number.isInteger(value) && value >= 0;
}
// eslint-disable-next-line @typescript-eslint/naming-convention
export function positiveInt(value) {
    return Number.isInteger(value) && value > 0;
}
let TuiProgressSegmentedComponent = class TuiProgressSegmentedComponent {
    constructor() {
        this.value = 0;
        this.max = 1;
        this.size = 'm';
        this.colors = 'var(--tui-primary)';
    }
    getActiveColor(index = 0) {
        return typeof this.colors === 'string'
            ? this.colors
            : this.colors[index] || this.colors[this.colors.length - 1];
    }
};
__decorate([
    Input(),
    tuiDefaultProp(nonNegativeInt, 'Must be non-negative integer between 0 and max')
], TuiProgressSegmentedComponent.prototype, "value", void 0);
__decorate([
    Input(),
    tuiDefaultProp(positiveInt, 'Must be positive integer')
], TuiProgressSegmentedComponent.prototype, "max", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-size')
], TuiProgressSegmentedComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiProgressSegmentedComponent.prototype, "colors", void 0);
TuiProgressSegmentedComponent = __decorate([
    Component({
        selector: 'tui-progress-segmented',
        template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<span\n    *tuiRepeatTimes=\"let index of max\"\n    aria-hidden=\"true\"\n    class=\"t-segment\"\n    [style.background]=\"index < value ? getActiveColor(index) : null\"\n></span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{display:flex}.t-segment{transition-property:background-color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;flex:1 1 100%;border-radius:var(--tui-radius-xs);background-color:var(--tui-base-03)}.t-segment:not(:last-child){margin-right:.25rem}:host[data-size='s'] .t-segment{height:.25rem}:host[data-size='m'] .t-segment{height:.5rem}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}"]
    })
], TuiProgressSegmentedComponent);
export { TuiProgressSegmentedComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3Mtc2VnbWVudGVkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9raXQvY29tcG9uZW50cy9wcm9ncmVzcy8iLCJzb3VyY2VzIjpbInByb2dyZXNzLXNlZ21lbnRlZC9wcm9ncmVzcy1zZWdtZW50ZWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUc3QyxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFhO0lBQ3hDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLFdBQVcsQ0FBQyxLQUFhO0lBQ3JDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ2hELENBQUM7QUFRRCxJQUFhLDZCQUE2QixHQUExQyxNQUFhLDZCQUE2QjtJQUExQztRQUdJLFVBQUssR0FBRyxDQUFDLENBQUM7UUFJVixRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBSVIsU0FBSSxHQUFhLEdBQUcsQ0FBQztRQUlyQixXQUFNLEdBQStCLG9CQUFvQixDQUFDO0lBTzlELENBQUM7SUFMRyxjQUFjLENBQUMsUUFBZ0IsQ0FBQztRQUM1QixPQUFPLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxRQUFRO1lBQ2xDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUNiLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNKLENBQUE7QUFuQkc7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLENBQUMsY0FBYyxFQUFFLGdEQUFnRCxDQUFDOzREQUN2RTtBQUlWO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxDQUFDLFdBQVcsRUFBRSwwQkFBMEIsQ0FBQzswREFDaEQ7QUFJUjtJQUZDLEtBQUssRUFBRTtJQUNQLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzsyREFDVDtBQUlyQjtJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTs2REFDeUM7QUFmakQsNkJBQTZCO0lBTnpDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSx3QkFBd0I7UUFDbEMseVNBQWlEO1FBRWpELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNsRCxDQUFDO0dBQ1csNkJBQTZCLENBc0J6QztTQXRCWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGZ1bmN0aW9uIG5vbk5lZ2F0aXZlSW50KHZhbHVlOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkgJiYgdmFsdWUgPj0gMDtcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGZ1bmN0aW9uIHBvc2l0aXZlSW50KHZhbHVlOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkgJiYgdmFsdWUgPiAwO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wcm9ncmVzcy1zZWdtZW50ZWQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wcm9ncmVzcy1zZWdtZW50ZWQudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcHJvZ3Jlc3Mtc2VnbWVudGVkLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NTZWdtZW50ZWRDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKG5vbk5lZ2F0aXZlSW50LCAnTXVzdCBiZSBub24tbmVnYXRpdmUgaW50ZWdlciBiZXR3ZWVuIDAgYW5kIG1heCcpXG4gICAgdmFsdWUgPSAwO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AocG9zaXRpdmVJbnQsICdNdXN0IGJlIHBvc2l0aXZlIGludGVnZXInKVxuICAgIG1heCA9IDE7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIHNpemU6IFR1aVNpemVTID0gJ20nO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGNvbG9yczogc3RyaW5nIHwgcmVhZG9ubHkgc3RyaW5nW10gPSAndmFyKC0tdHVpLXByaW1hcnkpJztcblxuICAgIGdldEFjdGl2ZUNvbG9yKGluZGV4OiBudW1iZXIgPSAwKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdGhpcy5jb2xvcnMgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/IHRoaXMuY29sb3JzXG4gICAgICAgICAgICA6IHRoaXMuY29sb3JzW2luZGV4XSB8fCB0aGlzLmNvbG9yc1t0aGlzLmNvbG9ycy5sZW5ndGggLSAxXTtcbiAgICB9XG59XG4iXX0=