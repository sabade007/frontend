import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Input, NgZone, } from '@angular/core';
import { ANIMATION_FRAME } from '@ng-web-apis/common';
import { px, TUI_IS_ANDROID, TUI_IS_IOS, tuiDefaultProp, tuiZonefree } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_MODE } from '@taiga-ui/core';
import { TUI_MOBILE_AWARE } from '@taiga-ui/kit/tokens';
import { asCallable } from '@tinkoff/ng-event-plugins';
import { Observable, of, ReplaySubject } from 'rxjs';
import { debounceTime, map, mapTo, share, switchMap } from 'rxjs/operators';
let TuiUnderlineComponent = class TuiUnderlineComponent {
    constructor({ nativeElement }, ngZone, animationFrame$, mobileAware, ios, android, mode$) {
        this.ngZone = ngZone;
        this.animationFrame$ = animationFrame$;
        this.mobileAware = mobileAware;
        this.ios = ios;
        this.android = android;
        this.mode$ = mode$;
        this.element$ = new ReplaySubject(1);
        this.refresh$ = this.element$.pipe(switchMap(element => element
            ? this.animationFrame$.pipe(mapTo(element), tuiZonefree(this.ngZone))
            : of(null)), share());
        this.isIos = this.mobileAware && this.ios;
        this.isAndroid = this.mobileAware && this.android;
        this.transition$ = asCallable(this.element$.pipe(map(element => element && 'all'), debounceTime(50)));
        this.transform$ = asCallable(this.refresh$.pipe(map(element => element ? `translate3d(${px(element.offsetLeft)}, 0, 0)` : null)));
        this.width$ = asCallable(this.refresh$.pipe(map(element => (element === null || element === void 0 ? void 0 : element.clientWidth) || 0)));
        nativeElement['$.style.transitionProperty'] = this.transition$;
        nativeElement['$.style.transform'] = this.transform$;
        nativeElement['$.style.width.px'] = this.width$;
    }
    set element(element) {
        this.element$.next(element);
    }
};
TuiUnderlineComponent.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [ANIMATION_FRAME,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_MOBILE_AWARE,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_IOS,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_ANDROID,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiUnderlineComponent.prototype, "element", null);
__decorate([
    HostBinding('class._ios')
], TuiUnderlineComponent.prototype, "isIos", void 0);
__decorate([
    HostBinding('class._android')
], TuiUnderlineComponent.prototype, "isAndroid", void 0);
__decorate([
    HostListener('$.style.transitionProperty')
], TuiUnderlineComponent.prototype, "transition$", void 0);
__decorate([
    HostListener('$.style.transform')
], TuiUnderlineComponent.prototype, "transform$", void 0);
__decorate([
    HostListener('$.style.width.px')
], TuiUnderlineComponent.prototype, "width$", void 0);
TuiUnderlineComponent = __decorate([
    Component({
        selector: 'tui-underline',
        template: '',
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
        styles: [":host{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;position:absolute;left:0;height:100%;color:var(--tui-primary);transform:scale(0);box-shadow:inset 0 -.1875rem 0 -.0625rem;transition-property:none;pointer-events:none}:host._ios{border-radius:.4375rem;background:var(--tui-base-01);box-shadow:0 .1875rem .0625rem rgba(0,0,0,.04),0 .1875rem .5rem rgba(0,0,0,.12)}:host._android{box-shadow:inset 0 -.1875rem var(--tui-link)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-mode=onLight]{color:var(--tui-text-02)}"]
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(NgZone)),
    __param(2, Inject(ANIMATION_FRAME)),
    __param(3, Inject(TUI_MOBILE_AWARE)),
    __param(4, Inject(TUI_IS_IOS)),
    __param(5, Inject(TUI_IS_ANDROID)),
    __param(6, Inject(TUI_MODE))
], TuiUnderlineComponent);
export { TuiUnderlineComponent };
//# sourceMappingURL=data:application/json;base64,