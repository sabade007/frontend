import { TuiMonthPipe } from '@taiga-ui/core';
import { TUI_MONTH_FORMATTER } from '@taiga-ui/kit/tokens';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
export const TUI_MONTH_FORMATTER_PROVIDER = {
    provide: TUI_MONTH_FORMATTER,
    deps: [TuiMonthPipe],
    useFactory: monthFormatterFactory,
};
/**
 * Range.setStart/set-end, except it uses offset in characters only
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function monthFormatterFactory(pipe) {
    return month => month
        ? pipe
            .transform(month)
            .pipe(map(formatted => `${formatted} ${month.formattedYear}`))
        : of(``);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtZm9ybWF0dGVyLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9wcm92aWRlcnMvIiwic291cmNlcyI6WyJtb250aC1mb3JtYXR0ZXIucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBYSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDcEMsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFvQjtJQUN6RCxPQUFPLEVBQUUsbUJBQW1CO0lBQzVCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixVQUFVLEVBQUUscUJBQXFCO0NBQ3BDLENBQUM7QUFFRjs7R0FFRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUscUJBQXFCLENBQ2pDLElBQWtCO0lBRWxCLE9BQU8sS0FBSyxDQUFDLEVBQUUsQ0FDWCxLQUFLO1FBQ0QsQ0FBQyxDQUFDLElBQUk7YUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDO2FBQ2hCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsSUFBSSxLQUFLLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUNwRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZhY3RvcnlQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUhhbmRsZXIsIFR1aU1vbnRofSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpTW9udGhQaXBlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1RVSV9NT05USF9GT1JNQVRURVJ9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgb2Z9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9NT05USF9GT1JNQVRURVJfUFJPVklERVI6IEZhY3RvcnlQcm92aWRlciA9IHtcbiAgICBwcm92aWRlOiBUVUlfTU9OVEhfRk9STUFUVEVSLFxuICAgIGRlcHM6IFtUdWlNb250aFBpcGVdLFxuICAgIHVzZUZhY3Rvcnk6IG1vbnRoRm9ybWF0dGVyRmFjdG9yeSxcbn07XG5cbi8qKlxuICogUmFuZ2Uuc2V0U3RhcnQvc2V0LWVuZCwgZXhjZXB0IGl0IHVzZXMgb2Zmc2V0IGluIGNoYXJhY3RlcnMgb25seVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gbW9udGhGb3JtYXR0ZXJGYWN0b3J5KFxuICAgIHBpcGU6IFR1aU1vbnRoUGlwZSxcbik6IFR1aUhhbmRsZXI8VHVpTW9udGggfCBudWxsLCBPYnNlcnZhYmxlPHN0cmluZz4+IHtcbiAgICByZXR1cm4gbW9udGggPT5cbiAgICAgICAgbW9udGhcbiAgICAgICAgICAgID8gcGlwZVxuICAgICAgICAgICAgICAgICAgLnRyYW5zZm9ybShtb250aClcbiAgICAgICAgICAgICAgICAgIC5waXBlKG1hcChmb3JtYXR0ZWQgPT4gYCR7Zm9ybWF0dGVkfSAke21vbnRoLmZvcm1hdHRlZFllYXJ9YCkpXG4gICAgICAgICAgICA6IG9mKGBgKTtcbn1cbiJdfQ==