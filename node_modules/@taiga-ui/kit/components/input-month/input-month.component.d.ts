import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiBooleanHandler, TuiFocusableElementAccessor, TuiHandler, TuiMonth, TuiYear } from '@taiga-ui/cdk';
import { TuiTextfieldSizeDirective, TuiWithOptionalMinMax } from '@taiga-ui/core';
import { Observable } from 'rxjs';
export declare class TuiInputMonthComponent extends AbstractTuiNullableControl<TuiMonth> implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor {
    private readonly textfieldSize;
    readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>;
    private readonly textfield?;
    min: TuiMonth;
    max: TuiMonth;
    disabledItemHandler: TuiBooleanHandler<TuiMonth>;
    open: boolean;
    activeYear: TuiYear;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, textfieldSize: TuiTextfieldSizeDirective, formatter: TuiHandler<TuiMonth | null, Observable<string>>);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): string;
    onValueChange(value: string): void;
    onMonthClick(month: TuiMonth): void;
    onHovered(hovered: boolean): void;
    onFocused(focused: boolean): void;
    onOpenChange(open: boolean): void;
    toggle(): void;
    setDisabledState(): void;
    private close;
}
