import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiActiveZoneDirective, TuiBooleanHandler, TuiContextWithImplicit, TuiControlValueTransformer, TuiDateMode, TuiDay, TuiFocusableElementAccessor, TuiMonth, TuiTime, TuiTimeMode } from '@taiga-ui/cdk';
import { TuiTextfieldSizeDirective, TuiWithOptionalMinMax } from '@taiga-ui/core';
import { TextMaskConfig } from 'angular2-text-mask';
import { Observable } from 'rxjs';
export declare class TuiInputDateTimeComponent extends AbstractTuiControl<[TuiDay | null, TuiTime | null]> implements TuiWithOptionalMinMax<TuiDay | [TuiDay, TuiTime]>, TuiFocusableElementAccessor {
    private readonly textfieldSize;
    readonly dateFormat: TuiDateMode;
    readonly dateSeparator: string;
    readonly timeTexts$: Observable<Record<TuiTimeMode, string>>;
    readonly dateTexts$: Observable<Record<TuiDateMode, string>>;
    readonly valueTransformer: TuiControlValueTransformer<[TuiDay | null, TuiTime | null]> | null;
    private readonly textfield?;
    private month;
    min: TuiDay | [TuiDay, TuiTime];
    max: TuiDay | [TuiDay, TuiTime];
    disabledItemHandler: TuiBooleanHandler<TuiDay>;
    defaultActiveYearMonth: TuiMonth;
    timeMode: TuiTimeMode;
    open: boolean;
    readonly type: TuiContextWithImplicit<TuiActiveZoneDirective>;
    readonly filler$: Observable<string>;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, textfieldSize: TuiTextfieldSizeDirective, dateFormat: TuiDateMode, dateSeparator: string, timeTexts$: Observable<Record<TuiTimeMode, string>>, dateTexts$: Observable<Record<TuiDateMode, string>>, valueTransformer: TuiControlValueTransformer<[TuiDay | null, TuiTime | null]> | null);
    get fillerLength(): number;
    get textMaskOptions(): TextMaskConfig;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): string;
    get computedValue(): string;
    get calendarValue(): TuiDay | null;
    get calendarMinDay(): TuiDay;
    get calendarMaxDay(): TuiDay;
    get computedActiveYearMonth(): TuiMonth;
    get nativeValue(): string;
    set nativeValue(value: string);
    onClick(): void;
    onValueChange(value: string): void;
    onDayClick(day: TuiDay): void;
    onHovered(hovered: boolean): void;
    onMonthChange(month: TuiMonth): void;
    onOpenChange(open: boolean): void;
    onFocused(focused: boolean): void;
    setDisabledState(): void;
    writeValue(value: [TuiDay | null, TuiTime | null] | null): void;
    protected getFallbackValue(): [TuiDay | null, TuiTime | null];
    protected valueIdenticalComparator(oldValue: [TuiDay | null, TuiTime | null], newValue: [TuiDay | null, TuiTime | null]): boolean;
    private calculateMask;
    private getDateTimeString;
    private updateNativeValue;
    private clampTime;
}
