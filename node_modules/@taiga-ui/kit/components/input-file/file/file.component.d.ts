import { EventEmitter } from '@angular/core';
import { DomSanitizer, SafeValue } from '@angular/platform-browser';
import { TuiSizeL } from '@taiga-ui/core';
import { TuiFileState, TuiFileStateT } from '@taiga-ui/kit/enums';
import { TuiFileLike } from '@taiga-ui/kit/interfaces';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
export declare class TuiFileOldComponent {
    readonly isMobile: boolean;
    private readonly sanitizer;
    readonly fileTexts$: Observable<Record<'loadingError' | 'preview' | 'remove', string>>;
    private readonly units$;
    file: TuiFileLike;
    state: TuiFileState | TuiFileStateT;
    size: TuiSizeL;
    allowDelete: boolean;
    showSize: boolean;
    readonly fileRemoved: EventEmitter<void>;
    focused: boolean;
    constructor(isMobile: boolean, sanitizer: DomSanitizer, fileTexts$: Observable<Record<'loadingError' | 'preview' | 'remove', string>>, units$: Observable<[string, string, string]>);
    get preview(): SafeValue;
    get isBig(): boolean;
    get isLoading(): boolean;
    get isError(): boolean;
    get isDeleted(): boolean;
    get icon(): string;
    get src(): string;
    get name(): string;
    get type(): string;
    get content$(): Observable<PolymorpheusContent>;
    get fileSize$(): Observable<string | null>;
    onRemoveClick(): void;
    onFocusVisible(focusVisible: boolean): void;
    private calculateContent$;
    private calculateFileSize$;
    private createPreview;
}
