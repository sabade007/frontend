import { ElementRef, EventEmitter } from '@angular/core';
import { TuiBrightness, TuiSizeL, TuiSizeS, TuiSizeXS } from '@taiga-ui/core';
import { TuiStatusT } from '@taiga-ui/kit/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import { TuiTagOptions } from './tag-options';
export declare const ALLOWED_SPACE_REGEXP: RegExp;
export declare class TuiTagComponent {
    private readonly elementRef;
    readonly mode$: Observable<TuiBrightness | null>;
    private readonly options;
    value: string;
    editable: boolean;
    allowSpaces: boolean;
    separator: RegExp | string;
    maxLength: number | null;
    size: TuiSizeL | TuiSizeS;
    showLoader: boolean;
    status: TuiStatusT;
    hoverable: boolean;
    removable: boolean;
    disabled: boolean;
    autoColor: boolean;
    leftContent: PolymorpheusContent | null;
    readonly edited: EventEmitter<string>;
    editing: boolean;
    editedText: string | null;
    set input(input: ElementRef<HTMLInputElement>);
    constructor(elementRef: ElementRef<HTMLElement>, mode$: Observable<TuiBrightness | null>, options: TuiTagOptions);
    get backgroundColor(): string | null;
    get canRemove(): boolean;
    get displayText(): string;
    get loaderSize(): TuiSizeXS;
    get hasIcon(): boolean;
    edit(event: Event): void;
    remove(event: Event): void;
    onInput(value: string): void;
    onKeyDown(event: KeyboardEvent): void;
    onBlur(): void;
    private get canEdit();
    private stopEditing;
    private save;
}
