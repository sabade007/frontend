import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiHandler, TuiMonth, TuiMonthRange } from '@taiga-ui/cdk';
import { TuiTextfieldSizeDirective, TuiWithOptionalMinMax } from '@taiga-ui/core';
import { TuiMonthContext } from '@taiga-ui/kit/interfaces';
import { TuiBooleanHandlerWithContext } from '@taiga-ui/kit/types';
import { Observable } from 'rxjs';
export declare class TuiInputMonthRangeComponent extends AbstractTuiNullableControl<TuiMonthRange> implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor {
    readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>;
    private readonly textfieldSize;
    private readonly textfield?;
    min: TuiMonth;
    max: TuiMonth;
    disabledItemHandler: TuiBooleanHandlerWithContext<TuiMonth, TuiMonthContext>;
    open: boolean;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, formatter: TuiHandler<TuiMonth | null, Observable<string>>, textfieldSize: TuiTextfieldSizeDirective);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): string;
    computeValue(from: string | null, to: string | null): string;
    onValueChange(value: string): void;
    onMonthClick(month: TuiMonth): void;
    onHovered(hovered: boolean): void;
    onOpenChange(open: boolean): void;
    onActiveZone(focused: boolean): void;
    setDisabledState(): void;
    private close;
}
