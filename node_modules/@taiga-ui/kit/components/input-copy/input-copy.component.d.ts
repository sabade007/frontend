import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiDirection, TuiHintModeT, TuiTextfieldSizeDirective } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
export declare class TuiInputCopyComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor {
    private readonly documentRef;
    private readonly textfieldSize;
    private readonly copyTexts$;
    private readonly textfield?;
    private readonly copy$;
    successMessage: PolymorpheusContent;
    messageDirection: TuiDirection;
    messageMode: TuiHintModeT | null;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, documentRef: Document, textfieldSize: TuiTextfieldSizeDirective, copyTexts$: Observable<[string, string]>);
    get hasValue(): boolean;
    get hintText$(): Observable<PolymorpheusContent>;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get icon(): string;
    onValueChange(value: string): void;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    copy(): void;
    protected getFallbackValue(): string;
}
