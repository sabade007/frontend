import { ElementRef, EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { TuiRangeComponent } from './range.component';
export declare class TuiRangeChangeDirective {
    private readonly documentRef;
    private readonly elementRef;
    private readonly range;
    /**
     * TODO replace with pointer events (when all supported browsers can handle them).
     * Dont forget to use setPointerCapture instead of listening all documentRef events
     */
    private readonly pointerDown$;
    private readonly pointerMove$;
    private readonly pointerUp$;
    activeThumbChange: EventEmitter<"left" | "right">;
    constructor(documentRef: Document, elementRef: ElementRef<HTMLElement>, range: TuiRangeComponent, destroy$: Observable<unknown>);
    private getFractionFromEvents;
    private detectActiveThumb;
    private findNearestActiveThumb;
}
