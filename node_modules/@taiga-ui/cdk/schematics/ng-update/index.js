"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ng_morph_1 = require("ng-morph");
const constants_1 = require("../constants");
const versions_1 = require("../ng-add/constants/versions");
const colored_log_1 = require("../utils/colored-log");
const get_execution_time_1 = require("../utils/get-execution-time");
const migrate_date_time_1 = require("./steps/migrate-date-time");
const migrate_progress_1 = require("./steps/migrate-progress");
const migrate_sliders_1 = require("./steps/migrate-sliders");
const migrate_templates_1 = require("./steps/migrate-templates");
const miscellaneous_1 = require("./steps/miscellaneous");
const remove_module_1 = require("./steps/remove-module");
const rename_types_1 = require("./steps/rename-types");
const replace_const_1 = require("./steps/replace-const");
const replace_deep_import_1 = require("./steps/replace-deep-import");
const replace_enums_1 = require("./steps/replace-enums");
const replace_functions_1 = require("./steps/replace-functions");
const replace_services_1 = require("./steps/replace-services");
const show_warnings_1 = require("./steps/show-warnings");
function updateToV3(cliFlags) {
    return (tree, context) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        const t0 = performance.now();
        colored_log_1.titleLog(`\n\n${colored_log_1.START_SYMBOL} Your packages will be updated to @taiga-ui/*@${versions_1.TAIGA_VERSION}\n`);
        const fileSystem = getFileSystem(tree);
        !cliFlags[`skip-deep-imports`] && replace_deep_import_1.replaceDeepImports();
        replace_enums_1.replaceEnums();
        rename_types_1.renameTypes();
        replace_const_1.replaceConstants();
        replace_services_1.replaceServices();
        show_warnings_1.showWarnings(context);
        migrate_templates_1.migrateTemplates(fileSystem);
        fileSystem.commitEdits();
        ng_morph_1.saveActiveProject();
        const updatedFileSystem = getFileSystem(tree);
        migrate_sliders_1.migrateSliders(updatedFileSystem);
        migrate_progress_1.migrateProgress(updatedFileSystem);
        remove_module_1.removeModules();
        migrate_date_time_1.dateTimeMigrations();
        replace_functions_1.replaceFunctions();
        miscellaneous_1.miscellaneousMigrations();
        ng_morph_1.saveActiveProject();
        const executionTime = get_execution_time_1.getExecutionTime(t0, performance.now());
        colored_log_1.titleLog(`${colored_log_1.FINISH_SYMBOL} We migrated packages to @taiga-ui/*@${versions_1.TAIGA_VERSION} in ${executionTime}. \n`);
    });
}
exports.updateToV3 = updateToV3;
function getFileSystem(tree) {
    const project = ng_morph_1.createProject(tree, `/`, [constants_1.ALL_FILES]);
    ng_morph_1.setActiveProject(project);
    return project.getFileSystem().fs;
}
