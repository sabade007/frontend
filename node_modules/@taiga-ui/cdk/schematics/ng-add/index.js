"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const tasks_1 = require("@angular-devkit/schematics/tasks");
const ng_morph_1 = require("ng-morph");
const packages_1 = require("./constants/packages");
const versions_1 = require("./constants/versions");
function ngAdd(options) {
    return (tree, context) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        context.logger.info(`The main packages will be installed - ${packages_1.MAIN_PACKAGES}`);
        addDependencies(tree, options);
        context.addTask(new tasks_1.NodePackageInstallTask(), [
            context.addTask(new tasks_1.RunSchematicTask(`ng-add-setup-project`, options)),
        ]);
    });
}
exports.ngAdd = ngAdd;
function addDependencies(tree, options) {
    const packages = [...packages_1.MAIN_PACKAGES, ...options.addons];
    packages.forEach(pack => {
        ng_morph_1.addPackageJsonDependency(tree, {
            name: `@taiga-ui/${pack}`,
            version: versions_1.TAIGA_VERSION,
        });
    });
    if (options.addSanitizer) {
        ng_morph_1.addPackageJsonDependency(tree, {
            name: `@tinkoff/ng-dompurify`,
            version: versions_1.NG_DOMPURIFY_VERSION,
        });
        ng_morph_1.addPackageJsonDependency(tree, {
            name: `dompurify`,
            version: versions_1.DOMPURIFY_VERSION,
        });
        ng_morph_1.addPackageJsonDependency(tree, {
            name: `@types/dompurify`,
            version: versions_1.DOMPURIFY_TYPES_VERSION,
            type: ng_morph_1.NodeDependencyType.Dev,
        });
    }
    if (packages.includes(`addon-table`) || packages.includes(`addon-mobile`)) {
        addAngularCdkDep(tree);
    }
}
function addAngularCdkDep(tree) {
    var _a;
    const angularCore = (_a = ng_morph_1.getPackageJsonDependency(tree, `@angular/core`)) === null || _a === void 0 ? void 0 : _a.version;
    if (!angularCore) {
        return;
    }
    const majorVersionArr = angularCore.match(/[0-9]+/);
    if (majorVersionArr) {
        ng_morph_1.addPackageJsonDependency(tree, {
            name: `@angular/cdk`,
            version: `^${majorVersionArr[0]}.0.0`,
        });
    }
}
