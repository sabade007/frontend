import { __extends } from 'tslib';

var TuiComputedDocumentException = /** @class */ (function (_super) {
    __extends(TuiComputedDocumentException, _super);
    function TuiComputedDocumentException() {
        return _super.call(this, "Only use computedDocument after load event") || this;
    }
    return TuiComputedDocumentException;
}(Error));

var TuiDocumentSelectionException = /** @class */ (function (_super) {
    __extends(TuiDocumentSelectionException, _super);
    function TuiDocumentSelectionException() {
        return _super.call(this, "Failed to get document selection") || this;
    }
    return TuiDocumentSelectionException;
}(Error));

/**
 * @deprecated: use {@link TuiInvalidDayException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
var InvalidDayException = /** @class */ (function (_super) {
    __extends(InvalidDayException, _super);
    function InvalidDayException(day) {
        return _super.call(this, "Invalid day: " + day) || this;
    }
    return InvalidDayException;
}(Error));
var TuiInvalidDayException = /** @class */ (function (_super) {
    __extends(TuiInvalidDayException, _super);
    function TuiInvalidDayException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TuiInvalidDayException;
}(InvalidDayException));

/**
 * @deprecated: use {@link TuiInvalidMonthException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
var InvalidMonthException = /** @class */ (function (_super) {
    __extends(InvalidMonthException, _super);
    function InvalidMonthException(month) {
        return _super.call(this, "Invalid month: " + month) || this;
    }
    return InvalidMonthException;
}(Error));
var TuiInvalidMonthException = /** @class */ (function (_super) {
    __extends(TuiInvalidMonthException, _super);
    function TuiInvalidMonthException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TuiInvalidMonthException;
}(InvalidMonthException));

/**
 * @deprecated: use {@link TuiInvalidYearException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
var InvalidYearException = /** @class */ (function (_super) {
    __extends(InvalidYearException, _super);
    function InvalidYearException(year) {
        return _super.call(this, "Invalid year: " + year) || this;
    }
    return InvalidYearException;
}(Error));
var TuiInvalidYearException = /** @class */ (function (_super) {
    __extends(TuiInvalidYearException, _super);
    function TuiInvalidYearException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TuiInvalidYearException;
}(InvalidYearException));

var TuiNoHostException = /** @class */ (function (_super) {
    __extends(TuiNoHostException, _super);
    function TuiNoHostException() {
        return _super.call(this, "Portals cannot be used without TuiPortalHostComponent") || this;
    }
    return TuiNoHostException;
}(Error));

var TuiOwnerDocumentException = /** @class */ (function (_super) {
    __extends(TuiOwnerDocumentException, _super);
    function TuiOwnerDocumentException() {
        return _super.call(this, "Element does not have ownerDocument") || this;
    }
    return TuiOwnerDocumentException;
}(Error));

var TuiPureException = /** @class */ (function (_super) {
    __extends(TuiPureException, _super);
    function TuiPureException() {
        return _super.call(this, "tuiPure can only be used with functions or getters") || this;
    }
    return TuiPureException;
}(Error));

var TuiTableSortKeyException = /** @class */ (function (_super) {
    __extends(TuiTableSortKeyException, _super);
    function TuiTableSortKeyException() {
        return _super.call(this, "Trying to sort with no key") || this;
    }
    return TuiTableSortKeyException;
}(Error));

var TuiTsParserException = /** @class */ (function (_super) {
    __extends(TuiTsParserException, _super);
    function TuiTsParserException() {
        return _super.call(this, "TsFileParser: 1 component/module per ts-file") || this;
    }
    return TuiTsParserException;
}(Error));

var TuiValueChangesException = /** @class */ (function (_super) {
    __extends(TuiValueChangesException, _super);
    function TuiValueChangesException() {
        return _super.call(this, "Control does not have valueChanges") || this;
    }
    return TuiValueChangesException;
}(Error));

var TuiValuePresentException = /** @class */ (function (_super) {
    __extends(TuiValuePresentException, _super);
    function TuiValuePresentException() {
        return _super.call(this, "Value must present") || this;
    }
    return TuiValuePresentException;
}(Error));

var TuiXmlParsingException = /** @class */ (function (_super) {
    __extends(TuiXmlParsingException, _super);
    function TuiXmlParsingException() {
        return _super.call(this, "Error parsing XML string") || this;
    }
    return TuiXmlParsingException;
}(Error));

/**
 * Generated bundle index. Do not edit.
 */

export { InvalidDayException, InvalidMonthException, InvalidYearException, TuiComputedDocumentException, TuiDocumentSelectionException, TuiInvalidDayException, TuiInvalidMonthException, TuiInvalidYearException, TuiNoHostException, TuiOwnerDocumentException, TuiPureException, TuiTableSortKeyException, TuiTsParserException, TuiValueChangesException, TuiValuePresentException, TuiXmlParsingException };
//# sourceMappingURL=taiga-ui-cdk-exceptions.js.map
