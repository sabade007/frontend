import { __decorate, __param } from 'tslib';
import { Attribute, Inject, Input, HostBinding, Directive, NgModule } from '@angular/core';
import { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';

/**
 * Abstraction over `inputMode` attribute
 */
var TuiInputModeDirective = /** @class */ (function () {
    function TuiInputModeDirective(pattern, isIOS) {
        this.pattern = pattern;
        this.isIOS = isIOS;
        this.mode = 'text';
    }
    Object.defineProperty(TuiInputModeDirective.prototype, "patternAttribute", {
        get: function () {
            return this.mode === 'numeric' && this.isIOS && !this.pattern
                ? '[0-9]*'
                : this.pattern;
        },
        enumerable: true,
        configurable: true
    });
    TuiInputModeDirective.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Attribute, args: ['pattern',] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_IOS,] }] }
    ]; };
    __decorate([
        Input('tuiInputMode'),
        HostBinding('attr.inputmode'),
        HostBinding('attr.x-inputmode')
    ], TuiInputModeDirective.prototype, "mode", void 0);
    __decorate([
        HostBinding('attr.pattern')
    ], TuiInputModeDirective.prototype, "patternAttribute", null);
    TuiInputModeDirective = __decorate([
        Directive({
            selector: 'input[tuiInputMode]',
        }),
        __param(0, Attribute('pattern')),
        __param(1, Inject(TUI_IS_IOS))
    ], TuiInputModeDirective);
    return TuiInputModeDirective;
}());

var TuiInputModeModule = /** @class */ (function () {
    function TuiInputModeModule() {
    }
    TuiInputModeModule = __decorate([
        NgModule({
            declarations: [TuiInputModeDirective],
            exports: [TuiInputModeDirective],
        })
    ], TuiInputModeModule);
    return TuiInputModeModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiInputModeDirective, TuiInputModeModule };
//# sourceMappingURL=taiga-ui-cdk-directives-input-mode.js.map
