import { __decorate, __param } from 'tslib';
import { ViewContainerRef, Inject, TemplateRef, Input, Directive, NgModule } from '@angular/core';

/**
 * @internal
 */
var TuiLetContext = /** @class */ (function () {
    function TuiLetContext(internalDirectiveInstance) {
        this.internalDirectiveInstance = internalDirectiveInstance;
    }
    Object.defineProperty(TuiLetContext.prototype, "$implicit", {
        get: function () {
            return this.internalDirectiveInstance.tuiLet;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLetContext.prototype, "tuiLet", {
        get: function () {
            return this.internalDirectiveInstance.tuiLet;
        },
        enumerable: true,
        configurable: true
    });
    return TuiLetContext;
}());

/**
 * Works like *ngIf but does not have a condition â€” use it to declare
 * the result of pipes calculation (i.e. async pipe)
 */
var TuiLetDirective = /** @class */ (function () {
    function TuiLetDirective(viewContainer, templateRef) {
        viewContainer.createEmbeddedView(templateRef, new TuiLetContext(this));
    }
    /**
     * Asserts the correct type of the context for the template that `TuiLet` will render.
     *
     * The presence of this method is a signal to the Ivy template type-check compiler that the
     * `TuiLet` structural directive renders its template with a specific context type.
     */
    TuiLetDirective.ngTemplateContextGuard = function (_dir, _ctx) {
        return true;
    };
    TuiLetDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] },
        { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] }
    ]; };
    __decorate([
        Input()
    ], TuiLetDirective.prototype, "tuiLet", void 0);
    TuiLetDirective = __decorate([
        Directive({
            selector: '[tuiLet]',
        }),
        __param(0, Inject(ViewContainerRef)),
        __param(1, Inject(TemplateRef))
    ], TuiLetDirective);
    return TuiLetDirective;
}());

var TuiLetModule = /** @class */ (function () {
    function TuiLetModule() {
    }
    TuiLetModule = __decorate([
        NgModule({
            declarations: [TuiLetDirective],
            exports: [TuiLetDirective],
        })
    ], TuiLetModule);
    return TuiLetModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiLetContext, TuiLetDirective, TuiLetModule };
//# sourceMappingURL=taiga-ui-cdk-directives-let.js.map
