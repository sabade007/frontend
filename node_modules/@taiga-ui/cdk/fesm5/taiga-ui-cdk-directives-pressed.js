import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Output, Directive, NgModule } from '@angular/core';
import { pressedObservable } from '@taiga-ui/cdk/observables';
import { TUI_TAKE_ONLY_TRUSTED_EVENTS } from '@taiga-ui/cdk/tokens';

var TuiPressedDirective = /** @class */ (function () {
    function TuiPressedDirective(elementRef, takeOnlyTrustedEvents) {
        this.elementRef = elementRef;
        this.takeOnlyTrustedEvents = takeOnlyTrustedEvents;
        this.tuiPressedChange = pressedObservable(this.elementRef.nativeElement, {
            onlyTrusted: this.takeOnlyTrustedEvents,
        });
    }
    TuiPressedDirective.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_TAKE_ONLY_TRUSTED_EVENTS,] }] }
    ]; };
    __decorate([
        Output()
    ], TuiPressedDirective.prototype, "tuiPressedChange", void 0);
    TuiPressedDirective = __decorate([
        Directive({
            selector: '[tuiPressedChange]',
        }),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(TUI_TAKE_ONLY_TRUSTED_EVENTS))
    ], TuiPressedDirective);
    return TuiPressedDirective;
}());

var TuiPressedModule = /** @class */ (function () {
    function TuiPressedModule() {
    }
    TuiPressedModule = __decorate([
        NgModule({
            declarations: [TuiPressedDirective],
            exports: [TuiPressedDirective],
        })
    ], TuiPressedModule);
    return TuiPressedModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPressedDirective, TuiPressedModule };
//# sourceMappingURL=taiga-ui-cdk-directives-pressed.js.map
