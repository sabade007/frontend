import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';

var tuiAssert = {
    enabled: false,
    get assert() {
        return this.enabled
            ? Function.prototype.bind.call(console.assert, console)
            : EMPTY_FUNCTION;
    },
};
// TODO: replace `HTMLElement` to `Element` in v3.0
// TS 3.8 Argument of type Argument of type 'TuiNativeFocusableElement | HTMLElement' is not assignable to parameter of type 'HTMLElement'.
function tuiAssertIsHTMLElement(node) {
    var _a, _b;
    var defaultView = (_b = (_a = node) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    var isElement = !!defaultView &&
        (node instanceof defaultView.Element || node instanceof defaultView.HTMLDocument);
    tuiAssert.assert(isElement, "Node is not an Element");
}

var TuiValidationError = /** @class */ (function () {
    function TuiValidationError(message, context) {
        if (context === void 0) { context = {}; }
        this.message = message;
        this.context = context;
    }
    return TuiValidationError;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiValidationError, tuiAssert, tuiAssertIsHTMLElement };
//# sourceMappingURL=taiga-ui-cdk-classes.js.map
