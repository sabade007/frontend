import { __decorate, __param } from 'tslib';
import { ViewContainerRef, Inject, TemplateRef, Input, Directive, NgModule } from '@angular/core';
import { tuiRequiredSetter } from '@taiga-ui/cdk/decorators';
import { clamp } from '@taiga-ui/cdk/utils/math';

var MAX_VALUE = 0x10000;
var TuiRepeatTimesContext = /** @class */ (function () {
    function TuiRepeatTimesContext($implicit) {
        this.$implicit = $implicit;
    }
    return TuiRepeatTimesContext;
}());
/**
 * Directive similar to ngFor but using a number of repetitions rather than an array
 *
 * {@link TuiRepeatTimesDirective.tuiRepeatTimesOf requested number of times}.
 * {@link TuiRepeatTimesContext context} for every instance of the template inherits outer context and stores
 * {@link TuiRepeatTimesContext.$implicit index} of a template instance.
 */
var TuiRepeatTimesDirective = /** @class */ (function () {
    function TuiRepeatTimesDirective(viewContainer, templateRef) {
        this.viewContainer = viewContainer;
        this.templateRef = templateRef;
    }
    Object.defineProperty(TuiRepeatTimesDirective.prototype, "tuiRepeatTimesOf", {
        set: function (count) {
            var safeCount = Math.floor(clamp(count, 0, MAX_VALUE));
            var length = this.viewContainer.length;
            if (count < length) {
                this.removeContainers(length - count);
            }
            else {
                this.addContainers(safeCount);
            }
        },
        enumerable: true,
        configurable: true
    });
    TuiRepeatTimesDirective.prototype.addContainers = function (count) {
        for (var index = this.viewContainer.length; index < count; index++) {
            this.viewContainer.createEmbeddedView(this.templateRef, new TuiRepeatTimesContext(index));
        }
    };
    TuiRepeatTimesDirective.prototype.removeContainers = function (amount) {
        for (var index = 0; index < amount; index++) {
            this.viewContainer.remove();
        }
    };
    TuiRepeatTimesDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] },
        { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] }
    ]; };
    __decorate([
        Input(),
        tuiRequiredSetter()
    ], TuiRepeatTimesDirective.prototype, "tuiRepeatTimesOf", null);
    TuiRepeatTimesDirective = __decorate([
        Directive({
            selector: '[tuiRepeatTimes][tuiRepeatTimesOf]',
        }),
        __param(0, Inject(ViewContainerRef)),
        __param(1, Inject(TemplateRef))
    ], TuiRepeatTimesDirective);
    return TuiRepeatTimesDirective;
}());

var TuiRepeatTimesModule = /** @class */ (function () {
    function TuiRepeatTimesModule() {
    }
    TuiRepeatTimesModule = __decorate([
        NgModule({
            declarations: [TuiRepeatTimesDirective],
            exports: [TuiRepeatTimesDirective],
        })
    ], TuiRepeatTimesModule);
    return TuiRepeatTimesModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiRepeatTimesContext, TuiRepeatTimesDirective, TuiRepeatTimesModule };
//# sourceMappingURL=taiga-ui-cdk-directives-repeat-times.js.map
