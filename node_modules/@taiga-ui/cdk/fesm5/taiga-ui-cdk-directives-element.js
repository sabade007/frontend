import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Directive, NgModule } from '@angular/core';

var TuiElementDirective = /** @class */ (function () {
    function TuiElementDirective(_a) {
        var nativeElement = _a.nativeElement;
        /**
         * @note:
         * Typically, when your constructor is invoked with new,
         * an object is created, its constructor is assigned to
         * the invoked constructor and the object is then assigned
         * to this before executing any operations specified
         * in your constructor method.
         *
         * ERROR TypeError: Class constructor ElementRef cannot be invoked without 'new'
         * https://github.com/Tinkoff/taiga-ui/issues/3072
         *
         * This way we can instantiate object creation
         * without additional prototype chain for possible fix bug.
         */
        return new ElementRef(nativeElement);
    }
    TuiElementDirective.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] }
    ]; };
    TuiElementDirective = __decorate([
        Directive({
            selector: '[tuiElement]',
            exportAs: 'elementRef',
        }),
        __param(0, Inject(ElementRef))
    ], TuiElementDirective);
    return TuiElementDirective;
}());

var TuiElementModule = /** @class */ (function () {
    function TuiElementModule() {
    }
    TuiElementModule = __decorate([
        NgModule({
            declarations: [TuiElementDirective],
            exports: [TuiElementDirective],
        })
    ], TuiElementModule);
    return TuiElementModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiElementDirective, TuiElementModule };
//# sourceMappingURL=taiga-ui-cdk-directives-element.js.map
