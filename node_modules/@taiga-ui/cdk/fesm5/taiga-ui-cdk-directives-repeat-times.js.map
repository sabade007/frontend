{"version":3,"file":"taiga-ui-cdk-directives-repeat-times.js","sources":["ng://@taiga-ui/cdk/directives/repeat-times/repeat-times.directive.ts","ng://@taiga-ui/cdk/directives/repeat-times/repeat-times.module.ts","ng://@taiga-ui/cdk/directives/repeat-times/taiga-ui-cdk-directives-repeat-times.ts"],"sourcesContent":["import {Directive, Inject, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {tuiRequiredSetter} from '@taiga-ui/cdk/decorators';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk/interfaces';\nimport {clamp} from '@taiga-ui/cdk/utils/math';\n\nconst MAX_VALUE = 0x10000;\n\nexport class TuiRepeatTimesContext implements TuiContextWithImplicit<number> {\n    constructor(readonly $implicit: number) {}\n}\n\n/**\n * Directive similar to ngFor but using a number of repetitions rather than an array\n *\n * {@link TuiRepeatTimesDirective.tuiRepeatTimesOf requested number of times}.\n * {@link TuiRepeatTimesContext context} for every instance of the template inherits outer context and stores\n * {@link TuiRepeatTimesContext.$implicit index} of a template instance.\n */\n@Directive({\n    selector: '[tuiRepeatTimes][tuiRepeatTimesOf]',\n})\nexport class TuiRepeatTimesDirective {\n    @Input()\n    @tuiRequiredSetter()\n    set tuiRepeatTimesOf(count: number) {\n        const safeCount = Math.floor(clamp(count, 0, MAX_VALUE));\n\n        const {length} = this.viewContainer;\n\n        if (count < length) {\n            this.removeContainers(length - count);\n        } else {\n            this.addContainers(safeCount);\n        }\n    }\n\n    constructor(\n        @Inject(ViewContainerRef)\n        private readonly viewContainer: ViewContainerRef,\n        @Inject(TemplateRef)\n        private readonly templateRef: TemplateRef<TuiRepeatTimesContext>,\n    ) {}\n\n    private addContainers(count: number): void {\n        for (let index = this.viewContainer.length; index < count; index++) {\n            this.viewContainer.createEmbeddedView<TuiRepeatTimesContext>(\n                this.templateRef,\n                new TuiRepeatTimesContext(index),\n            );\n        }\n    }\n\n    private removeContainers(amount: number): void {\n        for (let index = 0; index < amount; index++) {\n            this.viewContainer.remove();\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiRepeatTimesDirective} from './repeat-times.directive';\n\n@NgModule({\n    declarations: [TuiRepeatTimesDirective],\n    exports: [TuiRepeatTimesDirective],\n})\nexport class TuiRepeatTimesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AAKA,IAAM,SAAS,GAAG,OAAO,CAAC;;IAGtB,+BAAqB,SAAiB;QAAjB,cAAS,GAAT,SAAS,CAAQ;KAAI;IAC9C,4BAAC;AAAD,CAAC,IAAA;AAED;;;;;;;;IAyBI,iCAEqB,aAA+B,EAE/B,WAA+C;QAF/C,kBAAa,GAAb,aAAa,CAAkB;QAE/B,gBAAW,GAAX,WAAW,CAAoC;KAChE;IAjBJ,sBAAI,qDAAgB;aAApB,UAAqB,KAAa;YAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;YAElD,IAAA,kCAAM,CAAuB;YAEpC,IAAI,KAAK,GAAG,MAAM,EAAE;gBAChB,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aACzC;iBAAM;gBACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aACjC;SACJ;;;OAAA;IASO,+CAAa,GAArB,UAAsB,KAAa;QAC/B,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;YAChE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CACjC,IAAI,CAAC,WAAW,EAChB,IAAI,qBAAqB,CAAC,KAAK,CAAC,CACnC,CAAC;SACL;KACJ;IAEO,kDAAgB,GAAxB,UAAyB,MAAc;QACnC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAC/B;KACJ;;gBAlBmC,gBAAgB,uBAD/C,MAAM,SAAC,gBAAgB;gBAGM,WAAW,uBADxC,MAAM,SAAC,WAAW;;IAfvB;QAFC,KAAK,EAAE;QACP,iBAAiB,EAAE;mEAWnB;IAbQ,uBAAuB;QAHnC,SAAS,CAAC;YACP,QAAQ,EAAE,oCAAoC;SACjD,CAAC;QAiBO,WAAA,MAAM,CAAC,gBAAgB,CAAC,CAAA;QAExB,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;OAlBf,uBAAuB,CAoCnC;IAAD,8BAAC;CApCD;;;ICbA;KAAoC;IAAvB,oBAAoB;QAJhC,QAAQ,CAAC;YACN,YAAY,EAAE,CAAC,uBAAuB,CAAC;YACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;SACrC,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAApC;;ACRA;;;;;;"}