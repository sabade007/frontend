import { __decorate, __param } from 'tslib';
import { ViewContainerRef, Inject, Input, Directive, NgModule } from '@angular/core';

var TuiForDirective = /** @class */ (function () {
    function TuiForDirective(vcr) {
        this.vcr = vcr;
        this.ngForOf = [];
    }
    TuiForDirective.prototype.ngOnChanges = function () {
        var _a, _b;
        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.destroy();
        if (((_b = this.ngForOf) === null || _b === void 0 ? void 0 : _b.length) === 0 && this.ngForEmpty) {
            this.ref = this.vcr.createEmbeddedView(this.ngForEmpty);
        }
        else if (!this.ngForOf && this.ngForElse) {
            this.ref = this.vcr.createEmbeddedView(this.ngForElse);
        }
    };
    TuiForDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] }
    ]; };
    __decorate([
        Input()
    ], TuiForDirective.prototype, "ngForOf", void 0);
    __decorate([
        Input()
    ], TuiForDirective.prototype, "ngForElse", void 0);
    __decorate([
        Input()
    ], TuiForDirective.prototype, "ngForEmpty", void 0);
    TuiForDirective = __decorate([
        Directive({
            selector: '[ngFor][ngForOf][ngForElse],[ngFor][ngForOf][ngForEmpty]',
        }),
        __param(0, Inject(ViewContainerRef))
    ], TuiForDirective);
    return TuiForDirective;
}());

var TuiForModule = /** @class */ (function () {
    function TuiForModule() {
    }
    TuiForModule = __decorate([
        NgModule({
            declarations: [TuiForDirective],
            exports: [TuiForDirective],
        })
    ], TuiForModule);
    return TuiForModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiForDirective, TuiForModule };
//# sourceMappingURL=taiga-ui-cdk-directives-for.js.map
