{"version":3,"file":"taiga-ui-cdk-directives-obscured.js","sources":["ng://@taiga-ui/cdk/directives/obscured/obscured.directive.ts","ng://@taiga-ui/cdk/directives/obscured/obscured.module.ts","ng://@taiga-ui/cdk/directives/obscured/taiga-ui-cdk-directives-obscured.ts"],"sourcesContent":["import {Directive, Inject, Input, Optional, Output, Self} from '@angular/core';\nimport {tuiRequiredSetter} from '@taiga-ui/cdk/decorators';\nimport {TuiActiveZoneDirective} from '@taiga-ui/cdk/directives/active-zone';\nimport {\n    TuiDestroyService,\n    TuiObscuredService,\n    TuiParentsScrollService,\n} from '@taiga-ui/cdk/services';\nimport {EMPTY, Observable, Subject} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\n\n/**\n * Directive that monitors element visibility\n */\n@Directive({\n    selector: '[tuiObscured]',\n    providers: [TuiObscuredService, TuiParentsScrollService, TuiDestroyService],\n})\nexport class TuiObscuredDirective {\n    private readonly enabled$ = new Subject<boolean>();\n\n    @Input()\n    @tuiRequiredSetter()\n    set tuiObscuredEnabled(enabled: boolean) {\n        this.enabled$.next(enabled);\n    }\n\n    @Output()\n    readonly tuiObscured: Observable<boolean>;\n\n    constructor(\n        @Optional()\n        @Inject(TuiActiveZoneDirective)\n        activeZone: TuiActiveZoneDirective | null,\n        @Self()\n        @Inject(TuiObscuredService)\n        obscured$: TuiObscuredService,\n    ) {\n        const mapped$ = obscured$.pipe(\n            map(\n                obscuredBy =>\n                    !!obscuredBy &&\n                    (!activeZone ||\n                        !obscuredBy.length ||\n                        obscuredBy.every(element => !activeZone.contains(element))),\n            ),\n        );\n\n        this.tuiObscured = this.enabled$.pipe(\n            switchMap(enabled => (enabled ? mapped$ : EMPTY)),\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiObscuredDirective} from './obscured.directive';\n\n@NgModule({\n    declarations: [TuiObscuredDirective],\n    exports: [TuiObscuredDirective],\n})\nexport class TuiObscuredModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAWA;;;;IAmBI,8BAGI,UAAyC,EAGzC,SAA6B;QAjBhB,aAAQ,GAAG,IAAI,OAAO,EAAW,CAAC;QAmB/C,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAC1B,GAAG,CACC,UAAA,UAAU;YACN,OAAA,CAAC,CAAC,UAAU;iBACX,CAAC,UAAU;oBACR,CAAC,UAAU,CAAC,MAAM;oBAClB,UAAU,CAAC,KAAK,CAAC,UAAA,OAAO,IAAI,OAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;SAAA,CACtE,CACJ,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACjC,SAAS,CAAC,UAAA,OAAO,IAAI,QAAC,OAAO,GAAG,OAAO,GAAG,KAAK,IAAC,CAAC,CACpD,CAAC;KACL;IA5BD,sBAAI,oDAAkB;aAAtB,UAAuB,OAAgB;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;;;OAAA;;gBAQe,sBAAsB,uBAFjC,QAAQ,YACR,MAAM,SAAC,sBAAsB;gBAInB,kBAAkB,uBAF5B,IAAI,YACJ,MAAM,SAAC,kBAAkB;;IAZ9B;QAFC,KAAK,EAAE;QACP,iBAAiB,EAAE;kEAGnB;IAGD;QADC,MAAM,EAAE;6DACiC;IAVjC,oBAAoB;QAJhC,SAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,CAAC,kBAAkB,EAAE,uBAAuB,EAAE,iBAAiB,CAAC;SAC9E,CAAC;QAcO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAE9B,WAAA,IAAI,EAAE,CAAA;QACN,WAAA,MAAM,CAAC,kBAAkB,CAAC,CAAA;OAjBtB,oBAAoB,CAkChC;IAAD,2BAAC;CAlCD;;;ICVA;KAAiC;IAApB,iBAAiB;QAJ7B,QAAQ,CAAC;YACN,YAAY,EAAE,CAAC,oBAAoB,CAAC;YACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;SAClC,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAjC;;ACRA;;;;;;"}