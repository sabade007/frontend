import { __decorate, __param } from "tslib";
import { Directive, HostListener, Inject, Input } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';
import { tuiDefaultProp } from '@taiga-ui/cdk/decorators';
import { tuiGetSelectedText } from '@taiga-ui/cdk/utils';
import { identity } from 'rxjs';
// @dynamic
var TuiCopyProcessorDirective = /** @class */ (function () {
    function TuiCopyProcessorDirective(windowRef) {
        this.windowRef = windowRef;
        this.tuiCopyProcessor = identity;
    }
    TuiCopyProcessorDirective.prototype.onCopy = function (event) {
        var _a;
        var text = tuiGetSelectedText(this.windowRef);
        if (text) {
            (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/plain', this.tuiCopyProcessor(text));
        }
    };
    TuiCopyProcessorDirective.ctorParameters = function () { return [
        { type: Window, decorators: [{ type: Inject, args: [WINDOW,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCopyProcessorDirective.prototype, "tuiCopyProcessor", void 0);
    __decorate([
        HostListener('copy.prevent', ['$event'])
    ], TuiCopyProcessorDirective.prototype, "onCopy", null);
    TuiCopyProcessorDirective = __decorate([
        Directive({
            selector: '[tuiCopyProcessor]',
        }),
        __param(0, Inject(WINDOW))
    ], TuiCopyProcessorDirective);
    return TuiCopyProcessorDirective;
}());
export { TuiCopyProcessorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weS1wcm9jZXNzb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2Nkay9kaXJlY3RpdmVzL2NvcHktcHJvY2Vzc29yLyIsInNvdXJjZXMiOlsiY29weS1wcm9jZXNzb3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFeEQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUU5QixXQUFXO0FBSVg7SUFLSSxtQ0FBNkMsU0FBaUI7UUFBakIsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUY5RCxxQkFBZ0IsR0FBNkIsUUFBUSxDQUFDO0lBRVcsQ0FBQztJQUdsRSwwQ0FBTSxHQUFOLFVBQU8sS0FBcUI7O1FBQ3hCLElBQU0sSUFBSSxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUVoRCxJQUFJLElBQUksRUFBRTtZQUNOLE1BQUEsS0FBSyxDQUFDLGFBQWEsMENBQUUsT0FBTyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUU7U0FDM0U7SUFDTCxDQUFDOztnQkFUdUQsTUFBTSx1QkFBakQsTUFBTSxTQUFDLE1BQU07O0lBRjFCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFO3VFQUNxQztJQUt0RDtRQURDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQzsyREFPeEM7SUFkUSx5QkFBeUI7UUFIckMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLG9CQUFvQjtTQUNqQyxDQUFDO1FBTWUsV0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUE7T0FMbEIseUJBQXlCLENBZXJDO0lBQUQsZ0NBQUM7Q0FBQSxBQWZELElBZUM7U0FmWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7V0lORE9XfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGVjb3JhdG9ycyc7XG5pbXBvcnQge1R1aVN0cmluZ0hhbmRsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsvdHlwZXMnO1xuaW1wb3J0IHt0dWlHZXRTZWxlY3RlZFRleHR9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMnO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSAncnhqcyc7XG5cbi8vIEBkeW5hbWljXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlDb3B5UHJvY2Vzc29yXScsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUNvcHlQcm9jZXNzb3JEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICB0dWlDb3B5UHJvY2Vzc29yOiBUdWlTdHJpbmdIYW5kbGVyPHN0cmluZz4gPSBpZGVudGl0eTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoV0lORE9XKSBwcml2YXRlIHJlYWRvbmx5IHdpbmRvd1JlZjogV2luZG93KSB7fVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY29weS5wcmV2ZW50JywgWyckZXZlbnQnXSlcbiAgICBvbkNvcHkoZXZlbnQ6IENsaXBib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHRleHQgPSB0dWlHZXRTZWxlY3RlZFRleHQodGhpcy53aW5kb3dSZWYpO1xuXG4gICAgICAgIGlmICh0ZXh0KSB7XG4gICAgICAgICAgICBldmVudC5jbGlwYm9hcmREYXRhPy5zZXREYXRhKCd0ZXh0L3BsYWluJywgdGhpcy50dWlDb3B5UHJvY2Vzc29yKHRleHQpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==