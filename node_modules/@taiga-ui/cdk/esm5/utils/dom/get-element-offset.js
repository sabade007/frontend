import { tuiAssert } from '@taiga-ui/cdk/classes';
/**
 * @deprecated: use {@link tuiGetElementOffset} instead
 * Calculates offset for an element relative to it's parent several levels above
 *
 * @param host parent element
 * @param element
 * @return object with offsetTop and offsetLeft number properties
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function getElementOffset(host, element) {
    tuiAssert.assert(host.contains(element), "Host must contain element");
    var offsetTop = element.offsetTop, offsetLeft = element.offsetLeft, offsetParent = element.offsetParent;
    // TODO: iframe warning
    while (offsetParent && offsetParent instanceof HTMLElement && offsetParent !== host) {
        offsetTop += offsetParent.offsetTop;
        offsetLeft += offsetParent.offsetLeft;
        offsetParent = offsetParent.offsetParent;
    }
    return { offsetTop: offsetTop, offsetLeft: offsetLeft };
}
export var tuiGetElementOffset = getElementOffset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWVsZW1lbnQtb2Zmc2V0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2Nkay91dGlscy9kb20vIiwic291cmNlcyI6WyJnZXQtZWxlbWVudC1vZmZzZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRWhEOzs7Ozs7O0dBT0c7QUFDSCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLGdCQUFnQixDQUM1QixJQUFhLEVBQ2IsT0FBb0I7SUFFcEIsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLDJCQUEyQixDQUFDLENBQUM7SUFFakUsSUFBQSw2QkFBUyxFQUFFLCtCQUFVLEVBQUUsbUNBQVksQ0FBWTtJQUVwRCx1QkFBdUI7SUFDdkIsT0FBTyxZQUFZLElBQUksWUFBWSxZQUFZLFdBQVcsSUFBSSxZQUFZLEtBQUssSUFBSSxFQUFFO1FBQ2pGLFNBQVMsSUFBSSxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQ3BDLFVBQVUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDO1FBQ3RDLFlBQVksR0FBRyxZQUFZLENBQUMsWUFBWSxDQUFDO0tBQzVDO0lBRUQsT0FBTyxFQUFDLFNBQVMsV0FBQSxFQUFFLFVBQVUsWUFBQSxFQUFDLENBQUM7QUFDbkMsQ0FBQztBQUVELE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt0dWlBc3NlcnR9IGZyb20gJ0B0YWlnYS11aS9jZGsvY2xhc3Nlcyc7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQ6IHVzZSB7QGxpbmsgdHVpR2V0RWxlbWVudE9mZnNldH0gaW5zdGVhZFxuICogQ2FsY3VsYXRlcyBvZmZzZXQgZm9yIGFuIGVsZW1lbnQgcmVsYXRpdmUgdG8gaXQncyBwYXJlbnQgc2V2ZXJhbCBsZXZlbHMgYWJvdmVcbiAqXG4gKiBAcGFyYW0gaG9zdCBwYXJlbnQgZWxlbWVudFxuICogQHBhcmFtIGVsZW1lbnRcbiAqIEByZXR1cm4gb2JqZWN0IHdpdGggb2Zmc2V0VG9wIGFuZCBvZmZzZXRMZWZ0IG51bWJlciBwcm9wZXJ0aWVzXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbGVtZW50T2Zmc2V0KFxuICAgIGhvc3Q6IEVsZW1lbnQsXG4gICAgZWxlbWVudDogSFRNTEVsZW1lbnQsXG4pOiB7b2Zmc2V0VG9wOiBudW1iZXI7IG9mZnNldExlZnQ6IG51bWJlcn0ge1xuICAgIHR1aUFzc2VydC5hc3NlcnQoaG9zdC5jb250YWlucyhlbGVtZW50KSwgYEhvc3QgbXVzdCBjb250YWluIGVsZW1lbnRgKTtcblxuICAgIGxldCB7b2Zmc2V0VG9wLCBvZmZzZXRMZWZ0LCBvZmZzZXRQYXJlbnR9ID0gZWxlbWVudDtcblxuICAgIC8vIFRPRE86IGlmcmFtZSB3YXJuaW5nXG4gICAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGhvc3QpIHtcbiAgICAgICAgb2Zmc2V0VG9wICs9IG9mZnNldFBhcmVudC5vZmZzZXRUb3A7XG4gICAgICAgIG9mZnNldExlZnQgKz0gb2Zmc2V0UGFyZW50Lm9mZnNldExlZnQ7XG4gICAgICAgIG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtvZmZzZXRUb3AsIG9mZnNldExlZnR9O1xufVxuXG5leHBvcnQgY29uc3QgdHVpR2V0RWxlbWVudE9mZnNldCA9IGdldEVsZW1lbnRPZmZzZXQ7XG4iXX0=