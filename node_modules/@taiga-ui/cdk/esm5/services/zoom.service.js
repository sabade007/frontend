import { __decorate, __extends, __param } from "tslib";
import { ElementRef, Inject, Injectable } from '@angular/core';
import { preventDefault, typedFromEvent } from '@taiga-ui/cdk/observables';
import { TUI_ZOOM_OPTIONS } from '@taiga-ui/cdk/tokens';
import { distanceBetweenTouches } from '@taiga-ui/cdk/utils';
import { merge, Observable } from 'rxjs';
import { filter, map, scan, switchMap, takeUntil } from 'rxjs/operators';
var TOUCH_SENSITIVITY = 0.01;
// @dynamic
var TuiZoomService = /** @class */ (function (_super) {
    __extends(TuiZoomService, _super);
    function TuiZoomService(_a, _b) {
        var nativeElement = _a.nativeElement;
        var wheelSensitivity = _b.wheelSensitivity;
        return _super.call(this, function (subscriber) {
            merge(typedFromEvent(nativeElement, "touchstart", { passive: true }).pipe(filter(function (_a) {
                var touches = _a.touches;
                return touches.length > 1;
            }), switchMap(function (startEvent) {
                return typedFromEvent(nativeElement, "touchmove", {
                    passive: true,
                }).pipe(preventDefault(), scan(function (prev, event) {
                    var distance = distanceBetweenTouches(event);
                    return {
                        event: event,
                        distance: distance,
                        delta: (distance - prev.distance) *
                            TOUCH_SENSITIVITY,
                    };
                }, {
                    event: startEvent,
                    distance: distanceBetweenTouches(startEvent),
                    delta: 0,
                }), map(function (_a) {
                    var event = _a.event, delta = _a.delta;
                    var clientX = (event.touches[0].clientX +
                        event.touches[1].clientX) /
                        2;
                    var clientY = (event.touches[0].clientY +
                        event.touches[1].clientY) /
                        2;
                    return { clientX: clientX, clientY: clientY, delta: delta, event: event };
                }), takeUntil(typedFromEvent(nativeElement, "touchend")));
            })), typedFromEvent(nativeElement, "wheel", { passive: false }).pipe(preventDefault(), map(function (wheel) { return ({
                clientX: wheel.clientX,
                clientY: wheel.clientY,
                delta: -wheel.deltaY * wheelSensitivity,
                event: wheel,
            }); }))).subscribe(subscriber);
        }) || this;
    }
    TuiZoomService.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ZOOM_OPTIONS,] }] }
    ]; };
    TuiZoomService = __decorate([
        Injectable(),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(TUI_ZOOM_OPTIONS))
    ], TuiZoomService);
    return TuiZoomService;
}(Observable));
export { TuiZoomService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2Nkay9zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInpvb20uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTdELE9BQU8sRUFBQyxjQUFjLEVBQUUsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDM0QsT0FBTyxFQUFDLEtBQUssRUFBRSxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUV2RSxJQUFNLGlCQUFpQixHQUFHLElBQUksQ0FBQztBQUUvQixXQUFXO0FBRVg7SUFBb0Msa0NBQW1CO0lBQ25ELHdCQUN3QixFQUF3QyxFQUNsQyxFQUFrQztZQUR2QyxnQ0FBYTtZQUNQLHNDQUFnQjtlQUUzQyxrQkFBTSxVQUFBLFVBQVU7WUFDWixLQUFLLENBQ0QsY0FBYyxDQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQzdELE1BQU0sQ0FBQyxVQUFDLEVBQVM7b0JBQVIsb0JBQU87Z0JBQU0sT0FBQSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUM7WUFBbEIsQ0FBa0IsQ0FBQyxFQUN6QyxTQUFTLENBQUMsVUFBQSxVQUFVO2dCQUNoQixPQUFBLGNBQWMsQ0FBQyxhQUFhLEVBQUUsV0FBVyxFQUFFO29CQUN2QyxPQUFPLEVBQUUsSUFBSTtpQkFDaEIsQ0FBQyxDQUFDLElBQUksQ0FDSCxjQUFjLEVBQUUsRUFDaEIsSUFBSSxDQUNBLFVBQUMsSUFBSSxFQUFFLEtBQUs7b0JBQ1IsSUFBTSxRQUFRLEdBQUcsc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBRS9DLE9BQU87d0JBQ0gsS0FBSyxPQUFBO3dCQUNMLFFBQVEsVUFBQTt3QkFDUixLQUFLLEVBQ0QsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQzs0QkFDMUIsaUJBQWlCO3FCQUN4QixDQUFDO2dCQUNOLENBQUMsRUFDRDtvQkFDSSxLQUFLLEVBQUUsVUFBVTtvQkFDakIsUUFBUSxFQUFFLHNCQUFzQixDQUFDLFVBQVUsQ0FBQztvQkFDNUMsS0FBSyxFQUFFLENBQUM7aUJBQ1gsQ0FDSixFQUNELEdBQUcsQ0FBQyxVQUFDLEVBQWM7d0JBQWIsZ0JBQUssRUFBRSxnQkFBSztvQkFDZCxJQUFNLE9BQU8sR0FDVCxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTzt3QkFDckIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7d0JBQzdCLENBQUMsQ0FBQztvQkFDTixJQUFNLE9BQU8sR0FDVCxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTzt3QkFDckIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7d0JBQzdCLENBQUMsQ0FBQztvQkFFTixPQUFPLEVBQUMsT0FBTyxTQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUMsQ0FBQztnQkFDNUMsQ0FBQyxDQUFDLEVBQ0YsU0FBUyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FDdkQ7WUFuQ0QsQ0FtQ0MsQ0FDSixDQUNKLEVBQ0QsY0FBYyxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQ3pELGNBQWMsRUFBRSxFQUNoQixHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDO2dCQUNWLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTztnQkFDdEIsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPO2dCQUN0QixLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLGdCQUFnQjtnQkFDdkMsS0FBSyxFQUFFLEtBQUs7YUFDZixDQUFDLEVBTFcsQ0FLWCxDQUFDLENBQ04sQ0FDSixDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM1QixDQUFDLENBQUM7SUFDTixDQUFDOztnQkF6RHdDLFVBQVUsdUJBQTlDLE1BQU0sU0FBQyxVQUFVO2dEQUNqQixNQUFNLFNBQUMsZ0JBQWdCOztJQUhuQixjQUFjO1FBRDFCLFVBQVUsRUFBRTtRQUdKLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2xCLFdBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUE7T0FIcEIsY0FBYyxDQTREMUI7SUFBRCxxQkFBQztDQUFBLEFBNURELENBQW9DLFVBQVUsR0E0RDdDO1NBNURZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0VsZW1lbnRSZWYsIEluamVjdCwgSW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aVpvb20sIFR1aVpvb21PcHRpb25zfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2ludGVyZmFjZXMnO1xuaW1wb3J0IHtwcmV2ZW50RGVmYXVsdCwgdHlwZWRGcm9tRXZlbnR9IGZyb20gJ0B0YWlnYS11aS9jZGsvb2JzZXJ2YWJsZXMnO1xuaW1wb3J0IHtUVUlfWk9PTV9PUFRJT05TfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3Rva2Vucyc7XG5pbXBvcnQge2Rpc3RhbmNlQmV0d2VlblRvdWNoZXN9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMnO1xuaW1wb3J0IHttZXJnZSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2ZpbHRlciwgbWFwLCBzY2FuLCBzd2l0Y2hNYXAsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5jb25zdCBUT1VDSF9TRU5TSVRJVklUWSA9IDAuMDE7XG5cbi8vIEBkeW5hbWljXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHVpWm9vbVNlcnZpY2UgZXh0ZW5kcyBPYnNlcnZhYmxlPFR1aVpvb20+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSB7bmF0aXZlRWxlbWVudH06IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFRVSV9aT09NX09QVElPTlMpIHt3aGVlbFNlbnNpdGl2aXR5fTogVHVpWm9vbU9wdGlvbnMsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKHN1YnNjcmliZXIgPT4ge1xuICAgICAgICAgICAgbWVyZ2UoXG4gICAgICAgICAgICAgICAgdHlwZWRGcm9tRXZlbnQobmF0aXZlRWxlbWVudCwgYHRvdWNoc3RhcnRgLCB7cGFzc2l2ZTogdHJ1ZX0pLnBpcGUoXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcigoe3RvdWNoZXN9KSA9PiB0b3VjaGVzLmxlbmd0aCA+IDEpLFxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2hNYXAoc3RhcnRFdmVudCA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZWRGcm9tRXZlbnQobmF0aXZlRWxlbWVudCwgYHRvdWNobW92ZWAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzaXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkucGlwZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYW4oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChwcmV2LCBldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBkaXN0YW5jZUJldHdlZW5Ub3VjaGVzKGV2ZW50KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWx0YTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGRpc3RhbmNlIC0gcHJldi5kaXN0YW5jZSkgKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUT1VDSF9TRU5TSVRJVklUWSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiBzdGFydEV2ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2U6IGRpc3RhbmNlQmV0d2VlblRvdWNoZXMoc3RhcnRFdmVudCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWx0YTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcCgoe2V2ZW50LCBkZWx0YX0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50WCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZXZlbnQudG91Y2hlc1swXS5jbGllbnRYICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC50b3VjaGVzWzFdLmNsaWVudFgpIC9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWVudFkgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQudG91Y2hlc1sxXS5jbGllbnRZKSAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7Y2xpZW50WCwgY2xpZW50WSwgZGVsdGEsIGV2ZW50fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWtlVW50aWwodHlwZWRGcm9tRXZlbnQobmF0aXZlRWxlbWVudCwgYHRvdWNoZW5kYCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIHR5cGVkRnJvbUV2ZW50KG5hdGl2ZUVsZW1lbnQsIGB3aGVlbGAsIHtwYXNzaXZlOiBmYWxzZX0pLnBpcGUoXG4gICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0KCksXG4gICAgICAgICAgICAgICAgICAgIG1hcCh3aGVlbCA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50WDogd2hlZWwuY2xpZW50WCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudFk6IHdoZWVsLmNsaWVudFksXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWx0YTogLXdoZWVsLmRlbHRhWSAqIHdoZWVsU2Vuc2l0aXZpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDogd2hlZWwsXG4gICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgKS5zdWJzY3JpYmUoc3Vic2NyaWJlcik7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdfQ==