import { __decorate } from 'tslib';
import { Input, HostBinding, Directive, NgModule } from '@angular/core';

/**
 * Abstraction over `tabindex`
 */
let TuiFocusableDirective = class TuiFocusableDirective {
    constructor() {
        /**
         * Element can be focused with keyboard
         */
        this.focusable = true;
    }
    get tabIndex() {
        return this.focusable ? 0 : -1;
    }
};
__decorate([
    Input('tuiFocusable')
], TuiFocusableDirective.prototype, "focusable", void 0);
__decorate([
    HostBinding('tabIndex')
], TuiFocusableDirective.prototype, "tabIndex", null);
TuiFocusableDirective = __decorate([
    Directive({
        selector: '[tuiFocusable]',
    })
], TuiFocusableDirective);

let TuiFocusableModule = class TuiFocusableModule {
};
TuiFocusableModule = __decorate([
    NgModule({
        declarations: [TuiFocusableDirective],
        exports: [TuiFocusableDirective],
    })
], TuiFocusableModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFocusableDirective, TuiFocusableModule };
//# sourceMappingURL=taiga-ui-cdk-directives-focusable.js.map
