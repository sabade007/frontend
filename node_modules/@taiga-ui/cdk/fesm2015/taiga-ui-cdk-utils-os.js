/**
 * @deprecated: use {@link tuiIsApplePlatform} instead
 * @description:
 * All Chrome / Chromium-based browsers will return MacIntel on macOS,
 * no matter what the hardware architecture is. See the source code here:
 * https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/frame/navigator_id.cc;l=64;drc=703d3c472cf27470dad21a3f2c8972aca3732cd6
 * But maybe in future years, it will be changed to MacM1
 *
 * Documentation:
 * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/platform
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isApplePlatform(navigator) {
    return navigator.platform.indexOf(`Mac`) === 0 || navigator.platform === `iPhone`;
}
const tuiIsApplePlatform = isApplePlatform;

const IOS_REG_EXP = /ipad|iphone|ipod/;
/**
 * @deprecated: use {@link tuiIsIos} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isIos(navigator) {
    return (IOS_REG_EXP.test(navigator.userAgent.toLowerCase()) ||
        (isApplePlatform(navigator) && navigator.maxTouchPoints > 1));
}
const tuiIsIos = isIos;

const SAFARI_REG_EXP = /^((?!chrome|android).)*safari/i;
/**
 * @deprecated: use {@link tuiIsApple} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isApple(navigator) {
    return isIos(navigator) || SAFARI_REG_EXP.test(navigator.userAgent.toLowerCase());
}
const tuiIsApple = isApple;

/**
 * Generated bundle index. Do not edit.
 */

export { isApple, isApplePlatform, isIos, tuiIsApple, tuiIsApplePlatform, tuiIsIos };
//# sourceMappingURL=taiga-ui-cdk-utils-os.js.map
