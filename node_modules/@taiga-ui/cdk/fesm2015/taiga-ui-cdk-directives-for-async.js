import { __decorate, __param } from 'tslib';
import { ViewContainerRef, Inject, TemplateRef, Input, Directive, NgModule } from '@angular/core';
import { Subject, from, of } from 'rxjs';
import { concatMap, delay, takeUntil } from 'rxjs/operators';

let TuiForAsyncDirective = class TuiForAsyncDirective {
    constructor(view, template) {
        this.view = view;
        this.template = template;
        this.destroy$ = new Subject();
        this.tuiForAsyncTimeout = 10;
    }
    ngOnChanges() {
        this.clearViewForOldNodes();
        this.createAsyncViewForNewNodes();
    }
    ngOnDestroy() {
        this.clearViewForOldNodes();
        this.destroy$.complete();
    }
    createAsyncViewForNewNodes() {
        from((this.tuiForAsyncOf || []).entries())
            .pipe(concatMap(entry => of(entry).pipe(delay(this.tuiForAsyncTimeout))), takeUntil(this.destroy$))
            .subscribe(([index, item]) => this.view
            .createEmbeddedView(this.template, { $implicit: item, index }, index)
            .detectChanges());
    }
    clearViewForOldNodes() {
        this.destroy$.next();
        this.view.clear();
    }
};
TuiForAsyncDirective.ctorParameters = () => [
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] },
    { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] }
];
__decorate([
    Input()
], TuiForAsyncDirective.prototype, "tuiForAsyncOf", void 0);
__decorate([
    Input()
], TuiForAsyncDirective.prototype, "tuiForAsyncTimeout", void 0);
TuiForAsyncDirective = __decorate([
    Directive({ selector: '[tuiForAsync][tuiForAsyncOf]' }),
    __param(0, Inject(ViewContainerRef)),
    __param(1, Inject(TemplateRef))
], TuiForAsyncDirective);

/**
 * @experimental
 */
let TuiForAsyncModule = class TuiForAsyncModule {
};
TuiForAsyncModule = __decorate([
    NgModule({
        declarations: [TuiForAsyncDirective],
        exports: [TuiForAsyncDirective],
    })
], TuiForAsyncModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiForAsyncDirective, TuiForAsyncModule };
//# sourceMappingURL=taiga-ui-cdk-directives-for-async.js.map
