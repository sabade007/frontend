import { __decorate, __param } from 'tslib';
import { Inject, Directive, NgModule } from '@angular/core';
import { TuiFocusVisibleService, TuiDestroyService } from '@taiga-ui/cdk/services';
import { Observable } from 'rxjs';

/**
 * Directive to imitate :focus-visible
 * (https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible)
 * in browsers that do not support it
 * @dynamic
 */
let TuiFocusVisibleDirective = class TuiFocusVisibleDirective {
    constructor(tuiFocusVisibleChange) {
        this.tuiFocusVisibleChange = tuiFocusVisibleChange;
    }
};
TuiFocusVisibleDirective.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TuiFocusVisibleService,] }] }
];
TuiFocusVisibleDirective = __decorate([
    Directive({
        selector: '[tuiFocusVisibleChange]',
        outputs: ['tuiFocusVisibleChange'],
        providers: [TuiDestroyService, TuiFocusVisibleService],
    }),
    __param(0, Inject(TuiFocusVisibleService))
], TuiFocusVisibleDirective);

let TuiFocusVisibleModule = class TuiFocusVisibleModule {
};
TuiFocusVisibleModule = __decorate([
    NgModule({
        declarations: [TuiFocusVisibleDirective],
        exports: [TuiFocusVisibleDirective],
    })
], TuiFocusVisibleModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFocusVisibleDirective, TuiFocusVisibleModule };
//# sourceMappingURL=taiga-ui-cdk-directives-focus-visible.js.map
