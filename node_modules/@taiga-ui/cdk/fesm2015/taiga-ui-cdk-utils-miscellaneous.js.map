{"version":3,"file":"taiga-ui-cdk-utils-miscellaneous.js","sources":["ng://@taiga-ui/cdk/utils/miscellaneous/distance-between-touches.ts","ng://@taiga-ui/cdk/utils/miscellaneous/ease-in-out-quad.ts","ng://@taiga-ui/cdk/utils/miscellaneous/is-present.ts","ng://@taiga-ui/cdk/utils/miscellaneous/fallback-value.ts","ng://@taiga-ui/cdk/utils/miscellaneous/flat-length.ts","ng://@taiga-ui/cdk/utils/miscellaneous/get-original-array-from-query-list.ts","ng://@taiga-ui/cdk/utils/miscellaneous/get-swipe-direction.ts","ng://@taiga-ui/cdk/utils/miscellaneous/identity.ts","ng://@taiga-ui/cdk/utils/miscellaneous/is-element-editable.ts","ng://@taiga-ui/cdk/utils/miscellaneous/is-number.ts","ng://@taiga-ui/cdk/utils/miscellaneous/mark-control-as-touched-and-validate.ts","ng://@taiga-ui/cdk/utils/miscellaneous/nullable-same.ts","ng://@taiga-ui/cdk/utils/miscellaneous/uniq-by.ts","ng://@taiga-ui/cdk/utils/miscellaneous/taiga-ui-cdk-utils-miscellaneous.ts"],"sourcesContent":["/**\n * @deprecated: use {@link tuiDistanceBetweenTouches} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function distanceBetweenTouches({touches}: TouchEvent): number {\n    return Math.hypot(\n        touches[0].clientX - touches[1].clientX,\n        touches[0].clientY - touches[1].clientY,\n    );\n}\n\nexport const tuiDistanceBetweenTouches = distanceBetweenTouches;\n","import {tuiAssert} from '@taiga-ui/cdk/classes';\n\n/**\n * @deprecated: use {@link tuiEaseInOutQuad} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function easeInOutQuad(t: number): number {\n    tuiAssert.assert(\n        t >= 0 && t <= 1,\n        `Input must be between 0 and 1 inclusive but received `,\n        t,\n    );\n\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n}\n\nexport const tuiEaseInOutQuad = easeInOutQuad;\n","/**\n * @deprecated: use {@link tuiIsPresent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isPresent<T>(value?: T | null): value is T {\n    return value !== null && value !== undefined;\n}\n\nexport const tuiIsPresent = isPresent;\n","import {isPresent} from './is-present';\n\n/**\n * @deprecated use nullish coalescing operator\n * If the value is null or undefined, returns default value\n * @param value\n * @param fallback alternative fallback\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function fallbackValue<T>(value: T | null | undefined, fallback: T): T {\n    return isPresent(value) ? value : fallback;\n}\n","/**\n * @deprecated: use {@link tuiFlatLength} instead\n * Flattens two-dimensional array and calculates resulting length\n *\n * @param array twi dimensional array\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function flatLength(array: ReadonlyArray<readonly unknown[]>): number {\n    return array.reduce((count, section) => count + section.length, 0);\n}\n\nexport const tuiFlatLength = flatLength;\n","import {QueryList} from '@angular/core';\n\n/**\n * @deprecated: use {@link tuiGetOriginalArrayFromQueryList} instead\n * Extracts original array from {@link QueryList} rather than\n * creating a copy like {@link QueryList.toArray} does.\n * @param queryList\n * @returns original array from {@link QueryList}.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getOriginalArrayFromQueryList<T>(queryList: QueryList<T>): readonly T[] {\n    let array: readonly T[] = [];\n\n    queryList.find((_item, _index, originalArray) => {\n        array = originalArray;\n\n        return true;\n    });\n\n    return array;\n}\n\nexport const tuiGetOriginalArrayFromQueryList = getOriginalArrayFromQueryList;\n","import {TuiSwipeDirection} from '@taiga-ui/cdk/interfaces';\n\n/**\n * @deprecated: use {@link tuiGetSwipeDirection} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getSwipeDirection(deltaX: number, deltaY: number): TuiSwipeDirection {\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n        return deltaY > 0 ? `top` : `bottom`;\n    }\n\n    return deltaX > 0 ? `left` : `right`;\n}\n\nexport const tuiGetSwipeDirection = getSwipeDirection;\n","/**\n * @deprecated: use identity from rxjs\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function identity<T>(item: T): T {\n    return item;\n}\n","/**\n * @deprecated: use {@link tuiIsElementEditable} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isElementEditable(element: HTMLElement): boolean {\n    // TODO: iframe warning\n    return (\n        (element instanceof HTMLInputElement && !element.readOnly) ||\n        (element instanceof HTMLTextAreaElement && !element.readOnly) ||\n        element.isContentEditable\n    );\n}\n\nexport const tuiIsElementEditable = isElementEditable;\n","/**\n * @deprecated: use {@link tuiIsNumber} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isNumber(value: unknown): value is number {\n    return typeof value === `number`;\n}\n\nexport const tuiIsNumber = isNumber;\n","import {AbstractControl, FormArray, FormGroup} from '@angular/forms';\n\n/**\n * @deprecated: use {@link tuiMarkControlAsTouchedAndValidate} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function markControlAsTouchedAndValidate(control: AbstractControl): void {\n    if (control instanceof FormArray) {\n        control.controls.forEach(nestedControl => {\n            markControlAsTouchedAndValidate(nestedControl);\n        });\n    }\n\n    if (control instanceof FormGroup) {\n        Object.values(control.controls).forEach(nestedControl => {\n            markControlAsTouchedAndValidate(nestedControl);\n        });\n    }\n\n    control.markAsTouched();\n    control.updateValueAndValidity();\n}\n\nexport const tuiMarkControlAsTouchedAndValidate = markControlAsTouchedAndValidate;\n","import {TuiIdentityMatcher} from '@taiga-ui/cdk/types';\n\n/**\n * @deprecated: use {@link tuiNullableSame} instead\n * Checks identity for nullable elements.\n *\n * @param a element a\n * @param b element b\n * @param handler called if both elements are not null\n * @return true if either both are null or they pass identity handler\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function nullableSame<T>(\n    a: T | null,\n    b: T | null,\n    handler: TuiIdentityMatcher<T>,\n): boolean {\n    if (a === null) {\n        return b === null;\n    }\n\n    if (b === null) {\n        return false;\n    }\n\n    return handler(a, b);\n}\n\nexport const tuiNullableSame = nullableSame;\n","/**\n * @deprecated: use {@link tuiUniqBy} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function uniqBy<T extends Record<string, any>>(\n    array: readonly T[],\n    key: keyof T,\n): readonly T[] {\n    return Array.from(\n        array\n            .reduce(\n                (map, item) => (map.has(item[key]) ? map : map.set(item[key], item)),\n                new Map<T[keyof T], T>(),\n            )\n            .values(),\n    );\n}\n\nexport const tuiUniqBy = uniqBy;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}