{"version":3,"file":"taiga-ui-cdk-components-dialog-host.js","sources":["ng://@taiga-ui/cdk/components/dialog-host/dialog-host.component.ts","ng://@taiga-ui/cdk/components/dialog-host/dialog-host.module.ts","ng://@taiga-ui/cdk/components/dialog-host/taiga-ui-cdk-components-dialog-host.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, Inject, InjectionToken} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {HISTORY} from '@ng-web-apis/common';\nimport {TUI_PARENT_ANIMATION} from '@taiga-ui/cdk/constants';\nimport {TUI_DIALOGS} from '@taiga-ui/cdk/tokens';\nimport {TuiDialog} from '@taiga-ui/cdk/types';\nimport {combineLatest, Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport const TUI_DIALOG_CLOSES_ON_BACK = new InjectionToken<Observable<boolean>>(\n    'Is closing dialog on browser backward navigation enabled',\n    {\n        factory: () => of(false),\n    },\n);\n\n// TODO: 3.0 remove in ivy compilation\nexport const FAKE_HISTORY_STATE = {label: 'ignoreMe'} as const;\n// TODO: 3.0 remove in ivy compilation\nexport const isFakeHistoryState = (\n    historyState: Record<string, unknown>,\n): historyState is typeof FAKE_HISTORY_STATE =>\n    historyState?.label === FAKE_HISTORY_STATE.label;\n\n// @dynamic\n@Component({\n    selector: 'tui-dialog-host',\n    templateUrl: './dialog-host.template.html',\n    styleUrls: ['./dialog-host.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [TUI_PARENT_ANIMATION],\n})\nexport class TuiDialogHostComponent<T extends TuiDialog<unknown, unknown>> {\n    readonly dialogs$ = combineLatest(this.dialogsByType).pipe(\n        map(allTypesDialogs =>\n            new Array<T>()\n                .concat(...allTypesDialogs)\n                .sort((a, b) => a.createdAt - b.createdAt),\n        ),\n    );\n\n    constructor(\n        @Inject(TUI_DIALOG_CLOSES_ON_BACK)\n        readonly isDialogClosesOnBack$: Observable<boolean>,\n        @Inject(TUI_DIALOGS)\n        private readonly dialogsByType: Array<Observable<readonly T[]>>,\n        @Inject(HISTORY) private readonly historyRef: History,\n        @Inject(Title) private readonly titleService: Title,\n    ) {}\n\n    closeLast(dialogs: readonly T[], isDialogClosesOnBack: boolean): void {\n        if (!isDialogClosesOnBack) {\n            return;\n        }\n\n        const [last] = dialogs.slice(-1);\n\n        if (!last) {\n            return;\n        }\n\n        if (dialogs.length > 1) {\n            this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n        }\n\n        last.$implicit.complete();\n    }\n\n    onDialog(\n        {propertyName}: TransitionEvent,\n        popupOpened: boolean,\n        isDialogClosesOnBack: boolean,\n    ): void {\n        if (!isDialogClosesOnBack || propertyName !== 'letter-spacing') {\n            return;\n        }\n\n        if (popupOpened) {\n            this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n        } else if (isFakeHistoryState(this.historyRef.state)) {\n            this.historyRef.back();\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk/directives';\nimport {TuiFocusTrapModule} from '@taiga-ui/cdk/directives/focus-trap';\nimport {TuiOverscrollModule} from '@taiga-ui/cdk/directives/overscroll';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiDialogHostComponent} from './dialog-host.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiOverscrollModule,\n        TuiFocusTrapModule,\n        TuiLetModule,\n    ],\n    declarations: [TuiDialogHostComponent],\n    exports: [TuiDialogHostComponent],\n})\nexport class TuiDialogHostModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}