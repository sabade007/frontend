import { __decorate, __param } from 'tslib';
import { Inject, ViewContainerRef, TemplateRef, Directive, NgModule } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';

/**
 * Only adds current content if user has High DPI display
 * @dynamic
 */
let TuiHighDpiDirective = class TuiHighDpiDirective {
    constructor({ devicePixelRatio }, viewContainer, templateRef) {
        if (devicePixelRatio > 1) {
            viewContainer.createEmbeddedView(templateRef);
        }
    }
};
TuiHighDpiDirective.ctorParameters = () => [
    { type: Window, decorators: [{ type: Inject, args: [WINDOW,] }] },
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] },
    { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] }
];
TuiHighDpiDirective = __decorate([
    Directive({
        selector: '[tuiHighDpi]',
    }),
    __param(0, Inject(WINDOW)),
    __param(1, Inject(ViewContainerRef)),
    __param(2, Inject(TemplateRef))
], TuiHighDpiDirective);

let TuiHighDpiModule = class TuiHighDpiModule {
};
TuiHighDpiModule = __decorate([
    NgModule({
        declarations: [TuiHighDpiDirective],
        exports: [TuiHighDpiDirective],
    })
], TuiHighDpiModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiHighDpiDirective, TuiHighDpiModule };
//# sourceMappingURL=taiga-ui-cdk-directives-high-dpi.js.map
