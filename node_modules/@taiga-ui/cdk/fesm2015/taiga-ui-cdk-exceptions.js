class TuiComputedDocumentException extends Error {
    constructor() {
        super(`Only use computedDocument after load event`);
    }
}

class TuiDocumentSelectionException extends Error {
    constructor() {
        super(`Failed to get document selection`);
    }
}

/**
 * @deprecated: use {@link TuiInvalidDayException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
class InvalidDayException extends Error {
    constructor(day) {
        super(`Invalid day: ${day}`);
    }
}
class TuiInvalidDayException extends InvalidDayException {
}

/**
 * @deprecated: use {@link TuiInvalidMonthException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
class InvalidMonthException extends Error {
    constructor(month) {
        super(`Invalid month: ${month}`);
    }
}
class TuiInvalidMonthException extends InvalidMonthException {
}

/**
 * @deprecated: use {@link TuiInvalidYearException}
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
class InvalidYearException extends Error {
    constructor(year) {
        super(`Invalid year: ${year}`);
    }
}
class TuiInvalidYearException extends InvalidYearException {
}

class TuiNoHostException extends Error {
    constructor() {
        super(`Portals cannot be used without TuiPortalHostComponent`);
    }
}

class TuiOwnerDocumentException extends Error {
    constructor() {
        super(`Element does not have ownerDocument`);
    }
}

class TuiPureException extends Error {
    constructor() {
        super(`tuiPure can only be used with functions or getters`);
    }
}

class TuiTableSortKeyException extends Error {
    constructor() {
        super(`Trying to sort with no key`);
    }
}

class TuiTsParserException extends Error {
    constructor() {
        super(`TsFileParser: 1 component/module per ts-file`);
    }
}

class TuiValueChangesException extends Error {
    constructor() {
        super(`Control does not have valueChanges`);
    }
}

class TuiValuePresentException extends Error {
    constructor() {
        super(`Value must present`);
    }
}

class TuiXmlParsingException extends Error {
    constructor() {
        super(`Error parsing XML string`);
    }
}

/**
 * Generated bundle index. Do not edit.
 */

export { InvalidDayException, InvalidMonthException, InvalidYearException, TuiComputedDocumentException, TuiDocumentSelectionException, TuiInvalidDayException, TuiInvalidMonthException, TuiInvalidYearException, TuiNoHostException, TuiOwnerDocumentException, TuiPureException, TuiTableSortKeyException, TuiTsParserException, TuiValueChangesException, TuiValuePresentException, TuiXmlParsingException };
//# sourceMappingURL=taiga-ui-cdk-exceptions.js.map
