/**
 * @deprecated: use {@link tuiIsEdge} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isEdge(userAgent) {
    return userAgent.toLowerCase().includes(`edge`);
}
const tuiIsEdge = isEdge;

const EDGE = `edge/`;
/**
 * @deprecated: use {@link tuiIsEdgeOlderThan} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isEdgeOlderThan(version, userAgent) {
    const currentVersion = parseInt(userAgent.slice(userAgent.toLowerCase().indexOf(EDGE) + EDGE.length), 10);
    return currentVersion < version;
}
const tuiIsEdgeOlderThan = isEdgeOlderThan;

/**
 * @deprecated: use {@link tuiIsFirefox} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isFirefox(userAgent) {
    return userAgent.toLowerCase().includes(`firefox`);
}
const tuiIsFirefox = isFirefox;

/**
 * @deprecated: use {@link tuiIsIE} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isIE(userAgent) {
    return userAgent.toLowerCase().includes(`trident`);
}
const tuiIsIE = isIE;

/**
 * @deprecated: use {@link tuiIsSafari} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function isSafari({ ownerDocument: documentRef }) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const windowRef = documentRef === null || documentRef === void 0 ? void 0 : documentRef.defaultView;
    const isMacOsSafari = typeof windowRef.safari !== `undefined` &&
        ((_b = (_a = windowRef.safari) === null || _a === void 0 ? void 0 : _a.pushNotification) === null || _b === void 0 ? void 0 : _b.toString()) ===
            `[object SafariRemoteNotification]`;
    const isIosSafari = !!((_d = (_c = windowRef.navigator) === null || _c === void 0 ? void 0 : _c.vendor) === null || _d === void 0 ? void 0 : _d.includes(`Apple`)) &&
        !((_f = (_e = windowRef.navigator) === null || _e === void 0 ? void 0 : _e.userAgent) === null || _f === void 0 ? void 0 : _f.includes(`CriOS`)) &&
        !((_h = (_g = windowRef.navigator) === null || _g === void 0 ? void 0 : _g.userAgent) === null || _h === void 0 ? void 0 : _h.includes(`FxiOS`));
    return isMacOsSafari || isIosSafari;
}
const tuiIsSafari = isSafari;

/**
 * Generated bundle index. Do not edit.
 */

export { isEdge, isEdgeOlderThan, isFirefox, isIE, isSafari, tuiIsEdge, tuiIsEdgeOlderThan, tuiIsFirefox, tuiIsIE, tuiIsSafari };
//# sourceMappingURL=taiga-ui-cdk-utils-browser.js.map
