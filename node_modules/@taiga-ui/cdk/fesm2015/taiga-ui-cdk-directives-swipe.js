import { __decorate, __param } from 'tslib';
import { Inject, Directive, NgModule } from '@angular/core';
import { TuiSwipeService } from '@taiga-ui/cdk/services';
import { Observable } from 'rxjs';

// @dynamic
let TuiSwipeDirective = class TuiSwipeDirective {
    constructor(tuiSwipe) {
        this.tuiSwipe = tuiSwipe;
    }
};
TuiSwipeDirective.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TuiSwipeService,] }] }
];
TuiSwipeDirective = __decorate([
    Directive({
        selector: '[tuiSwipe]',
        outputs: ['tuiSwipe'],
        providers: [TuiSwipeService],
    }),
    __param(0, Inject(TuiSwipeService))
], TuiSwipeDirective);

/**
 * @experimental
 */
let TuiSwipeModule = class TuiSwipeModule {
};
TuiSwipeModule = __decorate([
    NgModule({
        declarations: [TuiSwipeDirective],
        exports: [TuiSwipeDirective],
    })
], TuiSwipeModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSwipeDirective, TuiSwipeModule };
//# sourceMappingURL=taiga-ui-cdk-directives-swipe.js.map
