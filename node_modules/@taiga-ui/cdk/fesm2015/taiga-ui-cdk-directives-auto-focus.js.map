{"version":3,"file":"taiga-ui-cdk-directives-auto-focus.js","sources":["ng://@taiga-ui/cdk/directives/auto-focus/handlers/abstract.handler.ts","ng://@taiga-ui/cdk/directives/auto-focus/handlers/default.handler.ts","ng://@taiga-ui/cdk/directives/auto-focus/handlers/ios.handler.ts","ng://@taiga-ui/cdk/directives/auto-focus/autofocus.options.ts","ng://@taiga-ui/cdk/directives/auto-focus/autofocus.directive.ts","ng://@taiga-ui/cdk/directives/auto-focus/autofocus.module.ts","ng://@taiga-ui/cdk/directives/auto-focus/handlers/sync.handler.ts","ng://@taiga-ui/cdk/directives/auto-focus/taiga-ui-cdk-directives-auto-focus.ts"],"sourcesContent":["import {Directive, ElementRef} from '@angular/core';\nimport {\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n} from '@taiga-ui/cdk/interfaces';\n\nimport {TuiAutofocusHandler} from '../autofocus.options';\n\n@Directive()\nexport abstract class AbstractTuiAutofocusHandler implements TuiAutofocusHandler {\n    protected constructor(\n        protected readonly tuiFocusableComponent: TuiFocusableElementAccessor | null,\n        protected readonly elementRef: ElementRef<HTMLElement>,\n    ) {}\n\n    protected get element(): TuiNativeFocusableElement {\n        return (\n            this.tuiFocusableComponent?.nativeFocusableElement ||\n            this.elementRef.nativeElement\n        );\n    }\n\n    protected get isTextFieldElement(): boolean {\n        return this.element.matches(`input, textarea`);\n    }\n\n    abstract setFocus(): void;\n}\n","import {Directive, ElementRef, Inject, Optional, Self} from '@angular/core';\nimport {ANIMATION_FRAME} from '@ng-web-apis/common';\nimport {POLLING_TIME} from '@taiga-ui/cdk/constants';\nimport {TuiFocusableElementAccessor} from '@taiga-ui/cdk/interfaces';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk/tokens';\nimport {Observable, race, timer} from 'rxjs';\nimport {map, skipWhile, take, throttleTime} from 'rxjs/operators';\n\nimport {AbstractTuiAutofocusHandler} from './abstract.handler';\n\nconst TIMEOUT = 1000;\nconst NG_ANIMATION_SELECTOR = `.ng-animating`;\n\n@Directive()\nexport class TuiDefaultAutofocusHandler extends AbstractTuiAutofocusHandler {\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(TUI_FOCUSABLE_ITEM_ACCESSOR)\n        tuiFocusableComponent: TuiFocusableElementAccessor | null,\n        @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n        @Inject(ANIMATION_FRAME) private readonly animationFrame$: Observable<number>,\n    ) {\n        super(tuiFocusableComponent, elementRef);\n    }\n\n    setFocus(): void {\n        if (this.isTextFieldElement) {\n            race(\n                timer(TIMEOUT),\n                this.animationFrame$.pipe(\n                    throttleTime(POLLING_TIME),\n                    map(() => this.element.closest(NG_ANIMATION_SELECTOR)),\n                    skipWhile(Boolean),\n                    take(1),\n                ),\n            ).subscribe(() => this.element.focus());\n        } else {\n            this.element.focus();\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Inject,\n    NgZone,\n    Optional,\n    Renderer2,\n    Self,\n} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {TuiFocusableElementAccessor} from '@taiga-ui/cdk/interfaces';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk/tokens';\nimport {tuiPx} from '@taiga-ui/cdk/utils';\n\nimport {AbstractTuiAutofocusHandler} from './abstract.handler';\n\n// @dynamic\n@Directive()\nexport class TuiIosAutofocusHandler extends AbstractTuiAutofocusHandler {\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(TUI_FOCUSABLE_ITEM_ACCESSOR)\n        tuiFocusableComponent: TuiFocusableElementAccessor | null,\n        @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n        @Inject(Renderer2) private readonly renderer: Renderer2,\n        @Inject(NgZone) private readonly ngZone: NgZone,\n        @Inject(WINDOW) private readonly windowRef: Window,\n    ) {\n        super(tuiFocusableComponent, elementRef);\n        this.patchCssStyles();\n    }\n\n    setFocus(): void {\n        if (this.isTextFieldElement) {\n            this.ngZone.runOutsideAngular(() => this.iosWebkitAutofocus());\n        } else {\n            this.element.focus();\n        }\n    }\n\n    private iosWebkitAutofocus(): void {\n        const fakeInput: HTMLInputElement = this.makeFakeInput();\n        const duration = this.getDurationTimeBeforeFocus();\n        let fakeFocusTimeoutId = 0;\n        let elementFocusTimeoutId = 0;\n\n        const blurHandler = (): void => fakeInput.focus({preventScroll: true});\n        const focusHandler = (): void => {\n            clearTimeout(fakeFocusTimeoutId);\n\n            fakeFocusTimeoutId = this.windowRef.setTimeout(() => {\n                clearTimeout(elementFocusTimeoutId);\n\n                fakeInput.removeEventListener(`blur`, blurHandler);\n                fakeInput.removeEventListener(`focus`, focusHandler);\n\n                elementFocusTimeoutId = this.windowRef.setTimeout(() => {\n                    this.element.focus({preventScroll: false});\n                    fakeInput.remove();\n                }, duration);\n            });\n        };\n\n        fakeInput.addEventListener(`blur`, blurHandler, {once: true});\n        fakeInput.addEventListener(`focus`, focusHandler);\n\n        if (this.insideDialog()) {\n            this.windowRef.document.body.appendChild(fakeInput);\n        } else {\n            this.element.parentElement?.appendChild(fakeInput);\n        }\n\n        fakeInput.focus({preventScroll: true});\n    }\n\n    /**\n     * @note:\n     * emulate textfield position in layout with cursor\n     * before focus to real textfield element\n     */\n    private makeFakeInput(): HTMLInputElement {\n        const fakeInput: HTMLInputElement = this.renderer.createElement(`input`);\n        const rect: DOMRect = this.element.getBoundingClientRect();\n\n        fakeInput.setAttribute(`maxlength`, `0`);\n\n        // @note: don't use opacity: 0,\n        // sometimes it's doesn't work for emulate real input\n        fakeInput.style.height = tuiPx(rect.height);\n        fakeInput.style.width = tuiPx(rect.width / 2);\n        fakeInput.style.position = `fixed`;\n        fakeInput.style.zIndex = `-99999999`;\n        fakeInput.style.caretColor = `transparent`;\n        fakeInput.style.color = `transparent`;\n        fakeInput.style.cursor = `none`;\n        fakeInput.style.fontSize = tuiPx(16); // disable possible auto zoom\n        fakeInput.readOnly = true; // prevent keyboard for fake input\n\n        // @note: emulate position cursor before focus to real textfield element\n        fakeInput.style.top = tuiPx(rect.top);\n        fakeInput.style.left = tuiPx(rect.left);\n\n        return fakeInput;\n    }\n\n    private getDurationTimeBeforeFocus(): number {\n        return (\n            parseFloat(\n                this.windowRef\n                    .getComputedStyle(this.element)\n                    .getPropertyValue(`--tui-duration`),\n            ) || 0\n        );\n    }\n\n    /**\n     * @note:\n     * unfortunately, in older versions of iOS\n     * there is a bug that the fake input cursor\n     * will move along with the dialog animation\n     * and then that dialog will be shaking\n     */\n    private insideDialog(): boolean {\n        return !!this.element.closest(`tui-dialog`);\n    }\n\n    /**\n     * @note:\n     * This is necessary so that the viewport isn't recalculated\n     * and then the dialogs don't shake.\n     *\n     * Also, we need to fixed height viewport,\n     * so that when focusing the dialogs don't shake\n     */\n    private patchCssStyles(): void {\n        const documentRef = this.windowRef.document;\n\n        for (const element of [documentRef.documentElement, documentRef.body]) {\n            element.style.setProperty(`overflow`, `auto`);\n            element.style.setProperty(`height`, `100%`);\n        }\n    }\n}\n","import {\n    ElementRef,\n    InjectionToken,\n    NgZone,\n    Optional,\n    Renderer2,\n    Self,\n} from '@angular/core';\nimport {ANIMATION_FRAME, WINDOW} from '@ng-web-apis/common';\nimport {TuiFocusableElementAccessor} from '@taiga-ui/cdk/interfaces';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_IS_IOS} from '@taiga-ui/cdk/tokens';\nimport {Observable} from 'rxjs';\n\nimport {TuiDefaultAutofocusHandler} from './handlers/default.handler';\nimport {TuiIosAutofocusHandler} from './handlers/ios.handler';\n\nexport interface TuiAutofocusHandler {\n    setFocus(): void;\n}\n\nexport const TUI_AUTOFOCUS_HANDLER = new InjectionToken<TuiAutofocusHandler>(\n    `Autofocusing handler`,\n);\n\n// TODO: 3.0 remove in ivy compilation\nexport function tuiAutofocusHandlerFactory(\n    tuiFocusableComponent: TuiFocusableElementAccessor | null,\n    elementRef: ElementRef<HTMLElement>,\n    animationFrame$: Observable<number>,\n    renderer: Renderer2,\n    ngZone: NgZone,\n    windowRef: Window,\n    isIos: boolean,\n): TuiAutofocusHandler {\n    return isIos\n        ? new TuiIosAutofocusHandler(\n              tuiFocusableComponent,\n              elementRef,\n              renderer,\n              ngZone,\n              windowRef,\n          )\n        : new TuiDefaultAutofocusHandler(\n              tuiFocusableComponent,\n              elementRef,\n              animationFrame$,\n          );\n}\n\nexport const TUI_AUTOFOCUS_PROVIDERS = [\n    {\n        provide: TUI_AUTOFOCUS_HANDLER,\n        // TODO: replace to useClass in v3.0\n        useFactory: tuiAutofocusHandlerFactory,\n        deps: [\n            [new Optional(), new Self(), TUI_FOCUSABLE_ITEM_ACCESSOR],\n            ElementRef,\n            ANIMATION_FRAME,\n            Renderer2,\n            NgZone,\n            WINDOW,\n            TUI_IS_IOS,\n        ],\n    },\n];\n","import {AfterViewInit, Directive, Inject, Input} from '@angular/core';\n\nimport {\n    TUI_AUTOFOCUS_HANDLER,\n    TUI_AUTOFOCUS_PROVIDERS,\n    TuiAutofocusHandler,\n} from './autofocus.options';\n\n// TODO: 3.0 change input name to tuiAutoFocus and handle empty string\n@Directive({\n    selector: '[tuiAutoFocus]',\n    providers: TUI_AUTOFOCUS_PROVIDERS,\n})\nexport class TuiAutoFocusDirective implements AfterViewInit {\n    @Input()\n    autoFocus = true;\n\n    constructor(\n        @Inject(TUI_AUTOFOCUS_HANDLER)\n        private readonly handler: TuiAutofocusHandler,\n    ) {}\n\n    ngAfterViewInit(): void {\n        if (this.autoFocus) {\n            this.focus();\n        }\n    }\n\n    focus(): void {\n        void Promise.resolve().then(() => this.handler.setFocus());\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiAutoFocusDirective} from './autofocus.directive';\n\n@NgModule({\n    declarations: [TuiAutoFocusDirective],\n    exports: [TuiAutoFocusDirective],\n})\nexport class TuiAutoFocusModule {}\n","import {Directive, ElementRef, Inject, Optional, Self} from '@angular/core';\nimport {TuiFocusableElementAccessor} from '@taiga-ui/cdk/interfaces';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/cdk/tokens';\n\nimport {AbstractTuiAutofocusHandler} from './abstract.handler';\n\n@Directive()\nexport class TuiSynchronousAutofocusHandler extends AbstractTuiAutofocusHandler {\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(TUI_FOCUSABLE_ITEM_ACCESSOR)\n        tuiFocusableComponent: TuiFocusableElementAccessor | null,\n        @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n    ) {\n        super(tuiFocusableComponent, elementRef);\n    }\n\n    setFocus(): void {\n        this.element.focus();\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}