import { __decorate, __param } from 'tslib';
import { TemplateRef, Inject, Input, Directive, NgModule } from '@angular/core';
import { TuiPortalService } from '@taiga-ui/cdk/components/portal-host';

let TuiPortalDirective = class TuiPortalDirective {
    constructor(templateRef, portalService) {
        this.templateRef = templateRef;
        this.portalService = portalService;
    }
    set tuiPortal(show) {
        var _a;
        (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();
        if (show) {
            this.viewRef = this.portalService.addTemplate(this.templateRef);
        }
    }
    ngOnDestroy() {
        var _a;
        (_a = this.viewRef) === null || _a === void 0 ? void 0 : _a.destroy();
    }
};
TuiPortalDirective.ctorParameters = () => [
    { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] },
    { type: TuiPortalService, decorators: [{ type: Inject, args: [TuiPortalService,] }] }
];
__decorate([
    Input()
], TuiPortalDirective.prototype, "tuiPortal", null);
TuiPortalDirective = __decorate([
    Directive({
        selector: '[tuiPortal]',
    }),
    __param(0, Inject(TemplateRef)),
    __param(1, Inject(TuiPortalService))
], TuiPortalDirective);

let TuiPortalModule = class TuiPortalModule {
};
TuiPortalModule = __decorate([
    NgModule({
        declarations: [TuiPortalDirective],
        exports: [TuiPortalDirective],
    })
], TuiPortalModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPortalDirective, TuiPortalModule };
//# sourceMappingURL=taiga-ui-cdk-directives-portal.js.map
