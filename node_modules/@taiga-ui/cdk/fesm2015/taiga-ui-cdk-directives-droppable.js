import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Output, Directive, NgModule } from '@angular/core';
import { typedFromEvent, preventDefault } from '@taiga-ui/cdk/observables';
import { TuiDestroyService } from '@taiga-ui/cdk/services';
import { isPresent } from '@taiga-ui/cdk/utils/miscellaneous';
import { merge, Observable } from 'rxjs';
import { map, filter, switchMap, mapTo, startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';

// @dynamic
let TuiDroppableDirective = class TuiDroppableDirective {
    constructor({ nativeElement }, destroy$) {
        this.tuiDroppableDropped = typedFromEvent(nativeElement, 'drop').pipe(preventDefault(), map(event => event.dataTransfer), filter(isPresent));
        this.tuiDroppableDragOverChange = typedFromEvent(nativeElement, 'dragenter').pipe(switchMap(({ target, dataTransfer }) => merge(typedFromEvent(nativeElement, 'dragleave').pipe(filter(event => event.target === target)), typedFromEvent(nativeElement, 'drop')).pipe(mapTo(null), startWith(dataTransfer))), distinctUntilChanged((a, b) => (!!a && !!b) || (!a && !b)));
        // Required by Drag and Drop API to stop redirecting
        typedFromEvent(nativeElement, 'dragover')
            .pipe(preventDefault(), takeUntil(destroy$))
            .subscribe();
    }
};
TuiDroppableDirective.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
];
__decorate([
    Output()
], TuiDroppableDirective.prototype, "tuiDroppableDropped", void 0);
__decorate([
    Output()
], TuiDroppableDirective.prototype, "tuiDroppableDragOverChange", void 0);
TuiDroppableDirective = __decorate([
    Directive({
        selector: '[tuiDroppableDropped], [tuiDroppableDragOverChange]',
        providers: [TuiDestroyService],
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(TuiDestroyService))
], TuiDroppableDirective);

let TuiDroppableModule = class TuiDroppableModule {
};
TuiDroppableModule = __decorate([
    NgModule({
        declarations: [TuiDroppableDirective],
        exports: [TuiDroppableDirective],
    })
], TuiDroppableModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiDroppableDirective, TuiDroppableModule };
//# sourceMappingURL=taiga-ui-cdk-directives-droppable.js.map
