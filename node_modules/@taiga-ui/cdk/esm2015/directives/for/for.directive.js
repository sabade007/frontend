import { __decorate, __param } from "tslib";
import { Directive, EmbeddedViewRef, Inject, Input, OnChanges, TemplateRef, ViewContainerRef, } from '@angular/core';
let TuiForDirective = class TuiForDirective {
    constructor(vcr) {
        this.vcr = vcr;
        this.ngForOf = [];
    }
    ngOnChanges() {
        var _a, _b;
        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.destroy();
        if (((_b = this.ngForOf) === null || _b === void 0 ? void 0 : _b.length) === 0 && this.ngForEmpty) {
            this.ref = this.vcr.createEmbeddedView(this.ngForEmpty);
        }
        else if (!this.ngForOf && this.ngForElse) {
            this.ref = this.vcr.createEmbeddedView(this.ngForElse);
        }
    }
};
TuiForDirective.ctorParameters = () => [
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] }
];
__decorate([
    Input()
], TuiForDirective.prototype, "ngForOf", void 0);
__decorate([
    Input()
], TuiForDirective.prototype, "ngForElse", void 0);
__decorate([
    Input()
], TuiForDirective.prototype, "ngForEmpty", void 0);
TuiForDirective = __decorate([
    Directive({
        selector: '[ngFor][ngForOf][ngForElse],[ngFor][ngForOf][ngForEmpty]',
    }),
    __param(0, Inject(ViewContainerRef))
], TuiForDirective);
export { TuiForDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jZGsvZGlyZWN0aXZlcy9mb3IvIiwic291cmNlcyI6WyJmb3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUNULGVBQWUsRUFDZixNQUFNLEVBQ04sS0FBSyxFQUNMLFNBQVMsRUFDVCxXQUFXLEVBQ1gsZ0JBQWdCLEdBQ25CLE1BQU0sZUFBZSxDQUFDO0FBS3ZCLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7SUFZeEIsWUFBdUQsR0FBcUI7UUFBckIsUUFBRyxHQUFILEdBQUcsQ0FBa0I7UUFSNUUsWUFBTyxHQUE4QixFQUFFLENBQUM7SUFRdUMsQ0FBQztJQUVoRixXQUFXOztRQUNQLE1BQUEsSUFBSSxDQUFDLEdBQUcsMENBQUUsT0FBTyxHQUFHO1FBRXBCLElBQUksT0FBQSxJQUFJLENBQUMsT0FBTywwQ0FBRSxNQUFNLE1BQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDL0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUMzRDthQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDeEMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMxRDtJQUNMLENBQUM7Q0FDSixDQUFBOztZQVgrRCxnQkFBZ0IsdUJBQS9ELE1BQU0sU0FBQyxnQkFBZ0I7O0FBUnBDO0lBREMsS0FBSyxFQUFFO2dEQUNnQztBQUd4QztJQURDLEtBQUssRUFBRTtrREFDbUI7QUFHM0I7SUFEQyxLQUFLLEVBQUU7bURBQ29CO0FBVm5CLGVBQWU7SUFIM0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLDBEQUEwRDtLQUN2RSxDQUFDO0lBYWUsV0FBQSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtHQVo1QixlQUFlLENBdUIzQjtTQXZCWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBEaXJlY3RpdmUsXG4gICAgRW1iZWRkZWRWaWV3UmVmLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbiAgICBPbkNoYW5nZXMsXG4gICAgVGVtcGxhdGVSZWYsXG4gICAgVmlld0NvbnRhaW5lclJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW25nRm9yXVtuZ0Zvck9mXVtuZ0ZvckVsc2VdLFtuZ0Zvcl1bbmdGb3JPZl1bbmdGb3JFbXB0eV0nLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlGb3JEaXJlY3RpdmU8VCwgSyA9IHVua25vd24+IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHJlZj86IEVtYmVkZGVkVmlld1JlZjx1bmtub3duPjtcblxuICAgIEBJbnB1dCgpXG4gICAgbmdGb3JPZjogVFtdIHwgcmVhZG9ubHkgVFtdIHwgbnVsbCA9IFtdO1xuXG4gICAgQElucHV0KClcbiAgICBuZ0ZvckVsc2U/OiBUZW1wbGF0ZVJlZjxLPjtcblxuICAgIEBJbnB1dCgpXG4gICAgbmdGb3JFbXB0eT86IFRlbXBsYXRlUmVmPEs+O1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChWaWV3Q29udGFpbmVyUmVmKSBwcml2YXRlIHJlYWRvbmx5IHZjcjogVmlld0NvbnRhaW5lclJlZikge31cblxuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlZj8uZGVzdHJveSgpO1xuXG4gICAgICAgIGlmICh0aGlzLm5nRm9yT2Y/Lmxlbmd0aCA9PT0gMCAmJiB0aGlzLm5nRm9yRW1wdHkpIHtcbiAgICAgICAgICAgIHRoaXMucmVmID0gdGhpcy52Y3IuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMubmdGb3JFbXB0eSk7XG4gICAgICAgIH0gZWxzZSBpZiAoIXRoaXMubmdGb3JPZiAmJiB0aGlzLm5nRm9yRWxzZSkge1xuICAgICAgICAgICAgdGhpcy5yZWYgPSB0aGlzLnZjci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy5uZ0ZvckVsc2UpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19