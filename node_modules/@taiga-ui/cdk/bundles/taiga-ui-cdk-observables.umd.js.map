{"version":3,"file":"taiga-ui-cdk-observables.umd.js","sources":["ng://@taiga-ui/cdk/observables/typed-from-event.ts","ng://@taiga-ui/cdk/observables/mouse-drag-finish-from.ts","ng://@taiga-ui/cdk/observables/drag-and-drop-from.ts","ng://@taiga-ui/cdk/observables/is-alive.ts","ng://@taiga-ui/cdk/observables/focus-visible-observable.ts","ng://@taiga-ui/cdk/observables/is-observed.ts","ng://@taiga-ui/cdk/observables/items-query-list-observable.ts","ng://@taiga-ui/cdk/observables/must-be-present.ts","ng://@taiga-ui/cdk/observables/pressed-observable.ts","ng://@taiga-ui/cdk/observables/prevent-default.ts","ng://@taiga-ui/cdk/observables/replay-control-value-changes.ts","ng://@taiga-ui/cdk/observables/scroll-from.ts","ng://@taiga-ui/cdk/observables/stop-propagation.ts","ng://@taiga-ui/cdk/observables/watch.ts","ng://@taiga-ui/cdk/observables/zone-free.ts"],"sourcesContent":["import {TuiEventWith, TuiTypedEventTarget} from '@taiga-ui/cdk/types';\nimport {fromEvent, Observable} from 'rxjs';\n\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<E extends keyof WindowEventMap>(\n    target: Window,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<WindowEventMap[E], typeof target>>;\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<E extends keyof DocumentEventMap>(\n    target: Document,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<DocumentEventMap[E], typeof target>>;\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<T extends Element, E extends keyof HTMLElementEventMap>(\n    target: T,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<HTMLElementEventMap[E], typeof target>>;\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<\n    E extends Event,\n    T extends TuiTypedEventTarget<TuiEventWith<E, T>>,\n>(\n    target: T,\n    event: string,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<E, T>>;\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<E extends Event>(\n    target: TuiTypedEventTarget<E>,\n    event: string,\n    options?: AddEventListenerOptions,\n): Observable<E>;\n/**\n * @deprecated: use {@link tuiTypedFromEvent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function typedFromEvent<E extends Event>(\n    target: TuiTypedEventTarget<E>,\n    event: string,\n    options: AddEventListenerOptions = {},\n): Observable<E> {\n    return fromEvent(target, event, options);\n}\n\nexport const tuiTypedFromEvent = typedFromEvent;\n","import {TuiEventWith, TuiTypedEventTarget} from '@taiga-ui/cdk/types';\nimport {merge, Observable} from 'rxjs';\n\nimport {typedFromEvent} from './typed-from-event';\n\n/**\n * @deprecated: use {@link tuiMouseDragFinishFrom} instead\n * Letting go of the mouse after it was pressed\n * @param target\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function mouseDragFinishFrom<\n    T extends TuiTypedEventTarget<TuiEventWith<DragEvent, T>>,\n>(target: Exclude<T, null>): Observable<TuiEventWith<MouseEvent, T>> {\n    return merge(typedFromEvent(target, `mouseup`), typedFromEvent(target, `dragend`));\n}\n\nexport const tuiMouseDragFinishFrom = mouseDragFinishFrom;\n","import {TuiOwnerDocumentException} from '@taiga-ui/cdk/exceptions';\nimport {isPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {concat, merge, Observable} from 'rxjs';\nimport {endWith, map, repeat, take, takeWhile} from 'rxjs/operators';\n\nimport {mouseDragFinishFrom} from './mouse-drag-finish-from';\nimport {typedFromEvent} from './typed-from-event';\n\nexport const enum TuiDragStage {\n    Start,\n    Continues,\n    End,\n}\n\nexport class TuiDragState {\n    constructor(readonly stage: TuiDragStage, readonly event: MouseEvent) {}\n}\n\n/**\n * @deprecated: use {@link tuiDragAndDropFrom} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function dragAndDropFrom(element: Element): Observable<TuiDragState> {\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new TuiOwnerDocumentException();\n    }\n\n    return concat(\n        typedFromEvent(element, `mousedown`).pipe(\n            take(1),\n            map(event => new TuiDragState(TuiDragStage.Start, event)),\n        ),\n        merge(\n            typedFromEvent(ownerDocument, `mousemove`).pipe(\n                map(event => new TuiDragState(TuiDragStage.Continues, event)),\n            ),\n            mouseDragFinishFrom(ownerDocument).pipe(\n                take(1),\n                map(event => new TuiDragState(TuiDragStage.End, event)),\n                endWith(null),\n            ),\n        ).pipe(takeWhile(isPresent)),\n    ).pipe(repeat());\n}\n\nexport const tuiDragAndDropFrom = dragAndDropFrom;\n","import {OperatorFunction, pipe, timer} from 'rxjs';\nimport {distinctUntilChanged, mapTo, startWith, switchMapTo} from 'rxjs/operators';\n\n/**\n * Operator to set lifespan after which current value is considered obsolete\n */\nexport function tuiIsAlive(lifespan: number = 0): OperatorFunction<unknown, boolean> {\n    return pipe(\n        switchMapTo(timer(lifespan).pipe(mapTo(false), startWith(true))),\n        distinctUntilChanged(),\n    );\n}\n","import {TuiOwnerDocumentException} from '@taiga-ui/cdk/exceptions';\nimport {isNativeFocused} from '@taiga-ui/cdk/utils/focus';\nimport {concat, merge, Observable} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    ignoreElements,\n    mapTo,\n    repeat,\n    shareReplay,\n    startWith,\n    switchMapTo,\n    take,\n    withLatestFrom,\n} from 'rxjs/operators';\n\nimport {tuiIsAlive} from './is-alive';\nimport {typedFromEvent} from './typed-from-event';\n\nlet documentMouseUpIsAlive$: Observable<boolean>;\nlet documentMouseDownIsAlive$: Observable<boolean>;\n\n/**\n * @deprecated: use {@link tuiFocusVisibleObservable} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function focusVisibleObservable(element: Element): Observable<boolean> {\n    const elementBlur$ = typedFromEvent(element, `blur`);\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new TuiOwnerDocumentException();\n    }\n\n    if (!documentMouseDownIsAlive$ || !documentMouseUpIsAlive$) {\n        documentMouseUpIsAlive$ = typedFromEvent(ownerDocument, `mouseup`, {\n            capture: true,\n        }).pipe(\n            tuiIsAlive(),\n            startWith(false),\n            shareReplay({bufferSize: 1, refCount: true}),\n        );\n        documentMouseDownIsAlive$ = typedFromEvent(ownerDocument, `mousedown`, {\n            capture: true,\n        }).pipe(\n            tuiIsAlive(),\n            startWith(false),\n            shareReplay({bufferSize: 1, refCount: true}),\n        );\n    }\n\n    return merge(\n        // focus events excluding ones that came right after mouse action\n        concat(\n            typedFromEvent(element, `focus`).pipe(take(1)),\n            // filtering out blur events when element remains focused so that we ignore browser tab focus loss\n            elementBlur$.pipe(\n                filter(() => !isNativeFocused(element)),\n                take(1),\n                ignoreElements(),\n            ),\n        ).pipe(\n            repeat(),\n            withLatestFrom(\n                documentMouseDownIsAlive$,\n                documentMouseUpIsAlive$,\n                (_event, elementActual, documentActual) =>\n                    elementActual || documentActual,\n            ),\n            filter(isUserFocus => !isUserFocus),\n        ),\n    ).pipe(\n        switchMapTo(elementBlur$.pipe(mapTo(false), take(1), startWith(true))),\n        distinctUntilChanged(),\n    );\n}\n\nexport const tuiFocusVisibleObservable = focusVisibleObservable;\n","import {Subject} from 'rxjs';\n\n/**\n * In RxJS 8 `observers` will be removed, this util is for future safety\n */\nexport function tuiIsObserved<T>(observable: Subject<T>): boolean {\n    return (observable as any).observed || !!observable.observers.length;\n}\n","import {QueryList} from '@angular/core';\nimport {getOriginalArrayFromQueryList} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiItemsQueryListObservable} instead\n * Converts changes observable of a QueryList to an Observable of arrays\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function itemsQueryListObservable<T>(\n    queryList: QueryList<T>,\n): Observable<readonly T[]> {\n    return queryList.changes.pipe(\n        map(() => getOriginalArrayFromQueryList(queryList)),\n        startWith(getOriginalArrayFromQueryList(queryList)),\n    );\n}\n\nexport const tuiItemsQueryListObservable = itemsQueryListObservable;\n","import {TuiValuePresentException} from '@taiga-ui/cdk/exceptions';\nimport {isPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {OperatorFunction} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiMustBePresent} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function mustBePresent<T>(): OperatorFunction<T | null | undefined, T> {\n    return map(value => {\n        if (!isPresent(value)) {\n            throw new TuiValuePresentException();\n        }\n\n        return value;\n    });\n}\n\nexport const tuiMustBePresent = mustBePresent;\n","import {TuiOwnerDocumentException} from '@taiga-ui/cdk/exceptions';\nimport {Observable} from 'rxjs';\nimport {filter, mapTo, startWith, switchMapTo, take} from 'rxjs/operators';\n\nimport {mouseDragFinishFrom} from './mouse-drag-finish-from';\nimport {typedFromEvent} from './typed-from-event';\n\nexport interface TuiPressedObservableOptions {\n    onlyTrusted: boolean;\n}\n\n/**\n * @deprecated: use {@link tuiPressedObservable} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function pressedObservable(\n    element: Element,\n    {onlyTrusted}: TuiPressedObservableOptions = {onlyTrusted: true},\n): Observable<boolean> {\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new TuiOwnerDocumentException();\n    }\n\n    return typedFromEvent(element, `mousedown`).pipe(\n        filter(({isTrusted}) => isTrusted || !onlyTrusted),\n        switchMapTo(\n            mouseDragFinishFrom(ownerDocument).pipe(\n                mapTo(false),\n                take(1),\n                startWith(true),\n            ),\n        ),\n    );\n}\n\nexport const tuiPressedObservable = pressedObservable;\n","import {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiPreventDefault} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function preventDefault<T extends Event>(): MonoTypeOperatorFunction<T> {\n    return tap(event => event.preventDefault());\n}\n\nexport const tuiPreventDefault = preventDefault;\n","import {AbstractControl, AbstractControlDirective} from '@angular/forms';\nimport {TuiValueChangesException} from '@taiga-ui/cdk/exceptions';\nimport {Observable} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\n/**\n * Turns AbstractControl/Abstract-control-directive valueChanges into ReplaySubject(1)\n * TODO: 3.0 name should be shorter.\n */\nexport function tuiReplayedValueChangesFrom<T>(\n    control: AbstractControl | AbstractControlDirective,\n): Observable<T> {\n    return new Observable(subscriber => {\n        if (!control.valueChanges) {\n            throw new TuiValueChangesException();\n        }\n\n        control.valueChanges.pipe(startWith(control.value)).subscribe(subscriber);\n    });\n}\n","import {Observable} from 'rxjs';\n\nimport {tuiTypedFromEvent} from './typed-from-event';\n\n/**\n * Normalizes scroll event in case element is `html` (document.documentElement)\n */\nexport function tuiScrollFrom(element: Element): Observable<Event> {\n    return tuiTypedFromEvent(\n        element === element.ownerDocument?.documentElement\n            ? element.ownerDocument\n            : element,\n        `scroll`,\n    );\n}\n","import {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiStopPropagation} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function stopPropagation<T extends Event>(): MonoTypeOperatorFunction<T> {\n    return tap(e => {\n        e.stopPropagation();\n    });\n}\n\nexport const tuiStopPropagation = stopPropagation;\n","import {ChangeDetectorRef} from '@angular/core';\nimport {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiWatch} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function watch<T>(\n    changeDetectorRef: ChangeDetectorRef,\n): MonoTypeOperatorFunction<T> {\n    return tap(() => {\n        changeDetectorRef.markForCheck();\n    });\n}\n\nexport const tuiWatch = watch;\n","import {NgZone} from '@angular/core';\nimport {MonoTypeOperatorFunction, Observable, pipe} from 'rxjs';\n\nexport function tuiZonefull<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return source =>\n        new Observable(subscriber =>\n            source.subscribe({\n                next: value => ngZone.run(() => subscriber.next(value)),\n                error: (error: unknown) => ngZone.run(() => subscriber.error(error)),\n                complete: () => ngZone.run(() => subscriber.complete()),\n            }),\n        );\n}\n\nexport function tuiZonefree<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return source =>\n        new Observable(subscriber =>\n            ngZone.runOutsideAngular(() => source.subscribe(subscriber)),\n        );\n}\n\nexport function tuiZoneOptimized<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return pipe(tuiZonefree(ngZone), tuiZonefull(ngZone));\n}\n"],"names":["fromEvent","merge","TuiDragStage","TuiOwnerDocumentException","concat","take","map","endWith","takeWhile","isPresent","repeat","pipe","switchMapTo","timer","mapTo","startWith","distinctUntilChanged","shareReplay","filter","isNativeFocused","ignoreElements","withLatestFrom","getOriginalArrayFromQueryList","TuiValuePresentException","tap","Observable","TuiValueChangesException"],"mappings":"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"}