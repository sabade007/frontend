{"version":3,"file":"taiga-ui-cdk-utils-focus.umd.js","sources":["ng://@taiga-ui/cdk/utils/focus/get-native-focused.ts","ng://@taiga-ui/cdk/utils/focus/set-native-focused.ts","ng://@taiga-ui/cdk/utils/focus/blur-native-focused.ts","ng://@taiga-ui/cdk/utils/focus/is-native-keyboard-focusable.ts","ng://@taiga-ui/cdk/utils/focus/is-native-mouse-focusable.ts","ng://@taiga-ui/cdk/utils/focus/get-closest-keyboard-focusable.ts","ng://@taiga-ui/cdk/utils/focus/is-native-focused.ts","ng://@taiga-ui/cdk/utils/focus/is-native-focused-in.ts","ng://@taiga-ui/cdk/utils/focus/move-focus.ts","ng://@taiga-ui/cdk/utils/focus/set-native-mouse-focused.ts"],"sourcesContent":["/**\n * @deprecated: use {@link tuiGetNativeFocused} instead\n * Returns current active element, including shadow dom\n *\n * @return element or null\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getNativeFocused(documentRef: Document): Element | null {\n    if (!documentRef.activeElement?.shadowRoot) {\n        return documentRef.activeElement;\n    }\n\n    let element = documentRef.activeElement.shadowRoot.activeElement;\n\n    while (element?.shadowRoot) {\n        element = element.shadowRoot.activeElement;\n    }\n\n    return element;\n}\n\nexport const tuiGetNativeFocused = getNativeFocused;\n","/**\n * @deprecated: use native element.focus()\n * TODO: remove in v3.0\n * Focuses or blurs and element\n *\n * @param element native element\n * @param focused boolean focused state\n * @param preventScroll optional flag to prevent native scroll to the element\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function setNativeFocused(\n    element: HTMLOrSVGElement,\n    focused: boolean = true,\n    preventScroll: boolean = false,\n): void {\n    if (focused) {\n        element.focus({preventScroll});\n    } else {\n        element.blur();\n    }\n}\n","import {getNativeFocused} from './get-native-focused';\nimport {setNativeFocused} from './set-native-focused';\n\n/**\n * @deprecated: use {@link tuiBlurNativeFocused} instead\n * Finds and blurs current active element, including shadow DOM\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function blurNativeFocused(documentRef: Document): void {\n    const activeElement = getNativeFocused(documentRef);\n\n    // TODO: iframe warning\n    if (activeElement instanceof HTMLElement) {\n        setNativeFocused(activeElement, false);\n    }\n}\n\nexport const tuiBlurNativeFocused = blurNativeFocused;\n","/**\n * @deprecated: use {@link tuiIsNativeKeyboardFocusable} instead\n * Checks for signs that element can be focused with keyboard. tabIndex above 0 is ignored to\n * only target natural focus order. Not checking the possibility of an element to\n * be focused, for example element can have display: none applied to it or any other\n * circumstances could prevent actual focus.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isNativeKeyboardFocusable(element: Element): boolean {\n    if (element.hasAttribute(`disabled`) || element.getAttribute(`tabIndex`) === `-1`) {\n        return false;\n    }\n\n    // TODO: iframe warning\n    if (\n        (element instanceof HTMLElement && element.isContentEditable) ||\n        element.getAttribute(`tabIndex`) === `0`\n    ) {\n        return true;\n    }\n\n    switch (element.tagName) {\n        case `BUTTON`:\n        case `SELECT`:\n        case `TEXTAREA`:\n            return true;\n        case `VIDEO`:\n        case `AUDIO`:\n            return element.hasAttribute(`controls`);\n        case `INPUT`:\n            return element.getAttribute(`type`) !== `hidden`;\n        case `A`:\n        case `LINK`:\n            return element.hasAttribute(`href`);\n        default:\n            return false;\n    }\n}\n\nexport const tuiIsNativeKeyboardFocusable = isNativeKeyboardFocusable;\n","import {isNativeKeyboardFocusable} from './is-native-keyboard-focusable';\n\n/**\n * @deprecated: use {@link tuiIsNativeMouseFocusable} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isNativeMouseFocusable(element: Element): boolean {\n    return (\n        !element.hasAttribute(`disabled`) &&\n        (element.getAttribute(`tabIndex`) === `-1` || isNativeKeyboardFocusable(element))\n    );\n}\n\nexport const tuiIsNativeMouseFocusable = isNativeMouseFocusable;\n","import {svgNodeFilter} from '@taiga-ui/cdk/constants';\n\nimport {isNativeKeyboardFocusable} from './is-native-keyboard-focusable';\nimport {isNativeMouseFocusable} from './is-native-mouse-focusable';\n\n/**\n * @deprecated: use {@link tuiGetClosestFocusable} instead\n * Finds the closest element that can be focused with a keyboard or mouse in theory\n *\n * @param initial current HTML element\n * @param prev should it look backwards instead (find item that will be focused with Shift + Tab)\n * @param root top Node limiting the search area\n * @param keyboard determine if only keyboard focus is of interest\n *\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getClosestFocusable(\n    initial: HTMLElement,\n    prev: boolean = false,\n    root: Node,\n    keyboard: boolean = true,\n): HTMLElement | null {\n    if (!root.ownerDocument) {\n        return null;\n    }\n\n    const check = keyboard ? isNativeKeyboardFocusable : isNativeMouseFocusable;\n\n    // Deprecated but ony this overload works in IE\n    // Filter must be a function in IE, other modern browsers are compliant to this format\n    const treeWalker = root.ownerDocument.createTreeWalker(\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        svgNodeFilter,\n        false,\n    );\n\n    treeWalker.currentNode = initial;\n\n    while (prev ? treeWalker.previousNode() : treeWalker.nextNode()) {\n        // TODO: iframe warning\n        if (treeWalker.currentNode instanceof HTMLElement) {\n            initial = treeWalker.currentNode;\n        }\n\n        if (check(initial)) {\n            return initial;\n        }\n    }\n\n    return null;\n}\n\n/**\n * @deprecated: use {@link tuiGetClosestFocusable} instead\n */\nexport const getClosestKeyboardFocusable = getClosestFocusable;\n\nexport const tuiGetClosestFocusable = getClosestFocusable;\n","import {getNativeFocused} from './get-native-focused';\n\n/**\n * @deprecated: use {@link tuiIsNativeFocused} instead\n * Checks if element is focused.\n *\n * Could return true even after blur since element remains focused if you switch away from a browser tab.\n *\n * @param node or null (as a common return value of DOM nodes walking)\n * @return true if focused\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isNativeFocused(node: Node | null): boolean {\n    return (\n        !!node && !!node.ownerDocument && getNativeFocused(node.ownerDocument) === node\n    );\n}\n\nexport const tuiIsNativeFocused = isNativeFocused;\n","import {getNativeFocused} from './get-native-focused';\n\n/**\n * @deprecated: use {@link tuiIsNativeFocusedIn} instead\n * Checks if focused element is within given element.\n *\n * @param node\n * @return true if focused node is contained within element\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isNativeFocusedIn(node: Node): boolean {\n    // !node.contains - check for IE11\n    if (!node.ownerDocument || !node.contains) {\n        return false;\n    }\n\n    const nativeFocused = getNativeFocused(node.ownerDocument);\n\n    return nativeFocused !== null && node.contains(nativeFocused);\n}\n\nexport const tuiIsNativeFocusedIn = isNativeFocusedIn;\n","import {isNativeFocused} from './is-native-focused';\nimport {setNativeFocused} from './set-native-focused';\n\n/**\n * @deprecated: use {@link tuiMoveFocus} instead\n * Utility method for moving focus in a list of elements\n *\n * @param currentIndex currently focused index\n * @param elements array of focusable elements\n * @param step a step to move focus by, typically -1 or 1\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function moveFocus(\n    currentIndex: number,\n    elements: readonly HTMLElement[],\n    step: number,\n): void {\n    currentIndex += step;\n\n    while (currentIndex >= 0 && currentIndex < elements.length) {\n        setNativeFocused(elements[currentIndex]);\n\n        if (isNativeFocused(elements[currentIndex])) {\n            return;\n        }\n\n        currentIndex += step;\n    }\n}\n\nexport const tuiMoveFocus = moveFocus;\n","import {setNativeFocused} from './set-native-focused';\n\n/**\n * @deprecated: use {@link tuiSetNativeMouseFocused} instead\n * Focuses or blurs element with mouse action imitation (to spoof {@link TuiFocusVisibleService})\n *\n * @param element\n * @param focused desired focused state\n * @param preventScroll optionally prevent native browser scroll after focus\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function setNativeMouseFocused(\n    element: Element & HTMLOrSVGElement,\n    focused: boolean = true,\n    preventScroll: boolean = false,\n): void {\n    if (!element.ownerDocument) {\n        return;\n    }\n\n    if (typeof Event === `function`) {\n        element.dispatchEvent(new Event(`mousedown`, {bubbles: true, cancelable: true}));\n    } else {\n        const event = element.ownerDocument.createEvent(`Event`);\n\n        event.initEvent(`mousedown`, true, true);\n        element.dispatchEvent(event);\n    }\n\n    setNativeFocused(element, focused, preventScroll);\n}\n\nexport const tuiSetNativeMouseFocused = setNativeMouseFocused;\n"],"names":["svgNodeFilter"],"mappings":"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"}