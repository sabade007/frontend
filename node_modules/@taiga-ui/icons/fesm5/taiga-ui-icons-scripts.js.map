{"version":3,"file":"taiga-ui-icons-scripts.js","sources":["ng://@taiga-ui/icons/scripts/rollup-svgo.ts","ng://@taiga-ui/icons/scripts/convert-all-compile-file-to-all-file.ts","ng://@taiga-ui/icons/scripts/delete-all-to-compile-file.ts","ng://@taiga-ui/icons/scripts/post-prettier-format.ts","ng://@taiga-ui/icons/scripts/prepare-all-to-compile-file.ts","ng://@taiga-ui/icons/scripts/process-icons.ts","ng://@taiga-ui/icons/scripts/taiga-ui-icons-scripts.ts"],"sourcesContent":["import {createFilter} from '@rollup/pluginutils';\nimport {Plugin, TransformResult} from 'rollup';\nimport {optimize, OptimizedError, OptimizedSvg, OptimizeOptions} from 'svgo';\n\ntype SvgoResult = OptimizedError | OptimizedSvg;\n\nexport interface TuiRollupSvgoConfig {\n    readonly include?: string;\n\n    readonly exclude?: string;\n\n    readonly options?: OptimizeOptions;\n}\n\nexport function rollupSvgo({\n    include = `**/*.svg`,\n    exclude,\n    options,\n}: TuiRollupSvgoConfig = {}): Plugin {\n    const filter = createFilter(include, exclude);\n\n    return {\n        name: `rollupSvgo`,\n        transform(svgString: string, path: string): TransformResult {\n            const skip = !filter(path);\n\n            if (skip) {\n                console.info(`\\x1B[33m%s\\x1B[0m`, `[skip]`, path);\n\n                return;\n            }\n\n            let data: unknown;\n            let errorMessage: string;\n\n            try {\n                const result: SvgoResult = optimize(svgString, {path, ...options});\n\n                data = (result as OptimizedSvg)?.data || {};\n                errorMessage = result.error as unknown as string;\n            } catch (err) {\n                errorMessage = err.message;\n            }\n\n            if (errorMessage) {\n                console.error(\n                    `\\x1B[31m%s\\x1B[0m`,\n                    `[error]`,\n                    path,\n                    `\\n${svgString}`,\n                    `\\n${errorMessage}`,\n                );\n                process.exit(1);\n            }\n\n            console.info(`\\x1B[32m%s\\x1B[0m`, `[success]`, path);\n\n            return {\n                code: `export default ${JSON.stringify(data)}`,\n                map: {mappings: ``},\n            };\n        },\n    };\n}\n","import {Plugin, rollup, RollupOptions} from 'rollup';\nimport typescript, {RPT2Options} from 'rollup-plugin-typescript2';\n\nimport {rollupSvgo} from './rollup-svgo';\n\nconst banner = `\n/**\n * @description:\n * DO NOT CHANGE THIS FILE. AUTOGENERATED\n */\n`;\n\ninterface Options {\n    prt2Options?: RPT2Options;\n    from: string;\n    to: string;\n}\n\nexport async function convertAllCompileFileToAllFile(config: Options): Promise<void> {\n    const {from, to, prt2Options} = config;\n\n    const inputOptions: RollupOptions = {\n        input: from,\n        output: {preferConst: true},\n        plugins: [\n            typescript(\n                prt2Options ?? {\n                    cacheRoot: `node_modules/.cache/.rpt2_cache`,\n                },\n            ) as Plugin,\n            rollupSvgo({\n                include: `**/*.svg`,\n                options: {\n                    plugins: [\n                        {\n                            name: `preset-default`,\n                            params: {\n                                overrides: {\n                                    removeViewBox: false,\n                                    collapseGroups: false,\n                                    cleanupIDs: false,\n                                    removeUnknownsAndDefaults: false,\n                                },\n                            },\n                        },\n                    ],\n                },\n            }),\n        ],\n    };\n\n    const bundle = await rollup(inputOptions);\n\n    await bundle.write({\n        banner,\n        file: to,\n        format: `es`,\n        preferConst: true,\n    });\n\n    /**\n     * @note:\n     * The rollup bundle must be closed once `write` is finished to let plugins clean up their external\n     * processes or services via the `closeBundle` hook, otherwise it can lead to memory leaks.\n     */\n    await bundle.close();\n}\n","import {unlinkSync} from 'fs';\n\n/**\n * @deprecated:\n * remove from public later\n */\nexport function deleteAllToCompileFile(allToCompilePath: string[] | string): void {\n    if (Array.isArray(allToCompilePath)) {\n        allToCompilePath.forEach(file => unlinkSync(file));\n    } else {\n        unlinkSync(allToCompilePath);\n    }\n}\n","import {readFileSync, writeFileSync} from 'fs';\nimport prettier from 'prettier';\n\nexport function postPrettierFormat(filePath: string, prettierConfig?: string): void {\n    const bundledBody = readFileSync(filePath, `utf8`);\n    const options = prettier.resolveConfig.sync(prettierConfig ?? `prettier.config.js`);\n    const formatted = prettier.format(bundledBody, {...options, parser: `typescript`});\n\n    writeFileSync(filePath, formatted);\n}\n","import {readdirSync, writeFileSync} from 'fs';\n\nexport function prepareAllToCompileFile(iconsSrc: string, entryPointTs: string): void {\n    const icons: string[] = readdirSync(iconsSrc).filter(\n        file => file.split(`.`).pop() === `svg`,\n    );\n\n    let importDeclarations = ``;\n    let exportDeclarations = ``;\n\n    for (const iconPath of icons) {\n        const fileName = iconPath.split(`.`).shift();\n\n        importDeclarations += `import ${fileName} from './src/${fileName}.svg';\\n`;\n        exportDeclarations += `${fileName}, `;\n    }\n\n    writeFileSync(\n        entryPointTs,\n        `${importDeclarations} \\n export { ${exportDeclarations} }`,\n    );\n}\n","import fs from 'fs';\nimport {parse} from 'path';\n\nconst START = `<svg`;\nconst WIDTH_SEARCH = `width=\"`;\nconst HEIGHT_SEARCH = `height=\"`;\n\ninterface WrappedContent {\n    height: string;\n    width: string;\n    src: string;\n}\n\ntype ContentInterceptor = (src: string) => string;\n\nexport function processIcons(files: string[], interceptor?: ContentInterceptor): void {\n    for (const file of files) {\n        const baseContent = String(fs.readFileSync(file));\n        const src = interceptor ? interceptor(baseContent) : baseContent;\n\n        const name = parse(file).base.replace(`.svg`, ``);\n\n        if (src.includes(`id=\"${name}\"`)) {\n            console.info(`\\x1B[33m%s\\x1B[0m`, `[skip]:`, file);\n            continue;\n        }\n\n        const wrapped = wrapIcon(src, name);\n\n        const final =\n            typeof wrapped === `string`\n                ? `${wrapped.replace(\n                      START,\n                      `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`,\n                  )}</g></svg>`\n                : `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${wrapped.width}\" height=\"${wrapped.height}\">${wrapped.src}</svg>`;\n\n        fs.writeFileSync(file, final);\n\n        console.info(`\\x1B[32m%s\\x1B[0m`, `[preprocessed]:`, file);\n    }\n}\n\nfunction wrapIcon(source: string, name: string): WrappedContent | string {\n    const src = source.slice(Math.max(0, source.indexOf(START)));\n    const attributes = src.slice(0, Math.max(0, src.indexOf(`>`)));\n\n    if (!attributes?.includes(WIDTH_SEARCH) || !attributes.includes(HEIGHT_SEARCH)) {\n        return src;\n    }\n\n    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n    const widthString = attributes.slice(\n        widthOffset,\n        attributes.indexOf(`\"`, widthOffset),\n    );\n    const heightString = attributes.slice(\n        heightOffset,\n        attributes.indexOf(`\"`, heightOffset),\n    );\n\n    if (\n        !heightString ||\n        !widthString ||\n        widthString.includes(`%`) ||\n        heightString.includes(`%`)\n    ) {\n        return src.replace(START, `<svg id=\"${name}\"`);\n    }\n\n    const width = parseInt(widthString, 10);\n    const height = parseInt(heightString, 10);\n    const emWidth = width / 16;\n    const emHeight = height / 16;\n\n    return {\n        width: `${emWidth}em`,\n        height: `${emHeight}em`,\n        src: `\n        <g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\">\n            <svg x=\"50%\" y=\"50%\" width=\"${emWidth}em\" height=\"${emHeight}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\">\n                <svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg>\n            </svg>\n        </g>`.trim(),\n    };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}