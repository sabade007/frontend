(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/i18n/tokens', ['exports', '@angular/core'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].i18n = global['taiga-ui'].i18n || {}, global['taiga-ui'].i18n.tokens = {}), global.ng.core));
}(this, (function (exports, core) { 'use strict';

    // @note: cannot be transferred to a shared file
    // ReferenceError: Cannot access 'TUI_LANGUAGE_LOADER' before initialization
    var TUI_LANGUAGE_LOADER = new core.InjectionToken("Webpack chunk loader for Taiga UI libraries i18n");

    var TUI_LANGUAGE_STORAGE_KEY = new core.InjectionToken("Default key for search value in storage", {
        factory: function () { return "tuiLanguage"; },
    });

    exports.TUI_LANGUAGE_LOADER = TUI_LANGUAGE_LOADER;
    exports.TUI_LANGUAGE_STORAGE_KEY = TUI_LANGUAGE_STORAGE_KEY;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-i18n-tokens.umd.js.map
