export const TUI_SPANISH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Color sólido`, `Gradiente`],
    toolbarTools: {
        undo: `Deshacer`,
        redo: `Rehacer`,
        font: `Fuente`,
        fontStyle: `Estilo de la fuente`,
        fontSize: `Tamaño de la fuente`,
        bold: `Negrita`,
        italic: `Cursiva`,
        underline: `Subrayado`,
        strikeThrough: `Tachado`,
        justify: `Justificar`,
        justifyLeft: `Alinear a izquierda`,
        justifyCenter: `Centrar`,
        justifyRight: `Alinear a derecha`,
        justifyFull: `Justificar`,
        list: `Listar`,
        indent: `Sangría`,
        outdent: `Sin sangría`,
        unorderedList: `Lista desordenada`,
        orderedList: `Lista ordenada`,
        quote: `Cita`,
        foreColor: `Color`,
        backColor: `Color de fondo`,
        hiliteColor: `Color de resaltado`,
        clear: `Limpiar`,
        link: `Enlace`,
        attach: `Adjuntar archivo`,
        tex: `Insertar texto`,
        code: `Código`,
        image: `Insertar imagen`,
        insertHorizontalRule: `Insertar regla horizontal`,
        superscript: `Superíndice`,
        subscript: `Subíndice`,
        insertTable: `Insert table`,
        insertGroup: `Insert group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `Merge cells`,
        splitCells: `Split cells`,
        rowsColumnsManaging: `Managing rows and columns`,
        cellColor: `Cell color`,
        setDetails: `Details`,
        removeDetails: `Remove details`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`Insert column before`, `Insert column after`],
        [`Insert row before`, `Insert row after`],
        [`Delete column`, `Delete row`],
    ],
    editorCodeOptions: [`Code in the text`, `Code in block`],
    editorFontOptions: {
        small: `Small`,
        normal: `Normal`,
        large: `Large`,
        title: `Title`,
        subtitle: `Subtitle`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2kxOG4vbGFuZ3VhZ2VzL3NwYW5pc2gvIiwic291cmNlcyI6WyJhZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQW1CO0lBQzdELHNCQUFzQixFQUFFLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQztJQUNyRCxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxRQUFRO1FBQ2QsU0FBUyxFQUFFLHFCQUFxQjtRQUNoQyxRQUFRLEVBQUUscUJBQXFCO1FBQy9CLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLFNBQVM7UUFDakIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsYUFBYSxFQUFFLFNBQVM7UUFDeEIsT0FBTyxFQUFFLFlBQVk7UUFDckIsV0FBVyxFQUFFLHFCQUFxQjtRQUNsQyxhQUFhLEVBQUUsU0FBUztRQUN4QixZQUFZLEVBQUUsbUJBQW1CO1FBQ2pDLFdBQVcsRUFBRSxZQUFZO1FBQ3pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLFNBQVM7UUFDakIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsYUFBYSxFQUFFLG1CQUFtQjtRQUNsQyxXQUFXLEVBQUUsZ0JBQWdCO1FBQzdCLEtBQUssRUFBRSxNQUFNO1FBQ2IsU0FBUyxFQUFFLE9BQU87UUFDbEIsU0FBUyxFQUFFLGdCQUFnQjtRQUMzQixXQUFXLEVBQUUsb0JBQW9CO1FBQ2pDLEtBQUssRUFBRSxTQUFTO1FBQ2hCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLGtCQUFrQjtRQUMxQixHQUFHLEVBQUUsZ0JBQWdCO1FBQ3JCLElBQUksRUFBRSxRQUFRO1FBQ2QsS0FBSyxFQUFFLGlCQUFpQjtRQUN4QixvQkFBb0IsRUFBRSwyQkFBMkI7UUFDakQsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGFuZ3VhZ2VFZGl0b3J9IGZyb20gJ0B0YWlnYS11aS9pMThuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1NQQU5JU0hfTEFOR1VBR0VfQURET05fRURJVE9SOiBMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbYENvbG9yIHPDs2xpZG9gLCBgR3JhZGllbnRlYF0sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86IGBEZXNoYWNlcmAsXG4gICAgICAgIHJlZG86IGBSZWhhY2VyYCxcbiAgICAgICAgZm9udDogYEZ1ZW50ZWAsXG4gICAgICAgIGZvbnRTdHlsZTogYEVzdGlsbyBkZSBsYSBmdWVudGVgLFxuICAgICAgICBmb250U2l6ZTogYFRhbWHDsW8gZGUgbGEgZnVlbnRlYCxcbiAgICAgICAgYm9sZDogYE5lZ3JpdGFgLFxuICAgICAgICBpdGFsaWM6IGBDdXJzaXZhYCxcbiAgICAgICAgdW5kZXJsaW5lOiBgU3VicmF5YWRvYCxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogYFRhY2hhZG9gLFxuICAgICAgICBqdXN0aWZ5OiBgSnVzdGlmaWNhcmAsXG4gICAgICAgIGp1c3RpZnlMZWZ0OiBgQWxpbmVhciBhIGl6cXVpZXJkYWAsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6IGBDZW50cmFyYCxcbiAgICAgICAganVzdGlmeVJpZ2h0OiBgQWxpbmVhciBhIGRlcmVjaGFgLFxuICAgICAgICBqdXN0aWZ5RnVsbDogYEp1c3RpZmljYXJgLFxuICAgICAgICBsaXN0OiBgTGlzdGFyYCxcbiAgICAgICAgaW5kZW50OiBgU2FuZ3LDrWFgLFxuICAgICAgICBvdXRkZW50OiBgU2luIHNhbmdyw61hYCxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogYExpc3RhIGRlc29yZGVuYWRhYCxcbiAgICAgICAgb3JkZXJlZExpc3Q6IGBMaXN0YSBvcmRlbmFkYWAsXG4gICAgICAgIHF1b3RlOiBgQ2l0YWAsXG4gICAgICAgIGZvcmVDb2xvcjogYENvbG9yYCxcbiAgICAgICAgYmFja0NvbG9yOiBgQ29sb3IgZGUgZm9uZG9gLFxuICAgICAgICBoaWxpdGVDb2xvcjogYENvbG9yIGRlIHJlc2FsdGFkb2AsXG4gICAgICAgIGNsZWFyOiBgTGltcGlhcmAsXG4gICAgICAgIGxpbms6IGBFbmxhY2VgLFxuICAgICAgICBhdHRhY2g6IGBBZGp1bnRhciBhcmNoaXZvYCxcbiAgICAgICAgdGV4OiBgSW5zZXJ0YXIgdGV4dG9gLFxuICAgICAgICBjb2RlOiBgQ8OzZGlnb2AsXG4gICAgICAgIGltYWdlOiBgSW5zZXJ0YXIgaW1hZ2VuYCxcbiAgICAgICAgaW5zZXJ0SG9yaXpvbnRhbFJ1bGU6IGBJbnNlcnRhciByZWdsYSBob3Jpem9udGFsYCxcbiAgICAgICAgc3VwZXJzY3JpcHQ6IGBTdXBlcsOtbmRpY2VgLFxuICAgICAgICBzdWJzY3JpcHQ6IGBTdWLDrW5kaWNlYCxcbiAgICAgICAgaW5zZXJ0VGFibGU6IGBJbnNlcnQgdGFibGVgLFxuICAgICAgICBpbnNlcnRHcm91cDogYEluc2VydCBncm91cGAsXG4gICAgICAgIHJlbW92ZUdyb3VwOiBgUmVtb3ZlIGdyb3VwYCxcbiAgICAgICAgaW5zZXJ0QW5jaG9yOiBgSW5zZXJ0IGFuY2hvcmAsXG4gICAgICAgIG1lcmdlQ2VsbHM6IGBNZXJnZSBjZWxsc2AsXG4gICAgICAgIHNwbGl0Q2VsbHM6IGBTcGxpdCBjZWxsc2AsXG4gICAgICAgIHJvd3NDb2x1bW5zTWFuYWdpbmc6IGBNYW5hZ2luZyByb3dzIGFuZCBjb2x1bW5zYCxcbiAgICAgICAgY2VsbENvbG9yOiBgQ2VsbCBjb2xvcmAsXG4gICAgICAgIHNldERldGFpbHM6IGBEZXRhaWxzYCxcbiAgICAgICAgcmVtb3ZlRGV0YWlsczogYFJlbW92ZSBkZXRhaWxzYCxcbiAgICB9LFxuICAgIGVkaXRvckVkaXRMaW5rOiB7XG4gICAgICAgIHVybEV4YW1wbGU6IGBleGFtcGxlLmNvbWAsXG4gICAgICAgIGFuY2hvckV4YW1wbGU6IGBhbmNob3JgLFxuICAgIH0sXG4gICAgZWRpdG9yVGFibGVDb21tYW5kczogW1xuICAgICAgICBbYEluc2VydCBjb2x1bW4gYmVmb3JlYCwgYEluc2VydCBjb2x1bW4gYWZ0ZXJgXSxcbiAgICAgICAgW2BJbnNlcnQgcm93IGJlZm9yZWAsIGBJbnNlcnQgcm93IGFmdGVyYF0sXG4gICAgICAgIFtgRGVsZXRlIGNvbHVtbmAsIGBEZWxldGUgcm93YF0sXG4gICAgXSxcbiAgICBlZGl0b3JDb2RlT3B0aW9uczogW2BDb2RlIGluIHRoZSB0ZXh0YCwgYENvZGUgaW4gYmxvY2tgXSxcbiAgICBlZGl0b3JGb250T3B0aW9uczoge1xuICAgICAgICBzbWFsbDogYFNtYWxsYCxcbiAgICAgICAgbm9ybWFsOiBgTm9ybWFsYCxcbiAgICAgICAgbGFyZ2U6IGBMYXJnZWAsXG4gICAgICAgIHRpdGxlOiBgVGl0bGVgLFxuICAgICAgICBzdWJ0aXRsZTogYFN1YnRpdGxlYCxcbiAgICB9LFxufTtcbiJdfQ==