export const TUI_POLISH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Kolor`, `Gradient`],
    toolbarTools: {
        undo: `Cofnij`,
        redo: `Ponów`,
        font: `Czcionka`,
        fontStyle: `Styl czcionki`,
        fontSize: `Rozmiar czcionki`,
        bold: `Pogrubienie`,
        italic: `Kursywa`,
        underline: `Podkreślenie`,
        strikeThrough: `Przekreślenie`,
        justify: `Wyrównanie`,
        justifyLeft: `Wyrównanie do lewej`,
        justifyCenter: `Wyrównanie do środka`,
        justifyRight: `Wyrównanie do prawej`,
        justifyFull: `Justowanie`,
        list: `Lista`,
        indent: `Zmniejsz wcięcie`,
        outdent: `Zwiększ wcięcie`,
        unorderedList: `Lista punktowana`,
        orderedList: `Lista numerowana`,
        quote: `Cytat`,
        foreColor: `Kolor tekstu`,
        backColor: `Kolor tła`,
        hiliteColor: `Kolor zaznaczenia`,
        clear: `Wyczyść`,
        link: `Link`,
        attach: `Załącz plik`,
        tex: `Wstaw wzór`,
        code: `Kod`,
        image: `Wstaw ilustrację`,
        insertHorizontalRule: `Wstaw separator`,
        superscript: `Indeks górny`,
        subscript: `Indeks dolny`,
        insertTable: `Wstaw tabelę`,
        insertGroup: `Insert group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `Scal komórki`,
        splitCells: `Podziel komórki`,
        rowsColumnsManaging: `Zarządzaj wierszami i kolumnami`,
        cellColor: `Kolor komórki`,
        setDetails: `Details`,
        removeDetails: `Remove details`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`Wstaw kolumnę przed`, `Wstaw kolumnę po`],
        [`Wstaw wiersz przed`, `Wstaw wiersz po`],
        [`Usuń kolumnę`, `Usuń wiersz`],
    ],
    editorCodeOptions: [`Kod w tekście`, `Kod w bloku`],
    editorFontOptions: {
        small: `Small`,
        normal: `Normalny`,
        large: `Large`,
        title: `Tytuł`,
        subtitle: `Podtytuł`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2kxOG4vbGFuZ3VhZ2VzL3BvbGlzaC8iLCJzb3VyY2VzIjpbImFkZG9uLWVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBbUI7SUFDNUQsc0JBQXNCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDO0lBQzdDLFlBQVksRUFBRTtRQUNWLElBQUksRUFBRSxRQUFRO1FBQ2QsSUFBSSxFQUFFLE9BQU87UUFDYixJQUFJLEVBQUUsVUFBVTtRQUNoQixTQUFTLEVBQUUsZUFBZTtRQUMxQixRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLGFBQWEsRUFBRSxlQUFlO1FBQzlCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLFdBQVcsRUFBRSxxQkFBcUI7UUFDbEMsYUFBYSxFQUFFLHNCQUFzQjtRQUNyQyxZQUFZLEVBQUUsc0JBQXNCO1FBQ3BDLFdBQVcsRUFBRSxZQUFZO1FBQ3pCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLGtCQUFrQjtRQUMxQixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLGFBQWEsRUFBRSxrQkFBa0I7UUFDakMsV0FBVyxFQUFFLGtCQUFrQjtRQUMvQixLQUFLLEVBQUUsT0FBTztRQUNkLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFdBQVcsRUFBRSxtQkFBbUI7UUFDaEMsS0FBSyxFQUFFLFNBQVM7UUFDaEIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsYUFBYTtRQUNyQixHQUFHLEVBQUUsWUFBWTtRQUNqQixJQUFJLEVBQUUsS0FBSztRQUNYLEtBQUssRUFBRSxrQkFBa0I7UUFDekIsb0JBQW9CLEVBQUUsaUJBQWlCO1FBQ3ZDLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFlBQVksRUFBRSxlQUFlO1FBQzdCLFVBQVUsRUFBRSxjQUFjO1FBQzFCLFVBQVUsRUFBRSxpQkFBaUI7UUFDN0IsbUJBQW1CLEVBQUUsaUNBQWlDO1FBQ3RELFNBQVMsRUFBRSxlQUFlO1FBQzFCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMscUJBQXFCLEVBQUUsa0JBQWtCLENBQUM7UUFDM0MsQ0FBQyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQztRQUN6QyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUM7SUFDbkQsaUJBQWlCLEVBQUU7UUFDZixLQUFLLEVBQUUsT0FBTztRQUNkLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxPQUFPO1FBQ2QsS0FBSyxFQUFFLE9BQU87UUFDZCxRQUFRLEVBQUUsVUFBVTtLQUN2QjtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xhbmd1YWdlRWRpdG9yfSBmcm9tICdAdGFpZ2EtdWkvaTE4bi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9QT0xJU0hfTEFOR1VBR0VfQURET05fRURJVE9SOiBMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbYEtvbG9yYCwgYEdyYWRpZW50YF0sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86IGBDb2ZuaWpgLFxuICAgICAgICByZWRvOiBgUG9uw7N3YCxcbiAgICAgICAgZm9udDogYEN6Y2lvbmthYCxcbiAgICAgICAgZm9udFN0eWxlOiBgU3R5bCBjemNpb25raWAsXG4gICAgICAgIGZvbnRTaXplOiBgUm96bWlhciBjemNpb25raWAsXG4gICAgICAgIGJvbGQ6IGBQb2dydWJpZW5pZWAsXG4gICAgICAgIGl0YWxpYzogYEt1cnN5d2FgLFxuICAgICAgICB1bmRlcmxpbmU6IGBQb2RrcmXFm2xlbmllYCxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogYFByemVrcmXFm2xlbmllYCxcbiAgICAgICAganVzdGlmeTogYFd5csOzd25hbmllYCxcbiAgICAgICAganVzdGlmeUxlZnQ6IGBXeXLDs3duYW5pZSBkbyBsZXdlamAsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6IGBXeXLDs3duYW5pZSBkbyDFm3JvZGthYCxcbiAgICAgICAganVzdGlmeVJpZ2h0OiBgV3lyw7N3bmFuaWUgZG8gcHJhd2VqYCxcbiAgICAgICAganVzdGlmeUZ1bGw6IGBKdXN0b3dhbmllYCxcbiAgICAgICAgbGlzdDogYExpc3RhYCxcbiAgICAgICAgaW5kZW50OiBgWm1uaWVqc3ogd2NpxJljaWVgLFxuICAgICAgICBvdXRkZW50OiBgWndpxJlrc3ogd2NpxJljaWVgLFxuICAgICAgICB1bm9yZGVyZWRMaXN0OiBgTGlzdGEgcHVua3Rvd2FuYWAsXG4gICAgICAgIG9yZGVyZWRMaXN0OiBgTGlzdGEgbnVtZXJvd2FuYWAsXG4gICAgICAgIHF1b3RlOiBgQ3l0YXRgLFxuICAgICAgICBmb3JlQ29sb3I6IGBLb2xvciB0ZWtzdHVgLFxuICAgICAgICBiYWNrQ29sb3I6IGBLb2xvciB0xYJhYCxcbiAgICAgICAgaGlsaXRlQ29sb3I6IGBLb2xvciB6YXpuYWN6ZW5pYWAsXG4gICAgICAgIGNsZWFyOiBgV3ljennFm8SHYCxcbiAgICAgICAgbGluazogYExpbmtgLFxuICAgICAgICBhdHRhY2g6IGBaYcWCxIVjeiBwbGlrYCxcbiAgICAgICAgdGV4OiBgV3N0YXcgd3rDs3JgLFxuICAgICAgICBjb2RlOiBgS29kYCxcbiAgICAgICAgaW1hZ2U6IGBXc3RhdyBpbHVzdHJhY2rEmWAsXG4gICAgICAgIGluc2VydEhvcml6b250YWxSdWxlOiBgV3N0YXcgc2VwYXJhdG9yYCxcbiAgICAgICAgc3VwZXJzY3JpcHQ6IGBJbmRla3MgZ8Ozcm55YCxcbiAgICAgICAgc3Vic2NyaXB0OiBgSW5kZWtzIGRvbG55YCxcbiAgICAgICAgaW5zZXJ0VGFibGU6IGBXc3RhdyB0YWJlbMSZYCxcbiAgICAgICAgaW5zZXJ0R3JvdXA6IGBJbnNlcnQgZ3JvdXBgLFxuICAgICAgICByZW1vdmVHcm91cDogYFJlbW92ZSBncm91cGAsXG4gICAgICAgIGluc2VydEFuY2hvcjogYEluc2VydCBhbmNob3JgLFxuICAgICAgICBtZXJnZUNlbGxzOiBgU2NhbCBrb23Ds3JraWAsXG4gICAgICAgIHNwbGl0Q2VsbHM6IGBQb2R6aWVsIGtvbcOzcmtpYCxcbiAgICAgICAgcm93c0NvbHVtbnNNYW5hZ2luZzogYFphcnrEhWR6YWogd2llcnN6YW1pIGkga29sdW1uYW1pYCxcbiAgICAgICAgY2VsbENvbG9yOiBgS29sb3Iga29tw7Nya2lgLFxuICAgICAgICBzZXREZXRhaWxzOiBgRGV0YWlsc2AsXG4gICAgICAgIHJlbW92ZURldGFpbHM6IGBSZW1vdmUgZGV0YWlsc2AsXG4gICAgfSxcbiAgICBlZGl0b3JFZGl0TGluazoge1xuICAgICAgICB1cmxFeGFtcGxlOiBgZXhhbXBsZS5jb21gLFxuICAgICAgICBhbmNob3JFeGFtcGxlOiBgYW5jaG9yYCxcbiAgICB9LFxuICAgIGVkaXRvclRhYmxlQ29tbWFuZHM6IFtcbiAgICAgICAgW2BXc3RhdyBrb2x1bW7EmSBwcnplZGAsIGBXc3RhdyBrb2x1bW7EmSBwb2BdLFxuICAgICAgICBbYFdzdGF3IHdpZXJzeiBwcnplZGAsIGBXc3RhdyB3aWVyc3ogcG9gXSxcbiAgICAgICAgW2BVc3XFhCBrb2x1bW7EmWAsIGBVc3XFhCB3aWVyc3pgXSxcbiAgICBdLFxuICAgIGVkaXRvckNvZGVPcHRpb25zOiBbYEtvZCB3IHRla8WbY2llYCwgYEtvZCB3IGJsb2t1YF0sXG4gICAgZWRpdG9yRm9udE9wdGlvbnM6IHtcbiAgICAgICAgc21hbGw6IGBTbWFsbGAsXG4gICAgICAgIG5vcm1hbDogYE5vcm1hbG55YCxcbiAgICAgICAgbGFyZ2U6IGBMYXJnZWAsXG4gICAgICAgIHRpdGxlOiBgVHl0dcWCYCxcbiAgICAgICAgc3VidGl0bGU6IGBQb2R0eXR1xYJgLFxuICAgIH0sXG59O1xuIl19