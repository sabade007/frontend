export const TUI_UKRAINIAN_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Суцільний колір`, `Градієнт`],
    toolbarTools: {
        undo: `Скасувати`,
        redo: `Повторити`,
        font: `Шрифт`,
        fontStyle: `Стиль шрифту`,
        fontSize: `Розмір шрифту`,
        bold: `Жирний`,
        italic: `Курсив`,
        underline: `Підкреслений`,
        strikeThrough: `Закреслений`,
        justify: `Вирівнювання`,
        justifyLeft: `Вирівняти текст за лівим краєм`,
        justifyCenter: `Вирівняти текст по центру`,
        justifyRight: `Вирівняти текст за правим краєм`,
        justifyFull: `Вирівняти за шириною`,
        list: `Списки`,
        indent: `Зменшити відступ`,
        outdent: `Збільшити відступ`,
        unorderedList: `Маркований список`,
        orderedList: `Нумерований список`,
        quote: `Цитата`,
        foreColor: `Колір: Текст`,
        hiliteColor: `Колір виділення`,
        backColor: `Колір фону`,
        clear: `Скинути форматування`,
        link: `Посилання`,
        attach: `Вставити файл`,
        tex: `Вставити формулу`,
        code: `Code`,
        image: `Вставити зображення`,
        insertHorizontalRule: `Розділювач`,
        superscript: `Надрядковий`,
        subscript: `Підрядковий`,
        insertTable: `Insert table`,
        insertGroup: `Insert group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `Merge cells`,
        splitCells: `Split cells`,
        rowsColumnsManaging: `Managing rows and columns`,
        cellColor: `Cell color`,
        setDetails: `Details`,
        removeDetails: `Remove details`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`Insert column before`, `Insert column after`],
        [`Insert row before`, `Insert row after`],
        [`Delete column`, `Delete row`],
    ],
    editorCodeOptions: [`Code in the text`, `Code in block`],
    editorFontOptions: {
        small: `Small`,
        normal: `Normal`,
        large: `Large`,
        title: `Title`,
        subtitle: `Subtitle`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2kxOG4vbGFuZ3VhZ2VzL3VrcmFpbmlhbi8iLCJzb3VyY2VzIjpbImFkZG9uLWVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxtQ0FBbUMsR0FBbUI7SUFDL0Qsc0JBQXNCLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxVQUFVLENBQUM7SUFDdkQsWUFBWSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFdBQVc7UUFDakIsSUFBSSxFQUFFLFdBQVc7UUFDakIsSUFBSSxFQUFFLE9BQU87UUFDYixTQUFTLEVBQUUsY0FBYztRQUN6QixRQUFRLEVBQUUsZUFBZTtRQUN6QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLGFBQWEsRUFBRSxhQUFhO1FBQzVCLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLFdBQVcsRUFBRSxnQ0FBZ0M7UUFDN0MsYUFBYSxFQUFFLDJCQUEyQjtRQUMxQyxZQUFZLEVBQUUsaUNBQWlDO1FBQy9DLFdBQVcsRUFBRSxzQkFBc0I7UUFDbkMsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsa0JBQWtCO1FBQzFCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsYUFBYSxFQUFFLG1CQUFtQjtRQUNsQyxXQUFXLEVBQUUsb0JBQW9CO1FBQ2pDLEtBQUssRUFBRSxRQUFRO1FBQ2YsU0FBUyxFQUFFLGNBQWM7UUFDekIsV0FBVyxFQUFFLGlCQUFpQjtRQUM5QixTQUFTLEVBQUUsWUFBWTtRQUN2QixLQUFLLEVBQUUsc0JBQXNCO1FBQzdCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxlQUFlO1FBQ3ZCLEdBQUcsRUFBRSxrQkFBa0I7UUFDdkIsSUFBSSxFQUFFLE1BQU07UUFDWixLQUFLLEVBQUUscUJBQXFCO1FBQzVCLG9CQUFvQixFQUFFLFlBQVk7UUFDbEMsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLGFBQWE7UUFDeEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGFuZ3VhZ2VFZGl0b3J9IGZyb20gJ0B0YWlnYS11aS9pMThuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1VLUkFJTklBTl9MQU5HVUFHRV9BRERPTl9FRElUT1I6IExhbmd1YWdlRWRpdG9yID0ge1xuICAgIGNvbG9yU2VsZWN0b3JNb2RlTmFtZXM6IFtg0KHRg9GG0ZbQu9GM0L3QuNC5INC60L7Qu9GW0YBgLCBg0JPRgNCw0LTRltGU0L3RgmBdLFxuICAgIHRvb2xiYXJUb29sczoge1xuICAgICAgICB1bmRvOiBg0KHQutCw0YHRg9Cy0LDRgtC4YCxcbiAgICAgICAgcmVkbzogYNCf0L7QstGC0L7RgNC40YLQuGAsXG4gICAgICAgIGZvbnQ6IGDQqNGA0LjRhNGCYCxcbiAgICAgICAgZm9udFN0eWxlOiBg0KHRgtC40LvRjCDRiNGA0LjRhNGC0YNgLFxuICAgICAgICBmb250U2l6ZTogYNCg0L7Qt9C80ZbRgCDRiNGA0LjRhNGC0YNgLFxuICAgICAgICBib2xkOiBg0JbQuNGA0L3QuNC5YCxcbiAgICAgICAgaXRhbGljOiBg0JrRg9GA0YHQuNCyYCxcbiAgICAgICAgdW5kZXJsaW5lOiBg0J/RltC00LrRgNC10YHQu9C10L3QuNC5YCxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogYNCX0LDQutGA0LXRgdC70LXQvdC40LlgLFxuICAgICAgICBqdXN0aWZ5OiBg0JLQuNGA0ZbQstC90Y7QstCw0L3QvdGPYCxcbiAgICAgICAganVzdGlmeUxlZnQ6IGDQktC40YDRltCy0L3Rj9GC0Lgg0YLQtdC60YHRgiDQt9CwINC70ZbQstC40Lwg0LrRgNCw0ZTQvGAsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6IGDQktC40YDRltCy0L3Rj9GC0Lgg0YLQtdC60YHRgiDQv9C+INGG0LXQvdGC0YDRg2AsXG4gICAgICAgIGp1c3RpZnlSaWdodDogYNCS0LjRgNGW0LLQvdGP0YLQuCDRgtC10LrRgdGCINC30LAg0L/RgNCw0LLQuNC8INC60YDQsNGU0LxgLFxuICAgICAgICBqdXN0aWZ5RnVsbDogYNCS0LjRgNGW0LLQvdGP0YLQuCDQt9CwINGI0LjRgNC40L3QvtGOYCxcbiAgICAgICAgbGlzdDogYNCh0L/QuNGB0LrQuGAsXG4gICAgICAgIGluZGVudDogYNCX0LzQtdC90YjQuNGC0Lgg0LLRltC00YHRgtGD0L9gLFxuICAgICAgICBvdXRkZW50OiBg0JfQsdGW0LvRjNGI0LjRgtC4INCy0ZbQtNGB0YLRg9C/YCxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogYNCc0LDRgNC60L7QstCw0L3QuNC5INGB0L/QuNGB0L7QumAsXG4gICAgICAgIG9yZGVyZWRMaXN0OiBg0J3Rg9C80LXRgNC+0LLQsNC90LjQuSDRgdC/0LjRgdC+0LpgLFxuICAgICAgICBxdW90ZTogYNCm0LjRgtCw0YLQsGAsXG4gICAgICAgIGZvcmVDb2xvcjogYNCa0L7Qu9GW0YA6INCi0LXQutGB0YJgLFxuICAgICAgICBoaWxpdGVDb2xvcjogYNCa0L7Qu9GW0YAg0LLQuNC00ZbQu9C10L3QvdGPYCxcbiAgICAgICAgYmFja0NvbG9yOiBg0JrQvtC70ZbRgCDRhNC+0L3Rg2AsXG4gICAgICAgIGNsZWFyOiBg0KHQutC40L3Rg9GC0Lgg0YTQvtGA0LzQsNGC0YPQstCw0L3QvdGPYCxcbiAgICAgICAgbGluazogYNCf0L7RgdC40LvQsNC90L3Rj2AsXG4gICAgICAgIGF0dGFjaDogYNCS0YHRgtCw0LLQuNGC0Lgg0YTQsNC50LtgLFxuICAgICAgICB0ZXg6IGDQktGB0YLQsNCy0LjRgtC4INGE0L7RgNC80YPQu9GDYCxcbiAgICAgICAgY29kZTogYENvZGVgLFxuICAgICAgICBpbWFnZTogYNCS0YHRgtCw0LLQuNGC0Lgg0LfQvtCx0YDQsNC20LXQvdC90Y9gLFxuICAgICAgICBpbnNlcnRIb3Jpem9udGFsUnVsZTogYNCg0L7Qt9C00ZbQu9GO0LLQsNGHYCxcbiAgICAgICAgc3VwZXJzY3JpcHQ6IGDQndCw0LTRgNGP0LTQutC+0LLQuNC5YCxcbiAgICAgICAgc3Vic2NyaXB0OiBg0J/RltC00YDRj9C00LrQvtCy0LjQuWAsXG4gICAgICAgIGluc2VydFRhYmxlOiBgSW5zZXJ0IHRhYmxlYCxcbiAgICAgICAgaW5zZXJ0R3JvdXA6IGBJbnNlcnQgZ3JvdXBgLFxuICAgICAgICByZW1vdmVHcm91cDogYFJlbW92ZSBncm91cGAsXG4gICAgICAgIGluc2VydEFuY2hvcjogYEluc2VydCBhbmNob3JgLFxuICAgICAgICBtZXJnZUNlbGxzOiBgTWVyZ2UgY2VsbHNgLFxuICAgICAgICBzcGxpdENlbGxzOiBgU3BsaXQgY2VsbHNgLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiBgTWFuYWdpbmcgcm93cyBhbmQgY29sdW1uc2AsXG4gICAgICAgIGNlbGxDb2xvcjogYENlbGwgY29sb3JgLFxuICAgICAgICBzZXREZXRhaWxzOiBgRGV0YWlsc2AsXG4gICAgICAgIHJlbW92ZURldGFpbHM6IGBSZW1vdmUgZGV0YWlsc2AsXG4gICAgfSxcbiAgICBlZGl0b3JFZGl0TGluazoge1xuICAgICAgICB1cmxFeGFtcGxlOiBgZXhhbXBsZS5jb21gLFxuICAgICAgICBhbmNob3JFeGFtcGxlOiBgYW5jaG9yYCxcbiAgICB9LFxuICAgIGVkaXRvclRhYmxlQ29tbWFuZHM6IFtcbiAgICAgICAgW2BJbnNlcnQgY29sdW1uIGJlZm9yZWAsIGBJbnNlcnQgY29sdW1uIGFmdGVyYF0sXG4gICAgICAgIFtgSW5zZXJ0IHJvdyBiZWZvcmVgLCBgSW5zZXJ0IHJvdyBhZnRlcmBdLFxuICAgICAgICBbYERlbGV0ZSBjb2x1bW5gLCBgRGVsZXRlIHJvd2BdLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFtgQ29kZSBpbiB0aGUgdGV4dGAsIGBDb2RlIGluIGJsb2NrYF0sXG4gICAgZWRpdG9yRm9udE9wdGlvbnM6IHtcbiAgICAgICAgc21hbGw6IGBTbWFsbGAsXG4gICAgICAgIG5vcm1hbDogYE5vcm1hbGAsXG4gICAgICAgIGxhcmdlOiBgTGFyZ2VgLFxuICAgICAgICB0aXRsZTogYFRpdGxlYCxcbiAgICAgICAgc3VidGl0bGU6IGBTdWJ0aXRsZWAsXG4gICAgfSxcbn07XG4iXX0=