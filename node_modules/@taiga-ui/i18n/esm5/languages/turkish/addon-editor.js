export var TUI_TURKISH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ["Solid color", "Gradient"],
    toolbarTools: {
        undo: "Geri al",
        redo: "\u0130leri Al",
        font: "Yaz\u0131 Tipi",
        fontStyle: "Yaz\u0131 stili",
        fontSize: "Yat\u0131 Boyutu",
        bold: "Kal\u0131n",
        italic: "\u0130talik",
        underline: "Alt\u0131 \u00C7izi",
        strikeThrough: "\u00DCst\u00FC \u00C7izili",
        justify: "Hizala",
        justifyLeft: "Sola yasla",
        justifyCenter: "Ortala",
        justifyRight: "Sa\u011Fa yasla",
        justifyFull: "Doldur",
        list: "Liste",
        indent: "Girinti",
        outdent: "\u00C7\u0131k\u0131nt\u0131",
        unorderedList: "Noktal\u0131 liste",
        orderedList: "Numerik liste",
        quote: "Al\u0131nt\u0131",
        foreColor: "Renk",
        backColor: "Arka plan rengi",
        hiliteColor: "hiliteColor",
        clear: "Format\u0131 Temizle",
        link: "Link",
        attach: "Dosya Ekle",
        tex: "TeX Ekle",
        code: "Kod",
        image: "Resim Ekle",
        insertHorizontalRule: "Sat\u0131r Ekle",
        superscript: "\u00DCst Simge",
        subscript: "Alt Simge",
        insertTable: "Insert table",
        insertGroup: "Insert group",
        removeGroup: "Remove group",
        insertAnchor: "Insert anchor",
        mergeCells: "Merge cells",
        splitCells: "Split cells",
        rowsColumnsManaging: "Managing rows and columns",
        cellColor: "Cell color",
        setDetails: "Details",
        removeDetails: "Remove details",
    },
    editorEditLink: {
        urlExample: "example.com",
        anchorExample: "anchor",
    },
    editorTableCommands: [
        ["Insert column before", "Insert column after"],
        ["Insert row before", "Insert row after"],
        ["Delete column", "Delete row"],
    ],
    editorCodeOptions: ["Code in the text", "Code in block"],
    editorFontOptions: {
        small: "Small",
        normal: "Normal",
        large: "Large",
        title: "Title",
        subtitle: "Subtitle",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2kxOG4vbGFuZ3VhZ2VzL3R1cmtpc2gvIiwic291cmNlcyI6WyJhZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLElBQU0saUNBQWlDLEdBQW1CO0lBQzdELHNCQUFzQixFQUFFLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQztJQUNuRCxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxlQUFVO1FBQ2hCLElBQUksRUFBRSxnQkFBVztRQUNqQixTQUFTLEVBQUUsaUJBQVk7UUFDdkIsUUFBUSxFQUFFLGtCQUFhO1FBQ3ZCLElBQUksRUFBRSxZQUFPO1FBQ2IsTUFBTSxFQUFFLGFBQVE7UUFDaEIsU0FBUyxFQUFFLHFCQUFXO1FBQ3RCLGFBQWEsRUFBRSw0QkFBYTtRQUM1QixPQUFPLEVBQUUsUUFBUTtRQUNqQixXQUFXLEVBQUUsWUFBWTtRQUN6QixhQUFhLEVBQUUsUUFBUTtRQUN2QixZQUFZLEVBQUUsaUJBQVk7UUFDMUIsV0FBVyxFQUFFLFFBQVE7UUFDckIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsU0FBUztRQUNqQixPQUFPLEVBQUUsNkJBQVM7UUFDbEIsYUFBYSxFQUFFLG9CQUFlO1FBQzlCLFdBQVcsRUFBRSxlQUFlO1FBQzVCLEtBQUssRUFBRSxrQkFBUTtRQUNmLFNBQVMsRUFBRSxNQUFNO1FBQ2pCLFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsV0FBVyxFQUFFLGFBQWE7UUFDMUIsS0FBSyxFQUFFLHNCQUFpQjtRQUN4QixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxZQUFZO1FBQ3BCLEdBQUcsRUFBRSxVQUFVO1FBQ2YsSUFBSSxFQUFFLEtBQUs7UUFDWCxLQUFLLEVBQUUsWUFBWTtRQUNuQixvQkFBb0IsRUFBRSxpQkFBWTtRQUNsQyxXQUFXLEVBQUUsZ0JBQVc7UUFDeEIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGFuZ3VhZ2VFZGl0b3J9IGZyb20gJ0B0YWlnYS11aS9pMThuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1RVUktJU0hfTEFOR1VBR0VfQURET05fRURJVE9SOiBMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbYFNvbGlkIGNvbG9yYCwgYEdyYWRpZW50YF0sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86IGBHZXJpIGFsYCxcbiAgICAgICAgcmVkbzogYMSwbGVyaSBBbGAsXG4gICAgICAgIGZvbnQ6IGBZYXrEsSBUaXBpYCxcbiAgICAgICAgZm9udFN0eWxlOiBgWWF6xLEgc3RpbGlgLFxuICAgICAgICBmb250U2l6ZTogYFlhdMSxIEJveXV0dWAsXG4gICAgICAgIGJvbGQ6IGBLYWzEsW5gLFxuICAgICAgICBpdGFsaWM6IGDEsHRhbGlrYCxcbiAgICAgICAgdW5kZXJsaW5lOiBgQWx0xLEgw4dpemlgLFxuICAgICAgICBzdHJpa2VUaHJvdWdoOiBgw5xzdMO8IMOHaXppbGlgLFxuICAgICAgICBqdXN0aWZ5OiBgSGl6YWxhYCxcbiAgICAgICAganVzdGlmeUxlZnQ6IGBTb2xhIHlhc2xhYCxcbiAgICAgICAganVzdGlmeUNlbnRlcjogYE9ydGFsYWAsXG4gICAgICAgIGp1c3RpZnlSaWdodDogYFNhxJ9hIHlhc2xhYCxcbiAgICAgICAganVzdGlmeUZ1bGw6IGBEb2xkdXJgLFxuICAgICAgICBsaXN0OiBgTGlzdGVgLFxuICAgICAgICBpbmRlbnQ6IGBHaXJpbnRpYCxcbiAgICAgICAgb3V0ZGVudDogYMOHxLFrxLFudMSxYCxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogYE5va3RhbMSxIGxpc3RlYCxcbiAgICAgICAgb3JkZXJlZExpc3Q6IGBOdW1lcmlrIGxpc3RlYCxcbiAgICAgICAgcXVvdGU6IGBBbMSxbnTEsWAsXG4gICAgICAgIGZvcmVDb2xvcjogYFJlbmtgLFxuICAgICAgICBiYWNrQ29sb3I6IGBBcmthIHBsYW4gcmVuZ2lgLFxuICAgICAgICBoaWxpdGVDb2xvcjogYGhpbGl0ZUNvbG9yYCxcbiAgICAgICAgY2xlYXI6IGBGb3JtYXTEsSBUZW1pemxlYCxcbiAgICAgICAgbGluazogYExpbmtgLFxuICAgICAgICBhdHRhY2g6IGBEb3N5YSBFa2xlYCxcbiAgICAgICAgdGV4OiBgVGVYIEVrbGVgLFxuICAgICAgICBjb2RlOiBgS29kYCxcbiAgICAgICAgaW1hZ2U6IGBSZXNpbSBFa2xlYCxcbiAgICAgICAgaW5zZXJ0SG9yaXpvbnRhbFJ1bGU6IGBTYXTEsXIgRWtsZWAsXG4gICAgICAgIHN1cGVyc2NyaXB0OiBgw5xzdCBTaW1nZWAsXG4gICAgICAgIHN1YnNjcmlwdDogYEFsdCBTaW1nZWAsXG4gICAgICAgIGluc2VydFRhYmxlOiBgSW5zZXJ0IHRhYmxlYCxcbiAgICAgICAgaW5zZXJ0R3JvdXA6IGBJbnNlcnQgZ3JvdXBgLFxuICAgICAgICByZW1vdmVHcm91cDogYFJlbW92ZSBncm91cGAsXG4gICAgICAgIGluc2VydEFuY2hvcjogYEluc2VydCBhbmNob3JgLFxuICAgICAgICBtZXJnZUNlbGxzOiBgTWVyZ2UgY2VsbHNgLFxuICAgICAgICBzcGxpdENlbGxzOiBgU3BsaXQgY2VsbHNgLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiBgTWFuYWdpbmcgcm93cyBhbmQgY29sdW1uc2AsXG4gICAgICAgIGNlbGxDb2xvcjogYENlbGwgY29sb3JgLFxuICAgICAgICBzZXREZXRhaWxzOiBgRGV0YWlsc2AsXG4gICAgICAgIHJlbW92ZURldGFpbHM6IGBSZW1vdmUgZGV0YWlsc2AsXG4gICAgfSxcbiAgICBlZGl0b3JFZGl0TGluazoge1xuICAgICAgICB1cmxFeGFtcGxlOiBgZXhhbXBsZS5jb21gLFxuICAgICAgICBhbmNob3JFeGFtcGxlOiBgYW5jaG9yYCxcbiAgICB9LFxuICAgIGVkaXRvclRhYmxlQ29tbWFuZHM6IFtcbiAgICAgICAgW2BJbnNlcnQgY29sdW1uIGJlZm9yZWAsIGBJbnNlcnQgY29sdW1uIGFmdGVyYF0sXG4gICAgICAgIFtgSW5zZXJ0IHJvdyBiZWZvcmVgLCBgSW5zZXJ0IHJvdyBhZnRlcmBdLFxuICAgICAgICBbYERlbGV0ZSBjb2x1bW5gLCBgRGVsZXRlIHJvd2BdLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFtgQ29kZSBpbiB0aGUgdGV4dGAsIGBDb2RlIGluIGJsb2NrYF0sXG4gICAgZWRpdG9yRm9udE9wdGlvbnM6IHtcbiAgICAgICAgc21hbGw6IGBTbWFsbGAsXG4gICAgICAgIG5vcm1hbDogYE5vcm1hbGAsXG4gICAgICAgIGxhcmdlOiBgTGFyZ2VgLFxuICAgICAgICB0aXRsZTogYFRpdGxlYCxcbiAgICAgICAgc3VidGl0bGU6IGBTdWJ0aXRsZWAsXG4gICAgfSxcbn07XG4iXX0=