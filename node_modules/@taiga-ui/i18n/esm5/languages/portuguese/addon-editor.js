export var TUI_PORTUGUESE_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ["Cor s\u00F3lida", "Gradiente"],
    toolbarTools: {
        undo: "Desfazer",
        redo: "Refazer",
        font: "Fonte",
        fontStyle: "Estilo da Fonte",
        fontSize: "Tamanho da Fonte",
        bold: "Negrito",
        italic: "It\u00E1lico",
        underline: "Sublinhado",
        strikeThrough: "Riscado",
        justify: "Justificado",
        justifyLeft: "Justificado \u00E0 esquerda",
        justifyCenter: "Justificado ao centro",
        justifyRight: "Justificado \u00E0 direita",
        justifyFull: "Totalmente justificado",
        list: "Lista",
        indent: "Recuo interno",
        outdent: "Recuo externo",
        unorderedList: "Lista desordenada",
        orderedList: "Lista ordenada",
        quote: "Frase",
        foreColor: "Cor",
        backColor: "Cor de fundo",
        hiliteColor: "Cor destaque",
        clear: "Limpar",
        link: "Link",
        attach: "Anexar arquivo",
        tex: "Inserir TeX",
        code: "C\u00F3digo",
        image: "Inserir imagem",
        insertHorizontalRule: "Inserir regra horizontal",
        superscript: "Superscript",
        subscript: "Subscript",
        insertTable: "Insert table",
        insertGroup: "Insert group",
        removeGroup: "Remove group",
        insertAnchor: "Insert anchor",
        mergeCells: "Merge cells",
        splitCells: "Split cells",
        rowsColumnsManaging: "Managing rows and columns",
        cellColor: "Cell color",
        setDetails: "Details",
        removeDetails: "Remove details",
    },
    editorEditLink: {
        urlExample: "example.com",
        anchorExample: "anchor",
    },
    editorTableCommands: [
        ["Insert column before", "Insert column after"],
        ["Insert row before", "Insert row after"],
        ["Delete column", "Delete row"],
    ],
    editorCodeOptions: ["Code in the text", "Code in block"],
    editorFontOptions: {
        small: "Small",
        normal: "Normal",
        large: "Large",
        title: "Title",
        subtitle: "Subtitle",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2kxOG4vbGFuZ3VhZ2VzL3BvcnR1Z3Vlc2UvIiwic291cmNlcyI6WyJhZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLElBQU0sb0NBQW9DLEdBQW1CO0lBQ2hFLHNCQUFzQixFQUFFLENBQUMsaUJBQVksRUFBRSxXQUFXLENBQUM7SUFDbkQsWUFBWSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFVBQVU7UUFDaEIsSUFBSSxFQUFFLFNBQVM7UUFDZixJQUFJLEVBQUUsT0FBTztRQUNiLFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxjQUFTO1FBQ2pCLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLGFBQWEsRUFBRSxTQUFTO1FBQ3hCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLFdBQVcsRUFBRSw2QkFBd0I7UUFDckMsYUFBYSxFQUFFLHVCQUF1QjtRQUN0QyxZQUFZLEVBQUUsNEJBQXVCO1FBQ3JDLFdBQVcsRUFBRSx3QkFBd0I7UUFDckMsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsZUFBZTtRQUN2QixPQUFPLEVBQUUsZUFBZTtRQUN4QixhQUFhLEVBQUUsbUJBQW1CO1FBQ2xDLFdBQVcsRUFBRSxnQkFBZ0I7UUFDN0IsS0FBSyxFQUFFLE9BQU87UUFDZCxTQUFTLEVBQUUsS0FBSztRQUNoQixTQUFTLEVBQUUsY0FBYztRQUN6QixXQUFXLEVBQUUsY0FBYztRQUMzQixLQUFLLEVBQUUsUUFBUTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLGdCQUFnQjtRQUN4QixHQUFHLEVBQUUsYUFBYTtRQUNsQixJQUFJLEVBQUUsYUFBUTtRQUNkLEtBQUssRUFBRSxnQkFBZ0I7UUFDdkIsb0JBQW9CLEVBQUUsMEJBQTBCO1FBQ2hELFdBQVcsRUFBRSxhQUFhO1FBQzFCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFlBQVksRUFBRSxlQUFlO1FBQzdCLFVBQVUsRUFBRSxhQUFhO1FBQ3pCLFVBQVUsRUFBRSxhQUFhO1FBQ3pCLG1CQUFtQixFQUFFLDJCQUEyQjtRQUNoRCxTQUFTLEVBQUUsWUFBWTtRQUN2QixVQUFVLEVBQUUsU0FBUztRQUNyQixhQUFhLEVBQUUsZ0JBQWdCO0tBQ2xDO0lBQ0QsY0FBYyxFQUFFO1FBQ1osVUFBVSxFQUFFLGFBQWE7UUFDekIsYUFBYSxFQUFFLFFBQVE7S0FDMUI7SUFDRCxtQkFBbUIsRUFBRTtRQUNqQixDQUFDLHNCQUFzQixFQUFFLHFCQUFxQixDQUFDO1FBQy9DLENBQUMsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUM7UUFDekMsQ0FBQyxlQUFlLEVBQUUsWUFBWSxDQUFDO0tBQ2xDO0lBQ0QsaUJBQWlCLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxlQUFlLENBQUM7SUFDeEQsaUJBQWlCLEVBQUU7UUFDZixLQUFLLEVBQUUsT0FBTztRQUNkLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLEtBQUssRUFBRSxPQUFPO1FBQ2QsS0FBSyxFQUFFLE9BQU87UUFDZCxRQUFRLEVBQUUsVUFBVTtLQUN2QjtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xhbmd1YWdlRWRpdG9yfSBmcm9tICdAdGFpZ2EtdWkvaTE4bi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9QT1JUVUdVRVNFX0xBTkdVQUdFX0FERE9OX0VESVRPUjogTGFuZ3VhZ2VFZGl0b3IgPSB7XG4gICAgY29sb3JTZWxlY3Rvck1vZGVOYW1lczogW2BDb3Igc8OzbGlkYWAsIGBHcmFkaWVudGVgXSxcbiAgICB0b29sYmFyVG9vbHM6IHtcbiAgICAgICAgdW5kbzogYERlc2ZhemVyYCxcbiAgICAgICAgcmVkbzogYFJlZmF6ZXJgLFxuICAgICAgICBmb250OiBgRm9udGVgLFxuICAgICAgICBmb250U3R5bGU6IGBFc3RpbG8gZGEgRm9udGVgLFxuICAgICAgICBmb250U2l6ZTogYFRhbWFuaG8gZGEgRm9udGVgLFxuICAgICAgICBib2xkOiBgTmVncml0b2AsXG4gICAgICAgIGl0YWxpYzogYEl0w6FsaWNvYCxcbiAgICAgICAgdW5kZXJsaW5lOiBgU3VibGluaGFkb2AsXG4gICAgICAgIHN0cmlrZVRocm91Z2g6IGBSaXNjYWRvYCxcbiAgICAgICAganVzdGlmeTogYEp1c3RpZmljYWRvYCxcbiAgICAgICAganVzdGlmeUxlZnQ6IGBKdXN0aWZpY2FkbyDDoCBlc3F1ZXJkYWAsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6IGBKdXN0aWZpY2FkbyBhbyBjZW50cm9gLFxuICAgICAgICBqdXN0aWZ5UmlnaHQ6IGBKdXN0aWZpY2FkbyDDoCBkaXJlaXRhYCxcbiAgICAgICAganVzdGlmeUZ1bGw6IGBUb3RhbG1lbnRlIGp1c3RpZmljYWRvYCxcbiAgICAgICAgbGlzdDogYExpc3RhYCxcbiAgICAgICAgaW5kZW50OiBgUmVjdW8gaW50ZXJub2AsXG4gICAgICAgIG91dGRlbnQ6IGBSZWN1byBleHRlcm5vYCxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogYExpc3RhIGRlc29yZGVuYWRhYCxcbiAgICAgICAgb3JkZXJlZExpc3Q6IGBMaXN0YSBvcmRlbmFkYWAsXG4gICAgICAgIHF1b3RlOiBgRnJhc2VgLFxuICAgICAgICBmb3JlQ29sb3I6IGBDb3JgLFxuICAgICAgICBiYWNrQ29sb3I6IGBDb3IgZGUgZnVuZG9gLFxuICAgICAgICBoaWxpdGVDb2xvcjogYENvciBkZXN0YXF1ZWAsXG4gICAgICAgIGNsZWFyOiBgTGltcGFyYCxcbiAgICAgICAgbGluazogYExpbmtgLFxuICAgICAgICBhdHRhY2g6IGBBbmV4YXIgYXJxdWl2b2AsXG4gICAgICAgIHRleDogYEluc2VyaXIgVGVYYCxcbiAgICAgICAgY29kZTogYEPDs2RpZ29gLFxuICAgICAgICBpbWFnZTogYEluc2VyaXIgaW1hZ2VtYCxcbiAgICAgICAgaW5zZXJ0SG9yaXpvbnRhbFJ1bGU6IGBJbnNlcmlyIHJlZ3JhIGhvcml6b250YWxgLFxuICAgICAgICBzdXBlcnNjcmlwdDogYFN1cGVyc2NyaXB0YCxcbiAgICAgICAgc3Vic2NyaXB0OiBgU3Vic2NyaXB0YCxcbiAgICAgICAgaW5zZXJ0VGFibGU6IGBJbnNlcnQgdGFibGVgLFxuICAgICAgICBpbnNlcnRHcm91cDogYEluc2VydCBncm91cGAsXG4gICAgICAgIHJlbW92ZUdyb3VwOiBgUmVtb3ZlIGdyb3VwYCxcbiAgICAgICAgaW5zZXJ0QW5jaG9yOiBgSW5zZXJ0IGFuY2hvcmAsXG4gICAgICAgIG1lcmdlQ2VsbHM6IGBNZXJnZSBjZWxsc2AsXG4gICAgICAgIHNwbGl0Q2VsbHM6IGBTcGxpdCBjZWxsc2AsXG4gICAgICAgIHJvd3NDb2x1bW5zTWFuYWdpbmc6IGBNYW5hZ2luZyByb3dzIGFuZCBjb2x1bW5zYCxcbiAgICAgICAgY2VsbENvbG9yOiBgQ2VsbCBjb2xvcmAsXG4gICAgICAgIHNldERldGFpbHM6IGBEZXRhaWxzYCxcbiAgICAgICAgcmVtb3ZlRGV0YWlsczogYFJlbW92ZSBkZXRhaWxzYCxcbiAgICB9LFxuICAgIGVkaXRvckVkaXRMaW5rOiB7XG4gICAgICAgIHVybEV4YW1wbGU6IGBleGFtcGxlLmNvbWAsXG4gICAgICAgIGFuY2hvckV4YW1wbGU6IGBhbmNob3JgLFxuICAgIH0sXG4gICAgZWRpdG9yVGFibGVDb21tYW5kczogW1xuICAgICAgICBbYEluc2VydCBjb2x1bW4gYmVmb3JlYCwgYEluc2VydCBjb2x1bW4gYWZ0ZXJgXSxcbiAgICAgICAgW2BJbnNlcnQgcm93IGJlZm9yZWAsIGBJbnNlcnQgcm93IGFmdGVyYF0sXG4gICAgICAgIFtgRGVsZXRlIGNvbHVtbmAsIGBEZWxldGUgcm93YF0sXG4gICAgXSxcbiAgICBlZGl0b3JDb2RlT3B0aW9uczogW2BDb2RlIGluIHRoZSB0ZXh0YCwgYENvZGUgaW4gYmxvY2tgXSxcbiAgICBlZGl0b3JGb250T3B0aW9uczoge1xuICAgICAgICBzbWFsbDogYFNtYWxsYCxcbiAgICAgICAgbm9ybWFsOiBgTm9ybWFsYCxcbiAgICAgICAgbGFyZ2U6IGBMYXJnZWAsXG4gICAgICAgIHRpdGxlOiBgVGl0bGVgLFxuICAgICAgICBzdWJ0aXRsZTogYFN1YnRpdGxlYCxcbiAgICB9LFxufTtcbiJdfQ==