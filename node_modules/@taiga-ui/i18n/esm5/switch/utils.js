import { __awaiter, __generator } from "tslib";
import { from, of } from 'rxjs';
import { map } from 'rxjs/operators';
export function tuiAsyncLoadLanguage(language, loader, fallback) {
    return language && loader ? tuiLoadLanguage(language, loader) : of(fallback);
}
export function tuiLoadLanguage(language, loader) {
    return from(normalizeCommonJSImport(loader(language))).pipe(map(function (module) { return module === null || module === void 0 ? void 0 : module["TUI_" + language.toUpperCase() + "_LANGUAGE"]; }));
}
// CommonJS `module.exports` is wrapped as `default` in ESModule.
function normalizeCommonJSImport(importPromise) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, importPromise.then(function (m) { return m.default || m; })];
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvaTE4bi9zd2l0Y2gvIiwic291cmNlcyI6WyJ1dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBS0EsT0FBTyxFQUFDLElBQUksRUFBYyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDMUMsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE1BQU0sVUFBVSxvQkFBb0IsQ0FDaEMsUUFBZ0MsRUFDaEMsTUFBZ0MsRUFDaEMsUUFBcUI7SUFFckIsT0FBTyxRQUFRLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakYsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQzNCLFFBQXlCLEVBQ3pCLE1BQXlCO0lBRXpCLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUN2RCxHQUFHLENBQUMsVUFBQyxNQUFXLFdBQUssTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFHLFNBQU8sUUFBUSxDQUFDLFdBQVcsRUFBRSxjQUFXLElBQUMsQ0FBQyxDQUMzRSxDQUFDO0FBQ04sQ0FBQztBQUVELGlFQUFpRTtBQUNqRSxTQUFlLHVCQUF1QixDQUFJLGFBQXlCOzs7WUFDL0Qsc0JBQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxVQUFDLENBQU0sSUFBSyxPQUFBLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUFkLENBQWMsQ0FBQyxFQUFDOzs7Q0FDekQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7XG4gICAgVHVpTGFuZ3VhZ2UsXG4gICAgVHVpTGFuZ3VhZ2VMb2FkZXIsXG4gICAgVHVpTGFuZ3VhZ2VOYW1lLFxufSBmcm9tICdAdGFpZ2EtdWkvaTE4bi9pbnRlcmZhY2VzJztcbmltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZSwgb2Z9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aUFzeW5jTG9hZExhbmd1YWdlKFxuICAgIGxhbmd1YWdlOiBUdWlMYW5ndWFnZU5hbWUgfCBudWxsLFxuICAgIGxvYWRlcjogVHVpTGFuZ3VhZ2VMb2FkZXIgfCBudWxsLFxuICAgIGZhbGxiYWNrOiBUdWlMYW5ndWFnZSxcbik6IE9ic2VydmFibGU8VHVpTGFuZ3VhZ2U+IHtcbiAgICByZXR1cm4gbGFuZ3VhZ2UgJiYgbG9hZGVyID8gdHVpTG9hZExhbmd1YWdlKGxhbmd1YWdlLCBsb2FkZXIpIDogb2YoZmFsbGJhY2spO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHVpTG9hZExhbmd1YWdlKFxuICAgIGxhbmd1YWdlOiBUdWlMYW5ndWFnZU5hbWUsXG4gICAgbG9hZGVyOiBUdWlMYW5ndWFnZUxvYWRlcixcbik6IE9ic2VydmFibGU8VHVpTGFuZ3VhZ2U+IHtcbiAgICByZXR1cm4gZnJvbShub3JtYWxpemVDb21tb25KU0ltcG9ydChsb2FkZXIobGFuZ3VhZ2UpKSkucGlwZShcbiAgICAgICAgbWFwKChtb2R1bGU6IGFueSkgPT4gbW9kdWxlPy5bYFRVSV8ke2xhbmd1YWdlLnRvVXBwZXJDYXNlKCl9X0xBTkdVQUdFYF0pLFxuICAgICk7XG59XG5cbi8vIENvbW1vbkpTIGBtb2R1bGUuZXhwb3J0c2AgaXMgd3JhcHBlZCBhcyBgZGVmYXVsdGAgaW4gRVNNb2R1bGUuXG5hc3luYyBmdW5jdGlvbiBub3JtYWxpemVDb21tb25KU0ltcG9ydDxUPihpbXBvcnRQcm9taXNlOiBQcm9taXNlPFQ+KTogUHJvbWlzZTxUPiB7XG4gICAgcmV0dXJuIGltcG9ydFByb21pc2UudGhlbigobTogYW55KSA9PiBtLmRlZmF1bHQgfHwgbSk7XG59XG4iXX0=