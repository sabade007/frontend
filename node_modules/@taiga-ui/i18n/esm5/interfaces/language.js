//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"language.js","sourceRoot":"ng://@taiga-ui/i18n/interfaces/","sources":["language.ts"],"names":[],"mappings":"","sourcesContent":["import {TuiCountryIsoCode} from '@taiga-ui/i18n/enums';\n\nimport {TuiLanguageName} from './language-names';\n\n// prettier-ignore\ntype MONTHS_ARRAY = [string, string, string, string, string, string, string, string, string, string, string, string];\n\n/**\n * @deprecated use {@link TuiLanguageCore}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface LanguageCore {\n    months: MONTHS_ARRAY;\n    close: string;\n    nothingFoundMessage: string;\n    defaultErrorMessage: string;\n    /**\n     * [@string word 'previous', @string word 'next']\n     */\n    spinTexts: [string, string];\n    /**\n     * Tuple with short days of week\n     * starts with Mon (Monday)\n     */\n    shortWeekDays: [string, string, string, string, string, string, string];\n    countries: Record<TuiCountryIsoCode, string>;\n}\n\nexport type TuiLanguageCore = LanguageCore;\n\n/**\n * @deprecated use {@link TuiLanguageKit}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface LanguageKit {\n    cancel: string;\n    done: string;\n    more: string;\n    showAll: string;\n    hide: string;\n    otherDate: string;\n    /**\n     * [@string 'choose day', @param 'choose range']\n     */\n    mobileCalendarTexts: [string, string];\n    /**\n     * [@string 'from', @param 'to']\n     */\n    range: [string, string];\n    /**\n     * [@string 'plus', @param 'minus']\n     */\n    countTexts: [string, string];\n    time: {\n        'HH:MM': string;\n        'HH:MM:SS': string;\n        'HH:MM:SS.MSS': string;\n    };\n    dateTexts: {\n        DMY: string;\n        MDY: string;\n        YMD: string;\n    };\n    /**\n     * short bytes, kilobytes and megabytes\n     * [@string 'B', @param 'KB', @param 'MB']\n     */\n    digitalInformationUnits: [string, string, string];\n    /**\n     * [@string 'Show password', @param 'Hide password']\n     */\n    passwordTexts: [string, string];\n    /**\n     * [@string 'Copy', @param 'Copied']\n     */\n    copyTexts: [string, string];\n    shortCalendarMonths: MONTHS_ARRAY;\n    /**\n     * [@string 'Previous page', @param 'Next page']\n     */\n    pagination: [string, string];\n    fileTexts: {\n        loadingError: string;\n        preview: string;\n        remove: string;\n    };\n    inputFileTexts: {\n        defaultLabelSingle: string;\n        defaultLabelMultiple: string;\n        defaultLinkSingle: string;\n        defaultLinkMultiple: string;\n        maxSizeRejectionReason: string;\n        formatRejectionReason: string;\n        drop: string;\n        dropMultiple: string;\n    };\n}\n\nexport type TuiLanguageKit = LanguageKit;\n\n/**\n * @deprecated use {@link TuiLanguageCommerce}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface LanguageCommerce {\n    /**\n     * Short and full card number text\n     * [@string 'Number', @string 'Card number']\n     */\n    cardNumber: [string, string];\n    /**\n     * Short and full expiry text\n     * [@string 'Expiry', @string 'Expiry date']\n     */\n    cardExpiry: [string, string];\n}\n\nexport type TuiLanguageCommerce = LanguageCommerce;\n\n/**\n * @deprecated use {@link TuiLanguageTable}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface LanguageTable {\n    /**\n     * 'Show/hide' button title\n     */\n    showHideText: string;\n    paginationTexts: {\n        pages: string;\n        linesPerPage: string;\n        of: string;\n    };\n}\n\nexport type TuiLanguageTable = LanguageTable;\n\n/**\n * @deprecated use {@link TuiLanguageEditor}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface LanguageEditor {\n    colorSelectorModeNames: [string, string];\n    toolbarTools: {\n        undo: string;\n        redo: string;\n        font: string;\n        fontStyle: string;\n        fontSize: string;\n        bold: string;\n        italic: string;\n        underline: string;\n        strikeThrough: string;\n        justify: string;\n        justifyLeft: string;\n        justifyCenter: string;\n        justifyRight: string;\n        justifyFull: string;\n        list: string;\n        indent: string;\n        outdent: string;\n        unorderedList: string;\n        orderedList: string;\n        quote: string;\n        foreColor: string;\n        hiliteColor: string;\n        backColor: string;\n        clear: string;\n        link: string;\n        attach: string;\n        tex: string;\n        code: string;\n        image: string;\n        insertHorizontalRule: string;\n        superscript: string;\n        subscript: string;\n        insertTable: string;\n        insertGroup: string;\n        insertAnchor: string;\n        removeGroup: string;\n        mergeCells: string;\n        splitCells: string;\n        rowsColumnsManaging: string;\n        cellColor: string;\n        setDetails: string;\n        removeDetails: string;\n    };\n    editorEditLink: {\n        urlExample: string;\n        anchorExample: string;\n    };\n    editorTableCommands: [[string, string], [string, string], [string, string]];\n    editorCodeOptions: [string, string];\n    editorFontOptions: {\n        small: string;\n        normal: string;\n        large: string;\n        title: string;\n        subtitle: string;\n    };\n}\n\nexport type TuiLanguageEditor = LanguageEditor;\n\n/**\n * @deprecated use {@link TuiLanguagePreview}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type LanguagePreview = {\n    previewTexts: {\n        rotate: string;\n    };\n    zoomTexts: {\n        zoomOut: string;\n        zoomIn: string;\n        reset: string;\n    };\n};\n\nexport type TuiLanguagePreview = LanguagePreview;\n\nexport interface TuiLanguageMeta {\n    name: TuiLanguageName;\n}\n\n/**\n * @deprecated use {@link TuiLanguage}\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface Language\n    extends LanguageCore,\n        LanguageKit,\n        LanguageCommerce,\n        LanguageTable,\n        LanguageEditor,\n        LanguagePreview,\n        TuiLanguageMeta {}\n\nexport type TuiLanguage = Language;\n"]}