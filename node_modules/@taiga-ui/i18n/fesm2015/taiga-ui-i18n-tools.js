import { InjectionToken, inject } from '@angular/core';
import { of, isObservable } from 'rxjs';
import { switchMap, map } from 'rxjs/operators';
import { TUI_ENGLISH_LANGUAGE } from '@taiga-ui/i18n/languages';

// TODO: move to @taiga-ui/i18n/tokens in v3.0
const TUI_DEFAULT_LANGUAGE = new InjectionToken(`Default Language for Taiga UI libraries i18n`, {
    factory: () => TUI_ENGLISH_LANGUAGE,
});
// TODO: move to @taiga-ui/i18n/tokens in v3.0
const TUI_LANGUAGE = new InjectionToken(`Language for Taiga UI libraries i18n`, {
    factory: () => of(inject(TUI_DEFAULT_LANGUAGE)),
});

/**
 * @deprecated: use {@link tuiExtractI18n} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function extractI18n(key) {
    return () => inject(TUI_LANGUAGE).pipe(switchMap((streamOrValue) => isObservable(streamOrValue) ? streamOrValue : of(streamOrValue)), map((lang) => lang[key]));
}
const tuiExtractI18n = extractI18n;

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_DEFAULT_LANGUAGE, TUI_LANGUAGE, extractI18n, tuiExtractI18n };
//# sourceMappingURL=taiga-ui-i18n-tools.js.map
