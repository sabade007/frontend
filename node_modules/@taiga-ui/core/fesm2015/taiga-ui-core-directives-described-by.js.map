{"version":3,"file":"taiga-ui-core-directives-described-by.js","sources":["ng://@taiga-ui/core/directives/described-by/described-by.providers.ts","ng://@taiga-ui/core/directives/described-by/described-by.directive.ts","ng://@taiga-ui/core/directives/described-by/described-by.module.ts","ng://@taiga-ui/core/directives/described-by/taiga-ui-core-directives-described-by.ts"],"sourcesContent":["import {ElementRef, InjectionToken, Provider} from '@angular/core';\nimport {\n    stopPropagation,\n    TuiDestroyService,\n    TuiFocusVisibleService,\n    typedFromEvent,\n} from '@taiga-ui/cdk';\nimport {merge, Observable, timer} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    mapTo,\n    startWith,\n    switchMapTo,\n    take,\n    takeUntil,\n} from 'rxjs/operators';\n\nconst DELAY = 1000;\n\nexport const TUI_DESCRIBED_BY_SHOW = new InjectionToken<Observable<boolean>>(\n    `Accessible tooltip visibility stream`,\n);\nexport const TUI_DESCRIBED_BY_PROVIDERS: Provider[] = [\n    TuiDestroyService,\n    TuiFocusVisibleService,\n    {\n        provide: TUI_DESCRIBED_BY_SHOW,\n        deps: [TuiFocusVisibleService, ElementRef],\n        useFactory: describedByFactory,\n    },\n];\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function describedByFactory(\n    focusVisible$: Observable<boolean>,\n    {nativeElement}: ElementRef<HTMLElement>,\n): Observable<boolean> {\n    return focusVisible$\n        .pipe(\n            filter(Boolean),\n            switchMapTo(\n                timer(DELAY).pipe(\n                    mapTo(true),\n                    takeUntil(\n                        merge(\n                            typedFromEvent(nativeElement, `keydown`),\n                            typedFromEvent(nativeElement, `blur`),\n                        ),\n                    ),\n                ),\n            ),\n            switchMapTo(\n                merge(\n                    typedFromEvent(nativeElement, `keydown`).pipe(\n                        filter(({key}) => key === `Escape`),\n                        take(1),\n                        stopPropagation(),\n                        mapTo(false),\n                        startWith(true),\n                    ),\n                    typedFromEvent(nativeElement, `blur`).pipe(mapTo(false)),\n                ),\n            ),\n        )\n        .pipe(distinctUntilChanged());\n}\n","import {Directive, HostBinding, Inject, Input} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiHintService} from '@taiga-ui/core/services';\nimport {Observable} from 'rxjs';\n\nimport {\n    TUI_DESCRIBED_BY_PROVIDERS,\n    TUI_DESCRIBED_BY_SHOW,\n} from './described-by.providers';\n\nexport const DESCRIBED_BY = '_described-by';\n\n/**\n * A directive linking focusable elements and hints for accessibility\n */\n@Directive({\n    selector: '[tuiDescribedBy]:not(ng-container)',\n    providers: TUI_DESCRIBED_BY_PROVIDERS,\n})\nexport class TuiDescribedByDirective {\n    @Input()\n    @tuiDefaultProp()\n    tuiDescribedBy = '';\n\n    constructor(\n        @Inject(TuiHintService) hintService: TuiHintService,\n        @Inject(TUI_DESCRIBED_BY_SHOW) visibility$: Observable<boolean>,\n    ) {\n        visibility$.subscribe(visible => {\n            if (!this.tuiDescribedBy) {\n                return;\n            }\n\n            if (visible) {\n                hintService.showHintForId(this.tuiDescribedBy);\n            } else {\n                hintService.hideHintForId(this.tuiDescribedBy);\n            }\n        });\n    }\n\n    @HostBinding('attr.aria-describedby')\n    get computedDescribedBy(): string | null {\n        return this.tuiDescribedBy ? this.tuiDescribedBy + DESCRIBED_BY : null;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiDescribedByDirective} from './described-by.directive';\n\n@NgModule({\n    declarations: [TuiDescribedByDirective],\n    exports: [TuiDescribedByDirective],\n})\nexport class TuiDescribedByModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAkBA,MAAM,KAAK,GAAG,IAAI,CAAC;MAEN,qBAAqB,GAAG,IAAI,cAAc,CACnD,sCAAsC,EACxC;MACW,0BAA0B,GAAe;IAClD,iBAAiB;IACjB,sBAAsB;IACtB;QACI,OAAO,EAAE,qBAAqB;QAC9B,IAAI,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC;QAC1C,UAAU,EAAE,kBAAkB;KACjC;EACH;AAEF;SACgB,kBAAkB,CAC9B,aAAkC,EAClC,EAAC,aAAa,EAA0B;IAExC,OAAO,aAAa;SACf,IAAI,CACD,MAAM,CAAC,OAAO,CAAC,EACf,WAAW,CACP,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CACb,KAAK,CAAC,IAAI,CAAC,EACX,SAAS,CACL,KAAK,CACD,cAAc,CAAC,aAAa,EAAE,SAAS,CAAC,EACxC,cAAc,CAAC,aAAa,EAAE,MAAM,CAAC,CACxC,CACJ,CACJ,CACJ,EACD,WAAW,CACP,KAAK,CACD,cAAc,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,IAAI,CACzC,MAAM,CAAC,CAAC,EAAC,GAAG,EAAC,KAAK,GAAG,KAAK,QAAQ,CAAC,EACnC,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,EAAE,EACjB,KAAK,CAAC,KAAK,CAAC,EACZ,SAAS,CAAC,IAAI,CAAC,CAClB,EACD,cAAc,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAC3D,CACJ,CACJ;SACA,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACtC;;MCxDa,YAAY,GAAG,gBAAgB;AAE5C;;;IAOa,uBAAuB,GAApC,MAAa,uBAAuB;IAKhC,YAC4B,WAA2B,EACpB,WAAgC;QAJnE,mBAAc,GAAG,EAAE,CAAC;QAMhB,WAAW,CAAC,SAAS,CAAC,OAAO;YACzB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACtB,OAAO;aACV;YAED,IAAI,OAAO,EAAE;gBACT,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAClD;iBAAM;gBACH,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAClD;SACJ,CAAC,CAAC;KACN;IAGD,IAAI,mBAAmB;QACnB,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,YAAY,GAAG,IAAI,CAAC;KAC1E;EACJ;;YApB4C,cAAc,uBAAlD,MAAM,SAAC,cAAc;YACsB,UAAU,uBAArD,MAAM,SAAC,qBAAqB;;AAJjC;IAFC,KAAK,EAAE;IACP,cAAc,EAAE;+DACG;AAoBpB;IADC,WAAW,CAAC,uBAAuB,CAAC;kEAGpC;AAzBQ,uBAAuB;IAJnC,SAAS,CAAC;QACP,QAAQ,EAAE,oCAAoC;QAC9C,SAAS,EAAE,0BAA0B;KACxC,CAAC;IAOO,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;IACtB,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;GAPzB,uBAAuB,CA0BnC;;ICrCY,oBAAoB,GAAjC,MAAa,oBAAoB;EAAG;AAAvB,oBAAoB;IAJhC,QAAQ,CAAC;QACN,YAAY,EAAE,CAAC,uBAAuB,CAAC;QACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;KACrC,CAAC;GACW,oBAAoB,CAAG;;ACRpC;;;;;;"}