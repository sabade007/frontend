import { __decorate } from 'tslib';
import { Directive, Optional, NgModule } from '@angular/core';
import { NG_VALUE_ACCESSOR, DefaultValueAccessor } from '@angular/forms';
import { TUI_VALUE_ACCESSOR } from '@taiga-ui/core/tokens';

// eslint-disable-next-line @typescript-eslint/naming-convention
function fallbackAccessorFactory(accessor, fallback) {
    return accessor ? accessor[0] : fallback;
}
let TuiMaskAccessorDirective = class TuiMaskAccessorDirective {
};
TuiMaskAccessorDirective = __decorate([
    Directive({
        selector: 'input[tuiMaskAccessor]',
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                deps: [[new Optional(), TUI_VALUE_ACCESSOR], DefaultValueAccessor],
                useFactory: fallbackAccessorFactory,
                multi: true,
            },
        ],
    })
], TuiMaskAccessorDirective);

/**
 * @internal
 */
let TuiMaskAccessorModule = class TuiMaskAccessorModule {
};
TuiMaskAccessorModule = __decorate([
    NgModule({
        declarations: [TuiMaskAccessorDirective],
        exports: [TuiMaskAccessorDirective],
    })
], TuiMaskAccessorModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiMaskAccessorDirective, TuiMaskAccessorModule, fallbackAccessorFactory };
//# sourceMappingURL=taiga-ui-core-directives-mask-accessor.js.map
