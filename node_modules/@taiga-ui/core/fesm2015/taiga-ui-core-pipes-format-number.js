import { __decorate, __param } from 'tslib';
import { Inject, Pipe, NgModule } from '@angular/core';
import { TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';
import { formatNumber } from '@taiga-ui/core/utils/format';

let TuiFormatNumberPipe = class TuiFormatNumberPipe {
    constructor(numberFormat) {
        this.numberFormat = numberFormat;
    }
    /**
     * Formats number adding thousand separators and correct decimal separator
     * padding decimal part with zeroes to given length
     * @param value number
     * @param decimalSeparator
     * @param thousandSeparator
     * @param decimalLimit number of digits of decimal part, null to keep untouched
     * @param zeroPadding enable zeros at the end of decimal part
     */
    transform(value, decimalLimit = null, decimalSeparator = this.numberFormat.decimalSeparator, thousandSeparator = this.numberFormat.thousandSeparator, zeroPadding = this.numberFormat.zeroPadding) {
        return formatNumber(value, decimalLimit, decimalSeparator, thousandSeparator, zeroPadding);
    }
};
TuiFormatNumberPipe.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_NUMBER_FORMAT,] }] }
];
TuiFormatNumberPipe = __decorate([
    Pipe({ name: `tuiFormatNumber` }),
    __param(0, Inject(TUI_NUMBER_FORMAT))
], TuiFormatNumberPipe);

let TuiFormatNumberPipeModule = class TuiFormatNumberPipeModule {
};
TuiFormatNumberPipeModule = __decorate([
    NgModule({
        exports: [TuiFormatNumberPipe],
        declarations: [TuiFormatNumberPipe],
    })
], TuiFormatNumberPipeModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFormatNumberPipe, TuiFormatNumberPipeModule };
//# sourceMappingURL=taiga-ui-core-pipes-format-number.js.map
