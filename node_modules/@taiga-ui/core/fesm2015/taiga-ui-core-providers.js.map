{"version":3,"file":"taiga-ui-core-providers.js","sources":["ng://@taiga-ui/core/providers/is-mobile-resolution.provider.ts","ng://@taiga-ui/core/providers/mode.provider.ts","ng://@taiga-ui/core/providers/watched-controller-provider-factory.ts","ng://@taiga-ui/core/providers/taiga-ui-core-providers.ts"],"sourcesContent":["import {ElementRef, Provider, SkipSelf} from '@angular/core';\nimport {TUI_IS_MOBILE_RES} from '@taiga-ui/core/tokens';\nimport {Observable} from 'rxjs';\n\n/**\n * @deprecated: use {@link tuiIsMobileResFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isMobileResFactory(\n    mobile$: Observable<boolean>,\n    {nativeElement}: ElementRef,\n): Observable<boolean> {\n    nativeElement[`$.class._mobile`] = mobile$;\n\n    return mobile$;\n}\n\nexport const TUI_IS_MOBILE_RES_PROVIDER: Provider = {\n    provide: TUI_IS_MOBILE_RES,\n    deps: [[new SkipSelf(), TUI_IS_MOBILE_RES], ElementRef],\n    useFactory: isMobileResFactory,\n};\n\nexport const tuiIsMobileResFactory = isMobileResFactory;\n","import {ElementRef, Optional, Provider} from '@angular/core';\nimport {TuiModeDirective} from '@taiga-ui/core/directives/mode';\nimport {TUI_MODE} from '@taiga-ui/core/tokens';\nimport {TuiBrightness} from '@taiga-ui/core/types';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiModeFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function modeFactory(\n    mode: TuiModeDirective | null,\n    {nativeElement}: ElementRef,\n): Observable<TuiBrightness | null> {\n    const mode$ = mode\n        ? mode.change$.pipe(\n              startWith(null),\n              map(() => mode.mode),\n          )\n        : of(null);\n\n    nativeElement[`$.data-mode.attr`] = mode$;\n\n    return mode$;\n}\n\nexport const MODE_PROVIDER: Provider = {\n    provide: TUI_MODE,\n    deps: [[new Optional(), TuiModeDirective], ElementRef],\n    useFactory: modeFactory,\n};\n\nexport const tuiModeFactory = modeFactory;\n","import {ChangeDetectorRef} from '@angular/core';\nimport {TuiController, watch} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiWatchedControllerFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function watchedControllerFactory(\n    controller: TuiController,\n    changeDetectorRef: ChangeDetectorRef,\n    destroy$: Observable<void>,\n): TuiController {\n    controller.change$.pipe(watch(changeDetectorRef), takeUntil(destroy$)).subscribe();\n\n    return controller;\n}\n\nexport const tuiWatchedControllerFactory = watchedControllerFactory;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAIA;;;AAGA;SACgB,kBAAkB,CAC9B,OAA4B,EAC5B,EAAC,aAAa,EAAa;IAE3B,aAAa,CAAC,iBAAiB,CAAC,GAAG,OAAO,CAAC;IAE3C,OAAO,OAAO,CAAC;AACnB,CAAC;MAEY,0BAA0B,GAAa;IAChD,OAAO,EAAE,iBAAiB;IAC1B,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,iBAAiB,CAAC,EAAE,UAAU,CAAC;IACvD,UAAU,EAAE,kBAAkB;EAChC;MAEW,qBAAqB,GAAG;;AChBrC;;;AAGA;SACgB,WAAW,CACvB,IAA6B,EAC7B,EAAC,aAAa,EAAa;IAE3B,MAAM,KAAK,GAAG,IAAI;UACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CACb,SAAS,CAAC,IAAI,CAAC,EACf,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CACvB;UACD,EAAE,CAAC,IAAI,CAAC,CAAC;IAEf,aAAa,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;IAE1C,OAAO,KAAK,CAAC;AACjB,CAAC;MAEY,aAAa,GAAa;IACnC,OAAO,EAAE,QAAQ;IACjB,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,gBAAgB,CAAC,EAAE,UAAU,CAAC;IACtD,UAAU,EAAE,WAAW;EACzB;MAEW,cAAc,GAAG;;AC5B9B;;;AAGA;SACgB,wBAAwB,CACpC,UAAyB,EACzB,iBAAoC,EACpC,QAA0B;IAE1B,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAEnF,OAAO,UAAU,CAAC;AACtB,CAAC;MAEY,2BAA2B,GAAG;;ACnB3C;;;;;;"}