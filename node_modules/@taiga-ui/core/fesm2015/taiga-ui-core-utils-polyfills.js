import { TuiXmlParsingException } from '@taiga-ui/cdk';

/**
 * @deprecated
 * TODO: remove in v3.0
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
function innerHTML(documentRef) {
    const svg = documentRef.createElementNS(`http://www.w3.org/2000/svg`, `svg`);
    if (svg.innerHTML !== undefined) {
        return;
    }
    const serializer = new XMLSerializer();
    const parser = new DOMParser();
    Object.defineProperty(SVGElement.prototype, `innerHTML`, {
        get() {
            const result = [];
            let childNode = this.firstChild;
            while (childNode) {
                result.push(serializer.serializeToString(childNode));
                childNode = childNode.nextSibling;
            }
            return result.join(``);
        },
        set(text) {
            while (this.firstChild) {
                this.removeChild(this.firstChild);
            }
            try {
                const svgDocElement = parser.parseFromString(text, `image/svg+xml`).documentElement;
                if (this.ownerDocument) {
                    this.appendChild(this.ownerDocument.importNode(svgDocElement, true));
                }
            }
            catch (e) {
                throw new TuiXmlParsingException();
            }
        },
    });
}

/**
 * Generated bundle index. Do not edit.
 */

export { innerHTML };
//# sourceMappingURL=taiga-ui-core-utils-polyfills.js.map
