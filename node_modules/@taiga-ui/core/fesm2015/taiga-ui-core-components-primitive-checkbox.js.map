{"version":3,"file":"taiga-ui-core-components-primitive-checkbox.js","sources":["ng://@taiga-ui/core/components/primitive-checkbox/checkbox-options.ts","ng://@taiga-ui/core/components/primitive-checkbox/primitive-checkbox.component.ts","ng://@taiga-ui/core/components/primitive-checkbox/primitive-checkbox.module.ts","ng://@taiga-ui/core/components/primitive-checkbox/taiga-ui-core-components-primitive-checkbox.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiAppearance} from '@taiga-ui/core/enums';\nimport {TuiSizeL} from '@taiga-ui/core/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiCheckboxOptions {\n    readonly size: TuiSizeL;\n    readonly appearances: Readonly<{\n        unchecked: string;\n        checked: string;\n        indeterminate: string;\n    }>;\n    readonly icons: Readonly<{\n        checked: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL>>;\n        indeterminate: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL>>;\n    }>;\n}\n\n/**\n * @deprecated: use TuiCheckboxOptions instead\n * todo: remove in 3.0\n */\nexport type CheckboxOptions = TuiCheckboxOptions;\n\n/** Default values for the checkbox options. */\nexport const TUI_CHECKBOX_DEFAULT_OPTIONS: TuiCheckboxOptions = {\n    size: `m`,\n    appearances: {\n        unchecked: TuiAppearance.Outline,\n        checked: TuiAppearance.Primary,\n        indeterminate: TuiAppearance.Primary,\n    },\n    icons: {\n        checked({$implicit}: TuiContextWithImplicit<TuiSizeL>): string {\n            return $implicit === `m` ? `tuiIconCheck` : `tuiIconCheckLarge`;\n        },\n        indeterminate({$implicit}: TuiContextWithImplicit<TuiSizeL>): string {\n            return $implicit === `m` ? `tuiIconMinus` : `tuiIconMinusLarge`;\n        },\n    },\n};\n\nexport const TUI_CHECKBOX_OPTIONS = new InjectionToken<TuiCheckboxOptions>(\n    `Default parameters for checkbox component`,\n    {\n        factory: () => TUI_CHECKBOX_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiCheckboxOptionsProvider: (\n    options: Partial<TuiCheckboxOptions>,\n) => ValueProvider = (options: Partial<TuiCheckboxOptions>) => ({\n    provide: TUI_CHECKBOX_OPTIONS,\n    useValue: {...TUI_CHECKBOX_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {TuiContextWithImplicit, tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiSizeL} from '@taiga-ui/core/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_CHECKBOX_OPTIONS, TuiCheckboxOptions} from './checkbox-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-primitive-checkbox',\n    templateUrl: './primitive-checkbox.template.html',\n    styleUrls: ['./primitive-checkbox.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiPrimitiveCheckboxComponent {\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeL = this.options.size;\n\n    @Input()\n    @tuiDefaultProp()\n    disabled = false;\n\n    @Input()\n    @tuiDefaultProp()\n    focused = false;\n\n    @Input()\n    @tuiDefaultProp()\n    hovered = false;\n\n    @Input()\n    @tuiDefaultProp()\n    pressed = false;\n\n    @Input()\n    @tuiDefaultProp()\n    invalid = false;\n\n    @Input('value')\n    @tuiDefaultProp()\n    set valueSetter(value: boolean | null) {\n        if (value !== false) {\n            this.setCurrentIcon(value);\n        }\n\n        this.value = value;\n    }\n\n    icon: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL>> =\n        this.options.icons.checked;\n\n    value: boolean | null = false;\n\n    constructor(\n        @Inject(TUI_CHECKBOX_OPTIONS) private readonly options: TuiCheckboxOptions,\n    ) {}\n\n    get appearance(): string {\n        switch (this.value) {\n            case false:\n                return this.options.appearances.unchecked;\n            case true:\n                return this.options.appearances.checked;\n            default:\n                return this.options.appearances.indeterminate;\n        }\n    }\n\n    get empty(): boolean {\n        return this.value === false;\n    }\n\n    private setCurrentIcon(value: boolean | null): void {\n        this.icon =\n            value === null\n                ? this.options.icons.indeterminate\n                : this.options.icons.checked;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core/components/svg';\nimport {TuiWrapperModule} from '@taiga-ui/core/directives/wrapper';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiPrimitiveCheckboxComponent} from './primitive-checkbox.component';\n\n@NgModule({\n    imports: [TuiSvgModule, TuiWrapperModule, PolymorpheusModule],\n    declarations: [TuiPrimitiveCheckboxComponent],\n    exports: [TuiPrimitiveCheckboxComponent],\n})\nexport class TuiPrimitiveCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}