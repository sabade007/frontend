import { __decorate, __param } from 'tslib';
import { InjectionToken, inject, Inject, Input, Directive, forwardRef, NgModule, ChangeDetectorRef } from '@angular/core';
import { TuiController, tuiDefaultProp, TuiDestroyService } from '@taiga-ui/cdk';
import { TUI_HINT_OPTIONS } from '@taiga-ui/core/directives/hint';
import { watchedControllerFactory } from '@taiga-ui/core/providers';

const TUI_HINT_CONTROLLER = new InjectionToken(`Controls configuration of hints`, {
    factory: () => new TuiHintControllerDirective(inject(TUI_HINT_OPTIONS)),
});

var TuiHintControllerDirective_1;
// TODO: v2.0 use in Charts
let TuiHintControllerDirective = TuiHintControllerDirective_1 = class TuiHintControllerDirective extends TuiController {
    constructor(options) {
        super();
        this.options = options;
        // TODO: 3.0 Remove null
        this.content = null;
        this.direction = this.options.direction;
        this.mode = this.options.mode;
        this.showDelay = this.options.tuiHintShowDelay;
        this.hideDelay = this.options.tuiHintHideDelay;
    }
};
TuiHintControllerDirective.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_HINT_OPTIONS,] }] }
];
__decorate([
    Input('tuiHintContent'),
    tuiDefaultProp()
], TuiHintControllerDirective.prototype, "content", void 0);
__decorate([
    Input('tuiHintDirection'),
    tuiDefaultProp()
], TuiHintControllerDirective.prototype, "direction", void 0);
__decorate([
    Input('tuiHintMode'),
    tuiDefaultProp()
], TuiHintControllerDirective.prototype, "mode", void 0);
__decorate([
    Input('tuiHintShowDelay'),
    tuiDefaultProp()
], TuiHintControllerDirective.prototype, "showDelay", void 0);
__decorate([
    Input('tuiHintHideDelay'),
    tuiDefaultProp()
], TuiHintControllerDirective.prototype, "hideDelay", void 0);
TuiHintControllerDirective = TuiHintControllerDirective_1 = __decorate([
    Directive({
        selector: '[tuiHintContent]',
        providers: [
            {
                provide: TUI_HINT_CONTROLLER,
                useExisting: forwardRef(() => TuiHintControllerDirective_1),
            },
        ],
    }),
    __param(0, Inject(TUI_HINT_OPTIONS))
], TuiHintControllerDirective);

let TuiHintControllerModule = class TuiHintControllerModule {
};
TuiHintControllerModule = __decorate([
    NgModule({
        declarations: [TuiHintControllerDirective],
        exports: [TuiHintControllerDirective],
    })
], TuiHintControllerModule);

const TUI_HINT_WATCHED_CONTROLLER = new InjectionToken(`watched hint controller`);
// TODO: 3.0 remove in ivy compilation
const HINT_CONTROLLER_FACTORY = watchedControllerFactory;
const HINT_CONTROLLER_PROVIDER = [
    TuiDestroyService,
    {
        provide: TUI_HINT_WATCHED_CONTROLLER,
        deps: [TUI_HINT_CONTROLLER, ChangeDetectorRef, TuiDestroyService],
        useFactory: HINT_CONTROLLER_FACTORY,
    },
];

/**
 * Generated bundle index. Do not edit.
 */

export { HINT_CONTROLLER_FACTORY, HINT_CONTROLLER_PROVIDER, TUI_HINT_CONTROLLER, TUI_HINT_WATCHED_CONTROLLER, TuiHintControllerDirective, TuiHintControllerModule };
//# sourceMappingURL=taiga-ui-core-directives-hint-controller.js.map
