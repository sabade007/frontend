{"version":3,"file":"taiga-ui-core-pipes-calendar-sheet.js","sources":["ng://@taiga-ui/core/pipes/calendar-sheet/utils.ts","ng://@taiga-ui/core/pipes/calendar-sheet/calendar-sheet.pipe.ts","ng://@taiga-ui/core/pipes/calendar-sheet/calendar-sheet.module.ts","ng://@taiga-ui/core/pipes/calendar-sheet/taiga-ui-core-pipes-calendar-sheet.ts"],"sourcesContent":["import {\n    DAYS_IN_WEEK,\n    inRange,\n    tuiAssert,\n    TuiDay,\n    TuiDayOfWeek,\n    TuiMonth,\n} from '@taiga-ui/cdk';\n\n// TODO: 3.0 Remove export in ivy compilation\n/**\n * Computes day of week offset of the beginning of the month\n */\nexport const getMonthStartDaysOffset = (\n    month: TuiMonth,\n    firstDayOfWeek: TuiDayOfWeek,\n): number => {\n    const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n\n    return startMonthOffsetFromSunday >= firstDayOfWeek\n        ? startMonthOffsetFromSunday - firstDayOfWeek\n        : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n\n/*\nTODO: 3.0 delete:\n * TuiDay.getDayFromMonthRowCol\n * TuiMonth.monthStartDaysOffset\n * TuiMonth.weeksRowsCount\n * TuiYear.yearStartDaysOffset\n * TuiYear.getYearStartDaysOffset\n */\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nexport const getDayFromMonthRowCol = ({\n    month,\n    rowIndex,\n    colIndex,\n    firstDayOfWeek,\n}: {\n    month: TuiMonth;\n    /**\n     * row in a calendar\n     */\n    rowIndex: number;\n    /**\n     * column in a calendar\n     */\n    colIndex: number;\n    /**\n     * first day of the week index (Sunday - 0, Saturday - 6)\n     */\n    firstDayOfWeek: TuiDayOfWeek;\n}): TuiDay => {\n    tuiAssert.assert(Number.isInteger(rowIndex));\n    tuiAssert.assert(inRange(rowIndex, 0, 6));\n    tuiAssert.assert(Number.isInteger(colIndex));\n    tuiAssert.assert(inRange(colIndex, 0, DAYS_IN_WEEK));\n\n    let day =\n        rowIndex * DAYS_IN_WEEK +\n        colIndex -\n        getMonthStartDaysOffset(month, firstDayOfWeek) +\n        1;\n\n    if (day > month.daysCount) {\n        day -= month.daysCount;\n        month = month.append({month: 1});\n    }\n\n    if (day <= 0) {\n        month = month.append({month: -1});\n        day = month.daysCount + day;\n    }\n\n    return new TuiDay(month.year, month.month, day);\n};\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {DAYS_IN_WEEK, TuiDay, TuiDayOfWeek, TuiMonth} from '@taiga-ui/cdk';\nimport {TUI_FIRST_DAY_OF_WEEK} from '@taiga-ui/core/tokens';\n\nimport {getDayFromMonthRowCol} from './utils';\n\nconst CALENDAR_ROWS_COUNT = 6;\n\n@Pipe({\n    name: `tuiCalendarSheet`,\n})\nexport class TuiCalendarSheetPipe implements PipeTransform {\n    private currentMonth: TuiMonth | null = null;\n    private currentSheet: ReadonlyArray<readonly TuiDay[]> = [];\n\n    constructor(\n        @Inject(TUI_FIRST_DAY_OF_WEEK)\n        private readonly firstDayOfWeek: TuiDayOfWeek,\n    ) {}\n\n    transform(\n        month: TuiMonth,\n        showAdjacentDays: boolean = false,\n    ): ReadonlyArray<readonly TuiDay[]> {\n        if (this.currentMonth?.monthSame(month)) {\n            return this.currentSheet;\n        }\n\n        const sheet: Array<readonly TuiDay[]> = [];\n\n        for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n            const row: TuiDay[] = [];\n\n            for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n                const day = getDayFromMonthRowCol({\n                    month,\n                    rowIndex,\n                    colIndex,\n                    firstDayOfWeek: this.firstDayOfWeek,\n                });\n\n                const isPrevMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n\n                const isNextMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n\n                if (isPrevMonthDay(day) && !showAdjacentDays) {\n                    continue;\n                }\n\n                if (isNextMonthDay(day) && !showAdjacentDays) {\n                    break;\n                }\n\n                row.push(day);\n            }\n\n            sheet.push(row);\n        }\n\n        this.currentSheet = sheet.filter(row => row.length);\n        this.currentMonth = month;\n\n        return this.currentSheet;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCalendarSheetPipe} from './calendar-sheet.pipe';\n\n@NgModule({\n    declarations: [TuiCalendarSheetPipe],\n    exports: [TuiCalendarSheetPipe],\n})\nexport class TuiCalendarSheetPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}