import { __decorate, __param } from 'tslib';
import { EventEmitter, Inject, Input, HostBinding, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { tuiIsObserved, tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_CLOSE_WORD, TUI_NOTIFICATION_OPTIONS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { CommonModule } from '@angular/common';
import { TuiButtonModule } from '@taiga-ui/core/components/button';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';

const STATUS_ICON = {
    info: 'tuiIconInfo',
    success: 'tuiIconCheckCircle',
    error: 'tuiIconCancel',
    warning: 'tuiIconAttention',
};
// @bad TODO: Think about moving to kit
let TuiNotificationComponent = class TuiNotificationComponent {
    constructor(closeWord$, options) {
        this.closeWord$ = closeWord$;
        this.options = options;
        this.hasIcon = this.options.hasIcon;
        this.status = this.options.status;
        this.close = new EventEmitter();
    }
    get icon() {
        return STATUS_ICON[this.status];
    }
    get hasClose() {
        return tuiIsObserved(this.close);
    }
};
TuiNotificationComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_NOTIFICATION_OPTIONS,] }] }
];
__decorate([
    Input(),
    HostBinding('class._has-icon'),
    tuiDefaultProp()
], TuiNotificationComponent.prototype, "hasIcon", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-tui-host-status'),
    tuiDefaultProp()
], TuiNotificationComponent.prototype, "status", void 0);
__decorate([
    Output()
], TuiNotificationComponent.prototype, "close", void 0);
__decorate([
    HostBinding('class._has-close-button')
], TuiNotificationComponent.prototype, "hasClose", null);
TuiNotificationComponent = __decorate([
    Component({
        selector: 'tui-notification',
        template: "<tui-svg\n    *ngIf=\"hasIcon\"\n    automation-id=\"tui-notification__icon\"\n    class=\"t-icon\"\n    [src]=\"icon\"\n></tui-svg>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<button\n    *ngIf=\"hasClose\"\n    tuiIconButton\n    type=\"button\"\n    automation-id=\"tui-notification__close\"\n    size=\"xs\"\n    icon=\"tuiIconCloseLarge\"\n    appearance=\"icon\"\n    class=\"t-close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;padding:.8125rem 1rem .6875rem;border-radius:var(--tui-radius-m);background:#fff;background:var(--tui-base-01);box-sizing:border-box;overflow:hidden}:host:after{position:absolute;top:0;left:0;width:100%;height:100%;content:'';pointer-events:none}:host._has-close-button{padding-right:2rem}:host._has-icon{padding-left:2.75rem}:host[data-tui-host-status=info]{color:var(--tui-info-fill)}:host[data-tui-host-status=info]:after{background:var(--tui-info-bg)}:host[data-tui-host-status=success]{color:var(--tui-success-fill)}:host[data-tui-host-status=success]:after{background:var(--tui-success-bg)}:host[data-tui-host-status=error]{color:var(--tui-error-fill)}:host[data-tui-host-status=error]:after{background:var(--tui-error-bg)}:host[data-tui-host-status=warning]{color:var(--tui-warning-fill)}:host[data-tui-host-status=warning]:after{background:var(--tui-warning-bg)}.t-content{word-wrap:break-word;color:var(--tui-text-01)}.t-icon{position:absolute;top:0;left:1rem;display:flex;width:1rem;height:100%;max-height:3rem;align-items:center}.t-close{position:absolute;top:.625rem;right:.5rem}"]
    }),
    __param(0, Inject(TUI_CLOSE_WORD)),
    __param(1, Inject(TUI_NOTIFICATION_OPTIONS))
], TuiNotificationComponent);

let TuiNotificationModule = class TuiNotificationModule {
};
TuiNotificationModule = __decorate([
    NgModule({
        imports: [CommonModule, TuiSvgModule, TuiButtonModule],
        declarations: [TuiNotificationComponent],
        exports: [TuiNotificationComponent],
    })
], TuiNotificationModule);

/**
 * Generated bundle index. Do not edit.
 */

export { STATUS_ICON, TuiNotificationComponent, TuiNotificationModule };
//# sourceMappingURL=taiga-ui-core-components-notification.js.map
