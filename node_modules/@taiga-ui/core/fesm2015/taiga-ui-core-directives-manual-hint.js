import { __decorate, __param } from 'tslib';
import { InjectionToken, ElementRef, Inject, Optional, Input, Directive, NgModule } from '@angular/core';
import { TuiActiveZoneDirective, tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';
import { TUI_ABSTRACT_HINT_DEFAULT_OPTIONS, AbstractTuiHint } from '@taiga-ui/core/abstract';
import { TuiHintService } from '@taiga-ui/core/services';

/** Default values for manual hint options */
const TUI_MANUAL_HINT_DEFAULT_OPTIONS = Object.assign({}, TUI_ABSTRACT_HINT_DEFAULT_OPTIONS);
const TUI_MANUAL_HINT_OPTIONS = new InjectionToken(`Default parameters for manual hint directive`, {
    factory: () => TUI_MANUAL_HINT_DEFAULT_OPTIONS,
});
const tuiManualHintOptionsProvider = (options) => ({
    provide: TUI_MANUAL_HINT_OPTIONS,
    useValue: Object.assign(Object.assign({}, TUI_MANUAL_HINT_DEFAULT_OPTIONS), options),
});

let TuiManualHintDirective = class TuiManualHintDirective extends AbstractTuiHint {
    constructor(elementRef, hintService, activeZone, options) {
        super(elementRef, hintService, activeZone, options);
        this.options = options;
        this.content = '';
    }
    set tuiManualHintShow(show) {
        if (show) {
            this.showTooltip();
        }
        else {
            this.hideTooltip();
        }
    }
    getElementClientRect() {
        return this.elementRef.nativeElement.getBoundingClientRect();
    }
};
TuiManualHintDirective.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: TuiHintService, decorators: [{ type: Inject, args: [TuiHintService,] }] },
    { type: TuiActiveZoneDirective, decorators: [{ type: Optional }, { type: Inject, args: [TuiActiveZoneDirective,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_MANUAL_HINT_OPTIONS,] }] }
];
__decorate([
    Input('tuiManualHint'),
    tuiDefaultProp()
], TuiManualHintDirective.prototype, "content", void 0);
__decorate([
    Input(),
    tuiRequiredSetter()
], TuiManualHintDirective.prototype, "tuiManualHintShow", null);
TuiManualHintDirective = __decorate([
    Directive({
        selector: '[tuiManualHint]:not(ng-container)',
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(TuiHintService)),
    __param(2, Optional()),
    __param(2, Inject(TuiActiveZoneDirective)),
    __param(3, Inject(TUI_MANUAL_HINT_OPTIONS))
], TuiManualHintDirective);

let TuiManualHintModule = class TuiManualHintModule {
};
TuiManualHintModule = __decorate([
    NgModule({
        declarations: [TuiManualHintDirective],
        exports: [TuiManualHintDirective],
    })
], TuiManualHintModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_MANUAL_HINT_DEFAULT_OPTIONS, TUI_MANUAL_HINT_OPTIONS, TuiManualHintDirective, TuiManualHintModule, tuiManualHintOptionsProvider };
//# sourceMappingURL=taiga-ui-core-directives-manual-hint.js.map
