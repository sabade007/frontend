import { __decorate, __param } from 'tslib';
import { DOCUMENT } from '@angular/common';
import { ElementRef, Inject, Input, Directive, NgModule } from '@angular/core';
import { tuiCustomEvent, TuiDestroyService, tuiRequiredSetter } from '@taiga-ui/cdk';
import { TUI_SCROLL_INTO_VIEW } from '@taiga-ui/core/constants';
import { timer, Observable } from 'rxjs';
import { takeUntil } from 'rxjs/operators';

/**
 * Directive scrolls element into view inside tui-scrollbar
 */
// @dynamic
let TuiScrollIntoViewDirective = class TuiScrollIntoViewDirective {
    constructor(elementRef, documentRef, destroy$) {
        this.elementRef = elementRef;
        this.documentRef = documentRef;
        this.destroy$ = destroy$;
    }
    set tuiScrollIntoView(scroll) {
        if (!scroll) {
            return;
        }
        // Timeout is necessary in order to give element render cycle to get into its final spot
        // (for example if it is inside dropdown box which has to be positioned first)
        timer(0)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.elementRef.nativeElement.dispatchEvent(tuiCustomEvent(TUI_SCROLL_INTO_VIEW, {
                bubbles: true,
                detail: this.elementRef.nativeElement,
            }, this.documentRef));
        });
    }
};
TuiScrollIntoViewDirective.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
];
__decorate([
    Input(),
    tuiRequiredSetter()
], TuiScrollIntoViewDirective.prototype, "tuiScrollIntoView", null);
TuiScrollIntoViewDirective = __decorate([
    Directive({
        selector: '[tuiScrollIntoView]',
        providers: [TuiDestroyService],
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(DOCUMENT)),
    __param(2, Inject(TuiDestroyService))
], TuiScrollIntoViewDirective);

let TuiScrollIntoViewModule = class TuiScrollIntoViewModule {
};
TuiScrollIntoViewModule = __decorate([
    NgModule({
        declarations: [TuiScrollIntoViewDirective],
        exports: [TuiScrollIntoViewDirective],
    })
], TuiScrollIntoViewModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiScrollIntoViewDirective, TuiScrollIntoViewModule };
//# sourceMappingURL=taiga-ui-core-directives-scroll-into-view.js.map
