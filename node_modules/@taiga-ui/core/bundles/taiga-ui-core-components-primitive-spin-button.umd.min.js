!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@taiga-ui/cdk"),require("@taiga-ui/core/tokens"),require("rxjs"),require("@angular/common"),require("@taiga-ui/core/components/button")):"function"==typeof define&&define.amd?define("@taiga-ui/core/components/primitive-spin-button",["exports","@angular/core","@taiga-ui/cdk","@taiga-ui/core/tokens","rxjs","@angular/common","@taiga-ui/core/components/button"],e):e(((t=t||self)["taiga-ui"]=t["taiga-ui"]||{},t["taiga-ui"].core=t["taiga-ui"].core||{},t["taiga-ui"].core.components=t["taiga-ui"].core.components||{},t["taiga-ui"].core.components["primitive-spin-button"]={}),t.ng.core,t.cdk,t["taiga-ui"].core.tokens,t.rxjs,t.ng.common,t["taiga-ui"].core.components.button)}(this,(function(t,e,n,o,i,r,u){"use strict";var a=function(t,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function c(t,e,n,o){var i,r=arguments.length,u=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(i=t[a])&&(u=(r<3?i(u):r>3?i(e,n,u):i(e,n))||u);return r>3&&u&&Object.defineProperty(e,n,u),u}Object.create;Object.create;var s=function(t){function r(n){var o=t.call(this)||this;return o.spinTexts$=n,o.disabled=!1,o.mode="flat",o.leftDisabled=!1,o.rightDisabled=!1,o.leftClick=new e.EventEmitter,o.rightClick=new e.EventEmitter,o}var u,s;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(r,t),Object.defineProperty(r.prototype,"focused",{get:function(){return!!this.wrapper&&n.isNativeFocused(this.wrapper.nativeElement)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"leftComputedDisabled",{get:function(){return this.computedDisabled||this.leftDisabled},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"rightComputedDisabled",{get:function(){return this.computedDisabled||this.rightDisabled},enumerable:!0,configurable:!0}),r.prototype.onLeftClick=function(){this.leftComputedDisabled||this.leftClick.emit()},r.prototype.onRightClick=function(){this.rightComputedDisabled||this.rightClick.emit()},r.prototype.onFocused=function(t){this.updateFocused(t)},r.prototype.onFocusVisible=function(t){this.updateFocusVisible(t)},r.ctorParameters=function(){return[{type:i.Observable,decorators:[{type:e.Inject,args:[o.TUI_SPIN_TEXTS]}]}]},c([e.ViewChild("wrapper")],r.prototype,"wrapper",void 0),c([e.Input(),n.tuiDefaultProp()],r.prototype,"disabled",void 0),c([e.Input(),n.tuiDefaultProp()],r.prototype,"mode",void 0),c([e.Input(),n.tuiDefaultProp()],r.prototype,"leftDisabled",void 0),c([e.Input(),n.tuiDefaultProp()],r.prototype,"rightDisabled",void 0),c([e.Output()],r.prototype,"leftClick",void 0),c([e.Output()],r.prototype,"rightClick",void 0),r=c([e.Component({selector:"tui-primitive-spin-button",changeDetection:e.ChangeDetectionStrategy.OnPush,template:'<div\n    *ngIf="spinTexts$ | async as texts"\n    #wrapper\n    tuiPreventDefault="mousedown"\n    class="t-wrapper"\n    [tuiFocusable]="computedFocusable"\n    (tuiFocusedChange)="onFocused($event)"\n    (tuiFocusVisibleChange)="onFocusVisible($event)"\n    (keydown.arrowLeft)="onLeftClick()"\n    (keydown.arrowRight)="onRightClick()"\n>\n    <button\n        tuiIconButton\n        type="button"\n        size="xs"\n        appearance=""\n        automation-id="tui-primitive-spin-button__left"\n        icon="tuiIconChevronLeftLarge"\n        class="t-arrow"\n        [class.t-arrow_hidden]="leftComputedDisabled"\n        [title]="texts[0]"\n        [focusable]="false"\n        (click)="onLeftClick()"\n    ></button>\n    <span class="t-content">\n        <ng-content></ng-content>\n    </span>\n    <button\n        tuiIconButton\n        type="button"\n        size="xs"\n        appearance=""\n        automation-id="tui-primitive-spin-button__right"\n        icon="tuiIconChevronRightLarge"\n        class="t-arrow"\n        [class.t-arrow_hidden]="rightComputedDisabled"\n        [title]="texts[1]"\n        [focusable]="false"\n        (click)="onRightClick()"\n    ></button>\n</div>\n',styles:[":host{display:block;font:var(--tui-font-text-l);text-align:center;font-weight:700}.t-wrapper{display:flex;align-items:center;justify-content:space-between;outline:0}.t-arrow{margin:0 .25rem}.t-arrow_hidden{visibility:hidden}.t-content{padding:0 .5rem}:host._focus-visible .t-content{box-shadow:0 0 0 1px var(--tui-focus)}"]}),(u=0,s=e.Inject(o.TUI_SPIN_TEXTS),function(t,e){s(t,e,u)})],r)}(n.AbstractTuiInteractive),p=function(){function t(){}return t=c([e.NgModule({imports:[r.CommonModule,n.TuiFocusVisibleModule,n.TuiFocusedModule,n.TuiFocusableModule,n.TuiPreventDefaultModule,u.TuiButtonModule],declarations:[s],exports:[s]})],t)}();t.TuiPrimitiveSpinButtonComponent=s,t.TuiPrimitiveSpinButtonModule=p,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-core-components-primitive-spin-button.umd.min.js.map