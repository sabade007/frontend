(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/directives/hint-controller'), require('@taiga-ui/core/directives/textfield-controller'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/utils/miscellaneous'), require('@tinkoff/ng-polymorpheus'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/core/providers'), require('@taiga-ui/core/abstract'), require('@angular/common'), require('@angular/forms'), require('@taiga-ui/core/components/svg'), require('@taiga-ui/core/components/tooltip'), require('@taiga-ui/core/directives/described-by'), require('@taiga-ui/core/directives/mask-accessor'), require('@taiga-ui/core/directives/wrapper'), require('@taiga-ui/core/directives')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/primitive-textfield', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/directives/hint-controller', '@taiga-ui/core/directives/textfield-controller', '@taiga-ui/core/tokens', '@taiga-ui/core/utils/miscellaneous', '@tinkoff/ng-polymorpheus', 'rxjs', 'rxjs/operators', '@taiga-ui/core/providers', '@taiga-ui/core/abstract', '@angular/common', '@angular/forms', '@taiga-ui/core/components/svg', '@taiga-ui/core/components/tooltip', '@taiga-ui/core/directives/described-by', '@taiga-ui/core/directives/mask-accessor', '@taiga-ui/core/directives/wrapper', '@taiga-ui/core/directives'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.components = global['taiga-ui'].core.components || {}, global['taiga-ui'].core.components['primitive-textfield'] = {}), global.ng.core, global.cdk, global['taiga-ui'].core.directives['hint-controller'], global['taiga-ui'].core.directives['textfield-controller'], global['taiga-ui'].core.tokens, global['taiga-ui'].core.utils.miscellaneous, global.ngPolymorpheus, global.rxjs, global.rxjs.operators, global['taiga-ui'].core.providers, global['taiga-ui'].core.abstract, global.ng.common, global.ng.forms, global['taiga-ui'].core.components.svg, global['taiga-ui'].core.components.tooltip, global['taiga-ui'].core.directives['described-by'], global['taiga-ui'].core.directives['mask-accessor'], global['taiga-ui'].core.directives.wrapper, global['taiga-ui'].core.directives));
}(this, (function (exports, core, cdk, hintController, textfieldController, tokens, miscellaneous, ngPolymorpheus, rxjs, operators, providers, abstract, common, forms, svg, tooltip, describedBy, maskAccessor, wrapper, directives) { 'use strict';

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.push(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.push(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    function __runInitializers(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    function __propKey(x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    function __setFunctionName(f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    var __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    function __exportStar(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function __classPrivateFieldIn(state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    }

    var TUI_PRIMITIVE_TEXTFIELD_PROVIDERS = [
        {
            provide: cdk.TUI_FOCUSABLE_ITEM_ACCESSOR,
            useExisting: core.forwardRef(function () { return TuiPrimitiveTextfieldComponent; }),
        },
        textfieldController.TEXTFIELD_CONTROLLER_PROVIDER,
        hintController.HINT_CONTROLLER_PROVIDER,
        providers.MODE_PROVIDER,
    ];

    // TODO: 3.0 remove in ivy compilation
    var TUI_PRIMITIVE_TEXTFIELD_ICON_CLEANER = "tuiIconCloseLarge";
    /** Default values for primitive textfield options */
    var TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS = {
        iconAlign: "right",
        iconCleaner: TUI_PRIMITIVE_TEXTFIELD_ICON_CLEANER,
    };
    var TUI_PRIMITIVE_TEXTFIELD_OPTIONS = new core.InjectionToken("Default parameters for primitive textfield component", {
        factory: function () { return TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS; },
    });
    var tuiPrimitiveTextfieldOptionsProvider = function (options) { return ({
        provide: TUI_PRIMITIVE_TEXTFIELD_OPTIONS,
        useValue: __assign(__assign({}, TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS), options),
    }); };

    var ICON_PADDING = 1.75;
    var ICON_PADDING_S = 1.5;
    var TuiPrimitiveTextfieldComponent = /** @class */ (function (_super) {
        __extends(TuiPrimitiveTextfieldComponent, _super);
        function TuiPrimitiveTextfieldComponent(mode$, appearance, controller, hintController, options, elementRef) {
            var _this = _super.call(this) || this;
            _this.mode$ = mode$;
            _this.appearance = appearance;
            _this.controller = controller;
            _this.hintController = hintController;
            _this.options = options;
            _this.elementRef = elementRef;
            _this.editable = true;
            _this.filler = '';
            _this.iconAlign = _this.options.iconAlign;
            // TODO: 3.0 Remove null
            _this.iconContent = null;
            _this.iconCleaner = _this.options.iconCleaner;
            _this.readOnly = false;
            _this.invalid = false;
            _this.disabled = false;
            _this.prefix = '';
            _this.postfix = '';
            _this.value = '';
            _this.valueChange = new core.EventEmitter();
            /**
             * @deprecated TODO: 3.0 remove
             */
            _this.autofilledChange = new core.EventEmitter();
            _this.autofilled = false;
            return _this;
        }
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "nativeFocusableElement", {
            get: function () {
                if (this.computedDisabled || !this.focusableElement) {
                    return null;
                }
                // TODO: 3.0 Refactor this after we drop built-in input element
                return (this.focusableElement.nativeElement
                    .previousElementSibling ||
                    this.focusableElement.nativeElement);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "focused", {
            get: function () {
                return cdk.isNativeFocusedIn(this.elementRef.nativeElement);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "size", {
            get: function () {
                return this.controller.size;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", {
            get: function () {
                return !this.readOnly && !this.disabled && this.invalid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "inputHidden", {
            get: function () {
                var _a;
                return !!((_a = this.content) === null || _a === void 0 ? void 0 : _a.length);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValue", {
            get: function () {
                return !!this.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCleaner", {
            get: function () {
                return (this.controller.cleaner && this.hasValue && !this.disabled && !this.readOnly);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasTooltip", {
            get: function () {
                var _a;
                return !!((_a = this.hintController) === null || _a === void 0 ? void 0 : _a.content) && !this.disabled;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCustomContent", {
            get: function () {
                return !!this.controller.customContent;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "showOnlyPlaceholder", {
            get: function () {
                return (this.focused &&
                    this.placeholderVisible &&
                    (this.size === 's' || (this.size === 'm' && !this.placeholderRaisable)));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderVisible", {
            get: function () {
                var _a;
                var hasDecor = this.controller.exampleText ||
                    this.prefix ||
                    this.postfix || ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder);
                var showDecor = hasDecor && !this.readOnly && this.computedFocused;
                return !this.hasValue && !showDecor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPlaceholder", {
            get: function () {
                return (!this.showOnlyPlaceholder &&
                    (this.placeholderRaisable || this.placeholderVisible));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaised", {
            get: function () {
                return (this.placeholderRaisable &&
                    ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "borderStart", {
            get: function () {
                return this.iconAlignLeft ? this.iconPaddingLeft : 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "borderEnd", {
            get: function () {
                return miscellaneous.getBorder(this.iconAlignRight, this.hasCleaner, this.hasTooltip, this.hasCustomContent);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignLeft", {
            get: function () {
                return this.hasIcon && this.iconAlign === 'left';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignRight", {
            get: function () {
                return this.hasIcon && this.iconAlign === 'right';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "name", {
            // Safari expiration date autofill workaround
            get: function () {
                return this.controller.autocomplete === "cc-exp" /* CcExp */
                    ? 'ccexpiryyear'
                    : null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedId", {
            get: function () {
                var _a;
                return ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.id) || '';
            },
            enumerable: true,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
        };
        TuiPrimitiveTextfieldComponent.prototype.getIndent$ = function (element) {
            return rxjs.fromEvent(element, 'scroll').pipe(operators.map(function () { return -1 * element.scrollLeft; }));
        };
        TuiPrimitiveTextfieldComponent.prototype.clear = function () {
            if (this.nativeFocusableElement) {
                this.nativeFocusableElement.value = '';
            }
            this.updateValue('');
        };
        TuiPrimitiveTextfieldComponent.prototype.onMouseDown = function (event) {
            var nativeFocusableElement = this.nativeFocusableElement;
            if (!nativeFocusableElement || event.target === nativeFocusableElement) {
                return;
            }
            event.preventDefault();
            cdk.setNativeFocused(nativeFocusableElement);
        };
        TuiPrimitiveTextfieldComponent.prototype.onModelChange = function (value) {
            this.updateValue(value);
        };
        TuiPrimitiveTextfieldComponent.prototype.onHovered = function (hovered) {
            this.updateHovered(hovered);
        };
        TuiPrimitiveTextfieldComponent.prototype.onAutofilled = function (autofilled) {
            this.updateAutofilled(autofilled);
        };
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconPaddingLeft", {
            get: function () {
                return this.size === 's' ? ICON_PADDING_S : ICON_PADDING;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaisable", {
            get: function () {
                return this.size !== 's' && !this.controller.labelOutside;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasIcon", {
            get: function () {
                return !!this.iconContent;
            },
            enumerable: true,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.updateAutofilled = function (autofilled) {
            if (this.autofilled === autofilled) {
                return;
            }
            this.autofilled = autofilled;
            this.autofilledChange.emit(autofilled);
        };
        TuiPrimitiveTextfieldComponent.prototype.updateValue = function (value) {
            this.value = value;
            this.valueChange.emit(value);
        };
        TuiPrimitiveTextfieldComponent.ctorParameters = function () { return [
            { type: rxjs.Observable, decorators: [{ type: core.Inject, args: [tokens.TUI_MODE,] }] },
            { type: String, decorators: [{ type: core.Inject, args: [tokens.TUI_TEXTFIELD_APPEARANCE,] }] },
            { type: textfieldController.TuiTextfieldController, decorators: [{ type: core.Inject, args: [textfieldController.TUI_TEXTFIELD_WATCHED_CONTROLLER,] }] },
            { type: hintController.TuiHintControllerDirective, decorators: [{ type: core.Inject, args: [hintController.TUI_HINT_WATCHED_CONTROLLER,] }] },
            { type: undefined, decorators: [{ type: core.Inject, args: [TUI_PRIMITIVE_TEXTFIELD_OPTIONS,] }] },
            { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] }
        ]; };
        __decorate([
            core.ViewChild('focusableElement')
        ], TuiPrimitiveTextfieldComponent.prototype, "focusableElement", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "editable", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "filler", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "iconAlign", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "iconContent", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "iconCleaner", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('class._readonly'),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "readOnly", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "invalid", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "disabled", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "prefix", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "postfix", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "value", void 0);
        __decorate([
            core.Output()
        ], TuiPrimitiveTextfieldComponent.prototype, "valueChange", void 0);
        __decorate([
            core.Output()
        ], TuiPrimitiveTextfieldComponent.prototype, "autofilledChange", void 0);
        __decorate([
            core.ContentChildren(ngPolymorpheus.PolymorpheusOutletComponent)
        ], TuiPrimitiveTextfieldComponent.prototype, "content", void 0);
        __decorate([
            core.HostBinding('attr.data-size')
        ], TuiPrimitiveTextfieldComponent.prototype, "size", null);
        __decorate([
            core.HostBinding('class._invalid')
        ], TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", null);
        __decorate([
            core.HostBinding('class._hidden')
        ], TuiPrimitiveTextfieldComponent.prototype, "inputHidden", null);
        __decorate([
            core.HostBinding('style.--border-start.rem')
        ], TuiPrimitiveTextfieldComponent.prototype, "borderStart", null);
        __decorate([
            core.HostBinding('style.--border-end.rem')
        ], TuiPrimitiveTextfieldComponent.prototype, "borderEnd", null);
        __decorate([
            core.HostListener('focusin', ['true']),
            core.HostListener('focusout', ['false'])
        ], TuiPrimitiveTextfieldComponent.prototype, "onFocused", null);
        __decorate([
            cdk.tuiPure
        ], TuiPrimitiveTextfieldComponent.prototype, "getIndent$", null);
        TuiPrimitiveTextfieldComponent = __decorate([
            core.Component({
                selector: 'tui-primitive-textfield',
                template: "<ng-container *ngIf=\"content?.changes | async\"></ng-container>\n<tui-wrapper\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [pressed]=\"computedPressed\"\n    [invalid]=\"computedInvalid\"\n    [style.--text-indent.px]=\"decor.pre$ | async\"\n    (mousedown)=\"onMouseDown($event)\"\n    (click.prevent.silent)=\"(0)\"\n    (tuiHoveredChange)=\"onHovered($event)\"\n    (tuiAutofilledChange)=\"onAutofilled($event)\"\n>\n    <ng-content select=\"input\"></ng-content>\n    <input\n        #focusableElement\n        tuiMaskAccessor\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"t-input\"\n        [attr.disabled]=\"computedDisabled || null\"\n        [attr.maxLength]=\"controller.maxLength\"\n        [attr.name]=\"name\"\n        [attr.aria-placeholder]=\"controller.exampleText\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [autocomplete]=\"controller.autocomplete\"\n        [type]=\"controller.type\"\n        [id]=\"id\"\n        [readOnly]=\"readOnly || !editable\"\n        [tuiInputMode]=\"controller.inputMode\"\n        [tuiFocusable]=\"computedFocusable\"\n        [tuiDescribedBy]=\"id\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"t-input t-input_template\"\n    >\n        <ng-content select=\"[polymorpheus-outlet]\"></ng-content>\n    </div>\n    <div class=\"t-content\">\n        <div\n            *ngIf=\"iconAlignLeft\"\n            polymorpheus-outlet\n            class=\"t-icon t-icon_left\"\n            [content]=\"iconContent\"\n            [context]=\"{$implicit: size}\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n        <div class=\"t-wrapper\">\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n                [for]=\"computedId\"\n            >\n                <ng-content></ng-content>\n            </label>\n            <div class=\"t-wrapper-value-decoration\">\n                <tui-value-decoration\n                    #decor\n                    automation-id=\"tui-primitive-textfield__value-decoration\"\n                    aria-hidden=\"true\"\n                    class=\"t-value-decoration\"\n                    [class.t-has-value]=\"value\"\n                    [style.textIndent.px]=\"getIndent$(focusableElement) | async\"\n                ></tui-value-decoration>\n            </div>\n        </div>\n        <div\n            *ngIf=\"hasCustomContent\"\n            polymorpheus-outlet\n            automation-id=\"tui-primitive-textfield__custom-content\"\n            class=\"t-custom-content\"\n            [content]=\"controller.customContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg\n                    class=\"t-custom-icon\"\n                    [src]=\"iconSrc\"\n                ></tui-svg>\n            </ng-template>\n        </div>\n        <span\n            *ngIf=\"hasCleaner\"\n            polymorpheus-outlet\n            automation-id=\"tui-primitive-textfield__cleaner\"\n            class=\"t-cleaner\"\n            [content]=\"iconCleaner\"\n            (click.stop)=\"clear()\"\n        >\n            <ng-template let-icon>\n                <tui-svg [src]=\"icon\"></tui-svg>\n            </ng-template>\n        </span>\n        <tui-tooltip\n            *ngIf=\"hasTooltip\"\n            automation-id=\"tui-primitive-textfield__tooltip\"\n            [describeId]=\"computedId\"\n            [content]=\"hintController.content || ''\"\n            [direction]=\"hintController.direction\"\n            [mode]=\"hintController.mode\"\n            [showDelay]=\"hintController.showDelay\"\n            [hideDelay]=\"hintController.hideDelay\"\n        ></tui-tooltip>\n        <div\n            *ngIf=\"iconAlignRight\"\n            polymorpheus-outlet\n            class=\"t-icon\"\n            [content]=\"iconContent\"\n            [context]=\"{$implicit: size}\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n    </div>\n</tui-wrapper>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                providers: TUI_PRIMITIVE_TEXTFIELD_PROVIDERS,
                host: {
                    '($.data-mode.attr)': 'mode$',
                    '[class._autofilled]': 'autofilled',
                    '[class._label-outside]': 'controller.labelOutside',
                },
                styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;border-radius:var(--tui-radius-m);text-align:left}:host[data-size='s']{height:var(--tui-height-s);min-height:var(--tui-height-s);max-height:var(--tui-height-s)}:host[data-size='m']{height:var(--tui-height-m);min-height:var(--tui-height-m);max-height:var(--tui-height-m)}:host[data-size='l']{height:var(--tui-height-l);min-height:var(--tui-height-l);max-height:var(--tui-height-l);font:var(--tui-font-text-m);line-height:1.25rem}.t-input{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;padding:0 var(--tui-padding-m);border:solid transparent;border-width:0 var(--border-end,0) 0 var(--border-start,0);border-inline-start-width:var(--border-start,0);border-inline-end-width:var(--border-end,0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}.t-input:-webkit-autofill,.t-input:-webkit-autofill:focus,.t-input:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-input :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill,.t-input :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill:focus,.t-input :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill:hover,.t-input :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill,.t-input :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill:focus,.t-input :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill:hover,:host[data-mode=onDark] .t-input:-webkit-autofill,:host[data-mode=onDark] .t-input:-webkit-autofill:focus,:host[data-mode=onDark] .t-input:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}.t-input :host-context(tui-primitive-textfield[data-size='s']):not(tui-primitive-textfield),.t-input :host-context(tui-text-area[data-size='s']):not(tui-text-area),:host[data-size='s'] .t-input{padding:0 var(--tui-padding-s)}.t-input :host-context(tui-primitive-textfield[data-size='l']):not(tui-primitive-textfield),.t-input :host-context(tui-text-area[data-size='l']):not(tui-text-area),:host[data-size='l'] .t-input{padding:0 var(--tui-padding-l)}.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-text-area._disabled),:host._disabled .t-input{pointer-events:none}.t-input :host-context(tui-primitive-textfield[data-size='l']:not(._label-outside)):not(tui-primitive-textfield),:host[data-size='l']:not(._label-outside) .t-input{padding-top:1.25rem}.t-input :host-context(tui-primitive-textfield[data-size='l']:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder,:host[data-size='l']:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}.t-input :host-context(tui-primitive-textfield[data-size='m']:not(._label-outside)):not(tui-primitive-textfield),:host[data-size='m']:not(._label-outside) .t-input{padding-top:1.125rem}.t-input :host-context(tui-primitive-textfield[data-size='m']:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder,:host[data-size='m']:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}.t-input :host-context(tui-primitive-textfield._hidden),:host._hidden input.t-input{opacity:0;text-indent:-10em;-webkit-user-select:none}.t-content{display:flex;height:100%;width:100%;padding:0 var(--tui-padding-m);box-sizing:border-box;align-items:center;overflow:hidden}:host[data-size='s'] .t-content{padding:0 var(--tui-padding-s)}:host[data-size='l'] .t-content{padding:0 var(--tui-padding-l)}.t-content:after{content:'';margin-right:-.25rem}:host[data-size='m'] .t-content:after{display:none}.t-wrapper{flex:1;min-width:0;padding-right:.25rem;-webkit-padding-end:.25rem;padding-inline-end:.25rem;-webkit-padding-start:0;padding-inline-start:0}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:var(--tui-text-02);pointer-events:none;will-change:transform;transform:translateY(0)}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size='m'] .t-placeholder_raised{font:var(--tui-font-text-xs);transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill)}:host[data-mode=onDark]._invalid:not(._focused) .t-placeholder_raised,:host[data-mode=onDark]._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .t-placeholder,:host[data-size='l']._focused._label-outside .t-placeholder,:host[data-size='m']._focused._label-outside .t-placeholder{color:var(--tui-text-03)}:host[data-size='l'] .t-placeholder{font-size:.9375rem}:host[data-size='l'] .t-placeholder_raised{font-size:.8156rem}:host[data-size='l']._focused:not(._label-outside) .t-placeholder,:host[data-size='m']._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01)}:host[data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}:host[data-size='l'][data-mode=onDark]._focused:not(._label-outside) .t-placeholder,:host[data-size='m'][data-mode=onDark]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01-night)}:host[data-mode=onDark]._focused .t-placeholder,:host[data-size='l'][data-mode=onDark]._focused._label-outside .t-placeholder,:host[data-size='m'][data-mode=onDark]._focused._label-outside .t-placeholder{color:var(--tui-text-02-night)}@supports (-webkit-hyphens:none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-cleaner{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;cursor:pointer;transition-property:color,transform}.t-cleaner:hover{color:var(--tui-text-02)}:host._disabled .t-cleaner,:host._readonly .t-cleaner{pointer-events:none}:host[data-mode=onDark] .t-cleaner{color:var(--tui-text-03-night)}:host[data-mode=onDark] .t-cleaner:hover{color:var(--tui-text-01-night)}.t-icon{display:flex;align-items:center;justify-content:center;color:var(--tui-text-03)}.t-icon_left{margin:0 .5rem 0 -.25rem;-webkit-margin-start:-.25rem;margin-inline-start:-.25rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}:host[data-size='s'] .t-icon_left{margin-right:.25rem;-webkit-margin-end:.25rem;margin-inline-end:.25rem}:host._autofilled .t-value-decoration:not(.t-has-value){visibility:hidden}:host._autofilled[data-size='m']:not(._focused) .t-placeholder,:host._autofilled[data-size='s']:not(._focused) .t-placeholder{visibility:hidden}.t-custom-content{position:relative;display:flex;align-items:center;justify-content:center;min-width:2rem;height:2rem;margin-right:.25rem;pointer-events:none}.t-custom-icon{width:2rem;height:100%}.t-icon{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;color:var(--tui-text-03);box-sizing:border-box;cursor:pointer;transition-property:color,transform;position:relative;pointer-events:none}.t-icon:hover{color:var(--tui-text-02)}:host._disabled .t-icon,:host._readonly .t-icon{pointer-events:none}:host[data-mode=onDark] .t-icon{color:var(--tui-text-03-night)}:host[data-mode=onDark] .t-icon:hover{color:var(--tui-text-01-night)}:host:hover:not(._readonly) .t-icon{color:var(--tui-text-02)}:host[data-mode=onDark]:hover:not(._readonly) .t-icon{color:var(--tui-text-01-night)}:host[data-mode=onLight]:hover:not(._readonly) .t-icon{color:var(--tui-text-01)}.t-input:not(:first-child){display:none}:host[data-size] .t-input_template{display:flex;width:calc(100% - 1rem);max-width:calc(100% - 1rem);align-items:center;pointer-events:none;-webkit-padding-end:0;padding-inline-end:0}.t-input:-webkit-autofill,.t-input:-webkit-autofill::first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:0 0!important;pointer-events:none!important}.t-text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-wrapper-value-decoration{position:relative;pointer-events:none}"]
            }),
            __param(0, core.Inject(tokens.TUI_MODE)),
            __param(1, core.Inject(tokens.TUI_TEXTFIELD_APPEARANCE)),
            __param(2, core.Inject(textfieldController.TUI_TEXTFIELD_WATCHED_CONTROLLER)),
            __param(3, core.Inject(hintController.TUI_HINT_WATCHED_CONTROLLER)),
            __param(4, core.Inject(TUI_PRIMITIVE_TEXTFIELD_OPTIONS)),
            __param(5, core.Inject(core.ElementRef))
        ], TuiPrimitiveTextfieldComponent);
        return TuiPrimitiveTextfieldComponent;
    }(cdk.AbstractTuiInteractive));

    var TuiPrimitiveTextfieldDirective = /** @class */ (function (_super) {
        __extends(TuiPrimitiveTextfieldDirective, _super);
        function TuiPrimitiveTextfieldDirective(textfield) {
            var _this = 
            /**
             * TuiPrimitiveTextfieldComponent satisfies all required parts of
             * AbstractTuiControl interface. A new interface is not introduced
             * so AbstractTuiControl is automatically injected for all other controls.
             */
            _super.call(this, textfield) || this;
            _this.textfield = textfield;
            return _this;
        }
        TuiPrimitiveTextfieldDirective_1 = TuiPrimitiveTextfieldDirective;
        Object.defineProperty(TuiPrimitiveTextfieldDirective.prototype, "readOnly", {
            get: function () {
                return this.textfield.readOnly || !this.textfield.editable;
            },
            enumerable: true,
            configurable: true
        });
        TuiPrimitiveTextfieldDirective.prototype.onValueChange = function (value) {
            this.textfield.onModelChange(value);
        };
        var TuiPrimitiveTextfieldDirective_1;
        TuiPrimitiveTextfieldDirective.ctorParameters = function () { return [
            { type: TuiPrimitiveTextfieldComponent, decorators: [{ type: core.Inject, args: [TuiPrimitiveTextfieldComponent,] }] }
        ]; };
        TuiPrimitiveTextfieldDirective = TuiPrimitiveTextfieldDirective_1 = __decorate([
            core.Directive({
                selector: 'tui-primitive-textfield',
                providers: [
                    {
                        provide: tokens.TUI_TEXTFIELD_HOST,
                        useExisting: core.forwardRef(function () { return TuiPrimitiveTextfieldDirective_1; }),
                    },
                ],
            }),
            __param(0, core.Inject(TuiPrimitiveTextfieldComponent))
        ], TuiPrimitiveTextfieldDirective);
        return TuiPrimitiveTextfieldDirective;
    }(abstract.TuiAbstractTextfieldHost));

    // @dynamic
    var TuiTextfieldComponent = /** @class */ (function () {
        function TuiTextfieldComponent(host, controller, elementRef, describedBy, idService) {
            this.host = host;
            this.controller = controller;
            this.elementRef = elementRef;
            this.describedBy = describedBy;
            this.idService = idService;
            this.host.process(this.elementRef.nativeElement);
        }
        Object.defineProperty(TuiTextfieldComponent.prototype, "computedDescribedBy", {
            get: function () {
                return this.describedBy.computedDescribedBy;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiTextfieldComponent.prototype, "id", {
            get: function () {
                return this.elementRef.nativeElement.id || this.idService.generate();
            },
            enumerable: true,
            configurable: true
        });
        TuiTextfieldComponent.prototype.ngDoCheck = function () {
            this.describedBy.tuiDescribedBy = this.id;
        };
        TuiTextfieldComponent.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [tokens.TUI_TEXTFIELD_HOST,] }] },
            { type: directives.TuiTextfieldController, decorators: [{ type: core.Inject, args: [directives.TUI_TEXTFIELD_WATCHED_CONTROLLER,] }] },
            { type: core.ElementRef, decorators: [{ type: core.Inject, args: [core.ElementRef,] }] },
            { type: directives.TuiDescribedByDirective, decorators: [{ type: core.Inject, args: [directives.TuiDescribedByDirective,] }] },
            { type: cdk.TuiIdService, decorators: [{ type: core.Inject, args: [cdk.TuiIdService,] }] }
        ]; };
        __decorate([
            core.HostBinding('attr.aria-describedby')
        ], TuiTextfieldComponent.prototype, "computedDescribedBy", null);
        __decorate([
            core.HostBinding('id')
        ], TuiTextfieldComponent.prototype, "id", null);
        TuiTextfieldComponent = __decorate([
            core.Component({
                selector: 'input[tuiTextfield], textarea[tuiTextfield]',
                template: '',
                providers: [
                    directives.TuiDescribedByDirective,
                    directives.TUI_DESCRIBED_BY_PROVIDERS,
                    directives.TEXTFIELD_CONTROLLER_PROVIDER,
                ],
                host: {
                    type: 'text',
                    '[attr.aria-placeholder]': 'controller.exampleText',
                    '[attr.aria-invalid]': 'host.invalid',
                    '[attr.disabled]': 'host.disabled || null',
                    '[tabIndex]': 'host.focusable ? 0 : -1',
                    '[readOnly]': 'host.readOnly',
                    '[value]': 'host.value',
                    '(input)': 'host.onValueChange($event.target.value)',
                },
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0;margin:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;padding:0 var(--tui-padding-m);border:solid transparent;border-width:0 var(--border-end,0) 0 var(--border-start,0);border-inline-start-width:var(--border-start,0);border-inline-end-width:var(--border-end,0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}:host:-webkit-autofill,:host:-webkit-autofill:focus,:host:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill,:host :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill:focus,:host :host-context(tui-primitive-textfield[data-mode=onDark]):-webkit-autofill:hover,:host :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill,:host :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill:focus,:host :host-context(tui-text-area[data-mode=onDark]):-webkit-autofill:hover,:host[data-mode=onDark] :host:-webkit-autofill,:host[data-mode=onDark] :host:-webkit-autofill:focus,:host[data-mode=onDark] :host:-webkit-autofill:hover{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}:host :host-context(tui-primitive-textfield[data-size='s']):not(tui-primitive-textfield),:host :host-context(tui-text-area[data-size='s']):not(tui-text-area),:host[data-size='s'] :host{padding:0 var(--tui-padding-s)}:host :host-context(tui-primitive-textfield[data-size='l']):not(tui-primitive-textfield),:host :host-context(tui-text-area[data-size='l']):not(tui-text-area),:host[data-size='l'] :host{padding:0 var(--tui-padding-l)}:host :host-context(tui-primitive-textfield._disabled),:host :host-context(tui-text-area._disabled),:host._disabled :host{pointer-events:none}:host :host-context(tui-primitive-textfield[data-size='l']:not(._label-outside)):not(tui-primitive-textfield),:host[data-size='l']:not(._label-outside) :host{padding-top:1.25rem}:host :host-context(tui-primitive-textfield[data-size='l']:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder,:host[data-size='l']:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host :host-context(tui-primitive-textfield[data-size='m']:not(._label-outside)):not(tui-primitive-textfield),:host[data-size='m']:not(._label-outside) :host{padding-top:1.125rem}:host :host-context(tui-primitive-textfield[data-size='m']:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder,:host[data-size='m']:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host :host-context(tui-primitive-textfield._hidden),:host._hidden input:host{opacity:0;text-indent:-10em;-webkit-user-select:none}:host::-ms-input-placeholder{color:var(--tui-text-03);opacity:0}:host::placeholder{color:var(--tui-text-03);opacity:0}:host :host-context(tui-primitive-textfield[data-mode=onDark])::-ms-input-placeholder,:host :host-context(tui-text-area[data-mode=onDark])::-ms-input-placeholder{color:var(--tui-text-03-night)}:host :host-context(tui-primitive-textfield[data-mode=onDark])::placeholder,:host :host-context(tui-text-area[data-mode=onDark])::placeholder{color:var(--tui-text-03-night)}:host :host-context(tui-primitive-textfield._focused:not(._readonly))::-ms-input-placeholder,:host :host-context(tui-text-area._focused:not(._readonly))::-ms-input-placeholder{opacity:1}:host :host-context(tui-primitive-textfield._focused:not(._readonly))::placeholder,:host :host-context(tui-text-area._focused:not(._readonly))::placeholder{opacity:1}:host::-webkit-caps-lock-indicator,:host::-webkit-contacts-auto-fill-button,:host::-webkit-credentials-auto-fill-button,:host::-webkit-credit-card-auto-fill-button,:host::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:0 0!important;pointer-events:none!important}textarea:host{white-space:normal}textarea:host :host-context(tui-text-area._ios){padding-left:.8125rem}"]
            }),
            __param(0, core.Inject(tokens.TUI_TEXTFIELD_HOST)),
            __param(1, core.Inject(directives.TUI_TEXTFIELD_WATCHED_CONTROLLER)),
            __param(2, core.Inject(core.ElementRef)),
            __param(3, core.Inject(directives.TuiDescribedByDirective)),
            __param(4, core.Inject(cdk.TuiIdService))
        ], TuiTextfieldComponent);
        return TuiTextfieldComponent;
    }());

    var TuiValueDecorationComponent = /** @class */ (function () {
        function TuiValueDecorationComponent(textfield, controller) {
            var _this = this;
            this.textfield = textfield;
            this.controller = controller;
            this.prefix$ = new rxjs.BehaviorSubject('');
            this.pre$ = this.prefix$.pipe(operators.delay(0), operators.filter(function () { var _a; return !!((_a = _this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.isConnected); }), operators.distinctUntilChanged(), operators.map(function () { var _a; return ((_a = _this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) || 0; }));
        }
        Object.defineProperty(TuiValueDecorationComponent.prototype, "isContextTable", {
            get: function () {
                return this.textfield.appearance === "table" /* Table */;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "value", {
            get: function () {
                return this.textfield.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "filler", {
            get: function () {
                var _a = this, focused = _a.focused, placeholder = _a.placeholder, exampleText = _a.exampleText, value = _a.value, textfield = _a.textfield;
                if (placeholder && exampleText) {
                    return '';
                }
                return focused ? exampleText || textfield.filler.slice(value.length) : '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "prefix", {
            get: function () {
                return this.decorationsVisible ? this.textfield.prefix : '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "postfix", {
            get: function () {
                return this.decorationsVisible ? this.computedPostfix : '';
            },
            enumerable: true,
            configurable: true
        });
        TuiValueDecorationComponent.prototype.ngDoCheck = function () {
            this.prefix$.next(this.prefix);
        };
        Object.defineProperty(TuiValueDecorationComponent.prototype, "placeholder", {
            get: function () {
                var _a;
                return ((_a = this.textfield.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder) || '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "exampleText", {
            get: function () {
                var exampleText = this.controller.exampleText || this.placeholder;
                return !this.value && this.focused ? exampleText : '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "decorationsVisible", {
            get: function () {
                return !!this.value || this.focused;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "focused", {
            get: function () {
                return this.textfield.computedFocused && !this.textfield.readOnly;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "computedPostfix", {
            get: function () {
                return this.textfield.postfix && (this.filler || this.value)
                    ? " " + this.textfield.postfix
                    : this.textfield.postfix;
            },
            enumerable: true,
            configurable: true
        });
        TuiValueDecorationComponent.ctorParameters = function () { return [
            { type: TuiPrimitiveTextfieldComponent, decorators: [{ type: core.Inject, args: [TuiPrimitiveTextfieldComponent,] }] },
            { type: directives.TuiTextfieldController, decorators: [{ type: core.Inject, args: [directives.TUI_TEXTFIELD_WATCHED_CONTROLLER,] }] }
        ]; };
        __decorate([
            core.ViewChild('pre', { read: core.ElementRef, static: true })
        ], TuiValueDecorationComponent.prototype, "pre", void 0);
        __decorate([
            core.HostBinding('class._table')
        ], TuiValueDecorationComponent.prototype, "isContextTable", null);
        __decorate([
            core.HostListener('animationstart')
        ], TuiValueDecorationComponent.prototype, "ngDoCheck", null);
        TuiValueDecorationComponent = __decorate([
            core.Component({
                selector: 'tui-value-decoration',
                template: "<span\n    #pre\n    class=\"t-prefix t-inline\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost t-inline\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler t-inline\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix t-inline\"\n    [textContent]=\"postfix\"\n></span>\n",
                // It follows Change Detection of PrimitiveTextfield
                changeDetection: core.ChangeDetectionStrategy.Default,
                styles: [":host{position:absolute;display:block;height:1.25rem;line-height:1;width:100%;margin:-1.25rem 0;padding:.625rem 0;box-sizing:content-box;color:var(--tui-text-01);animation:1s tuiPresent}:host._table{position:static}:host-context(tui-textfield[data-mode=onDark]) :host{color:var(--tui-text-01-night)}:host:after{content:'';display:inline-block;vertical-align:middle;height:100%}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip}.t-postfix,.t-prefix{white-space:pre}.t-filler{overflow:hidden;color:var(--tui-text-03);text-overflow:ellipsis;max-width:100%;white-space:nowrap}:host-context(tui-textfield[data-mode=onDark]) .t-filler{color:var(--tui-text-03-night)}.t-inline{display:inline-block;vertical-align:middle}"]
            }),
            __param(0, core.Inject(TuiPrimitiveTextfieldComponent)),
            __param(1, core.Inject(directives.TUI_TEXTFIELD_WATCHED_CONTROLLER))
        ], TuiValueDecorationComponent);
        return TuiValueDecorationComponent;
    }());

    var TuiPrimitiveTextfieldModule = /** @class */ (function () {
        function TuiPrimitiveTextfieldModule() {
        }
        TuiPrimitiveTextfieldModule = __decorate([
            core.NgModule({
                imports: [
                    common.CommonModule,
                    forms.FormsModule,
                    ngPolymorpheus.PolymorpheusModule,
                    maskAccessor.TuiMaskAccessorModule,
                    cdk.TuiFocusableModule,
                    cdk.TuiHoveredModule,
                    cdk.TuiInputModeModule,
                    wrapper.TuiWrapperModule,
                    svg.TuiSvgModule,
                    tooltip.TuiTooltipModule,
                    cdk.TuiAutofilledModule,
                    describedBy.TuiDescribedByModule,
                ],
                declarations: [
                    TuiPrimitiveTextfieldComponent,
                    TuiPrimitiveTextfieldDirective,
                    TuiTextfieldComponent,
                    TuiValueDecorationComponent,
                ],
                exports: [
                    TuiPrimitiveTextfieldComponent,
                    TuiPrimitiveTextfieldDirective,
                    TuiTextfieldComponent,
                ],
            })
        ], TuiPrimitiveTextfieldModule);
        return TuiPrimitiveTextfieldModule;
    }());

    exports.TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS = TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS;
    exports.TUI_PRIMITIVE_TEXTFIELD_ICON_CLEANER = TUI_PRIMITIVE_TEXTFIELD_ICON_CLEANER;
    exports.TUI_PRIMITIVE_TEXTFIELD_OPTIONS = TUI_PRIMITIVE_TEXTFIELD_OPTIONS;
    exports.TUI_PRIMITIVE_TEXTFIELD_PROVIDERS = TUI_PRIMITIVE_TEXTFIELD_PROVIDERS;
    exports.TuiPrimitiveTextfieldComponent = TuiPrimitiveTextfieldComponent;
    exports.TuiPrimitiveTextfieldDirective = TuiPrimitiveTextfieldDirective;
    exports.TuiPrimitiveTextfieldModule = TuiPrimitiveTextfieldModule;
    exports.TuiTextfieldComponent = TuiTextfieldComponent;
    exports.TuiValueDecorationComponent = TuiValueDecorationComponent;
    exports.tuiPrimitiveTextfieldOptionsProvider = tuiPrimitiveTextfieldOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-components-primitive-textfield.umd.js.map
