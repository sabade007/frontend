(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/directives/mode'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/cdk')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/providers', ['exports', '@angular/core', '@taiga-ui/core/tokens', '@taiga-ui/core/directives/mode', 'rxjs', 'rxjs/operators', '@taiga-ui/cdk'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.providers = {}), global.ng.core, global['taiga-ui'].core.tokens, global['taiga-ui'].core.directives.mode, global.rxjs, global.rxjs.operators, global.cdk));
}(this, (function (exports, core, tokens, mode, rxjs, operators, cdk) { 'use strict';

    /**
     * @deprecated: use {@link tuiIsMobileResFactory} instead
     */
    // eslint-disable-next-line @typescript-eslint/naming-convention
    function isMobileResFactory(mobile$, _a) {
        var nativeElement = _a.nativeElement;
        nativeElement["$.class._mobile"] = mobile$;
        return mobile$;
    }
    var TUI_IS_MOBILE_RES_PROVIDER = {
        provide: tokens.TUI_IS_MOBILE_RES,
        deps: [[new core.SkipSelf(), tokens.TUI_IS_MOBILE_RES], core.ElementRef],
        useFactory: isMobileResFactory,
    };
    var tuiIsMobileResFactory = isMobileResFactory;

    /**
     * @deprecated: use {@link tuiModeFactory} instead
     */
    // eslint-disable-next-line @typescript-eslint/naming-convention
    function modeFactory(mode, _a) {
        var nativeElement = _a.nativeElement;
        var mode$ = mode
            ? mode.change$.pipe(operators.startWith(null), operators.map(function () { return mode.mode; }))
            : rxjs.of(null);
        nativeElement["$.data-mode.attr"] = mode$;
        return mode$;
    }
    var MODE_PROVIDER = {
        provide: tokens.TUI_MODE,
        deps: [[new core.Optional(), mode.TuiModeDirective], core.ElementRef],
        useFactory: modeFactory,
    };
    var tuiModeFactory = modeFactory;

    /**
     * @deprecated: use {@link tuiWatchedControllerFactory} instead
     */
    // eslint-disable-next-line @typescript-eslint/naming-convention
    function watchedControllerFactory(controller, changeDetectorRef, destroy$) {
        controller.change$.pipe(cdk.watch(changeDetectorRef), operators.takeUntil(destroy$)).subscribe();
        return controller;
    }
    var tuiWatchedControllerFactory = watchedControllerFactory;

    exports.MODE_PROVIDER = MODE_PROVIDER;
    exports.TUI_IS_MOBILE_RES_PROVIDER = TUI_IS_MOBILE_RES_PROVIDER;
    exports.isMobileResFactory = isMobileResFactory;
    exports.modeFactory = modeFactory;
    exports.tuiIsMobileResFactory = tuiIsMobileResFactory;
    exports.tuiModeFactory = tuiModeFactory;
    exports.tuiWatchedControllerFactory = tuiWatchedControllerFactory;
    exports.watchedControllerFactory = watchedControllerFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-providers.umd.js.map
