!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@taiga-ui/cdk"),require("@angular/common"),require("@taiga-ui/core/components/link"),require("@taiga-ui/core/components/primitive-spin-button"),require("@taiga-ui/core/pipes")):"function"==typeof define&&define.amd?define("@taiga-ui/core/internal/primitive-year-month-pagination",["exports","@angular/core","@taiga-ui/cdk","@angular/common","@taiga-ui/core/components/link","@taiga-ui/core/components/primitive-spin-button","@taiga-ui/core/pipes"],e):e(((t=t||self)["taiga-ui"]=t["taiga-ui"]||{},t["taiga-ui"].core=t["taiga-ui"].core||{},t["taiga-ui"].core.internal=t["taiga-ui"].core.internal||{},t["taiga-ui"].core.internal["primitive-year-month-pagination"]={}),t.ng.core,t.cdk,t.ng.common,t["taiga-ui"].core.components.link,t["taiga-ui"].core.components["primitive-spin-button"],t["taiga-ui"].core.pipes)}(this,(function(t,e,i,n,o,a,r){"use strict";function u(t,e,i,n){var o,a=arguments.length,r=a<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,n);else for(var u=t.length-1;u>=0;u--)(o=t[u])&&(r=(a<3?o(r):a>3?o(e,i,r):o(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r}Object.create;Object.create;var p=function(){function t(){this.value=i.TuiMonth.currentLocal(),this.min=i.TUI_FIRST_DAY,this.max=i.TUI_LAST_DAY,this.valueChange=new e.EventEmitter,this.yearClick=new e.EventEmitter}return Object.defineProperty(t.prototype,"prevMonthDisabled",{get:function(){return this.value.monthSameOrBefore(this.min)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nextMonthDisabled",{get:function(){return this.value.monthSameOrAfter(this.max)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"oneYear",{get:function(){return this.min.year===this.max.year},enumerable:!0,configurable:!0}),t.prototype.onYearClick=function(){this.yearClick.next(this.value)},t.prototype.onPrevMonthClick=function(){this.appendValueWithLimit({month:-1})},t.prototype.onNextMonthClick=function(){this.appendValueWithLimit({month:1})},t.prototype.appendValueWithLimit=function(t){var e=this.value.append(t);this.min.monthSameOrAfter(e)?this.updateValue(this.min):this.max.monthSameOrBefore(e)?this.updateValue(this.max):this.updateValue(e)},t.prototype.updateValue=function(t){this.value.monthSame(t)||(this.value=t,this.valueChange.emit(t))},u([e.Input(),i.tuiDefaultProp()],t.prototype,"value",void 0),u([e.Input(),i.tuiDefaultProp()],t.prototype,"min",void 0),u([e.Input(),i.tuiDefaultProp()],t.prototype,"max",void 0),u([e.Output()],t.prototype,"valueChange",void 0),u([e.Output()],t.prototype,"yearClick",void 0),t=u([e.Component({selector:"tui-primitive-year-month-pagination",template:'<tui-primitive-spin-button\n    [focusable]="false"\n    [leftDisabled]="prevMonthDisabled"\n    [rightDisabled]="nextMonthDisabled"\n    (leftClick)="onPrevMonthClick()"\n    (rightClick)="onNextMonthClick()"\n>\n    {{ value | tuiMonth | async }}\n    <ng-container *ngIf="oneYear; else button">\n        {{ value.formattedYear }}\n    </ng-container>\n    <ng-template #button>\n        <button\n            automation-id="tui-primitive-year-month-pagination__year-button"\n            tuiLink\n            type="button"\n            [tuiFocusable]="false"\n            (click)="onYearClick()"\n        >\n            {{ value.formattedYear }}\n        </button>\n    </ng-template>\n</tui-primitive-spin-button>\n',styles:[":host{display:block}"]})],t)}(),l=function(){function t(){}return t=u([e.NgModule({imports:[n.CommonModule,i.TuiFocusableModule,a.TuiPrimitiveSpinButtonModule,o.TuiLinkModule,r.TuiMonthPipeModule],declarations:[p],exports:[p]})],t)}();t.TuiPrimitiveYearMonthPaginationComponent=p,t.TuiPrimitiveYearMonthPaginationModule=l,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-core-internal-primitive-year-month-pagination.umd.min.js.map