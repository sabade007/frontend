{"version":3,"file":"taiga-ui-core-providers.umd.js","sources":["ng://@taiga-ui/core/providers/is-mobile-resolution.provider.ts","ng://@taiga-ui/core/providers/mode.provider.ts","ng://@taiga-ui/core/providers/watched-controller-provider-factory.ts"],"sourcesContent":["import {ElementRef, Provider, SkipSelf} from '@angular/core';\nimport {TUI_IS_MOBILE_RES} from '@taiga-ui/core/tokens';\nimport {Observable} from 'rxjs';\n\n/**\n * @deprecated: use {@link tuiIsMobileResFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isMobileResFactory(\n    mobile$: Observable<boolean>,\n    {nativeElement}: ElementRef,\n): Observable<boolean> {\n    nativeElement[`$.class._mobile`] = mobile$;\n\n    return mobile$;\n}\n\nexport const TUI_IS_MOBILE_RES_PROVIDER: Provider = {\n    provide: TUI_IS_MOBILE_RES,\n    deps: [[new SkipSelf(), TUI_IS_MOBILE_RES], ElementRef],\n    useFactory: isMobileResFactory,\n};\n\nexport const tuiIsMobileResFactory = isMobileResFactory;\n","import {ElementRef, Optional, Provider} from '@angular/core';\nimport {TuiModeDirective} from '@taiga-ui/core/directives/mode';\nimport {TUI_MODE} from '@taiga-ui/core/tokens';\nimport {TuiBrightness} from '@taiga-ui/core/types';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiModeFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function modeFactory(\n    mode: TuiModeDirective | null,\n    {nativeElement}: ElementRef,\n): Observable<TuiBrightness | null> {\n    const mode$ = mode\n        ? mode.change$.pipe(\n              startWith(null),\n              map(() => mode.mode),\n          )\n        : of(null);\n\n    nativeElement[`$.data-mode.attr`] = mode$;\n\n    return mode$;\n}\n\nexport const MODE_PROVIDER: Provider = {\n    provide: TUI_MODE,\n    deps: [[new Optional(), TuiModeDirective], ElementRef],\n    useFactory: modeFactory,\n};\n\nexport const tuiModeFactory = modeFactory;\n","import {ChangeDetectorRef} from '@angular/core';\nimport {TuiController, watch} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/**\n * @deprecated: use {@link tuiWatchedControllerFactory} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function watchedControllerFactory(\n    controller: TuiController,\n    changeDetectorRef: ChangeDetectorRef,\n    destroy$: Observable<void>,\n): TuiController {\n    controller.change$.pipe(watch(changeDetectorRef), takeUntil(destroy$)).subscribe();\n\n    return controller;\n}\n\nexport const tuiWatchedControllerFactory = watchedControllerFactory;\n"],"names":["TUI_IS_MOBILE_RES","SkipSelf","ElementRef","startWith","map","of","TUI_MODE","Optional","TuiModeDirective","watch","takeUntil"],"mappings":";;;;;;IAIA;;;IAGA;aACgB,kBAAkB,CAC9B,OAA4B,EAC5B,EAA2B;YAA1B,gCAAa;QAEd,aAAa,CAAC,iBAAiB,CAAC,GAAG,OAAO,CAAC;QAE3C,OAAO,OAAO,CAAC;IACnB,CAAC;QAEY,0BAA0B,GAAa;QAChD,OAAO,EAAEA,wBAAiB;QAC1B,IAAI,EAAE,CAAC,CAAC,IAAIC,aAAQ,EAAE,EAAED,wBAAiB,CAAC,EAAEE,eAAU,CAAC;QACvD,UAAU,EAAE,kBAAkB;MAChC;QAEW,qBAAqB,GAAG;;IChBrC;;;IAGA;aACgB,WAAW,CACvB,IAA6B,EAC7B,EAA2B;YAA1B,gCAAa;QAEd,IAAM,KAAK,GAAG,IAAI;cACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CACbC,mBAAS,CAAC,IAAI,CAAC,EACfC,aAAG,CAAC,cAAM,OAAA,IAAI,CAAC,IAAI,GAAA,CAAC,CACvB;cACDC,OAAE,CAAC,IAAI,CAAC,CAAC;QAEf,aAAa,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;QAE1C,OAAO,KAAK,CAAC;IACjB,CAAC;QAEY,aAAa,GAAa;QACnC,OAAO,EAAEC,eAAQ;QACjB,IAAI,EAAE,CAAC,CAAC,IAAIC,aAAQ,EAAE,EAAEC,qBAAgB,CAAC,EAAEN,eAAU,CAAC;QACtD,UAAU,EAAE,WAAW;MACzB;QAEW,cAAc,GAAG;;IC5B9B;;;IAGA;aACgB,wBAAwB,CACpC,UAAyB,EACzB,iBAAoC,EACpC,QAA0B;QAE1B,UAAU,CAAC,OAAO,CAAC,IAAI,CAACO,SAAK,CAAC,iBAAiB,CAAC,EAAEC,mBAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAEnF,OAAO,UAAU,CAAC;IACtB,CAAC;QAEY,2BAA2B,GAAG;;;;;;;;;;;;;;;;;;;"}