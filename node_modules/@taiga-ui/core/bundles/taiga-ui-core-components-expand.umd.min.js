!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@taiga-ui/cdk"),require("@taiga-ui/core/constants"),require("@angular/common"),require("@taiga-ui/core/components/loader")):"function"==typeof define&&define.amd?define("@taiga-ui/core/components/expand",["exports","@angular/core","@taiga-ui/cdk","@taiga-ui/core/constants","@angular/common","@taiga-ui/core/components/loader"],t):t(((e=e||self)["taiga-ui"]=e["taiga-ui"]||{},e["taiga-ui"].core=e["taiga-ui"].core||{},e["taiga-ui"].core.components=e["taiga-ui"].core.components||{},e["taiga-ui"].core.components.expand={}),e.ng.core,e.cdk,e["taiga-ui"].core.constants,e.ng.common,e["taiga-ui"].core.components.loader)}(this,(function(e,t,n,o,i,r){"use strict";function a(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}Object.create;Object.create;var d,c=function(){function e(){}return e=a([t.Directive({selector:"[tuiExpandContent]"})],e)}();!function(e){e[e.Idle=0]="Idle",e[e.Loading=1]="Loading",e[e.Prepared=2]="Prepared",e[e.Animated=3]="Animated"}(d||(d={}));var p=function(){function e(e){this.changeDetectorRef=e,this.state=d.Idle,this.async=!1,this.content=null,this.expanded=null}var i,r;return Object.defineProperty(e.prototype,"expandedSetter",{set:function(e){if(null!==this.expanded){if(this.state!==d.Idle)return this.expanded=e,void(this.state=d.Animated);this.expanded=e,this.retrigger(this.async&&e?d.Loading:d.Animated)}else this.expanded=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"overflow",{get:function(){return this.state!==d.Idle},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"loading",{get:function(){return!!this.expanded&&this.async&&this.state===d.Loading},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){var e=this.expanded,t=this.state,n=this.contentWrapper;return e&&t===d.Prepared||!e&&t===d.Animated?0:n&&(!e&&t===d.Prepared||e&&t===d.Animated)?n.nativeElement.offsetHeight:n&&e&&t===d.Loading?Math.max(n.nativeElement.offsetHeight,48):null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contentVisible",{get:function(){return this.expanded||this.state!==d.Idle},enumerable:!0,configurable:!0}),e.prototype.onTransitionEnd=function(e){n.isCurrentTarget(e)&&"opacity"===e.propertyName&&this.state===d.Animated&&(this.state=d.Idle)},e.prototype.onExpandLoaded=function(e){e.stopPropagation(),this.state===d.Loading&&this.retrigger(d.Animated)},e.prototype.retrigger=function(e){var t=this;this.state=d.Prepared,setTimeout((function(){t.state===d.Prepared&&(t.state=e,t.changeDetectorRef.markForCheck())}))},e.ctorParameters=function(){return[{type:t.ChangeDetectorRef,decorators:[{type:t.Inject,args:[t.ChangeDetectorRef]}]}]},a([t.ViewChild("wrapper")],e.prototype,"contentWrapper",void 0),a([t.Input(),n.tuiDefaultProp()],e.prototype,"async",void 0),a([t.Input("expanded"),n.tuiRequiredSetter()],e.prototype,"expandedSetter",null),a([t.ContentChild(c,{read:t.TemplateRef})],e.prototype,"content",void 0),a([t.HostBinding("class._expanded"),t.HostBinding("attr.aria-expanded")],e.prototype,"expanded",void 0),a([t.HostBinding("class._overflow")],e.prototype,"overflow",null),a([t.HostBinding("class._loading")],e.prototype,"loading",null),a([t.HostBinding("style.height.px")],e.prototype,"height",null),a([t.HostListener("transitionend",["$event"])],e.prototype,"onTransitionEnd",null),a([t.HostListener(o.TUI_EXPAND_LOADED,["$event"])],e.prototype,"onExpandLoaded",null),e=a([t.Component({selector:"tui-expand",template:'<div\n    #wrapper\n    class="t-wrapper"\n>\n    <ng-container *ngIf="contentVisible">\n        <ng-content></ng-content>\n        \x3c!-- TODO: 3.0 collision with async pipe, fix after upgrade to ng11 --\x3e\n        <tui-loader\n            *ngIf="this.async; else content"\n            size="l"\n            [overlay]="true"\n            [showLoader]="loading"\n        >\n            <ng-container [ngTemplateOutlet]="content"></ng-container>\n        </tui-loader>\n    </ng-container>\n</div>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{display:block;transition-property:opacity,height,visibility;transition-duration:var(--tui-duration,300ms);opacity:0}:host._overflow{overflow:hidden}:host._expanded{opacity:1;transform:translate3d(0,0,0)}:host._loading{opacity:.99}.t-wrapper:after,.t-wrapper:before{content:'';display:table}"]}),(i=0,r=t.Inject(t.ChangeDetectorRef),function(e,t){r(e,t,i)})],e)}(),s=function(){function e(){}return e=a([t.NgModule({imports:[i.CommonModule,r.TuiLoaderModule],declarations:[p,c],exports:[p,c]})],e)}();e.TuiExpandComponent=p,e.TuiExpandContentDirective=c,e.TuiExpandModule=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=taiga-ui-core-components-expand.umd.min.js.map