import { AnimationOptions } from '@angular/animations';
import { ElementRef, OnInit } from '@angular/core';
import { TuiContextWithImplicit, TuiDestroyService, TuiDialog } from '@taiga-ui/cdk';
import { TuiNotification } from '@taiga-ui/core/enums';
import { TuiAlertOptions } from '@taiga-ui/core/interfaces';
import { TuiNotificationDefaultOptions } from '@taiga-ui/core/tokens';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export interface TuiNotificationContentContext<O = void, I = undefined> extends TuiContextWithImplicit<TuiNotification> {
    label: PolymorpheusContent<TuiContextWithImplicit<TuiNotification>>;
    data: I;
    closeHook: () => void;
    emitHook: (data: O) => void;
    emitAndCloseHook: (data: O) => void;
}
export declare class TuiAlertComponent<O, I> implements OnInit {
    private readonly elementRef;
    private readonly destroy$;
    private readonly options;
    private readonly animationOptions;
    readonly item: TuiDialog<TuiAlertOptions<I>, O>;
    private readonly autoClose;
    readonly animation: {
        readonly delay?: string | number | undefined;
        readonly params?: {
            [name: string]: any;
        } | undefined;
        readonly value: "";
    };
    constructor(elementRef: ElementRef<HTMLElement>, destroy$: TuiDestroyService, options: TuiNotificationDefaultOptions, animationOptions: AnimationOptions, item: TuiDialog<TuiAlertOptions<I>, O>);
    ngOnInit(): void;
    get context(): TuiNotificationContentContext<O, I>;
    closeNotification(): void;
    private calculateContext;
    private initAutoClose;
}
