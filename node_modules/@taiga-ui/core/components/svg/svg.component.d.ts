import { ElementRef, Sanitizer } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { TuiStaticRequestService, TuiStringHandler } from '@taiga-ui/cdk';
import { TuiSvgService } from '@taiga-ui/core/services';
import { Observable } from 'rxjs';
export declare class TuiSvgComponent {
    private readonly documentRef;
    private readonly windowRef;
    private readonly iconsPath;
    private readonly tuiSanitizer;
    private readonly svgService;
    private readonly staticRequestService;
    private readonly sanitizer;
    private readonly elementRef;
    private readonly userAgent;
    private readonly srcProcessor;
    private readonly contentProcessor;
    private readonly src$;
    private readonly isIE;
    private icon;
    set src(src: string);
    get src(): string;
    readonly innerHTML$: Observable<SafeHtml>;
    constructor(documentRef: Document, windowRef: Window, iconsPath: TuiStringHandler<string>, tuiSanitizer: Sanitizer | null, svgService: TuiSvgService, staticRequestService: TuiStaticRequestService, sanitizer: DomSanitizer, elementRef: ElementRef<Element>, userAgent: string, srcProcessor: TuiStringHandler<string>, contentProcessor: TuiStringHandler<string>);
    get use(): string;
    get isInnerHTML(): boolean;
    private get isShadowDOM();
    private get isUse();
    private get isExternal();
    private get isUrl();
    private get isSrc();
    private get isName();
    private get isCrossDomain();
    onError(message?: string): void;
    private resolveName;
    private getSafeHtml;
    private process;
    private sanitize;
    private getExternalIcon;
}
