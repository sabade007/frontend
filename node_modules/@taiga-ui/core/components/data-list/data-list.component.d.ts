import { ElementRef } from '@angular/core';
import { TuiDataListAccessor } from '@taiga-ui/core/interfaces';
import { TuiDataListRole } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
export declare class TuiDataListComponent<T> implements TuiDataListAccessor<T> {
    private readonly elementRef;
    readonly defaultEmptyContent$: Observable<string>;
    private readonly options;
    private origin?;
    role: TuiDataListRole;
    emptyContent: PolymorpheusContent;
    constructor(elementRef: ElementRef<HTMLElement>, defaultEmptyContent$: Observable<string>);
    get empty$(): Observable<boolean>;
    onFocusIn(relatedTarget: HTMLElement, currentTarget: HTMLElement): void;
    noop(): void;
    onKeyDownArrow(current: HTMLElement, step: number): void;
    handleFocusLossIfNecessary(element?: HTMLElement): void;
    getOptions(includeDisabled?: boolean): readonly T[];
    onFocus({ target }: Event, top: boolean): void;
    private get elements();
}
