import { ElementRef, OnDestroy, TemplateRef } from '@angular/core';
import { TuiContextWithImplicit, TuiEventWith } from '@taiga-ui/cdk';
import { TuiDropdownDirective } from '@taiga-ui/core/directives/dropdown';
import { TuiDataListHost } from '@taiga-ui/core/interfaces';
import { TuiOptionRole, TuiSizeL, TuiSizeXS } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { TuiDataListComponent } from '../data-list.component';
export declare function shouldFocus({ currentTarget, }: TuiEventWith<MouseEvent, HTMLElement>): boolean;
export declare class TuiOptionComponent<T = unknown> implements OnDestroy {
    readonly content: PolymorpheusContent<TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>> | null;
    private readonly dataList;
    private readonly elementRef;
    private readonly host;
    readonly dropdown: TuiDropdownDirective | null;
    size: TuiSizeL | TuiSizeXS;
    role: TuiOptionRole;
    disabled: boolean;
    value?: T;
    constructor(content: PolymorpheusContent<TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>> | null, dataList: TuiDataListComponent<T>, elementRef: ElementRef<HTMLElement>, host: TuiDataListHost<T> | null, dropdown: TuiDropdownDirective | null);
    get active(): boolean;
    onClick(): void;
    onMouseMove({ currentTarget }: TuiEventWith<MouseEvent, HTMLElement>): void;
    ngOnDestroy(): void;
}
