import { InjectionToken, inject, isDevMode, NgZone, ElementRef } from '@angular/core';
import { extractI18n } from '@taiga-ui/i18n';
import { iconsPathFactory, tuiIsMobile } from '@taiga-ui/core/utils';
import { WINDOW } from '@ng-web-apis/common';
import { typedFromEvent, tuiZoneOptimized, CHAR_NO_BREAK_SPACE, TUI_SANITIZER as TUI_SANITIZER$1 } from '@taiga-ui/cdk';
import { share, startWith, map, distinctUntilChanged } from 'rxjs/operators';
import { __assign, __spread } from 'tslib';
import { DOCUMENT } from '@angular/common';
import { svgLinearGradientProcessor } from '@taiga-ui/cdk/utils/svg';
import { identity } from 'rxjs';

var TUI_ANIMATIONS_DURATION = new InjectionToken("Duration of all Taiga UI animations in ms", {
    factory: function () { return 300; },
});

var TUI_ANIMATION_OPTIONS = new InjectionToken("Options for Taiga UI animations", {
    factory: function () { return ({
        params: {
            duration: inject(TUI_ANIMATIONS_DURATION),
        },
    }); },
});

var TUI_ASSERT_ENABLED = new InjectionToken("Flag to enable assertions across Taiga UI", {
    factory: function () { return isDevMode(); },
});

var TUI_DATA_LIST_ACCESSOR = new InjectionToken("Accessor for options");

var TUI_DATA_LIST_HOST = new InjectionToken("DataList controller");

var TUI_DOCUMENT_OR_SHADOW_ROOT = new InjectionToken("Document or ShadowRoot");

var TUI_DROPDOWN_DIRECTIVE = new InjectionToken("Directive controlling TuiDropdownBoxComponent");

var TUI_ELEMENT_REF = new InjectionToken("ElementRef when you cannot use @Input for single time injection");

var TUI_FIRST_DAY_OF_WEEK = new InjectionToken("The first day of the week index", {
    factory: function () { return 1 /* Monday */; },
});

var TUI_MONTHS = new InjectionToken("Localized months names", {
    factory: extractI18n("months"),
});
var TUI_CLOSE_WORD = new InjectionToken("i18n 'close' word", {
    factory: extractI18n("close"),
});
var TUI_NOTHING_FOUND_MESSAGE = new InjectionToken("i18n 'Nothing found' message", {
    factory: extractI18n("nothingFoundMessage"),
});
var TUI_DEFAULT_ERROR_MESSAGE = new InjectionToken("i18n of error message", {
    factory: extractI18n("defaultErrorMessage"),
});
var TUI_SPIN_TEXTS = new InjectionToken("spin i18n texts", {
    factory: extractI18n("spinTexts"),
});
var TUI_SHORT_WEEK_DAYS = new InjectionToken("calendars i18n texts", {
    factory: extractI18n("shortWeekDays"),
});

var TUI_ICONS_PLACE = new InjectionToken("Recommended paths to icons from documentation guide", {
    factory: function () { return "assets/taiga-ui/icons"; },
});

var TUI_ICONS = new InjectionToken("A key/value dictionary of icon names and src to be defined with TuiSvgService", {
    factory: function () { return ({}); },
});

var TUI_ICONS_PATH = new InjectionToken("A handler to retrieve USE id for icon by name", { factory: function () { return iconsPathFactory(inject(TUI_ICONS_PLACE)); } });

var TUI_MEDIA = new InjectionToken("Token for media constant", {
    factory: function () { return ({
        mobile: 768,
        desktopSmall: 1024,
        desktopLarge: 1280,
    }); },
});

var TUI_IS_MOBILE_RES = new InjectionToken("Mobile resolution stream for private providers", {
    factory: function () {
        var windowRef = inject(WINDOW);
        var media = inject(TUI_MEDIA);
        return typedFromEvent(windowRef, "resize").pipe(share(), startWith(null), map(function () { return tuiIsMobile(windowRef, media); }), distinctUntilChanged(), tuiZoneOptimized(inject(NgZone)));
    },
});

var TUI_MODE = new InjectionToken("Mode stream for private providers");

/** Default values for the notification options. */
var TUI_NOTIFICATION_DEFAULT_OPTIONS = {
    autoClose: true,
    label: "",
    status: "info" /* Info */,
    hasIcon: true,
    hasCloseButton: true,
    defaultAutoCloseTime: 3000,
};
var TUI_NOTIFICATION_OPTIONS = new InjectionToken("Default parameters for notification alert component", {
    factory: function () { return TUI_NOTIFICATION_DEFAULT_OPTIONS; },
});
function tuiNotificationOptionsProvider(options) {
    return {
        provide: TUI_NOTIFICATION_OPTIONS,
        useValue: __assign(__assign({}, TUI_NOTIFICATION_DEFAULT_OPTIONS), options),
    };
}

var TUI_NUMBER_FORMAT = new InjectionToken("Formatting configuration for displayed numbers", {
    factory: function () { return ({
        decimalSeparator: ",",
        thousandSeparator: CHAR_NO_BREAK_SPACE,
        zeroPadding: true,
    }); },
});

var TUI_OPTION_CONTENT = new InjectionToken("Content for tuiOption component");

// TODO: 3.0 Remove export in ivy compilation
var convertToSundayFirstWeekFormat = function (weekDaysNames) {
    var sundayIndex = weekDaysNames.length - 1;
    return __spread([
        weekDaysNames[sundayIndex]
    ], weekDaysNames.slice(0, sundayIndex));
};
var TUI_ORDERED_SHORT_WEEK_DAYS = new InjectionToken("Ordered calendars i18n texts", {
    factory: function () {
        var firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);
        return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(function (weekDays) {
            return __spread(weekDays.slice(firstDayOfWeekIndex), weekDays.slice(0, firstDayOfWeekIndex));
        }));
    },
});

var TUI_SANITIZER = TUI_SANITIZER$1;

/**
 * Scrollable container
 */
var TUI_SCROLL_REF = new InjectionToken("[TUI_SCROLL_REF]", {
    factory: function () { return new ElementRef(inject(DOCUMENT).documentElement); },
});

var TUI_SVG_CONTENT_PROCESSOR = new InjectionToken("Transform function the contents of the loaded svg file", { factory: function () { return svgLinearGradientProcessor; } });

var TUI_SVG_SRC_PROCESSOR = new InjectionToken("Source path processor for svg", {
    factory: function () { return identity; },
});

var TUI_TEXTFIELD_APPEARANCE = new InjectionToken("Appearance for inputs", {
    factory: function () { return "textfield" /* Textfield */; },
});

var TUI_TEXTFIELD_HOST = new InjectionToken("An interface to communicate with textfield based controls");

var TUI_THEME = new InjectionToken("Theme name", {
    factory: function () { return "Taiga"; },
});

var TUI_VALUE_ACCESSOR = new InjectionToken("Buffer token to pass NG_VALUE_ACCESSOR to a different Injector");

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_ANIMATIONS_DURATION, TUI_ANIMATION_OPTIONS, TUI_ASSERT_ENABLED, TUI_CLOSE_WORD, TUI_DATA_LIST_ACCESSOR, TUI_DATA_LIST_HOST, TUI_DEFAULT_ERROR_MESSAGE, TUI_DOCUMENT_OR_SHADOW_ROOT, TUI_DROPDOWN_DIRECTIVE, TUI_ELEMENT_REF, TUI_FIRST_DAY_OF_WEEK, TUI_ICONS, TUI_ICONS_PATH, TUI_ICONS_PLACE, TUI_IS_MOBILE_RES, TUI_MEDIA, TUI_MODE, TUI_MONTHS, TUI_NOTHING_FOUND_MESSAGE, TUI_NOTIFICATION_DEFAULT_OPTIONS, TUI_NOTIFICATION_OPTIONS, TUI_NUMBER_FORMAT, TUI_OPTION_CONTENT, TUI_ORDERED_SHORT_WEEK_DAYS, TUI_SANITIZER, TUI_SCROLL_REF, TUI_SHORT_WEEK_DAYS, TUI_SPIN_TEXTS, TUI_SVG_CONTENT_PROCESSOR, TUI_SVG_SRC_PROCESSOR, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_HOST, TUI_THEME, TUI_VALUE_ACCESSOR, convertToSundayFirstWeekFormat, tuiNotificationOptionsProvider };
//# sourceMappingURL=taiga-ui-core-tokens.js.map
