import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Input, HostBinding, Component, forwardRef, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { typedFromEvent, isNativeFocused, TuiFocusVisibleService, tuiDefaultProp, TUI_FOCUSABLE_ITEM_ACCESSOR, TuiDestroyService } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { merge, Observable } from 'rxjs';
import { mapTo } from 'rxjs/operators';
import { CommonModule } from '@angular/common';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';

// @bad TODO: Think about extending Interactive
var TuiLinkComponent = /** @class */ (function () {
    function TuiLinkComponent(elementRef, mode$, focusVisible$) {
        var _this = this;
        this.elementRef = elementRef;
        this.mode$ = mode$;
        this.pseudo = false;
        // TODO: 3.0 Remove `null`
        this.icon = null;
        this.iconAlign = 'right';
        this.iconRotated = false;
        this.mode = null;
        this.focusVisible = false;
        this.focusedChange = merge(typedFromEvent(this.elementRef.nativeElement, 'focusin').pipe(mapTo(true)), typedFromEvent(this.elementRef.nativeElement, 'focusout').pipe(mapTo(false)));
        focusVisible$.subscribe(function (visible) {
            _this.focusVisible = visible;
        });
    }
    TuiLinkComponent_1 = TuiLinkComponent;
    Object.defineProperty(TuiLinkComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "focused", {
        get: function () {
            return isNativeFocused(this.nativeFocusableElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "hasIcon", {
        get: function () {
            return this.icon !== null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "iconAlignLeft", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'left';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "iconAlignRight", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'right';
        },
        enumerable: true,
        configurable: true
    });
    var TuiLinkComponent_1;
    TuiLinkComponent.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
        { type: TuiFocusVisibleService, decorators: [{ type: Inject, args: [TuiFocusVisibleService,] }] }
    ]; };
    __decorate([
        Input(),
        HostBinding('class._pseudo'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "pseudo", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "icon", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "iconAlign", void 0);
    __decorate([
        Input(),
        HostBinding('class._icon-rotated'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "iconRotated", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-host-mode'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "mode", void 0);
    __decorate([
        HostBinding('class._focus-visible')
    ], TuiLinkComponent.prototype, "focusVisible", void 0);
    TuiLinkComponent = TuiLinkComponent_1 = __decorate([
        Component({
            selector: 'a[tuiLink], button[tuiLink]',
            template: "<tui-svg\n    *ngIf=\"iconAlignLeft\"\n    class=\"t-icon t-icon_left\"\n    [src]=\"icon || ''\"\n></tui-svg>\n<span class=\"t-content\">\n    <ng-content></ng-content>\n</span>\n<tui-svg\n    *ngIf=\"iconAlignRight\"\n    class=\"t-icon t-icon_right\"\n    [src]=\"icon || ''\"\n></tui-svg>\n",
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiLinkComponent_1; }),
                },
                TuiFocusVisibleService,
                TuiDestroyService,
                MODE_PROVIDER,
            ],
            changeDetection: ChangeDetectionStrategy.OnPush,
            exportAs: 'tuiLink',
            host: {
                '($.data-mode.attr)': 'mode$',
            },
            styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:0 0;font-size:inherit;line-height:inherit;transition-property:color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;color:var(--tui-link);text-decoration:none;text-align:left;text-transform:inherit;font-weight:inherit;cursor:pointer;outline:0}:host:hover{color:var(--tui-link-hover)}:host:disabled{opacity:var(--tui-disabled-opacity);cursor:default}:host[data-mode=onLight]{color:var(--tui-text-02)}:host[data-mode=onLight]._active,:host[data-mode=onLight]:hover{color:var(--tui-text-01)}:host[data-mode=onLight]._pseudo{color:var(--tui-text-01)}:host[data-mode=onLight]._pseudo .t-content{-webkit-text-decoration-color:rgba(0,0,0,.48);text-decoration-color:rgba(0,0,0,.48)}:host[data-mode=onLight]._pseudo._active,:host[data-mode=onLight]._pseudo:hover{color:var(--tui-text-03)}:host[data-mode=onLight][data-host-mode=negative]{color:var(--tui-negative-night)}:host[data-mode=onLight][data-host-mode=negative]._active,:host[data-mode=onLight][data-host-mode=negative]:active,:host[data-mode=onLight][data-host-mode=negative]:hover{color:var(--tui-negative-night-hover)}:host[data-mode=onDark]{color:var(--tui-text-03-night)}:host[data-mode=onDark]._active,:host[data-mode=onDark]:active,:host[data-mode=onDark]:hover{color:var(--tui-text-01-night)}:host[data-mode=onDark]._pseudo{color:var(--tui-text-01-night)}:host[data-mode=onDark]._pseudo .t-content{-webkit-text-decoration-color:rgba(255,255,255,.48);text-decoration-color:rgba(255,255,255,.48)}:host[data-mode=onDark]._pseudo._active,:host[data-mode=onDark]._pseudo:active,:host[data-mode=onDark]._pseudo:hover{color:var(--tui-text-03-night)}:host[data-mode=onDark][data-host-mode=positive]{color:var(--tui-positive-night)}:host[data-mode=onDark][data-host-mode=positive]._active,:host[data-mode=onDark][data-host-mode=positive]:active,:host[data-mode=onDark][data-host-mode=positive]:hover{color:var(--tui-positive-night-hover)}:host[data-host-mode=negative]{color:var(--tui-negative)}:host[data-host-mode=negative]:hover{color:var(--tui-negative-hover)}:host[data-host-mode=negative]._pseudo .t-content{-webkit-text-decoration-color:rgba(222,76,30,.48);text-decoration-color:rgba(222,76,30,.48)}:host[data-host-mode=positive]{color:var(--tui-positive)}:host[data-host-mode=positive]:hover{color:var(--tui-positive-hover)}:host[data-host-mode=positive]._pseudo .t-content{-webkit-text-decoration-color:rgba(58,169,129,.48);text-decoration-color:rgba(58,169,129,.48)}:host._focus-visible .t-content{background:var(--tui-selection)}:host[data-mode=onLight]._focus-visible .t-content{background:var(--tui-clear);color:var(--tui-text-01)}:host[data-mode=onDark]._focus-visible .t-content{background:var(--tui-clear-inverse);color:var(--tui-text-01-night)}:host[data-host-mode=positive]._focus-visible .t-content{background:var(--tui-success-bg)}:host[data-host-mode=negative]._focus-visible .t-content{background:var(--tui-error-bg)}:host._pseudo .t-content{padding-bottom:.15em;-webkit-text-decoration:underline dashed rgba(51,111,238,.48);text-decoration:underline dashed rgba(51,111,238,.48);text-underline-offset:.2em;text-decoration-thickness:.7px}.t-icon{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;margin-top:-.125rem;opacity:.8}.t-icon_left{margin-right:.25rem}.t-icon_right{margin-left:.25rem}:host:hover .t-icon{opacity:1}:host._icon-rotated .t-icon{transform:rotate(180deg)}"]
        }),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(TUI_MODE)),
        __param(2, Inject(TuiFocusVisibleService))
    ], TuiLinkComponent);
    return TuiLinkComponent;
}());

var TuiLinkModule = /** @class */ (function () {
    function TuiLinkModule() {
    }
    TuiLinkModule = __decorate([
        NgModule({
            imports: [CommonModule, TuiSvgModule],
            declarations: [TuiLinkComponent],
            exports: [TuiLinkComponent],
        })
    ], TuiLinkModule);
    return TuiLinkModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiLinkComponent, TuiLinkModule };
//# sourceMappingURL=taiga-ui-core-components-link.js.map
