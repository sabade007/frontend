import { __decorate } from 'tslib';
import { Pipe, NgModule } from '@angular/core';
import { CHAR_PLUS, tuiAssert } from '@taiga-ui/cdk';
import { formatPhone } from '@taiga-ui/core/utils/format';

var TuiFormatPhonePipe = /** @class */ (function () {
    function TuiFormatPhonePipe() {
    }
    /**
     * Formats phone number string of +7XXXXXXXXXX fomrat with adding separator symbols
     * @param value
     * @param countryCode
     * @param phoneMask
     * @return formatted phone number string +7(XXX)XXX-XX-XX
     */
    TuiFormatPhonePipe.prototype.transform = function (value, countryCode, phoneMask) {
        if (countryCode === void 0) { countryCode = CHAR_PLUS + "7"; }
        if (phoneMask === void 0) { phoneMask = "(###) ###-##-##"; }
        tuiAssert.assert(value !== undefined, "Undefined was passed to tuiFormatPhone pipe");
        return formatPhone(value, countryCode, phoneMask);
    };
    TuiFormatPhonePipe = __decorate([
        Pipe({ name: "tuiFormatPhone" })
    ], TuiFormatPhonePipe);
    return TuiFormatPhonePipe;
}());

var TuiFormatPhonePipeModule = /** @class */ (function () {
    function TuiFormatPhonePipeModule() {
    }
    TuiFormatPhonePipeModule = __decorate([
        NgModule({
            exports: [TuiFormatPhonePipe],
            declarations: [TuiFormatPhonePipe],
        })
    ], TuiFormatPhonePipeModule);
    return TuiFormatPhonePipeModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFormatPhonePipe, TuiFormatPhonePipeModule };
//# sourceMappingURL=taiga-ui-core-pipes-format-phone.js.map
