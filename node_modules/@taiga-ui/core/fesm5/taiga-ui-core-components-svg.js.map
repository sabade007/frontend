{"version":3,"file":"taiga-ui-core-components-svg.js","sources":["ng://@taiga-ui/core/components/svg/svg.component.ts","ng://@taiga-ui/core/components/svg/svg.module.ts","ng://@taiga-ui/core/components/svg/taiga-ui-core-components-svg.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    Optional,\n    Sanitizer,\n    SecurityContext,\n} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {USER_AGENT, WINDOW} from '@ng-web-apis/common';\nimport {\n    getDocumentOrShadowRoot,\n    isIE,\n    tuiAssert,\n    tuiCustomEvent,\n    tuiPure,\n    tuiRequiredSetter,\n    TuiStaticRequestService,\n    TuiStringHandler,\n} from '@taiga-ui/cdk';\nimport {TUI_ICON_ERROR} from '@taiga-ui/core/constants';\nimport {TuiIconError} from '@taiga-ui/core/interfaces';\nimport {TuiSvgService} from '@taiga-ui/core/services';\nimport {\n    TUI_ICONS_PATH,\n    TUI_SANITIZER,\n    TUI_SVG_CONTENT_PROCESSOR,\n    TUI_SVG_SRC_PROCESSOR,\n} from '@taiga-ui/core/tokens';\nimport {isPresumedHTMLString} from '@taiga-ui/core/utils/miscellaneous';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n\n// TODO: Consider moving to CDK along with SvgService and SvgDefsHostComponent\n// @dynamic\n@Component({\n    selector: 'tui-svg',\n    templateUrl: './svg.template.html',\n    styleUrls: ['./svg.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiSvgComponent {\n    private readonly src$ = new ReplaySubject<void>(1);\n    private readonly isIE = isIE(this.userAgent);\n    private icon = '';\n\n    @Input()\n    @tuiRequiredSetter()\n    set src(src: string) {\n        this.icon = this.srcProcessor(src);\n        this.src$.next();\n    }\n\n    get src(): string {\n        return this.icon;\n    }\n\n    readonly innerHTML$: Observable<SafeHtml>;\n\n    constructor(\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(WINDOW) private readonly windowRef: Window,\n        @Inject(TUI_ICONS_PATH) private readonly iconsPath: TuiStringHandler<string>,\n        @Optional()\n        @Inject(TUI_SANITIZER)\n        private readonly tuiSanitizer: Sanitizer | null,\n        @Inject(TuiSvgService) private readonly svgService: TuiSvgService,\n        @Inject(TuiStaticRequestService)\n        private readonly staticRequestService: TuiStaticRequestService,\n        @Inject(DomSanitizer) private readonly sanitizer: DomSanitizer,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<Element>,\n        @Inject(USER_AGENT) private readonly userAgent: string,\n        @Inject(TUI_SVG_SRC_PROCESSOR)\n        private readonly srcProcessor: TuiStringHandler<string>,\n        @Inject(TUI_SVG_CONTENT_PROCESSOR)\n        private readonly contentProcessor: TuiStringHandler<string>,\n    ) {\n        this.innerHTML$ = this.src$.pipe(\n            switchMap(() =>\n                this.isExternal\n                    ? this.getExternalIcon(this.icon)\n                    : of(this.getSafeHtml(this.icon)),\n            ),\n            startWith(''),\n        );\n    }\n\n    get use(): string {\n        return this.icon.includes('.svg#')\n            ? this.icon\n            : this.resolveName(this.icon, this.iconsPath);\n    }\n\n    get isInnerHTML(): boolean {\n        return this.isSrc || this.isExternal || (this.isName && this.isShadowDOM);\n    }\n\n    private get isShadowDOM(): boolean {\n        return (\n            getDocumentOrShadowRoot(this.elementRef.nativeElement) !== this.documentRef\n        );\n    }\n\n    private get isUse(): boolean {\n        return this.use.includes('.svg#');\n    }\n\n    private get isExternal(): boolean {\n        return this.isUrl || (this.isIE && this.isUse) || this.isCrossDomain;\n    }\n\n    private get isUrl(): boolean {\n        return this.icon.endsWith('.svg');\n    }\n\n    private get isSrc(): boolean {\n        return isPresumedHTMLString(this.icon);\n    }\n\n    private get isName(): boolean {\n        return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n\n    private get isCrossDomain(): boolean {\n        const {use, isUse, windowRef} = this;\n\n        return (\n            isUse &&\n            use.startsWith('http') &&\n            !!windowRef.origin &&\n            !use.startsWith(windowRef.origin)\n        );\n    }\n\n    onError(message: string = MISSING_EXTERNAL_ICON): void {\n        const {icon} = this;\n        const event = tuiCustomEvent<TuiIconError>(\n            TUI_ICON_ERROR,\n            {\n                bubbles: true,\n                detail: {\n                    message,\n                    icon,\n                },\n            },\n            this.documentRef,\n        );\n\n        tuiAssert.assert(false, message, icon);\n        this.elementRef.nativeElement.dispatchEvent(event);\n    }\n\n    @tuiPure\n    private resolveName(name: string, iconsPath: TuiStringHandler<string>): string {\n        return iconsPath(name);\n    }\n\n    private getSafeHtml(src: string): SafeHtml {\n        return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n\n    private process(src: string): SafeHtml {\n        const icon = this.svgService.getOriginal(src);\n\n        if (this.isName && !icon && !!src) {\n            this.onError(UNDEFINED_NAMED_ICON);\n        }\n\n        // Empty line for innerHTML when icon is shown through USE tag\n        return !this.isShadowDOM || !this.isName ? '' : this.sanitize(icon || '');\n    }\n\n    private sanitize(src: string): SafeHtml | string {\n        src = this.contentProcessor(src);\n\n        return this.tuiSanitizer\n            ? this.sanitizer.bypassSecurityTrustHtml(\n                  this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '',\n              )\n            : src;\n    }\n\n    private getExternalIcon(src: string): Observable<SafeHtml> {\n        const url = src.includes('.svg') ? src : this.use;\n\n        return this.staticRequestService.request(url).pipe(\n            catchError(() => {\n                this.onError(FAILED_EXTERNAL_ICON);\n\n                return of('');\n            }),\n            map(response =>\n                this.sanitize(response.replace('<svg', '<svg focusable=\"false\"')),\n            ),\n        );\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk';\n\nimport {TuiSvgComponent} from './svg.component';\n\n@NgModule({\n    imports: [CommonModule, TuiLetModule],\n    declarations: [TuiSvgComponent],\n    exports: [TuiSvgComponent],\n})\nexport class TuiSvgModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}