{"version":3,"file":"taiga-ui-core-components-loader.js","sources":["ng://@taiga-ui/core/components/loader/loader-options.ts","ng://@taiga-ui/core/components/loader/loader.component.ts","ng://@taiga-ui/core/components/loader/loader.module.ts","ng://@taiga-ui/core/components/loader/taiga-ui-core-components-loader.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiSizeXS, TuiSizeXXL} from '@taiga-ui/core/types';\n\nexport interface TuiLoaderOptions {\n    readonly size: TuiSizeXS | TuiSizeXXL;\n    readonly inheritColor: boolean;\n    readonly overlay: boolean;\n}\n\n/** Default values for the loader options. */\nexport const TUI_LOADER_DEFAULT_OPTIONS: TuiLoaderOptions = {\n    size: `m`,\n    inheritColor: false,\n    overlay: false,\n};\n\nexport const TUI_LOADER_OPTIONS = new InjectionToken<TuiLoaderOptions>(\n    `Default parameters for loader component`,\n    {\n        factory: () => TUI_LOADER_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiLoaderOptionsProvider: (\n    options: Partial<TuiLoaderOptions>,\n) => ValueProvider = (options: Partial<TuiLoaderOptions>) => ({\n    provide: TUI_LOADER_OPTIONS,\n    useValue: {...TUI_LOADER_DEFAULT_OPTIONS, ...options},\n});\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    blurNativeFocused,\n    isNativeFocusedIn,\n    isSafari,\n    TUI_IS_IOS,\n    tuiDefaultProp,\n    tuiRequiredSetter,\n} from '@taiga-ui/cdk';\nimport {sizeBigger} from '@taiga-ui/core/utils/miscellaneous';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_LOADER_OPTIONS, TuiLoaderOptions} from './loader-options';\n\n// @dynamic\n@Component({\n    selector: 'tui-loader',\n    templateUrl: './loader.template.html',\n    styleUrls: ['./loader.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiLoaderComponent {\n    @Input()\n    @tuiDefaultProp()\n    size = this.options.size;\n\n    @Input()\n    @tuiDefaultProp()\n    inheritColor = this.options.inheritColor;\n\n    @Input()\n    @tuiDefaultProp()\n    overlay = this.options.overlay;\n\n    // TODO: 3.0 Remove null\n    @Input()\n    @tuiDefaultProp()\n    textContent: PolymorpheusContent | null = null;\n\n    @Input()\n    @tuiRequiredSetter()\n    set showLoader(value: boolean) {\n        // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way\n        if (value && this.focused) {\n            blurNativeFocused(this.documentRef);\n        }\n\n        this.loading = value;\n    }\n\n    @HostBinding('class._loading')\n    loading = true;\n\n    readonly isApple = isSafari(this.elementRef.nativeElement) || this.isIos;\n\n    constructor(\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(TUI_IS_IOS) private readonly isIos: boolean,\n        @Inject(TUI_LOADER_OPTIONS) private readonly options: TuiLoaderOptions,\n    ) {}\n\n    get hasOverlay(): boolean {\n        return this.overlay && this.loading;\n    }\n\n    get hasText(): boolean {\n        return !!this.textContent;\n    }\n\n    get isHorizontal(): boolean {\n        return !sizeBigger(this.size);\n    }\n\n    get focused(): boolean {\n        return isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiLoaderComponent} from './loader.component';\n\n@NgModule({\n    imports: [CommonModule, PolymorpheusModule],\n    declarations: [TuiLoaderComponent],\n    exports: [TuiLoaderComponent],\n})\nexport class TuiLoaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}