import { __decorate, __param } from 'tslib';
import { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';
import { Inject, ChangeDetectorRef, PLATFORM_ID, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { TuiDestroyService, TuiLetModule } from '@taiga-ui/cdk';
import { TuiSvgService } from '@taiga-ui/core/services';
import { innerHTML } from '@taiga-ui/core/utils/polyfills';
import { takeUntil } from 'rxjs/operators';

// @dynamic
var TuiSvgDefsHostComponent = /** @class */ (function () {
    function TuiSvgDefsHostComponent(documentRef, svgService, changeDetectorRef, destroy$, platformId) {
        this.svgService = svgService;
        this.changeDetectorRef = changeDetectorRef;
        this.destroy$ = destroy$;
        this.isBrowser = true;
        this.isBrowser = !isPlatformServer(platformId);
        innerHTML(documentRef);
    }
    // @bad TODO: Looks like it could be async piped but it was probably written like that for a reason
    TuiSvgDefsHostComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.svgService.items$.pipe(takeUntil(this.destroy$)).subscribe(function (defsMap) {
            _this.items = defsMap.values();
            _this.changeDetectorRef.detectChanges();
        });
    };
    TuiSvgDefsHostComponent.ctorParameters = function () { return [
        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: TuiSvgService, decorators: [{ type: Inject, args: [TuiSvgService,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: TuiDestroyService, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    TuiSvgDefsHostComponent = __decorate([
        Component({
            selector: 'tui-svg-defs-host',
            template: "<svg:svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n>\n    <ng-container *ngIf=\"isBrowser; else server\">\n        <defs\n            *ngFor=\"let def of items\"\n            [innerHTML]=\"def\"\n        ></defs>\n    </ng-container>\n    <ng-template #server>\n        <!--svg[outerHTML] - to support SSR, because there is no support of innerHTML for for defs element in domino-->\n        <defs *ngFor=\"let def of items\">\n            <svg [outerHTML]=\"def\"></svg>\n        </defs>\n    </ng-template>\n</svg:svg>\n",
            providers: [TuiDestroyService],
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:none}"]
        }),
        __param(0, Inject(DOCUMENT)),
        __param(1, Inject(TuiSvgService)),
        __param(2, Inject(ChangeDetectorRef)),
        __param(3, Inject(TuiDestroyService)),
        __param(4, Inject(PLATFORM_ID))
    ], TuiSvgDefsHostComponent);
    return TuiSvgDefsHostComponent;
}());

var TuiSvgDefsHostModule = /** @class */ (function () {
    function TuiSvgDefsHostModule() {
    }
    TuiSvgDefsHostModule = __decorate([
        NgModule({
            imports: [CommonModule, TuiLetModule],
            declarations: [TuiSvgDefsHostComponent],
            exports: [TuiSvgDefsHostComponent],
        })
    ], TuiSvgDefsHostModule);
    return TuiSvgDefsHostModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSvgDefsHostComponent, TuiSvgDefsHostModule };
//# sourceMappingURL=taiga-ui-core-internal-svg-defs-host.js.map
