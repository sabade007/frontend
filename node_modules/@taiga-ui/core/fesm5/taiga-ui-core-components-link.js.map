{"version":3,"file":"taiga-ui-core-components-link.js","sources":["ng://@taiga-ui/core/components/link/link.component.ts","ng://@taiga-ui/core/components/link/link.module.ts","ng://@taiga-ui/core/components/link/taiga-ui-core-components-link.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    isNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiDestroyService,\n    TuiFocusableElementAccessor,\n    TuiFocusVisibleService,\n    TuiNativeFocusableElement,\n    typedFromEvent,\n} from '@taiga-ui/cdk';\nimport {MODE_PROVIDER} from '@taiga-ui/core/providers';\nimport {TUI_MODE} from '@taiga-ui/core/tokens';\nimport {TuiBrightness, TuiHorizontalDirection} from '@taiga-ui/core/types';\nimport {merge, Observable} from 'rxjs';\nimport {mapTo} from 'rxjs/operators';\n\n// @bad TODO: Think about extending Interactive\n@Component({\n    selector: 'a[tuiLink], button[tuiLink]',\n    templateUrl: './link.template.html',\n    styleUrls: ['./link.style.less'],\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiLinkComponent),\n        },\n        TuiFocusVisibleService,\n        TuiDestroyService,\n        MODE_PROVIDER,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'tuiLink',\n    host: {\n        '($.data-mode.attr)': 'mode$',\n    },\n})\nexport class TuiLinkComponent implements TuiFocusableElementAccessor {\n    @Input()\n    @HostBinding('class._pseudo')\n    @tuiDefaultProp()\n    pseudo = false;\n\n    // TODO: 3.0 Remove `null`\n    @Input()\n    @tuiDefaultProp()\n    icon: string | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    iconAlign: TuiHorizontalDirection = 'right';\n\n    @Input()\n    @HostBinding('class._icon-rotated')\n    @tuiDefaultProp()\n    iconRotated = false;\n\n    @Input()\n    @HostBinding('attr.data-host-mode')\n    @tuiDefaultProp()\n    mode: 'negative' | 'positive' | null = null;\n\n    @HostBinding('class._focus-visible')\n    focusVisible = false;\n\n    readonly focusedChange = merge(\n        typedFromEvent(this.elementRef.nativeElement, 'focusin').pipe(mapTo(true)),\n        typedFromEvent(this.elementRef.nativeElement, 'focusout').pipe(mapTo(false)),\n    );\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly elementRef: ElementRef<TuiNativeFocusableElement>,\n        @Inject(TUI_MODE) readonly mode$: Observable<TuiBrightness | null>,\n        @Inject(TuiFocusVisibleService)\n        focusVisible$: TuiFocusVisibleService,\n    ) {\n        focusVisible$.subscribe(visible => {\n            this.focusVisible = visible;\n        });\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement {\n        return this.elementRef.nativeElement;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    get hasIcon(): boolean {\n        return this.icon !== null;\n    }\n\n    get iconAlignLeft(): boolean {\n        return this.hasIcon && this.iconAlign === 'left';\n    }\n\n    get iconAlignRight(): boolean {\n        return this.hasIcon && this.iconAlign === 'right';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core/components/svg';\n\nimport {TuiLinkComponent} from './link.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule],\n    declarations: [TuiLinkComponent],\n    exports: [TuiLinkComponent],\n})\nexport class TuiLinkModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}