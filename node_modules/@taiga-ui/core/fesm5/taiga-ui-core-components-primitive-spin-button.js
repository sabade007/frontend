import { __extends, __decorate, __param } from 'tslib';
import { EventEmitter, Inject, ViewChild, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { isNativeFocused, tuiDefaultProp, AbstractTuiInteractive, TuiFocusVisibleModule, TuiFocusedModule, TuiFocusableModule, TuiPreventDefaultModule } from '@taiga-ui/cdk';
import { TUI_SPIN_TEXTS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { CommonModule } from '@angular/common';
import { TuiButtonModule } from '@taiga-ui/core/components/button';

// @dynamic
var TuiPrimitiveSpinButtonComponent = /** @class */ (function (_super) {
    __extends(TuiPrimitiveSpinButtonComponent, _super);
    function TuiPrimitiveSpinButtonComponent(spinTexts$) {
        var _this = _super.call(this) || this;
        _this.spinTexts$ = spinTexts$;
        _this.disabled = false;
        _this.mode = "flat" /* Flat */;
        _this.leftDisabled = false;
        _this.rightDisabled = false;
        _this.leftClick = new EventEmitter();
        _this.rightClick = new EventEmitter();
        return _this;
    }
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "focused", {
        get: function () {
            return !!this.wrapper && isNativeFocused(this.wrapper.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "leftComputedDisabled", {
        get: function () {
            return this.computedDisabled || this.leftDisabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "rightComputedDisabled", {
        get: function () {
            return this.computedDisabled || this.rightDisabled;
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveSpinButtonComponent.prototype.onLeftClick = function () {
        if (!this.leftComputedDisabled) {
            this.leftClick.emit();
        }
    };
    TuiPrimitiveSpinButtonComponent.prototype.onRightClick = function () {
        if (!this.rightComputedDisabled) {
            this.rightClick.emit();
        }
    };
    TuiPrimitiveSpinButtonComponent.prototype.onFocused = function (focused) {
        this.updateFocused(focused);
    };
    TuiPrimitiveSpinButtonComponent.prototype.onFocusVisible = function (focusVisible) {
        this.updateFocusVisible(focusVisible);
    };
    TuiPrimitiveSpinButtonComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_SPIN_TEXTS,] }] }
    ]; };
    __decorate([
        ViewChild('wrapper')
    ], TuiPrimitiveSpinButtonComponent.prototype, "wrapper", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "mode", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "leftDisabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "rightDisabled", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveSpinButtonComponent.prototype, "leftClick", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveSpinButtonComponent.prototype, "rightClick", void 0);
    TuiPrimitiveSpinButtonComponent = __decorate([
        Component({
            selector: 'tui-primitive-spin-button',
            changeDetection: ChangeDetectionStrategy.OnPush,
            template: "<div\n    *ngIf=\"spinTexts$ | async as texts\"\n    #wrapper\n    tuiPreventDefault=\"mousedown\"\n    class=\"t-wrapper\"\n    [tuiFocusable]=\"computedFocusable\"\n    (tuiFocusedChange)=\"onFocused($event)\"\n    (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    (keydown.arrowLeft)=\"onLeftClick()\"\n    (keydown.arrowRight)=\"onRightClick()\"\n>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__left\"\n        icon=\"tuiIconChevronLeftLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"leftComputedDisabled\"\n        [title]=\"texts[0]\"\n        [focusable]=\"false\"\n        (click)=\"onLeftClick()\"\n    ></button>\n    <span class=\"t-content\">\n        <ng-content></ng-content>\n    </span>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__right\"\n        icon=\"tuiIconChevronRightLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"rightComputedDisabled\"\n        [title]=\"texts[1]\"\n        [focusable]=\"false\"\n        (click)=\"onRightClick()\"\n    ></button>\n</div>\n",
            styles: [":host{display:block;font:var(--tui-font-text-l);text-align:center;font-weight:700}.t-wrapper{display:flex;align-items:center;justify-content:space-between;outline:0}.t-arrow{margin:0 .25rem}.t-arrow_hidden{visibility:hidden}.t-content{padding:0 .5rem}:host._focus-visible .t-content{box-shadow:0 0 0 1px var(--tui-focus)}"]
        }),
        __param(0, Inject(TUI_SPIN_TEXTS))
    ], TuiPrimitiveSpinButtonComponent);
    return TuiPrimitiveSpinButtonComponent;
}(AbstractTuiInteractive));

var TuiPrimitiveSpinButtonModule = /** @class */ (function () {
    function TuiPrimitiveSpinButtonModule() {
    }
    TuiPrimitiveSpinButtonModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                TuiFocusVisibleModule,
                TuiFocusedModule,
                TuiFocusableModule,
                TuiPreventDefaultModule,
                TuiButtonModule,
            ],
            declarations: [TuiPrimitiveSpinButtonComponent],
            exports: [TuiPrimitiveSpinButtonComponent],
        })
    ], TuiPrimitiveSpinButtonModule);
    return TuiPrimitiveSpinButtonModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPrimitiveSpinButtonComponent, TuiPrimitiveSpinButtonModule };
//# sourceMappingURL=taiga-ui-core-components-primitive-spin-button.js.map
