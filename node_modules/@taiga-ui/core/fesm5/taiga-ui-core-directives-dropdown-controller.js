import { __extends, __decorate } from 'tslib';
import { InjectionToken, Input, Directive, forwardRef, NgModule, ChangeDetectorRef } from '@angular/core';
import { tuiDefaultProp, TuiController, TuiDestroyService } from '@taiga-ui/cdk';
import { DEFAULT_MIN_HEIGHT, DEFAULT_MAX_HEIGHT } from '@taiga-ui/core/constants';
import { watchedControllerFactory } from '@taiga-ui/core/providers';

var TUI_DROPDOWN_CONTROLLER = new InjectionToken("Controls configuration of hints", {
    factory: function () { return new TuiDropdownControllerDirective(); },
});

var TuiDropdownControllerDirective = /** @class */ (function (_super) {
    __extends(TuiDropdownControllerDirective, _super);
    function TuiDropdownControllerDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.align = 'right';
        _this.direction = null;
        _this.limitWidth = 'auto';
        _this.minHeight = DEFAULT_MIN_HEIGHT;
        _this.maxHeight = DEFAULT_MAX_HEIGHT;
        _this.sided = false;
        return _this;
    }
    TuiDropdownControllerDirective_1 = TuiDropdownControllerDirective;
    var TuiDropdownControllerDirective_1;
    __decorate([
        Input('tuiDropdownAlign'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "align", void 0);
    __decorate([
        Input('tuiDropdownDirection'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "direction", void 0);
    __decorate([
        Input('tuiDropdownLimitWidth'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "limitWidth", void 0);
    __decorate([
        Input('tuiDropdownMinHeight'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "minHeight", void 0);
    __decorate([
        Input('tuiDropdownMaxHeight'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "maxHeight", void 0);
    __decorate([
        Input('tuiDropdownSided'),
        tuiDefaultProp()
    ], TuiDropdownControllerDirective.prototype, "sided", void 0);
    TuiDropdownControllerDirective = TuiDropdownControllerDirective_1 = __decorate([
        Directive({
            selector: '[tuiDropdownAlign], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownSided]',
            providers: [
                {
                    provide: TUI_DROPDOWN_CONTROLLER,
                    useExisting: forwardRef(function () { return TuiDropdownControllerDirective_1; }),
                },
            ],
        })
    ], TuiDropdownControllerDirective);
    return TuiDropdownControllerDirective;
}(TuiController));

var TuiDropdownControllerModule = /** @class */ (function () {
    function TuiDropdownControllerModule() {
    }
    TuiDropdownControllerModule = __decorate([
        NgModule({
            declarations: [TuiDropdownControllerDirective],
            exports: [TuiDropdownControllerDirective],
        })
    ], TuiDropdownControllerModule);
    return TuiDropdownControllerModule;
}());

var TUI_DROPDOWN_WATCHED_CONTROLLER = new InjectionToken("watched dropdown controller");
// TODO: 3.0 remove in ivy compilation
var DROPDOWN_CONTROLLER_FACTORY = watchedControllerFactory;
var DROPDOWN_CONTROLLER_PROVIDER = [
    TuiDestroyService,
    {
        provide: TUI_DROPDOWN_WATCHED_CONTROLLER,
        deps: [TUI_DROPDOWN_CONTROLLER, ChangeDetectorRef, TuiDestroyService],
        useFactory: DROPDOWN_CONTROLLER_FACTORY,
    },
];

/**
 * Generated bundle index. Do not edit.
 */

export { DROPDOWN_CONTROLLER_FACTORY, DROPDOWN_CONTROLLER_PROVIDER, TUI_DROPDOWN_CONTROLLER, TUI_DROPDOWN_WATCHED_CONTROLLER, TuiDropdownControllerDirective, TuiDropdownControllerModule };
//# sourceMappingURL=taiga-ui-core-directives-dropdown-controller.js.map
