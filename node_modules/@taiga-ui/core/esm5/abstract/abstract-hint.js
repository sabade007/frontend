import { __decorate } from "tslib";
import { Directive, ElementRef, Input, OnDestroy } from '@angular/core';
import { TuiActiveZoneDirective, tuiDefaultProp } from '@taiga-ui/cdk';
import { TuiHintService } from '@taiga-ui/core/services';
var AbstractTuiHint = /** @class */ (function () {
    function AbstractTuiHint(elementRef, hintService, activeZone, options) {
        this.elementRef = elementRef;
        this.hintService = hintService;
        this.activeZone = activeZone;
        this.options = options;
        this.mode = this.options.mode;
        this.direction = this.options.direction;
        this.content = "";
    }
    AbstractTuiHint.prototype.ngOnDestroy = function () {
        this.hideTooltip();
    };
    AbstractTuiHint.prototype.showTooltip = function () {
        this.hintService.add(this);
    };
    AbstractTuiHint.prototype.hideTooltip = function () {
        this.hintService.remove(this);
    };
    AbstractTuiHint.ctorParameters = function () { return [
        { type: ElementRef },
        { type: TuiHintService },
        { type: TuiActiveZoneDirective },
        { type: undefined }
    ]; };
    __decorate([
        Input("tuiHintMode"),
        tuiDefaultProp()
    ], AbstractTuiHint.prototype, "mode", void 0);
    __decorate([
        Input("tuiHintDirection"),
        tuiDefaultProp()
    ], AbstractTuiHint.prototype, "direction", void 0);
    AbstractTuiHint = __decorate([
        Directive()
    ], AbstractTuiHint);
    return AbstractTuiHint;
}());
export { AbstractTuiHint };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtaGludC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2Fic3RyYWN0LyIsInNvdXJjZXMiOlsiYWJzdHJhY3QtaGludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQUMsc0JBQXNCLEVBQUUsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQU12RDtJQVdJLHlCQUN1QixVQUFtQyxFQUNuQyxXQUEyQixFQUNyQyxVQUF5QyxFQUMvQixPQUErQjtRQUgvQixlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUNuQyxnQkFBVyxHQUFYLFdBQVcsQ0FBZ0I7UUFDckMsZUFBVSxHQUFWLFVBQVUsQ0FBK0I7UUFDL0IsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7UUFadEQsU0FBSSxHQUFtQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUl6RCxjQUFTLEdBQXdDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBRXhFLFlBQU8sR0FBd0IsRUFBRSxDQUFDO0lBTy9CLENBQUM7SUFJSixxQ0FBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFUyxxQ0FBVyxHQUFyQjtRQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFUyxxQ0FBVyxHQUFyQjtRQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7O2dCQWxCa0MsVUFBVTtnQkFDVCxjQUFjO2dCQUN6QixzQkFBc0I7OztJQVgvQztRQUZDLEtBQUssQ0FBQyxhQUFhLENBQUM7UUFDcEIsY0FBYyxFQUFFO2lEQUN3QztJQUl6RDtRQUZDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztRQUN6QixjQUFjLEVBQUU7c0RBQ3VEO0lBUHRELGVBQWU7UUFEcEMsU0FBUyxFQUFFO09BQ1UsZUFBZSxDQStCcEM7SUFBRCxzQkFBQztDQUFBLEFBL0JELElBK0JDO1NBL0JxQixlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3l9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlBY3RpdmVab25lRGlyZWN0aXZlLCB0dWlEZWZhdWx0UHJvcH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aUhpbnRTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9zZXJ2aWNlcyc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmltcG9ydCB7VHVpQWJzdHJhY3RIaW50T3B0aW9uc30gZnJvbSAnLi9hYnN0cmFjdC1oaW50LW9wdGlvbnMnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFR1aUhpbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIEBJbnB1dChgdHVpSGludE1vZGVgKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbW9kZTogVHVpQWJzdHJhY3RIaW50T3B0aW9uc1snbW9kZSddID0gdGhpcy5vcHRpb25zLm1vZGU7XG5cbiAgICBASW5wdXQoYHR1aUhpbnREaXJlY3Rpb25gKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgZGlyZWN0aW9uOiBUdWlBYnN0cmFjdEhpbnRPcHRpb25zWydkaXJlY3Rpb24nXSA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb247XG5cbiAgICBjb250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50ID0gYGA7XG5cbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoXG4gICAgICAgIHByb3RlY3RlZCByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgcHJvdGVjdGVkIHJlYWRvbmx5IGhpbnRTZXJ2aWNlOiBUdWlIaW50U2VydmljZSxcbiAgICAgICAgcmVhZG9ubHkgYWN0aXZlWm9uZTogVHVpQWN0aXZlWm9uZURpcmVjdGl2ZSB8IG51bGwsXG4gICAgICAgIHByb3RlY3RlZCByZWFkb25seSBvcHRpb25zOiBUdWlBYnN0cmFjdEhpbnRPcHRpb25zLFxuICAgICkge31cblxuICAgIGFic3RyYWN0IGdldEVsZW1lbnRDbGllbnRSZWN0KCk6IENsaWVudFJlY3Q7XG5cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5oaWRlVG9vbHRpcCgpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzaG93VG9vbHRpcCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5oaW50U2VydmljZS5hZGQodGhpcyk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGhpZGVUb29sdGlwKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmhpbnRTZXJ2aWNlLnJlbW92ZSh0aGlzKTtcbiAgICB9XG59XG4iXX0=