import { __read } from "tslib";
import { numberToStringWithoutExp } from './number-to-string-without-exp';
/**
 * @deprecated: use {@link tuiGetFractionPartPadded} instead
 * Return fractional part of number
 *
 * @param value the number
 * @param precision number of digits of decimal part, null to keep untouched
 * @return the fractional part of number
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function getFractionPartPadded(value, precision) {
    var _a = __read(numberToStringWithoutExp(value).split("."), 2), _b = _a[1], fractionPartPadded = _b === void 0 ? "" : _b;
    return typeof precision === "number"
        ? fractionPartPadded.slice(0, Math.max(0, precision))
        : fractionPartPadded;
}
export var tuiGetFractionPartPadded = getFractionPartPadded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWZyYWN0aW9uYWwtcGFydC1wYWRkZWQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS91dGlscy9mb3JtYXQvIiwic291cmNlcyI6WyJnZXQtZnJhY3Rpb25hbC1wYXJ0LXBhZGRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFFeEU7Ozs7Ozs7R0FPRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUscUJBQXFCLENBQUMsS0FBYSxFQUFFLFNBQXlCO0lBQ3BFLElBQUEsMERBQXdFLEVBQXJFLFVBQXVCLEVBQXZCLDRDQUFxRSxDQUFDO0lBRS9FLE9BQU8sT0FBTyxTQUFTLEtBQUssUUFBUTtRQUNoQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNyRCxDQUFDLENBQUMsa0JBQWtCLENBQUM7QUFDN0IsQ0FBQztBQUVELE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUFHLHFCQUFxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtudW1iZXJUb1N0cmluZ1dpdGhvdXRFeHB9IGZyb20gJy4vbnVtYmVyLXRvLXN0cmluZy13aXRob3V0LWV4cCc7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQ6IHVzZSB7QGxpbmsgdHVpR2V0RnJhY3Rpb25QYXJ0UGFkZGVkfSBpbnN0ZWFkXG4gKiBSZXR1cm4gZnJhY3Rpb25hbCBwYXJ0IG9mIG51bWJlclxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgbnVtYmVyXG4gKiBAcGFyYW0gcHJlY2lzaW9uIG51bWJlciBvZiBkaWdpdHMgb2YgZGVjaW1hbCBwYXJ0LCBudWxsIHRvIGtlZXAgdW50b3VjaGVkXG4gKiBAcmV0dXJuIHRoZSBmcmFjdGlvbmFsIHBhcnQgb2YgbnVtYmVyXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBnZXRGcmFjdGlvblBhcnRQYWRkZWQodmFsdWU6IG51bWJlciwgcHJlY2lzaW9uPzogbnVtYmVyIHwgbnVsbCk6IHN0cmluZyB7XG4gICAgY29uc3QgWywgZnJhY3Rpb25QYXJ0UGFkZGVkID0gYGBdID0gbnVtYmVyVG9TdHJpbmdXaXRob3V0RXhwKHZhbHVlKS5zcGxpdChgLmApO1xuXG4gICAgcmV0dXJuIHR5cGVvZiBwcmVjaXNpb24gPT09IGBudW1iZXJgXG4gICAgICAgID8gZnJhY3Rpb25QYXJ0UGFkZGVkLnNsaWNlKDAsIE1hdGgubWF4KDAsIHByZWNpc2lvbikpXG4gICAgICAgIDogZnJhY3Rpb25QYXJ0UGFkZGVkO1xufVxuXG5leHBvcnQgY29uc3QgdHVpR2V0RnJhY3Rpb25QYXJ0UGFkZGVkID0gZ2V0RnJhY3Rpb25QYXJ0UGFkZGVkO1xuIl19