import { EMPTY_ARRAY } from '@taiga-ui/cdk';
import { debounceTime, distinctUntilChanged, scan, startWith, switchMap, } from 'rxjs/operators';
/**
 * @deprecated: use {@link tuiSmartSearch} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function smartSearch(getSearchFunction, searchDebounceTimeMs) {
    if (searchDebounceTimeMs === void 0) { searchDebounceTimeMs = 400; }
    return function (source) {
        return source.pipe(debounceTime(searchDebounceTimeMs), scan(function (previousSearched, current) {
            return previousSearched !== "" && current.startsWith(previousSearched)
                ? previousSearched
                : current;
        }, ""), distinctUntilChanged(), switchMap(function (value) { return getSearchFunction(value).pipe(startWith(null)); }), startWith(EMPTY_ARRAY));
    };
}
export var tuiSmartSearch = smartSearch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnQtc2VhcmNoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvb2JzZXJ2YWJsZXMvIiwic291cmNlcyI6WyJzbWFydC1zZWFyY2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQ0gsWUFBWSxFQUNaLG9CQUFvQixFQUNwQixJQUFJLEVBQ0osU0FBUyxFQUNULFNBQVMsR0FDWixNQUFNLGdCQUFnQixDQUFDO0FBRXhCOztHQUVHO0FBQ0gsZ0VBQWdFO0FBQ2hFLE1BQU0sVUFBVSxXQUFXLENBQ3ZCLGlCQUFnRixFQUNoRixvQkFBa0M7SUFBbEMscUNBQUEsRUFBQSwwQkFBa0M7SUFFbEMsT0FBTyxVQUFBLE1BQU07UUFDVCxPQUFBLE1BQU0sQ0FBQyxJQUFJLENBQ1AsWUFBWSxDQUFDLG9CQUFvQixDQUFDLEVBQ2xDLElBQUksQ0FBQyxVQUFDLGdCQUFnQixFQUFFLE9BQU87WUFDM0IsT0FBTyxnQkFBZ0IsS0FBSyxFQUFFLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztnQkFDbEUsQ0FBQyxDQUFDLGdCQUFnQjtnQkFDbEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNsQixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQ04sb0JBQW9CLEVBQUUsRUFDdEIsU0FBUyxDQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUE5QyxDQUE4QyxDQUFDLEVBQ2xFLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FDekI7SUFWRCxDQVVDLENBQUM7QUFDVixDQUFDO0FBRUQsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLFdBQVcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RU1QVFlfQVJSQVl9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBPcGVyYXRvckZ1bmN0aW9ufSBmcm9tICdyeGpzJztcbmltcG9ydCB7XG4gICAgZGVib3VuY2VUaW1lLFxuICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkLFxuICAgIHNjYW4sXG4gICAgc3RhcnRXaXRoLFxuICAgIHN3aXRjaE1hcCxcbn0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkOiB1c2Uge0BsaW5rIHR1aVNtYXJ0U2VhcmNofSBpbnN0ZWFkXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBzbWFydFNlYXJjaDxUPihcbiAgICBnZXRTZWFyY2hGdW5jdGlvbjogKHNlYXJjaDogc3RyaW5nKSA9PiBPYnNlcnZhYmxlPHJlYWRvbmx5IFRbXSB8IHJlYWRvbmx5IFRbXVtdPixcbiAgICBzZWFyY2hEZWJvdW5jZVRpbWVNczogbnVtYmVyID0gNDAwLFxuKTogT3BlcmF0b3JGdW5jdGlvbjxzdHJpbmcsIHJlYWRvbmx5IFRbXSB8IHJlYWRvbmx5IFRbXVtdIHwgbnVsbD4ge1xuICAgIHJldHVybiBzb3VyY2UgPT5cbiAgICAgICAgc291cmNlLnBpcGUoXG4gICAgICAgICAgICBkZWJvdW5jZVRpbWUoc2VhcmNoRGVib3VuY2VUaW1lTXMpLFxuICAgICAgICAgICAgc2NhbigocHJldmlvdXNTZWFyY2hlZCwgY3VycmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1NlYXJjaGVkICE9PSBgYCAmJiBjdXJyZW50LnN0YXJ0c1dpdGgocHJldmlvdXNTZWFyY2hlZClcbiAgICAgICAgICAgICAgICAgICAgPyBwcmV2aW91c1NlYXJjaGVkXG4gICAgICAgICAgICAgICAgICAgIDogY3VycmVudDtcbiAgICAgICAgICAgIH0sIGBgKSxcbiAgICAgICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksXG4gICAgICAgICAgICBzd2l0Y2hNYXAodmFsdWUgPT4gZ2V0U2VhcmNoRnVuY3Rpb24odmFsdWUpLnBpcGUoc3RhcnRXaXRoKG51bGwpKSksXG4gICAgICAgICAgICBzdGFydFdpdGgoRU1QVFlfQVJSQVkpLFxuICAgICAgICApO1xufVxuXG5leHBvcnQgY29uc3QgdHVpU21hcnRTZWFyY2ggPSBzbWFydFNlYXJjaDtcbiJdfQ==