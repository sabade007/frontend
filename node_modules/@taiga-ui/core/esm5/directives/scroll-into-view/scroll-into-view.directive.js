import { __decorate, __param } from "tslib";
import { DOCUMENT } from '@angular/common';
import { Directive, ElementRef, Inject, Input } from '@angular/core';
import { tuiCustomEvent, TuiDestroyService, tuiRequiredSetter } from '@taiga-ui/cdk';
import { TUI_SCROLL_INTO_VIEW } from '@taiga-ui/core/constants';
import { Observable, timer } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
/**
 * Directive scrolls element into view inside tui-scrollbar
 */
// @dynamic
var TuiScrollIntoViewDirective = /** @class */ (function () {
    function TuiScrollIntoViewDirective(elementRef, documentRef, destroy$) {
        this.elementRef = elementRef;
        this.documentRef = documentRef;
        this.destroy$ = destroy$;
    }
    Object.defineProperty(TuiScrollIntoViewDirective.prototype, "tuiScrollIntoView", {
        set: function (scroll) {
            var _this = this;
            if (!scroll) {
                return;
            }
            // Timeout is necessary in order to give element render cycle to get into its final spot
            // (for example if it is inside dropdown box which has to be positioned first)
            timer(0)
                .pipe(takeUntil(this.destroy$))
                .subscribe(function () {
                _this.elementRef.nativeElement.dispatchEvent(tuiCustomEvent(TUI_SCROLL_INTO_VIEW, {
                    bubbles: true,
                    detail: _this.elementRef.nativeElement,
                }, _this.documentRef));
            });
        },
        enumerable: true,
        configurable: true
    });
    TuiScrollIntoViewDirective.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
    ]; };
    __decorate([
        Input(),
        tuiRequiredSetter()
    ], TuiScrollIntoViewDirective.prototype, "tuiScrollIntoView", null);
    TuiScrollIntoViewDirective = __decorate([
        Directive({
            selector: '[tuiScrollIntoView]',
            providers: [TuiDestroyService],
        }),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(DOCUMENT)),
        __param(2, Inject(TuiDestroyService))
    ], TuiScrollIntoViewDirective);
    return TuiScrollIntoViewDirective;
}());
export { TuiScrollIntoViewDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLWludG8tdmlldy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL3Njcm9sbC1pbnRvLXZpZXcvIiwic291cmNlcyI6WyJzY3JvbGwtaW50by12aWV3LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFDLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsVUFBVSxFQUFFLEtBQUssRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUN2QyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFekM7O0dBRUc7QUFDSCxXQUFXO0FBS1g7SUEwQkksb0NBQ3lDLFVBQStCLEVBQ2pDLFdBQXFCLEVBQ1osUUFBMEI7UUFGakMsZUFBVSxHQUFWLFVBQVUsQ0FBcUI7UUFDakMsZ0JBQVcsR0FBWCxXQUFXLENBQVU7UUFDWixhQUFRLEdBQVIsUUFBUSxDQUFrQjtJQUN2RSxDQUFDO0lBM0JKLHNCQUFJLHlEQUFpQjthQUFyQixVQUFzQixNQUFlO1lBRnJDLGlCQXVCQztZQXBCRyxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNULE9BQU87YUFDVjtZQUVELHdGQUF3RjtZQUN4Riw4RUFBOEU7WUFDOUUsS0FBSyxDQUFDLENBQUMsQ0FBQztpQkFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDOUIsU0FBUyxDQUFDO2dCQUNQLEtBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FDdkMsY0FBYyxDQUNWLG9CQUFvQixFQUNwQjtvQkFDSSxPQUFPLEVBQUUsSUFBSTtvQkFDYixNQUFNLEVBQUUsS0FBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhO2lCQUN4QyxFQUNELEtBQUksQ0FBQyxXQUFXLENBQ25CLENBQ0osQ0FBQztZQUNOLENBQUMsQ0FBQyxDQUFDO1FBQ1gsQ0FBQzs7O09BQUE7O2dCQUdvRCxVQUFVLHVCQUExRCxNQUFNLFNBQUMsVUFBVTtnQkFDOEIsUUFBUSx1QkFBdkQsTUFBTSxTQUFDLFFBQVE7Z0JBQ3NDLFVBQVUsdUJBQS9ELE1BQU0sU0FBQyxpQkFBaUI7O0lBMUI3QjtRQUZDLEtBQUssRUFBRTtRQUNQLGlCQUFpQixFQUFFO3VFQXNCbkI7SUF4QlEsMEJBQTBCO1FBSnRDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxxQkFBcUI7WUFDL0IsU0FBUyxFQUFFLENBQUMsaUJBQWlCLENBQUM7U0FDakMsQ0FBQztRQTRCTyxXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUNsQixXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoQixXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO09BN0JyQiwwQkFBMEIsQ0ErQnRDO0lBQUQsaUNBQUM7Q0FBQSxBQS9CRCxJQStCQztTQS9CWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPQ1VNRU5UfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlDdXN0b21FdmVudCwgVHVpRGVzdHJveVNlcnZpY2UsIHR1aVJlcXVpcmVkU2V0dGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX1NDUk9MTF9JTlRPX1ZJRVd9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbnN0YW50cyc7XG5pbXBvcnQge09ic2VydmFibGUsIHRpbWVyfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8qKlxuICogRGlyZWN0aXZlIHNjcm9sbHMgZWxlbWVudCBpbnRvIHZpZXcgaW5zaWRlIHR1aS1zY3JvbGxiYXJcbiAqL1xuLy8gQGR5bmFtaWNcbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVNjcm9sbEludG9WaWV3XScsXG4gICAgcHJvdmlkZXJzOiBbVHVpRGVzdHJveVNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlTY3JvbGxJbnRvVmlld0RpcmVjdGl2ZSB7XG4gICAgQElucHV0KClcbiAgICBAdHVpUmVxdWlyZWRTZXR0ZXIoKVxuICAgIHNldCB0dWlTY3JvbGxJbnRvVmlldyhzY3JvbGw6IGJvb2xlYW4pIHtcbiAgICAgICAgaWYgKCFzY3JvbGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRpbWVvdXQgaXMgbmVjZXNzYXJ5IGluIG9yZGVyIHRvIGdpdmUgZWxlbWVudCByZW5kZXIgY3ljbGUgdG8gZ2V0IGludG8gaXRzIGZpbmFsIHNwb3RcbiAgICAgICAgLy8gKGZvciBleGFtcGxlIGlmIGl0IGlzIGluc2lkZSBkcm9wZG93biBib3ggd2hpY2ggaGFzIHRvIGJlIHBvc2l0aW9uZWQgZmlyc3QpXG4gICAgICAgIHRpbWVyKDApXG4gICAgICAgICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5kaXNwYXRjaEV2ZW50KFxuICAgICAgICAgICAgICAgICAgICB0dWlDdXN0b21FdmVudDxFbGVtZW50PihcbiAgICAgICAgICAgICAgICAgICAgICAgIFRVSV9TQ1JPTExfSU5UT19WSUVXLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvY3VtZW50UmVmLFxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8RWxlbWVudD4sXG4gICAgICAgIEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgcmVhZG9ubHkgZG9jdW1lbnRSZWY6IERvY3VtZW50LFxuICAgICAgICBASW5qZWN0KFR1aURlc3Ryb3lTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHZvaWQ+LFxuICAgICkge31cbn1cbiJdfQ==