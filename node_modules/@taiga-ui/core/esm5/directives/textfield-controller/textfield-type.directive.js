import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_TYPE = new InjectionToken('tuiTextfieldType', {
    factory: typeDirectiveFactory,
});
var TuiTextfieldTypeDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldTypeDirective, _super);
    function TuiTextfieldTypeDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'text';
        return _this;
    }
    TuiTextfieldTypeDirective_1 = TuiTextfieldTypeDirective;
    var TuiTextfieldTypeDirective_1;
    __decorate([
        Input('tuiTextfieldType')
    ], TuiTextfieldTypeDirective.prototype, "type", void 0);
    TuiTextfieldTypeDirective = TuiTextfieldTypeDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldType]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_TYPE,
                    useExisting: forwardRef(function () { return TuiTextfieldTypeDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldTypeDirective);
    return TuiTextfieldTypeDirective;
}(TuiController));
export { TuiTextfieldTypeDirective };
// eslint-disable-next-line @typescript-eslint/naming-convention
export function typeDirectiveFactory() {
    return new TuiTextfieldTypeDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXR5cGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC10eXBlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUUzRCxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGNBQWMsQ0FDaEQsa0JBQWtCLEVBQ2xCO0lBQ0ksT0FBTyxFQUFFLG9CQUFvQjtDQUNoQyxDQUNKLENBQUM7QUFXRjtJQUErQyw2Q0FBYTtJQUE1RDtRQUFBLHFFQUdDO1FBREcsVUFBSSxHQUFrQixNQUFNLENBQUM7O0lBQ2pDLENBQUM7a0NBSFkseUJBQXlCOztJQUVsQztRQURDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzsyREFDRztJQUZwQix5QkFBeUI7UUFUckMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixTQUFTLEVBQUU7Z0JBQ1A7b0JBQ0ksT0FBTyxFQUFFLGtCQUFrQjtvQkFDM0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsMkJBQXlCLEVBQXpCLENBQXlCLENBQUM7aUJBQzNEO2FBQ0o7U0FDSixDQUFDO09BQ1cseUJBQXlCLENBR3JDO0lBQUQsZ0NBQUM7Q0FBQSxBQUhELENBQStDLGFBQWEsR0FHM0Q7U0FIWSx5QkFBeUI7QUFLdEMsZ0VBQWdFO0FBQ2hFLE1BQU0sVUFBVSxvQkFBb0I7SUFDaEMsT0FBTyxJQUFJLHlCQUF5QixFQUFFLENBQUM7QUFDM0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBJbmplY3Rpb25Ub2tlbiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlDb250cm9sbGVyLCBUdWlJbnB1dFR5cGVUfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfVFlQRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlPihcbiAgICAndHVpVGV4dGZpZWxkVHlwZScsXG4gICAge1xuICAgICAgICBmYWN0b3J5OiB0eXBlRGlyZWN0aXZlRmFjdG9yeSxcbiAgICB9LFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkVHlwZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX1RZUEUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlIGV4dGVuZHMgVHVpQ29udHJvbGxlciB7XG4gICAgQElucHV0KCd0dWlUZXh0ZmllbGRUeXBlJylcbiAgICB0eXBlOiBUdWlJbnB1dFR5cGVUID0gJ3RleHQnO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gdHlwZURpcmVjdGl2ZUZhY3RvcnkoKTogVHVpVGV4dGZpZWxkVHlwZURpcmVjdGl2ZSB7XG4gICAgcmV0dXJuIG5ldyBUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlKCk7XG59XG4iXX0=