import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_INPUT_MODE = new InjectionToken('tuiTextfieldInputMode', {
    factory: inputModeDirectiveFactory,
});
var TuiTextfieldInputModeDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldInputModeDirective, _super);
    function TuiTextfieldInputModeDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputMode = 'text';
        return _this;
    }
    TuiTextfieldInputModeDirective_1 = TuiTextfieldInputModeDirective;
    var TuiTextfieldInputModeDirective_1;
    __decorate([
        Input('tuiTextfieldInputMode')
    ], TuiTextfieldInputModeDirective.prototype, "inputMode", void 0);
    TuiTextfieldInputModeDirective = TuiTextfieldInputModeDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldInputMode]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_INPUT_MODE,
                    useExisting: forwardRef(function () { return TuiTextfieldInputModeDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldInputModeDirective);
    return TuiTextfieldInputModeDirective;
}(TuiController));
export { TuiTextfieldInputModeDirective };
// eslint-disable-next-line @typescript-eslint/naming-convention
export function inputModeDirectiveFactory() {
    return new TuiTextfieldInputModeDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWlucHV0LW1vZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1pbnB1dC1tb2RlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUUzRCxNQUFNLENBQUMsSUFBTSx3QkFBd0IsR0FDakMsSUFBSSxjQUFjLENBQWlDLHVCQUF1QixFQUFFO0lBQ3hFLE9BQU8sRUFBRSx5QkFBeUI7Q0FDckMsQ0FBQyxDQUFDO0FBV1A7SUFBb0Qsa0RBQWE7SUFBakU7UUFBQSxxRUFHQztRQURHLGVBQVMsR0FBa0IsTUFBTSxDQUFDOztJQUN0QyxDQUFDO3VDQUhZLDhCQUE4Qjs7SUFFdkM7UUFEQyxLQUFLLENBQUMsdUJBQXVCLENBQUM7cUVBQ0c7SUFGekIsOEJBQThCO1FBVDFDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSx5QkFBeUI7WUFDbkMsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSx3QkFBd0I7b0JBQ2pDLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLGdDQUE4QixFQUE5QixDQUE4QixDQUFDO2lCQUNoRTthQUNKO1NBQ0osQ0FBQztPQUNXLDhCQUE4QixDQUcxQztJQUFELHFDQUFDO0NBQUEsQUFIRCxDQUFvRCxhQUFhLEdBR2hFO1NBSFksOEJBQThCO0FBSzNDLGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUseUJBQXlCO0lBQ3JDLE9BQU8sSUFBSSw4QkFBOEIsRUFBRSxDQUFDO0FBQ2hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW4sIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udHJvbGxlciwgVHVpSW5wdXRNb2RlVH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmV4cG9ydCBjb25zdCBUVUlfVEVYVEZJRUxEX0lOUFVUX01PREUgPVxuICAgIG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmU+KCd0dWlUZXh0ZmllbGRJbnB1dE1vZGUnLCB7XG4gICAgICAgIGZhY3Rvcnk6IGlucHV0TW9kZURpcmVjdGl2ZUZhY3RvcnksXG4gICAgfSk7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZElucHV0TW9kZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX0lOUFVUX01PREUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSBleHRlbmRzIFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkSW5wdXRNb2RlJylcbiAgICBpbnB1dE1vZGU6IFR1aUlucHV0TW9kZVQgPSAndGV4dCc7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBpbnB1dE1vZGVEaXJlY3RpdmVGYWN0b3J5KCk6IFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSB7XG4gICAgcmV0dXJuIG5ldyBUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmUoKTtcbn1cbiJdfQ==