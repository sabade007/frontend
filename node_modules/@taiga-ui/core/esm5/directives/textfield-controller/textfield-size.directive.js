import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_SIZE = new InjectionToken('tuiTextfieldSize', {
    factory: sizeDirectiveFactory,
});
var TuiTextfieldSizeDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldSizeDirective, _super);
    function TuiTextfieldSizeDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.size = 'l';
        return _this;
    }
    TuiTextfieldSizeDirective_1 = TuiTextfieldSizeDirective;
    var TuiTextfieldSizeDirective_1;
    __decorate([
        Input('tuiTextfieldSize')
    ], TuiTextfieldSizeDirective.prototype, "size", void 0);
    TuiTextfieldSizeDirective = TuiTextfieldSizeDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldSize]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_SIZE,
                    useExisting: forwardRef(function () { return TuiTextfieldSizeDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldSizeDirective);
    return TuiTextfieldSizeDirective;
}(TuiController));
export { TuiTextfieldSizeDirective };
// eslint-disable-next-line @typescript-eslint/naming-convention
export function sizeDirectiveFactory() {
    return new TuiTextfieldSizeDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXNpemUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1zaXplLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRzVDLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUNoRCxrQkFBa0IsRUFDbEI7SUFDSSxPQUFPLEVBQUUsb0JBQW9CO0NBQ2hDLENBQ0osQ0FBQztBQVdGO0lBQStDLDZDQUFhO0lBQTVEO1FBQUEscUVBR0M7UUFERyxVQUFJLEdBQXdCLEdBQUcsQ0FBQzs7SUFDcEMsQ0FBQztrQ0FIWSx5QkFBeUI7O0lBRWxDO1FBREMsS0FBSyxDQUFDLGtCQUFrQixDQUFDOzJEQUNNO0lBRnZCLHlCQUF5QjtRQVRyQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsb0JBQW9CO1lBQzlCLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsa0JBQWtCO29CQUMzQixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSwyQkFBeUIsRUFBekIsQ0FBeUIsQ0FBQztpQkFDM0Q7YUFDSjtTQUNKLENBQUM7T0FDVyx5QkFBeUIsQ0FHckM7SUFBRCxnQ0FBQztDQUFBLEFBSEQsQ0FBK0MsYUFBYSxHQUczRDtTQUhZLHlCQUF5QjtBQUt0QyxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxPQUFPLElBQUkseUJBQXlCLEVBQUUsQ0FBQztBQUMzQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIEluamVjdGlvblRva2VuLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUNvbnRyb2xsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplTCwgVHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfU0laRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlPihcbiAgICAndHVpVGV4dGZpZWxkU2l6ZScsXG4gICAge1xuICAgICAgICBmYWN0b3J5OiBzaXplRGlyZWN0aXZlRmFjdG9yeSxcbiAgICB9LFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkU2l6ZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX1NJWkUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlIGV4dGVuZHMgVHVpQ29udHJvbGxlciB7XG4gICAgQElucHV0KCd0dWlUZXh0ZmllbGRTaXplJylcbiAgICBzaXplOiBUdWlTaXplTCB8IFR1aVNpemVTID0gJ2wnO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgZnVuY3Rpb24gc2l6ZURpcmVjdGl2ZUZhY3RvcnkoKTogVHVpVGV4dGZpZWxkU2l6ZURpcmVjdGl2ZSB7XG4gICAgcmV0dXJuIG5ldyBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlKCk7XG59XG4iXX0=