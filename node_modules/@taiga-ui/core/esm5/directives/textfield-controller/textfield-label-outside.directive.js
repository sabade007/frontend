import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_LABEL_OUTSIDE = new InjectionToken('tuiTextfieldLabelOutside', {
    factory: labelOutsideDirectiveFactory,
});
var TuiTextfieldLabelOutsideDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldLabelOutsideDirective, _super);
    function TuiTextfieldLabelOutsideDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.labelOutside = false;
        return _this;
    }
    TuiTextfieldLabelOutsideDirective_1 = TuiTextfieldLabelOutsideDirective;
    var TuiTextfieldLabelOutsideDirective_1;
    __decorate([
        Input('tuiTextfieldLabelOutside')
    ], TuiTextfieldLabelOutsideDirective.prototype, "labelOutside", void 0);
    TuiTextfieldLabelOutsideDirective = TuiTextfieldLabelOutsideDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldLabelOutside]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_LABEL_OUTSIDE,
                    useExisting: forwardRef(function () { return TuiTextfieldLabelOutsideDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldLabelOutsideDirective);
    return TuiTextfieldLabelOutsideDirective;
}(TuiController));
export { TuiTextfieldLabelOutsideDirective };
// eslint-disable-next-line @typescript-eslint/naming-convention
export function labelOutsideDirectiveFactory() {
    return new TuiTextfieldLabelOutsideDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWxhYmVsLW91dHNpZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1sYWJlbC1vdXRzaWRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sQ0FBQyxJQUFNLDJCQUEyQixHQUNwQyxJQUFJLGNBQWMsQ0FBb0MsMEJBQTBCLEVBQUU7SUFDOUUsT0FBTyxFQUFFLDRCQUE0QjtDQUN4QyxDQUFDLENBQUM7QUFXUDtJQUF1RCxxREFBYTtJQUFwRTtRQUFBLHFFQUdDO1FBREcsa0JBQVksR0FBRyxLQUFLLENBQUM7O0lBQ3pCLENBQUM7MENBSFksaUNBQWlDOztJQUUxQztRQURDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQzsyRUFDYjtJQUZaLGlDQUFpQztRQVQ3QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsNEJBQTRCO1lBQ3RDLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsMkJBQTJCO29CQUNwQyxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxtQ0FBaUMsRUFBakMsQ0FBaUMsQ0FBQztpQkFDbkU7YUFDSjtTQUNKLENBQUM7T0FDVyxpQ0FBaUMsQ0FHN0M7SUFBRCx3Q0FBQztDQUFBLEFBSEQsQ0FBdUQsYUFBYSxHQUduRTtTQUhZLGlDQUFpQztBQUs5QyxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLDRCQUE0QjtJQUN4QyxPQUFPLElBQUksaUNBQWlDLEVBQUUsQ0FBQztBQUNuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIEluamVjdGlvblRva2VuLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUNvbnRyb2xsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5leHBvcnQgY29uc3QgVFVJX1RFWFRGSUVMRF9MQUJFTF9PVVRTSURFID1cbiAgICBuZXcgSW5qZWN0aW9uVG9rZW48VHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlPigndHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlJywge1xuICAgICAgICBmYWN0b3J5OiBsYWJlbE91dHNpZGVEaXJlY3RpdmVGYWN0b3J5LFxuICAgIH0pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlUZXh0ZmllbGRMYWJlbE91dHNpZGVdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX1RFWFRGSUVMRF9MQUJFTF9PVVRTSURFLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRMYWJlbE91dHNpZGVEaXJlY3RpdmUgZXh0ZW5kcyBUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZScpXG4gICAgbGFiZWxPdXRzaWRlID0gZmFsc2U7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBmdW5jdGlvbiBsYWJlbE91dHNpZGVEaXJlY3RpdmVGYWN0b3J5KCk6IFR1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZSB7XG4gICAgcmV0dXJuIG5ldyBUdWlUZXh0ZmllbGRMYWJlbE91dHNpZGVEaXJlY3RpdmUoKTtcbn1cbiJdfQ==