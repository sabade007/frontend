import { __decorate, __extends, __param } from "tslib";
import { AfterViewChecked, ComponentFactoryResolver, Directive, ElementRef, forwardRef, Inject, Injector, Input, OnDestroy, Optional, } from '@angular/core';
import { TuiActiveZoneDirective, TuiParentsScrollService, TuiPortalService, } from '@taiga-ui/cdk';
import { AbstractTuiDropdown } from '@taiga-ui/core/abstract';
import { TUI_DROPDOWN_DIRECTIVE } from '@taiga-ui/core/tokens';
var TuiDropdownDirective = /** @class */ (function (_super) {
    __extends(TuiDropdownDirective, _super);
    function TuiDropdownDirective(componentFactoryResolver, injector, portalService, elementRef, activeZone, refresh$) {
        var _this = _super.call(this, componentFactoryResolver, injector, portalService, elementRef, activeZone) || this;
        _this.refresh$ = refresh$;
        return _this;
    }
    TuiDropdownDirective_1 = TuiDropdownDirective;
    Object.defineProperty(TuiDropdownDirective.prototype, "open", {
        set: function (value) {
            this.toggleDropdown(value);
        },
        enumerable: true,
        configurable: true
    });
    var TuiDropdownDirective_1;
    TuiDropdownDirective.ctorParameters = function () { return [
        { type: ComponentFactoryResolver, decorators: [{ type: Inject, args: [ComponentFactoryResolver,] }] },
        { type: Injector, decorators: [{ type: Inject, args: [Injector,] }] },
        { type: TuiPortalService, decorators: [{ type: Inject, args: [TuiPortalService,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: TuiActiveZoneDirective, decorators: [{ type: Inject, args: [TuiActiveZoneDirective,] }, { type: Optional }] },
        { type: TuiParentsScrollService, decorators: [{ type: Inject, args: [TuiParentsScrollService,] }] }
    ]; };
    __decorate([
        Input('tuiDropdown')
    ], TuiDropdownDirective.prototype, "open", null);
    TuiDropdownDirective = TuiDropdownDirective_1 = __decorate([
        Directive({
            selector: '[tuiDropdown]:not(ng-container)',
            providers: [
                {
                    provide: TUI_DROPDOWN_DIRECTIVE,
                    useExisting: forwardRef(function () { return TuiDropdownDirective_1; }),
                },
                TuiParentsScrollService,
            ],
        }),
        __param(0, Inject(ComponentFactoryResolver)),
        __param(1, Inject(Injector)),
        __param(2, Inject(TuiPortalService)),
        __param(3, Inject(ElementRef)),
        __param(4, Inject(TuiActiveZoneDirective)),
        __param(4, Optional()),
        __param(5, Inject(TuiParentsScrollService))
    ], TuiDropdownDirective);
    return TuiDropdownDirective;
}(AbstractTuiDropdown));
export { TuiDropdownDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy9kcm9wZG93bi8iLCJzb3VyY2VzIjpbImRyb3Bkb3duLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILGdCQUFnQixFQUNoQix3QkFBd0IsRUFDeEIsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLEVBQ1YsTUFBTSxFQUNOLFFBQVEsRUFDUixLQUFLLEVBQ0wsU0FBUyxFQUNULFFBQVEsR0FDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsc0JBQXNCLEVBQ3RCLHVCQUF1QixFQUN2QixnQkFBZ0IsR0FDbkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFNUQsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFZN0Q7SUFDWSx3Q0FBbUI7SUFRM0IsOEJBRUksd0JBQWtELEVBQ2hDLFFBQWtCLEVBRXBDLGFBQStCLEVBQ1gsVUFBbUMsRUFHdkQsVUFBeUMsRUFDQyxRQUFpQztRQVYvRSxZQVlJLGtCQUFNLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxTQUNuRjtRQUg2QyxjQUFRLEdBQVIsUUFBUSxDQUF5Qjs7SUFHL0UsQ0FBQzs2QkF0QlEsb0JBQW9CO0lBSzdCLHNCQUFJLHNDQUFJO2FBQVIsVUFBUyxLQUFjO1lBQ25CLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsQ0FBQzs7O09BQUE7OztnQkFJNkIsd0JBQXdCLHVCQURqRCxNQUFNLFNBQUMsd0JBQXdCO2dCQUVKLFFBQVEsdUJBQW5DLE1BQU0sU0FBQyxRQUFRO2dCQUVELGdCQUFnQix1QkFEOUIsTUFBTSxTQUFDLGdCQUFnQjtnQkFFUSxVQUFVLHVCQUF6QyxNQUFNLFNBQUMsVUFBVTtnQkFHTixzQkFBc0IsdUJBRmpDLE1BQU0sU0FBQyxzQkFBc0IsY0FDN0IsUUFBUTtnQkFFMkMsdUJBQXVCLHVCQUExRSxNQUFNLFNBQUMsdUJBQXVCOztJQWRuQztRQURDLEtBQUssQ0FBQyxhQUFhLENBQUM7b0RBR3BCO0lBUFEsb0JBQW9CO1FBVmhDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxpQ0FBaUM7WUFDM0MsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSxzQkFBc0I7b0JBQy9CLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFvQixFQUFwQixDQUFvQixDQUFDO2lCQUN0RDtnQkFDRCx1QkFBdUI7YUFDMUI7U0FDSixDQUFDO1FBV08sV0FBQSxNQUFNLENBQUMsd0JBQXdCLENBQUMsQ0FBQTtRQUVoQyxXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoQixXQUFBLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO1FBRXhCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2xCLFdBQUEsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUE7UUFDOUIsV0FBQSxRQUFRLEVBQUUsQ0FBQTtRQUVWLFdBQUEsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUE7T0FuQjNCLG9CQUFvQixDQXVCaEM7SUFBRCwyQkFBQztDQUFBLEFBdkJELENBQ1ksbUJBQW1CLEdBc0I5QjtTQXZCWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIEFmdGVyVmlld0NoZWNrZWQsXG4gICAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICAgIERpcmVjdGl2ZSxcbiAgICBFbGVtZW50UmVmLFxuICAgIGZvcndhcmRSZWYsXG4gICAgSW5qZWN0LFxuICAgIEluamVjdG9yLFxuICAgIElucHV0LFxuICAgIE9uRGVzdHJveSxcbiAgICBPcHRpb25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUsXG4gICAgVHVpUGFyZW50c1Njcm9sbFNlcnZpY2UsXG4gICAgVHVpUG9ydGFsU2VydmljZSxcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge0Fic3RyYWN0VHVpRHJvcGRvd259IGZyb20gJ0B0YWlnYS11aS9jb3JlL2Fic3RyYWN0JztcbmltcG9ydCB7VHVpRHJvcGRvd259IGZyb20gJ0B0YWlnYS11aS9jb3JlL2ludGVyZmFjZXMnO1xuaW1wb3J0IHtUVUlfRFJPUERPV05fRElSRUNUSVZFfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlEcm9wZG93bl06bm90KG5nLWNvbnRhaW5lciknLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfRFJPUERPV05fRElSRUNUSVZFLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpRHJvcGRvd25EaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgICAgICBUdWlQYXJlbnRzU2Nyb2xsU2VydmljZSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEcm9wZG93bkRpcmVjdGl2ZVxuICAgIGV4dGVuZHMgQWJzdHJhY3RUdWlEcm9wZG93blxuICAgIGltcGxlbWVudHMgVHVpRHJvcGRvd24sIEFmdGVyVmlld0NoZWNrZWQsIE9uRGVzdHJveVxue1xuICAgIEBJbnB1dCgndHVpRHJvcGRvd24nKVxuICAgIHNldCBvcGVuKHZhbHVlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlRHJvcGRvd24odmFsdWUpO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcilcbiAgICAgICAgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgICAgIEBJbmplY3QoSW5qZWN0b3IpIGluamVjdG9yOiBJbmplY3RvcixcbiAgICAgICAgQEluamVjdChUdWlQb3J0YWxTZXJ2aWNlKVxuICAgICAgICBwb3J0YWxTZXJ2aWNlOiBUdWlQb3J0YWxTZXJ2aWNlLFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUpXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIGFjdGl2ZVpvbmU6IFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUgfCBudWxsLFxuICAgICAgICBASW5qZWN0KFR1aVBhcmVudHNTY3JvbGxTZXJ2aWNlKSByZWFkb25seSByZWZyZXNoJDogVHVpUGFyZW50c1Njcm9sbFNlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgaW5qZWN0b3IsIHBvcnRhbFNlcnZpY2UsIGVsZW1lbnRSZWYsIGFjdGl2ZVpvbmUpO1xuICAgIH1cbn1cbiJdfQ==