import { __read, __spread } from "tslib";
import { inject, InjectionToken } from '@angular/core';
import { map } from 'rxjs/operators';
import { TUI_FIRST_DAY_OF_WEEK, TUI_SHORT_WEEK_DAYS } from './index';
// TODO: 3.0 Remove export in ivy compilation
export var convertToSundayFirstWeekFormat = function (weekDaysNames) {
    var sundayIndex = weekDaysNames.length - 1;
    return __spread([
        weekDaysNames[sundayIndex]
    ], weekDaysNames.slice(0, sundayIndex));
};
export var TUI_ORDERED_SHORT_WEEK_DAYS = new InjectionToken("Ordered calendars i18n texts", {
    factory: function () {
        var firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);
        return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(function (weekDays) {
            return __spread(weekDays.slice(firstDayOfWeekIndex), weekDays.slice(0, firstDayOfWeekIndex));
        }));
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJlZC1zaG9ydC13ZWVrLWRheXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS90b2tlbnMvIiwic291cmNlcyI6WyJvcmRlcmVkLXNob3J0LXdlZWstZGF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxjQUFjLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFckQsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE9BQU8sRUFBQyxxQkFBcUIsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUluRSw2Q0FBNkM7QUFDN0MsTUFBTSxDQUFDLElBQU0sOEJBQThCLEdBQUcsVUFDMUMsYUFBOEI7SUFFOUIsSUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFN0MsT0FBTztRQUNILGFBQWEsQ0FBQyxXQUFXLENBQUM7T0FDdkIsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQ3RCLENBQUM7QUFDekIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sMkJBQTJCLEdBQUcsSUFBSSxjQUFjLENBRTNELDhCQUE4QixFQUFFO0lBQzlCLE9BQU8sRUFBRTtRQUNMLElBQU0sbUJBQW1CLEdBQUcsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFFMUQsT0FBTyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxJQUFJLENBQ25DLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQyxFQUNuQyxHQUFHLENBQ0MsVUFBQSxRQUFRO1lBQ0osT0FBQSxTQUNPLFFBQVEsQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsRUFDbkMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsbUJBQW1CLENBQUMsQ0FDekI7UUFIcEIsQ0FHb0IsQ0FDM0IsQ0FDSixDQUFDO0lBQ04sQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5qZWN0LCBJbmplY3Rpb25Ub2tlbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHtUVUlfRklSU1RfREFZX09GX1dFRUssIFRVSV9TSE9SVF9XRUVLX0RBWVN9IGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQgdHlwZSBXRUVLX0RBWVNfTkFNRVMgPSBbc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nXTtcblxuLy8gVE9ETzogMy4wIFJlbW92ZSBleHBvcnQgaW4gaXZ5IGNvbXBpbGF0aW9uXG5leHBvcnQgY29uc3QgY29udmVydFRvU3VuZGF5Rmlyc3RXZWVrRm9ybWF0ID0gKFxuICAgIHdlZWtEYXlzTmFtZXM6IFdFRUtfREFZU19OQU1FUyxcbik6IFdFRUtfREFZU19OQU1FUyA9PiB7XG4gICAgY29uc3Qgc3VuZGF5SW5kZXggPSB3ZWVrRGF5c05hbWVzLmxlbmd0aCAtIDE7XG5cbiAgICByZXR1cm4gW1xuICAgICAgICB3ZWVrRGF5c05hbWVzW3N1bmRheUluZGV4XSxcbiAgICAgICAgLi4ud2Vla0RheXNOYW1lcy5zbGljZSgwLCBzdW5kYXlJbmRleCksXG4gICAgXSBhcyBXRUVLX0RBWVNfTkFNRVM7XG59O1xuXG5leHBvcnQgY29uc3QgVFVJX09SREVSRURfU0hPUlRfV0VFS19EQVlTID0gbmV3IEluamVjdGlvblRva2VuPFxuICAgIE9ic2VydmFibGU8V0VFS19EQVlTX05BTUVTPlxuPihgT3JkZXJlZCBjYWxlbmRhcnMgaTE4biB0ZXh0c2AsIHtcbiAgICBmYWN0b3J5OiAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpcnN0RGF5T2ZXZWVrSW5kZXggPSBpbmplY3QoVFVJX0ZJUlNUX0RBWV9PRl9XRUVLKTtcblxuICAgICAgICByZXR1cm4gaW5qZWN0KFRVSV9TSE9SVF9XRUVLX0RBWVMpLnBpcGUoXG4gICAgICAgICAgICBtYXAoY29udmVydFRvU3VuZGF5Rmlyc3RXZWVrRm9ybWF0KSxcbiAgICAgICAgICAgIG1hcChcbiAgICAgICAgICAgICAgICB3ZWVrRGF5cyA9PlxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi53ZWVrRGF5cy5zbGljZShmaXJzdERheU9mV2Vla0luZGV4KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLndlZWtEYXlzLnNsaWNlKDAsIGZpcnN0RGF5T2ZXZWVrSW5kZXgpLFxuICAgICAgICAgICAgICAgICAgICBdIGFzIFdFRUtfREFZU19OQU1FUyxcbiAgICAgICAgICAgICksXG4gICAgICAgICk7XG4gICAgfSxcbn0pO1xuIl19