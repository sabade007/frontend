import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { TUI_FIRST_DAY, TUI_LAST_DAY, tuiDefaultProp, TuiMonth, } from '@taiga-ui/cdk';
var TuiPrimitiveYearMonthPaginationComponent = /** @class */ (function () {
    function TuiPrimitiveYearMonthPaginationComponent() {
        this.value = TuiMonth.currentLocal();
        this.min = TUI_FIRST_DAY;
        this.max = TUI_LAST_DAY;
        this.valueChange = new EventEmitter();
        this.yearClick = new EventEmitter();
    }
    Object.defineProperty(TuiPrimitiveYearMonthPaginationComponent.prototype, "prevMonthDisabled", {
        get: function () {
            return this.value.monthSameOrBefore(this.min);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveYearMonthPaginationComponent.prototype, "nextMonthDisabled", {
        get: function () {
            return this.value.monthSameOrAfter(this.max);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveYearMonthPaginationComponent.prototype, "oneYear", {
        get: function () {
            return this.min.year === this.max.year;
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveYearMonthPaginationComponent.prototype.onYearClick = function () {
        this.yearClick.next(this.value);
    };
    TuiPrimitiveYearMonthPaginationComponent.prototype.onPrevMonthClick = function () {
        this.appendValueWithLimit({ month: -1 });
    };
    TuiPrimitiveYearMonthPaginationComponent.prototype.onNextMonthClick = function () {
        this.appendValueWithLimit({ month: 1 });
    };
    TuiPrimitiveYearMonthPaginationComponent.prototype.appendValueWithLimit = function (date) {
        var newMonth = this.value.append(date);
        if (this.min.monthSameOrAfter(newMonth)) {
            this.updateValue(this.min);
            return;
        }
        if (this.max.monthSameOrBefore(newMonth)) {
            this.updateValue(this.max);
            return;
        }
        this.updateValue(newMonth);
    };
    TuiPrimitiveYearMonthPaginationComponent.prototype.updateValue = function (value) {
        if (this.value.monthSame(value)) {
            return;
        }
        this.value = value;
        this.valueChange.emit(value);
    };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveYearMonthPaginationComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveYearMonthPaginationComponent.prototype, "min", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveYearMonthPaginationComponent.prototype, "max", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveYearMonthPaginationComponent.prototype, "valueChange", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveYearMonthPaginationComponent.prototype, "yearClick", void 0);
    TuiPrimitiveYearMonthPaginationComponent = __decorate([
        Component({
            selector: 'tui-primitive-year-month-pagination',
            template: "<tui-primitive-spin-button\n    [focusable]=\"false\"\n    [leftDisabled]=\"prevMonthDisabled\"\n    [rightDisabled]=\"nextMonthDisabled\"\n    (leftClick)=\"onPrevMonthClick()\"\n    (rightClick)=\"onNextMonthClick()\"\n>\n    {{ value | tuiMonth | async }}\n    <ng-container *ngIf=\"oneYear; else button\">\n        {{ value.formattedYear }}\n    </ng-container>\n    <ng-template #button>\n        <button\n            automation-id=\"tui-primitive-year-month-pagination__year-button\"\n            tuiLink\n            type=\"button\"\n            [tuiFocusable]=\"false\"\n            (click)=\"onYearClick()\"\n        >\n            {{ value.formattedYear }}\n        </button>\n    </ng-template>\n</tui-primitive-spin-button>\n",
            styles: [":host{display:block}"]
        })
    ], TuiPrimitiveYearMonthPaginationComponent);
    return TuiPrimitiveYearMonthPaginationComponent;
}());
export { TuiPrimitiveYearMonthPaginationComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbWl0aXZlLXllYXItbW9udGgtcGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9pbnRlcm5hbC9wcmltaXRpdmUteWVhci1tb250aC1wYWdpbmF0aW9uLyIsInNvdXJjZXMiOlsicHJpbWl0aXZlLXllYXItbW9udGgtcGFnaW5hdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUNILGFBQWEsRUFDYixZQUFZLEVBQ1osY0FBYyxFQUNkLFFBQVEsR0FHWCxNQUFNLGVBQWUsQ0FBQztBQVF2QjtJQUFBO1FBS0ksVUFBSyxHQUFHLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUloQyxRQUFHLEdBQWEsYUFBYSxDQUFDO1FBSTlCLFFBQUcsR0FBYSxZQUFZLENBQUM7UUFHcEIsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO1FBRzNDLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBb0RyRCxDQUFDO0lBbERHLHNCQUFJLHVFQUFpQjthQUFyQjtZQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx1RUFBaUI7YUFBckI7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELENBQUM7OztPQUFBO0lBRUQsc0JBQUksNkRBQU87YUFBWDtZQUNJLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQzs7O09BQUE7SUFFRCw4REFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxtRUFBZ0IsR0FBaEI7UUFDSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxtRUFBZ0IsR0FBaEI7UUFDSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRU8sdUVBQW9CLEdBQTVCLFVBQTZCLElBQWtCO1FBQzNDLElBQU0sUUFBUSxHQUFhLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRW5ELElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUUzQixPQUFPO1NBQ1Y7UUFFRCxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFM0IsT0FBTztTQUNWO1FBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU8sOERBQVcsR0FBbkIsVUFBb0IsS0FBZTtRQUMvQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzdCLE9BQU87U0FDVjtRQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFqRUQ7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7MkVBQ2U7SUFJaEM7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7eUVBQ2E7SUFJOUI7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7eUVBQ1k7SUFHN0I7UUFEQyxNQUFNLEVBQUU7aUZBQzJDO0lBR3BEO1FBREMsTUFBTSxFQUFFOytFQUN3QztJQW5CeEMsd0NBQXdDO1FBTHBELFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxxQ0FBcUM7WUFDL0MsNnVCQUE4RDs7U0FFakUsQ0FBQztPQUNXLHdDQUF3QyxDQXVFcEQ7SUFBRCwrQ0FBQztDQUFBLEFBdkVELElBdUVDO1NBdkVZLHdDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfRklSU1RfREFZLFxuICAgIFRVSV9MQVNUX0RBWSxcbiAgICB0dWlEZWZhdWx0UHJvcCxcbiAgICBUdWlNb250aCxcbiAgICBUdWlNb250aExpa2UsXG4gICAgVHVpWWVhcixcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVdpdGhPcHRpb25hbE1pbk1heH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvaW50ZXJmYWNlcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByaW1pdGl2ZS15ZWFyLW1vbnRoLXBhZ2luYXRpb24nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wcmltaXRpdmUteWVhci1tb250aC1wYWdpbmF0aW9uLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3ByaW1pdGl2ZS15ZWFyLW1vbnRoLXBhZ2luYXRpb24uc3R5bGUubGVzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQcmltaXRpdmVZZWFyTW9udGhQYWdpbmF0aW9uQ29tcG9uZW50XG4gICAgaW1wbGVtZW50cyBUdWlXaXRoT3B0aW9uYWxNaW5NYXg8VHVpTW9udGg+XG57XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHZhbHVlID0gVHVpTW9udGguY3VycmVudExvY2FsKCk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbWluOiBUdWlNb250aCA9IFRVSV9GSVJTVF9EQVk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbWF4OiBUdWlNb250aCA9IFRVSV9MQVNUX0RBWTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IHZhbHVlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxUdWlNb250aD4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IHllYXJDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8VHVpWWVhcj4oKTtcblxuICAgIGdldCBwcmV2TW9udGhEaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUubW9udGhTYW1lT3JCZWZvcmUodGhpcy5taW4pO1xuICAgIH1cblxuICAgIGdldCBuZXh0TW9udGhEaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUubW9udGhTYW1lT3JBZnRlcih0aGlzLm1heCk7XG4gICAgfVxuXG4gICAgZ2V0IG9uZVllYXIoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLm1pbi55ZWFyID09PSB0aGlzLm1heC55ZWFyO1xuICAgIH1cblxuICAgIG9uWWVhckNsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnllYXJDbGljay5uZXh0KHRoaXMudmFsdWUpO1xuICAgIH1cblxuICAgIG9uUHJldk1vbnRoQ2xpY2soKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYXBwZW5kVmFsdWVXaXRoTGltaXQoe21vbnRoOiAtMX0pO1xuICAgIH1cblxuICAgIG9uTmV4dE1vbnRoQ2xpY2soKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYXBwZW5kVmFsdWVXaXRoTGltaXQoe21vbnRoOiAxfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhcHBlbmRWYWx1ZVdpdGhMaW1pdChkYXRlOiBUdWlNb250aExpa2UpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgbmV3TW9udGg6IFR1aU1vbnRoID0gdGhpcy52YWx1ZS5hcHBlbmQoZGF0ZSk7XG5cbiAgICAgICAgaWYgKHRoaXMubWluLm1vbnRoU2FtZU9yQWZ0ZXIobmV3TW9udGgpKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVZhbHVlKHRoaXMubWluKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMubWF4Lm1vbnRoU2FtZU9yQmVmb3JlKG5ld01vbnRoKSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVWYWx1ZSh0aGlzLm1heCk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudXBkYXRlVmFsdWUobmV3TW9udGgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlVmFsdWUodmFsdWU6IFR1aU1vbnRoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLm1vbnRoU2FtZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHZhbHVlKTtcbiAgICB9XG59XG4iXX0=