import { ElementRef, Optional } from '@angular/core';
import { TuiModeDirective } from '@taiga-ui/core/directives/mode';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { of } from 'rxjs';
import { map, startWith } from 'rxjs/operators';
/**
 * @deprecated: use {@link tuiModeFactory} instead
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export function modeFactory(mode, _a) {
    var nativeElement = _a.nativeElement;
    var mode$ = mode
        ? mode.change$.pipe(startWith(null), map(function () { return mode.mode; }))
        : of(null);
    nativeElement["$.data-mode.attr"] = mode$;
    return mode$;
}
export var MODE_PROVIDER = {
    provide: TUI_MODE,
    deps: [[new Optional(), TuiModeDirective], ElementRef],
    useFactory: modeFactory,
};
export var tuiModeFactory = modeFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZS5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL3Byb3ZpZGVycy8iLCJzb3VyY2VzIjpbIm1vZGUucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFVBQVUsRUFBRSxRQUFRLEVBQVcsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDaEUsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9DLE9BQU8sRUFBYSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDcEMsT0FBTyxFQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUU5Qzs7R0FFRztBQUNILGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsV0FBVyxDQUN2QixJQUE2QixFQUM3QixFQUEyQjtRQUExQixnQ0FBYTtJQUVkLElBQU0sS0FBSyxHQUFHLElBQUk7UUFDZCxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQ2IsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUNmLEdBQUcsQ0FBQyxjQUFNLE9BQUEsSUFBSSxDQUFDLElBQUksRUFBVCxDQUFTLENBQUMsQ0FDdkI7UUFDSCxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWYsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTFDLE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSxhQUFhLEdBQWE7SUFDbkMsT0FBTyxFQUFFLFFBQVE7SUFDakIsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLGdCQUFnQixDQUFDLEVBQUUsVUFBVSxDQUFDO0lBQ3RELFVBQVUsRUFBRSxXQUFXO0NBQzFCLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxjQUFjLEdBQUcsV0FBVyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbGVtZW50UmVmLCBPcHRpb25hbCwgUHJvdmlkZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlNb2RlRGlyZWN0aXZlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL21vZGUnO1xuaW1wb3J0IHtUVUlfTU9ERX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpQnJpZ2h0bmVzc30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgc3RhcnRXaXRofSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQ6IHVzZSB7QGxpbmsgdHVpTW9kZUZhY3Rvcnl9IGluc3RlYWRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGZ1bmN0aW9uIG1vZGVGYWN0b3J5KFxuICAgIG1vZGU6IFR1aU1vZGVEaXJlY3RpdmUgfCBudWxsLFxuICAgIHtuYXRpdmVFbGVtZW50fTogRWxlbWVudFJlZixcbik6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+IHtcbiAgICBjb25zdCBtb2RlJCA9IG1vZGVcbiAgICAgICAgPyBtb2RlLmNoYW5nZSQucGlwZShcbiAgICAgICAgICAgICAgc3RhcnRXaXRoKG51bGwpLFxuICAgICAgICAgICAgICBtYXAoKCkgPT4gbW9kZS5tb2RlKSxcbiAgICAgICAgICApXG4gICAgICAgIDogb2YobnVsbCk7XG5cbiAgICBuYXRpdmVFbGVtZW50W2AkLmRhdGEtbW9kZS5hdHRyYF0gPSBtb2RlJDtcblxuICAgIHJldHVybiBtb2RlJDtcbn1cblxuZXhwb3J0IGNvbnN0IE1PREVfUFJPVklERVI6IFByb3ZpZGVyID0ge1xuICAgIHByb3ZpZGU6IFRVSV9NT0RFLFxuICAgIGRlcHM6IFtbbmV3IE9wdGlvbmFsKCksIFR1aU1vZGVEaXJlY3RpdmVdLCBFbGVtZW50UmVmXSxcbiAgICB1c2VGYWN0b3J5OiBtb2RlRmFjdG9yeSxcbn07XG5cbmV4cG9ydCBjb25zdCB0dWlNb2RlRmFjdG9yeSA9IG1vZGVGYWN0b3J5O1xuIl19