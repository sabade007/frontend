import { __decorate, __extends, __param } from "tslib";
import { Inject, Injectable } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';
import { fromEvent, Observable } from 'rxjs';
import { map, share, startWith } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@ng-web-apis/common";
// @dynamic
var TuiNightThemeService = /** @class */ (function (_super) {
    __extends(TuiNightThemeService, _super);
    function TuiNightThemeService(windowRef) {
        var _this = this;
        var media = windowRef.matchMedia("(prefers-color-scheme: dark)");
        var media$ = fromEvent(media, "change").pipe(startWith(null), map(function () { return media.matches; }), share());
        _this = _super.call(this, function (subscriber) { return media$.subscribe(subscriber); }) || this;
        return _this;
    }
    TuiNightThemeService.ctorParameters = function () { return [
        { type: Window, decorators: [{ type: Inject, args: [WINDOW,] }] }
    ]; };
    TuiNightThemeService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TuiNightThemeService_Factory() { return new TuiNightThemeService(i0.ɵɵinject(i1.WINDOW)); }, token: TuiNightThemeService, providedIn: "root" });
    TuiNightThemeService = __decorate([
        Injectable({
            providedIn: "root",
        }),
        __param(0, Inject(WINDOW))
    ], TuiNightThemeService);
    return TuiNightThemeService;
}(Observable));
export { TuiNightThemeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmlnaHQtdGhlbWUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL3NlcnZpY2VzLyIsInNvdXJjZXMiOlsibmlnaHQtdGhlbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7QUFFckQsV0FBVztBQUlYO0lBQTBDLHdDQUFtQjtJQUN6RCw4QkFBNEIsU0FBaUI7UUFBN0MsaUJBU0M7UUFSRyxJQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDbkUsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQzFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFDZixHQUFHLENBQUMsY0FBTSxPQUFBLEtBQUssQ0FBQyxPQUFPLEVBQWIsQ0FBYSxDQUFDLEVBQ3hCLEtBQUssRUFBRSxDQUNWLENBQUM7UUFFRixRQUFBLGtCQUFNLFVBQUEsVUFBVSxJQUFJLE9BQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBNUIsQ0FBNEIsQ0FBQyxTQUFDOztJQUN0RCxDQUFDOztnQkFUc0MsTUFBTSx1QkFBaEMsTUFBTSxTQUFDLE1BQU07OztJQURqQixvQkFBb0I7UUFIaEMsVUFBVSxDQUFDO1lBQ1IsVUFBVSxFQUFFLE1BQU07U0FDckIsQ0FBQztRQUVlLFdBQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO09BRGxCLG9CQUFvQixDQVdoQzsrQkFwQkQ7Q0FvQkMsQUFYRCxDQUEwQyxVQUFVLEdBV25EO1NBWFksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtXSU5ET1d9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtmcm9tRXZlbnQsIE9ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXAsIHNoYXJlLCBzdGFydFdpdGh9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuLy8gQGR5bmFtaWNcbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiBgcm9vdGAsXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5pZ2h0VGhlbWVTZXJ2aWNlIGV4dGVuZHMgT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgY29uc3RydWN0b3IoQEluamVjdChXSU5ET1cpIHdpbmRvd1JlZjogV2luZG93KSB7XG4gICAgICAgIGNvbnN0IG1lZGlhID0gd2luZG93UmVmLm1hdGNoTWVkaWEoYChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylgKTtcbiAgICAgICAgY29uc3QgbWVkaWEkID0gZnJvbUV2ZW50KG1lZGlhLCBgY2hhbmdlYCkucGlwZShcbiAgICAgICAgICAgIHN0YXJ0V2l0aChudWxsKSxcbiAgICAgICAgICAgIG1hcCgoKSA9PiBtZWRpYS5tYXRjaGVzKSxcbiAgICAgICAgICAgIHNoYXJlKCksXG4gICAgICAgICk7XG5cbiAgICAgICAgc3VwZXIoc3Vic2NyaWJlciA9PiBtZWRpYSQuc3Vic2NyaWJlKHN1YnNjcmliZXIpKTtcbiAgICB9XG59XG4iXX0=