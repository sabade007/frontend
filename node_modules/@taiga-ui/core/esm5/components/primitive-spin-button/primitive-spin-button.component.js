import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, ViewChild, } from '@angular/core';
import { AbstractTuiInteractive, isNativeFocused, tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_SPIN_TEXTS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
// @dynamic
var TuiPrimitiveSpinButtonComponent = /** @class */ (function (_super) {
    __extends(TuiPrimitiveSpinButtonComponent, _super);
    function TuiPrimitiveSpinButtonComponent(spinTexts$) {
        var _this = _super.call(this) || this;
        _this.spinTexts$ = spinTexts$;
        _this.disabled = false;
        _this.mode = "flat" /* Flat */;
        _this.leftDisabled = false;
        _this.rightDisabled = false;
        _this.leftClick = new EventEmitter();
        _this.rightClick = new EventEmitter();
        return _this;
    }
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "focused", {
        get: function () {
            return !!this.wrapper && isNativeFocused(this.wrapper.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "leftComputedDisabled", {
        get: function () {
            return this.computedDisabled || this.leftDisabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveSpinButtonComponent.prototype, "rightComputedDisabled", {
        get: function () {
            return this.computedDisabled || this.rightDisabled;
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveSpinButtonComponent.prototype.onLeftClick = function () {
        if (!this.leftComputedDisabled) {
            this.leftClick.emit();
        }
    };
    TuiPrimitiveSpinButtonComponent.prototype.onRightClick = function () {
        if (!this.rightComputedDisabled) {
            this.rightClick.emit();
        }
    };
    TuiPrimitiveSpinButtonComponent.prototype.onFocused = function (focused) {
        this.updateFocused(focused);
    };
    TuiPrimitiveSpinButtonComponent.prototype.onFocusVisible = function (focusVisible) {
        this.updateFocusVisible(focusVisible);
    };
    TuiPrimitiveSpinButtonComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_SPIN_TEXTS,] }] }
    ]; };
    __decorate([
        ViewChild('wrapper')
    ], TuiPrimitiveSpinButtonComponent.prototype, "wrapper", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "mode", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "leftDisabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveSpinButtonComponent.prototype, "rightDisabled", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveSpinButtonComponent.prototype, "leftClick", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveSpinButtonComponent.prototype, "rightClick", void 0);
    TuiPrimitiveSpinButtonComponent = __decorate([
        Component({
            selector: 'tui-primitive-spin-button',
            changeDetection: ChangeDetectionStrategy.OnPush,
            template: "<div\n    *ngIf=\"spinTexts$ | async as texts\"\n    #wrapper\n    tuiPreventDefault=\"mousedown\"\n    class=\"t-wrapper\"\n    [tuiFocusable]=\"computedFocusable\"\n    (tuiFocusedChange)=\"onFocused($event)\"\n    (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    (keydown.arrowLeft)=\"onLeftClick()\"\n    (keydown.arrowRight)=\"onRightClick()\"\n>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__left\"\n        icon=\"tuiIconChevronLeftLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"leftComputedDisabled\"\n        [title]=\"texts[0]\"\n        [focusable]=\"false\"\n        (click)=\"onLeftClick()\"\n    ></button>\n    <span class=\"t-content\">\n        <ng-content></ng-content>\n    </span>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__right\"\n        icon=\"tuiIconChevronRightLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"rightComputedDisabled\"\n        [title]=\"texts[1]\"\n        [focusable]=\"false\"\n        (click)=\"onRightClick()\"\n    ></button>\n</div>\n",
            styles: [":host{display:block;font:var(--tui-font-text-l);text-align:center;font-weight:700}.t-wrapper{display:flex;align-items:center;justify-content:space-between;outline:0}.t-arrow{margin:0 .25rem}.t-arrow_hidden{visibility:hidden}.t-content{padding:0 .5rem}:host._focus-visible .t-content{box-shadow:0 0 0 1px var(--tui-focus)}"]
        }),
        __param(0, Inject(TUI_SPIN_TEXTS))
    ], TuiPrimitiveSpinButtonComponent);
    return TuiPrimitiveSpinButtonComponent;
}(AbstractTuiInteractive));
export { TuiPrimitiveSpinButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbWl0aXZlLXNwaW4tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvcHJpbWl0aXZlLXNwaW4tYnV0dG9uLyIsInNvdXJjZXMiOlsicHJpbWl0aXZlLXNwaW4tYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsc0JBQXNCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV0RixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUVoQyxXQUFXO0FBT1g7SUFBcUQsbURBQXNCO0lBMEJ2RSx5Q0FDcUMsVUFBd0M7UUFEN0UsWUFHSSxpQkFBTyxTQUNWO1FBSG9DLGdCQUFVLEdBQVYsVUFBVSxDQUE4QjtRQXJCN0UsY0FBUSxHQUFHLEtBQUssQ0FBQztRQUlqQixVQUFJLHFCQUFxQztRQUl6QyxrQkFBWSxHQUFHLEtBQUssQ0FBQztRQUlyQixtQkFBYSxHQUFHLEtBQUssQ0FBQztRQUdiLGVBQVMsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBR3JDLGdCQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQzs7SUFNL0MsQ0FBQztJQUVELHNCQUFJLG9EQUFPO2FBQVg7WUFDSSxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3pFLENBQUM7OztPQUFBO0lBRUQsc0JBQUksaUVBQW9CO2FBQXhCO1lBQ0ksT0FBTyxJQUFJLENBQUMsZ0JBQWdCLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN0RCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGtFQUFxQjthQUF6QjtZQUNJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDdkQsQ0FBQzs7O09BQUE7SUFFRCxxREFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQUVELHNEQUFZLEdBQVo7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFO1lBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDMUI7SUFDTCxDQUFDO0lBRUQsbURBQVMsR0FBVCxVQUFVLE9BQWdCO1FBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELHdEQUFjLEdBQWQsVUFBZSxZQUFxQjtRQUNoQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7Z0JBbkNnRCxVQUFVLHVCQUF0RCxNQUFNLFNBQUMsY0FBYzs7SUF6QjFCO1FBREMsU0FBUyxDQUFDLFNBQVMsQ0FBQztvRUFDOEI7SUFJbkQ7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7cUVBQ0E7SUFJakI7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7aUVBQ3dCO0lBSXpDO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFO3lFQUNJO0lBSXJCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFOzBFQUNLO0lBR3RCO1FBREMsTUFBTSxFQUFFO3NFQUNxQztJQUc5QztRQURDLE1BQU0sRUFBRTt1RUFDc0M7SUF4QnRDLCtCQUErQjtRQU4zQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLHd2Q0FBb0Q7O1NBRXZELENBQUM7UUE0Qk8sV0FBQSxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUE7T0EzQmxCLCtCQUErQixDQStEM0M7SUFBRCxzQ0FBQztDQUFBLEFBL0RELENBQXFELHNCQUFzQixHQStEMUU7U0EvRFksK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIE91dHB1dCxcbiAgICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aUludGVyYWN0aXZlLCBpc05hdGl2ZUZvY3VzZWQsIHR1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpQXBwZWFyYW5jZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvZW51bXMnO1xuaW1wb3J0IHtUVUlfU1BJTl9URVhUU30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbi8vIEBkeW5hbWljXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wcmltaXRpdmUtc3Bpbi1idXR0b24nLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wcmltaXRpdmUtc3Bpbi1idXR0b24udGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcHJpbWl0aXZlLXNwaW4tYnV0dG9uLnN0eWxlLmxlc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJpbWl0aXZlU3BpbkJ1dHRvbkNvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0VHVpSW50ZXJhY3RpdmUge1xuICAgIEBWaWV3Q2hpbGQoJ3dyYXBwZXInKVxuICAgIHByaXZhdGUgcmVhZG9ubHkgd3JhcHBlcj86IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbW9kZTogVHVpQXBwZWFyYW5jZSA9IFR1aUFwcGVhcmFuY2UuRmxhdDtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBsZWZ0RGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICByaWdodERpc2FibGVkID0gZmFsc2U7XG5cbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSBsZWZ0Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSByaWdodENsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX1NQSU5fVEVYVFMpIHJlYWRvbmx5IHNwaW5UZXh0cyQ6IE9ic2VydmFibGU8W3N0cmluZywgc3RyaW5nXT4sXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgZ2V0IGZvY3VzZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMud3JhcHBlciAmJiBpc05hdGl2ZUZvY3VzZWQodGhpcy53cmFwcGVyLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cblxuICAgIGdldCBsZWZ0Q29tcHV0ZWREaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcHV0ZWREaXNhYmxlZCB8fCB0aGlzLmxlZnREaXNhYmxlZDtcbiAgICB9XG5cbiAgICBnZXQgcmlnaHRDb21wdXRlZERpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wdXRlZERpc2FibGVkIHx8IHRoaXMucmlnaHREaXNhYmxlZDtcbiAgICB9XG5cbiAgICBvbkxlZnRDbGljaygpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLmxlZnRDb21wdXRlZERpc2FibGVkKSB7XG4gICAgICAgICAgICB0aGlzLmxlZnRDbGljay5lbWl0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblJpZ2h0Q2xpY2soKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5yaWdodENvbXB1dGVkRGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMucmlnaHRDbGljay5lbWl0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbkZvY3VzZWQoZm9jdXNlZDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnVwZGF0ZUZvY3VzZWQoZm9jdXNlZCk7XG4gICAgfVxuXG4gICAgb25Gb2N1c1Zpc2libGUoZm9jdXNWaXNpYmxlOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMudXBkYXRlRm9jdXNWaXNpYmxlKGZvY3VzVmlzaWJsZSk7XG4gICAgfVxufVxuIl19