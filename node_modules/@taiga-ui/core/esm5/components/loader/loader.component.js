import { __decorate, __param } from "tslib";
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, } from '@angular/core';
import { blurNativeFocused, isNativeFocusedIn, isSafari, TUI_IS_IOS, tuiDefaultProp, tuiRequiredSetter, } from '@taiga-ui/cdk';
import { sizeBigger } from '@taiga-ui/core/utils/miscellaneous';
import { TUI_LOADER_OPTIONS } from './loader-options';
// @dynamic
var TuiLoaderComponent = /** @class */ (function () {
    function TuiLoaderComponent(documentRef, elementRef, isIos, options) {
        this.documentRef = documentRef;
        this.elementRef = elementRef;
        this.isIos = isIos;
        this.options = options;
        this.size = this.options.size;
        this.inheritColor = this.options.inheritColor;
        this.overlay = this.options.overlay;
        // TODO: 3.0 Remove null
        this.textContent = null;
        this.loading = true;
        this.isApple = isSafari(this.elementRef.nativeElement) || this.isIos;
    }
    Object.defineProperty(TuiLoaderComponent.prototype, "showLoader", {
        set: function (value) {
            // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way
            if (value && this.focused) {
                blurNativeFocused(this.documentRef);
            }
            this.loading = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLoaderComponent.prototype, "hasOverlay", {
        get: function () {
            return this.overlay && this.loading;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLoaderComponent.prototype, "hasText", {
        get: function () {
            return !!this.textContent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLoaderComponent.prototype, "isHorizontal", {
        get: function () {
            return !sizeBigger(this.size);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLoaderComponent.prototype, "focused", {
        get: function () {
            return isNativeFocusedIn(this.elementRef.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    TuiLoaderComponent.ctorParameters = function () { return [
        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_IOS,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_LOADER_OPTIONS,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLoaderComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLoaderComponent.prototype, "inheritColor", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLoaderComponent.prototype, "overlay", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLoaderComponent.prototype, "textContent", void 0);
    __decorate([
        Input(),
        tuiRequiredSetter()
    ], TuiLoaderComponent.prototype, "showLoader", null);
    __decorate([
        HostBinding('class._loading')
    ], TuiLoaderComponent.prototype, "loading", void 0);
    TuiLoaderComponent = __decorate([
        Component({
            selector: 'tui-loader',
            template: "<fieldset\n    class=\"t-content\"\n    [class.t-content_has-overlay]=\"hasOverlay\"\n    [class.t-content_loading]=\"loading\"\n    [disabled]=\"loading && !isApple\"\n>\n    <ng-content></ng-content>\n</fieldset>\n\n<div\n    *ngIf=\"loading\"\n    class=\"t-loader\"\n    [class.t-loader_horizontal]=\"isHorizontal\"\n    [class.t-loader_inherit-color]=\"inheritColor\"\n    [attr.data-tui-element-size]=\"size\"\n>\n    <svg\n        automation-id=\"tui-loader__loader\"\n        focusable=\"false\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"t-icon\"\n    >\n        <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            stroke-dasharray=\"314\"\n            class=\"t-circle\"\n        ></circle>\n    </svg>\n\n    <div\n        *ngIf=\"hasText\"\n        polymorpheus-outlet\n        automation-id=\"tui-loader__text\"\n        class=\"t-text\"\n        [class.t-text_horizontal]=\"isHorizontal\"\n        [content]=\"textContent\"\n    ></div>\n</div>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["@keyframes tuiLoaderDashOffset{0%,100%{stroke-dashoffset:-66}50%{stroke-dashoffset:-314}}@keyframes tuiLoaderRotate{0%{transform:rotate(0)}50%{transform:rotate(1turn)}100%{transform:rotate(3turn)}}:host{position:relative;display:flex}:host._loading{overflow:hidden}.t-content{z-index:0;min-width:100%;height:100%;padding:0;margin:0;border:none}.t-content_has-overlay{opacity:.3}.t-content_loading{pointer-events:none}.t-loader{position:relative;left:-100%;display:flex;flex-direction:column;align-items:center;justify-content:center;min-width:100%;flex-shrink:0;align-self:center;color:var(--tui-text-01);stroke:var(--tui-primary);animation:tuiFadeIn var(--tui-duration)}.t-loader.t-loader_horizontal{flex-direction:row}.t-loader.t-loader_inherit-color{color:inherit;stroke:currentColor}.t-loader[data-tui-element-size=xs]{font-size:.75rem;stroke-width:38}.t-loader[data-tui-element-size='s']{font-size:1rem;stroke-width:25}.t-loader[data-tui-element-size='m']{font-size:1.5rem;stroke-width:17}.t-loader[data-tui-element-size='l']{font-size:2.5rem;stroke-width:15}.t-loader[data-tui-element-size=xl]{font-size:3.5rem;stroke-width:14}.t-loader[data-tui-element-size=xxl]{font-size:5rem;stroke-width:10}.t-text{font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:1rem;color:inherit;max-width:100%;text-align:center;stroke-width:0}.t-text_horizontal{margin:0 0 0 1rem}.t-icon{display:block;min-width:1em;max-width:1em;min-height:1em;max-height:1em;margin:.25rem -.5em;border-radius:100%;overflow:hidden;transform:scale(1,-1);animation:3s linear infinite tuiLoaderRotate}.t-circle{fill:none;stroke:inherit;stroke-width:inherit;animation:3s linear infinite tuiLoaderDashOffset}"]
        }),
        __param(0, Inject(DOCUMENT)),
        __param(1, Inject(ElementRef)),
        __param(2, Inject(TUI_IS_IOS)),
        __param(3, Inject(TUI_LOADER_OPTIONS))
    ], TuiLoaderComponent);
    return TuiLoaderComponent;
}());
export { TuiLoaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvbG9hZGVyLyIsInNvdXJjZXMiOlsibG9hZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLGlCQUFpQixFQUNqQixRQUFRLEVBQ1IsVUFBVSxFQUNWLGNBQWMsRUFDZCxpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRzlELE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxrQkFBa0IsQ0FBQztBQUV0RSxXQUFXO0FBT1g7SUFrQ0ksNEJBQ3VDLFdBQXFCLEVBQ25CLFVBQW1DLEVBQ25DLEtBQWMsRUFDTixPQUF5QjtRQUhuQyxnQkFBVyxHQUFYLFdBQVcsQ0FBVTtRQUNuQixlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUNuQyxVQUFLLEdBQUwsS0FBSyxDQUFTO1FBQ04sWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFuQzFFLFNBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUl6QixpQkFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1FBSXpDLFlBQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUUvQix3QkFBd0I7UUFHeEIsZ0JBQVcsR0FBK0IsSUFBSSxDQUFDO1FBYy9DLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFTixZQUFPLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztJQU90RSxDQUFDO0lBbkJKLHNCQUFJLDBDQUFVO2FBQWQsVUFBZSxLQUFjO1lBQ3pCLG1GQUFtRjtZQUNuRixJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUN2QixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7YUFDdkM7WUFFRCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN6QixDQUFDOzs7T0FBQTtJQWNELHNCQUFJLDBDQUFVO2FBQWQ7WUFDSSxPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHVDQUFPO2FBQVg7WUFDSSxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzlCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksNENBQVk7YUFBaEI7WUFDSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHVDQUFPO2FBQVg7WUFDSSxPQUFPLGlCQUFpQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDNUQsQ0FBQzs7O09BQUE7O2dCQXBCbUQsUUFBUSx1QkFBdkQsTUFBTSxTQUFDLFFBQVE7Z0JBQ2lDLFVBQVUsdUJBQTFELE1BQU0sU0FBQyxVQUFVOzhDQUNqQixNQUFNLFNBQUMsVUFBVTtnREFDakIsTUFBTSxTQUFDLGtCQUFrQjs7SUFuQzlCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFO29EQUNRO0lBSXpCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFOzREQUN3QjtJQUl6QztRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTt1REFDYztJQUsvQjtRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTsyREFDOEI7SUFJL0M7UUFGQyxLQUFLLEVBQUU7UUFDUCxpQkFBaUIsRUFBRTt3REFRbkI7SUFHRDtRQURDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzt1REFDZjtJQTlCTixrQkFBa0I7UUFOOUIsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFlBQVk7WUFDdEIsc2lDQUFxQztZQUVyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDbEQsQ0FBQztRQW9DTyxXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoQixXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUNsQixXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUNsQixXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO09BdEN0QixrQkFBa0IsQ0F3RDlCO0lBQUQseUJBQUM7Q0FBQSxBQXhERCxJQXdEQztTQXhEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPQ1VNRU5UfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBibHVyTmF0aXZlRm9jdXNlZCxcbiAgICBpc05hdGl2ZUZvY3VzZWRJbixcbiAgICBpc1NhZmFyaSxcbiAgICBUVUlfSVNfSU9TLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIHR1aVJlcXVpcmVkU2V0dGVyLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7c2l6ZUJpZ2dlcn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmltcG9ydCB7VFVJX0xPQURFUl9PUFRJT05TLCBUdWlMb2FkZXJPcHRpb25zfSBmcm9tICcuL2xvYWRlci1vcHRpb25zJztcblxuLy8gQGR5bmFtaWNcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWxvYWRlcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvYWRlci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9sb2FkZXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlMb2FkZXJDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzaXplID0gdGhpcy5vcHRpb25zLnNpemU7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaW5oZXJpdENvbG9yID0gdGhpcy5vcHRpb25zLmluaGVyaXRDb2xvcjtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBvdmVybGF5ID0gdGhpcy5vcHRpb25zLm92ZXJsYXk7XG5cbiAgICAvLyBUT0RPOiAzLjAgUmVtb3ZlIG51bGxcbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgdGV4dENvbnRlbnQ6IFBvbHltb3JwaGV1c0NvbnRlbnQgfCBudWxsID0gbnVsbDtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aVJlcXVpcmVkU2V0dGVyKClcbiAgICBzZXQgc2hvd0xvYWRlcih2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICAvLyBAYmFkIFRPRE86IGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvaXNzdWVzLzMyMDgzIHRoaW5rIG9mIGEgYmV0dGVyIHdheVxuICAgICAgICBpZiAodmFsdWUgJiYgdGhpcy5mb2N1c2VkKSB7XG4gICAgICAgICAgICBibHVyTmF0aXZlRm9jdXNlZCh0aGlzLmRvY3VtZW50UmVmKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubG9hZGluZyA9IHZhbHVlO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2xvYWRpbmcnKVxuICAgIGxvYWRpbmcgPSB0cnVlO1xuXG4gICAgcmVhZG9ubHkgaXNBcHBsZSA9IGlzU2FmYXJpKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KSB8fCB0aGlzLmlzSW9zO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgcmVhZG9ubHkgZG9jdW1lbnRSZWY6IERvY3VtZW50LFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgICAgIEBJbmplY3QoVFVJX0lTX0lPUykgcHJpdmF0ZSByZWFkb25seSBpc0lvczogYm9vbGVhbixcbiAgICAgICAgQEluamVjdChUVUlfTE9BREVSX09QVElPTlMpIHByaXZhdGUgcmVhZG9ubHkgb3B0aW9uczogVHVpTG9hZGVyT3B0aW9ucyxcbiAgICApIHt9XG5cbiAgICBnZXQgaGFzT3ZlcmxheSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3ZlcmxheSAmJiB0aGlzLmxvYWRpbmc7XG4gICAgfVxuXG4gICAgZ2V0IGhhc1RleHQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMudGV4dENvbnRlbnQ7XG4gICAgfVxuXG4gICAgZ2V0IGlzSG9yaXpvbnRhbCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICFzaXplQmlnZ2VyKHRoaXMuc2l6ZSk7XG4gICAgfVxuXG4gICAgZ2V0IGZvY3VzZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBpc05hdGl2ZUZvY3VzZWRJbih0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCk7XG4gICAgfVxufVxuIl19