import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChild, HostBinding, Inject, Input, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
var TuiLabelComponent = /** @class */ (function () {
    function TuiLabelComponent(mode$) {
        this.mode$ = mode$;
        // TODO: 3.0 Rename to tuiLabel
        this.label = '';
        this.context = {
            $implicit: null,
        };
    }
    TuiLabelComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLabelComponent.prototype, "label", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLabelComponent.prototype, "context", void 0);
    __decorate([
        ContentChild(NgControl),
        HostBinding('class._control')
    ], TuiLabelComponent.prototype, "control", void 0);
    TuiLabelComponent = __decorate([
        Component({
            selector: 'label[tuiLabel]',
            template: "<span\n    polymorpheus-outlet\n    class=\"t-label\"\n    [content]=\"label\"\n    [context]=\"context\"\n>\n    <ng-template let-text>\n        <span class=\"t-text\">{{ text }}</span>\n    </ng-template>\n</span>\n<span class=\"t-content\">\n    <ng-content></ng-content>\n</span>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [MODE_PROVIDER],
            host: {
                '($.data-mode.attr)': 'mode$',
            },
            styles: [":host{display:flex;min-height:2.75rem;justify-content:space-between;flex-direction:column;pointer-events:none}.t-label{font:var(--tui-font-text-s);max-width:100%;align-self:inherit;overflow:inherit;pointer-events:auto}.t-text{display:block;overflow:inherit;text-overflow:ellipsis}:host:not(._control) .t-text{color:var(--tui-text-02)}:host([data-mode=onDark]) .t-text{color:var(--tui-text-02-night)}.t-content{line-height:1.5rem;overflow:inherit;text-overflow:ellipsis;pointer-events:auto}"]
        }),
        __param(0, Inject(TUI_MODE))
    ], TuiLabelComponent);
    return TuiLabelComponent;
}());
export { TuiLabelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9sYWJlbC8iLCJzb3VyY2VzIjpbImxhYmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6QyxPQUFPLEVBQXlCLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFZaEM7SUFnQkksMkJBQXVDLEtBQXVDO1FBQXZDLFVBQUssR0FBTCxLQUFLLENBQWtDO1FBZjlFLCtCQUErQjtRQUcvQixVQUFLLEdBQXdCLEVBQUUsQ0FBQztRQUloQyxZQUFPLEdBQXFDO1lBQ3hDLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUM7SUFNK0UsQ0FBQzs7Z0JBQXBDLFVBQVUsdUJBQTNDLE1BQU0sU0FBQyxRQUFROztJQVo1QjtRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTtvREFDZTtJQUloQztRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTtzREFHZjtJQUlGO1FBRkMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUN2QixXQUFXLENBQUMsZ0JBQWdCLENBQUM7c0RBQ0Q7SUFkcEIsaUJBQWlCO1FBVjdCLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IseVNBQW9DO1lBRXBDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQztZQUMxQixJQUFJLEVBQUU7Z0JBQ0Ysb0JBQW9CLEVBQUUsT0FBTzthQUNoQzs7U0FDSixDQUFDO1FBaUJlLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO09BaEJwQixpQkFBaUIsQ0FpQjdCO0lBQUQsd0JBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWpCWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBDb250ZW50Q2hpbGQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdDb250cm9sfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge1R1aUNvbnRleHRXaXRoSW1wbGljaXQsIHR1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7TU9ERV9QUk9WSURFUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvcHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX01PREV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3N9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbGFiZWxbdHVpTGFiZWxdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbGFiZWwudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGFiZWwuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW01PREVfUFJPVklERVJdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJygkLmRhdGEtbW9kZS5hdHRyKSc6ICdtb2RlJCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTGFiZWxDb21wb25lbnQ8VD4ge1xuICAgIC8vIFRPRE86IDMuMCBSZW5hbWUgdG8gdHVpTGFiZWxcbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbGFiZWw6IFBvbHltb3JwaGV1c0NvbnRlbnQgPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBjb250ZXh0OiBUdWlDb250ZXh0V2l0aEltcGxpY2l0PFQgfCBudWxsPiA9IHtcbiAgICAgICAgJGltcGxpY2l0OiBudWxsLFxuICAgIH07XG5cbiAgICBAQ29udGVudENoaWxkKE5nQ29udHJvbClcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9jb250cm9sJylcbiAgICByZWFkb25seSBjb250cm9sPzogTmdDb250cm9sO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+KSB7fVxufVxuIl19