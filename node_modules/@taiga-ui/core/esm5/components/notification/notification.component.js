import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { tuiDefaultProp, tuiIsObserved } from '@taiga-ui/cdk';
import { TUI_CLOSE_WORD, TUI_NOTIFICATION_OPTIONS, } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
export var STATUS_ICON = {
    info: 'tuiIconInfo',
    success: 'tuiIconCheckCircle',
    error: 'tuiIconCancel',
    warning: 'tuiIconAttention',
};
// @bad TODO: Think about moving to kit
var TuiNotificationComponent = /** @class */ (function () {
    function TuiNotificationComponent(closeWord$, options) {
        this.closeWord$ = closeWord$;
        this.options = options;
        this.hasIcon = this.options.hasIcon;
        this.status = this.options.status;
        this.close = new EventEmitter();
    }
    Object.defineProperty(TuiNotificationComponent.prototype, "icon", {
        get: function () {
            return STATUS_ICON[this.status];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiNotificationComponent.prototype, "hasClose", {
        get: function () {
            return tuiIsObserved(this.close);
        },
        enumerable: true,
        configurable: true
    });
    TuiNotificationComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_NOTIFICATION_OPTIONS,] }] }
    ]; };
    __decorate([
        Input(),
        HostBinding('class._has-icon'),
        tuiDefaultProp()
    ], TuiNotificationComponent.prototype, "hasIcon", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-tui-host-status'),
        tuiDefaultProp()
    ], TuiNotificationComponent.prototype, "status", void 0);
    __decorate([
        Output()
    ], TuiNotificationComponent.prototype, "close", void 0);
    __decorate([
        HostBinding('class._has-close-button')
    ], TuiNotificationComponent.prototype, "hasClose", null);
    TuiNotificationComponent = __decorate([
        Component({
            selector: 'tui-notification',
            template: "<tui-svg\n    *ngIf=\"hasIcon\"\n    automation-id=\"tui-notification__icon\"\n    class=\"t-icon\"\n    [src]=\"icon\"\n></tui-svg>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<button\n    *ngIf=\"hasClose\"\n    tuiIconButton\n    type=\"button\"\n    automation-id=\"tui-notification__close\"\n    size=\"xs\"\n    icon=\"tuiIconCloseLarge\"\n    appearance=\"icon\"\n    class=\"t-close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;padding:.8125rem 1rem .6875rem;border-radius:var(--tui-radius-m);background:#fff;background:var(--tui-base-01);box-sizing:border-box;overflow:hidden}:host:after{position:absolute;top:0;left:0;width:100%;height:100%;content:'';pointer-events:none}:host._has-close-button{padding-right:2rem}:host._has-icon{padding-left:2.75rem}:host[data-tui-host-status=info]{color:var(--tui-info-fill)}:host[data-tui-host-status=info]:after{background:var(--tui-info-bg)}:host[data-tui-host-status=success]{color:var(--tui-success-fill)}:host[data-tui-host-status=success]:after{background:var(--tui-success-bg)}:host[data-tui-host-status=error]{color:var(--tui-error-fill)}:host[data-tui-host-status=error]:after{background:var(--tui-error-bg)}:host[data-tui-host-status=warning]{color:var(--tui-warning-fill)}:host[data-tui-host-status=warning]:after{background:var(--tui-warning-bg)}.t-content{word-wrap:break-word;color:var(--tui-text-01)}.t-icon{position:absolute;top:0;left:1rem;display:flex;width:1rem;height:100%;max-height:3rem;align-items:center}.t-close{position:absolute;top:.625rem;right:.5rem}"]
        }),
        __param(0, Inject(TUI_CLOSE_WORD)),
        __param(1, Inject(TUI_NOTIFICATION_OPTIONS))
    ], TuiNotificationComponent);
    return TuiNotificationComponent;
}());
export { TuiNotificationComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uLyIsInNvdXJjZXMiOlsibm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsY0FBYyxFQUFFLGFBQWEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQ0gsY0FBYyxFQUNkLHdCQUF3QixHQUUzQixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFaEMsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHO0lBQ3ZCLElBQUksRUFBRSxhQUFhO0lBQ25CLE9BQU8sRUFBRSxvQkFBb0I7SUFDN0IsS0FBSyxFQUFFLGVBQWU7SUFDdEIsT0FBTyxFQUFFLGtCQUFrQjtDQUNyQixDQUFDO0FBRVgsdUNBQXVDO0FBT3ZDO0lBY0ksa0NBQ3FDLFVBQThCLEVBRXRELE9BQXNDO1FBRmQsZUFBVSxHQUFWLFVBQVUsQ0FBb0I7UUFFdEQsWUFBTyxHQUFQLE9BQU8sQ0FBK0I7UUFibkQsWUFBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBSy9CLFdBQU0sR0FBNkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFHOUQsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7SUFNdkMsQ0FBQztJQUVKLHNCQUFJLDBDQUFJO2FBQVI7WUFDSSxPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsQ0FBQzs7O09BQUE7SUFHRCxzQkFBSSw4Q0FBUTthQUFaO1lBQ0ksT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLENBQUM7OztPQUFBOztnQkFaZ0QsVUFBVSx1QkFBdEQsTUFBTSxTQUFDLGNBQWM7Z0RBQ3JCLE1BQU0sU0FBQyx3QkFBd0I7O0lBWnBDO1FBSEMsS0FBSyxFQUFFO1FBQ1AsV0FBVyxDQUFDLGlCQUFpQixDQUFDO1FBQzlCLGNBQWMsRUFBRTs2REFDYztJQUsvQjtRQUhDLEtBQUssRUFBRTtRQUNQLFdBQVcsQ0FBQywyQkFBMkIsQ0FBQztRQUN4QyxjQUFjLEVBQUU7NERBQ3NEO0lBR3ZFO1FBREMsTUFBTSxFQUFFOzJEQUNpQztJQWExQztRQURDLFdBQVcsQ0FBQyx5QkFBeUIsQ0FBQzs0REFHdEM7SUEzQlEsd0JBQXdCO1FBTnBDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsMmZBQTJDO1lBRTNDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztTQUNsRCxDQUFDO1FBZ0JPLFdBQUEsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFBO1FBQ3RCLFdBQUEsTUFBTSxDQUFDLHdCQUF3QixDQUFDLENBQUE7T0FoQjVCLHdCQUF3QixDQTRCcEM7SUFBRCwrQkFBQztDQUFBLEFBNUJELElBNEJDO1NBNUJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3AsIHR1aUlzT2JzZXJ2ZWR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICBUVUlfQ0xPU0VfV09SRCxcbiAgICBUVUlfTk9USUZJQ0FUSU9OX09QVElPTlMsXG4gICAgVHVpTm90aWZpY2F0aW9uRGVmYXVsdE9wdGlvbnMsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgY29uc3QgU1RBVFVTX0lDT04gPSB7XG4gICAgaW5mbzogJ3R1aUljb25JbmZvJyxcbiAgICBzdWNjZXNzOiAndHVpSWNvbkNoZWNrQ2lyY2xlJyxcbiAgICBlcnJvcjogJ3R1aUljb25DYW5jZWwnLFxuICAgIHdhcm5pbmc6ICd0dWlJY29uQXR0ZW50aW9uJyxcbn0gYXMgY29uc3Q7XG5cbi8vIEBiYWQgVE9ETzogVGhpbmsgYWJvdXQgbW92aW5nIHRvIGtpdFxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktbm90aWZpY2F0aW9uJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbm90aWZpY2F0aW9uLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5vdGlmaWNhdGlvbkNvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9oYXMtaWNvbicpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBoYXNJY29uID0gdGhpcy5vcHRpb25zLmhhc0ljb247XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXR1aS1ob3N0LXN0YXR1cycpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzdGF0dXM6ICdlcnJvcicgfCAnaW5mbycgfCAnc3VjY2VzcycgfCAnd2FybmluZycgPSB0aGlzLm9wdGlvbnMuc3RhdHVzO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcmVhZG9ubHkgY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfQ0xPU0VfV09SRCkgcmVhZG9ubHkgY2xvc2VXb3JkJDogT2JzZXJ2YWJsZTxzdHJpbmc+LFxuICAgICAgICBASW5qZWN0KFRVSV9OT1RJRklDQVRJT05fT1BUSU9OUylcbiAgICAgICAgcmVhZG9ubHkgb3B0aW9uczogVHVpTm90aWZpY2F0aW9uRGVmYXVsdE9wdGlvbnMsXG4gICAgKSB7fVxuXG4gICAgZ2V0IGljb24oKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIFNUQVRVU19JQ09OW3RoaXMuc3RhdHVzXTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9oYXMtY2xvc2UtYnV0dG9uJylcbiAgICBnZXQgaGFzQ2xvc2UoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0dWlJc09ic2VydmVkKHRoaXMuY2xvc2UpO1xuICAgIH1cbn1cbiJdfQ==