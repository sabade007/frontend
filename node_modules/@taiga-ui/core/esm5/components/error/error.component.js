import { __assign, __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';
import { tuiDefaultProp, TuiValidationError } from '@taiga-ui/cdk';
import { tuiFadeIn, tuiHeightCollapse } from '@taiga-ui/core/animations';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_ANIMATION_OPTIONS, TUI_DEFAULT_ERROR_MESSAGE, TUI_MODE, } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
var TuiErrorComponent = /** @class */ (function () {
    function TuiErrorComponent(options, mode$, defaultErrorMessage$) {
        this.options = options;
        this.mode$ = mode$;
        this.defaultErrorMessage$ = defaultErrorMessage$;
        this.error = null;
        this.animation = __assign({ value: '' }, this.options);
    }
    Object.defineProperty(TuiErrorComponent.prototype, "errorSetter", {
        set: function (error) {
            this.error = typeof error === 'string' ? new TuiValidationError(error) : error;
        },
        enumerable: true,
        configurable: true
    });
    TuiErrorComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ANIMATION_OPTIONS,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_DEFAULT_ERROR_MESSAGE,] }] }
    ]; };
    __decorate([
        Input('error'),
        tuiDefaultProp()
    ], TuiErrorComponent.prototype, "errorSetter", null);
    TuiErrorComponent = __decorate([
        Component({
            selector: 'tui-error',
            template: "<div\n    *ngIf=\"error\"\n    polymorpheus-outlet\n    automation-id=\"tui-error__text\"\n    class=\"t-message-text\"\n    [@tuiHeightCollapse]=\"animation\"\n    [@tuiFadeIn]=\"animation\"\n    [class.t-message-text_light]=\"(mode$ | async) === 'onDark'\"\n    [content]=\"error.message || (defaultErrorMessage$ | async)\"\n    [context]=\"error.context || {}\"\n></div>\n",
            providers: [MODE_PROVIDER],
            changeDetection: ChangeDetectionStrategy.OnPush,
            animations: [tuiHeightCollapse, tuiFadeIn],
            styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:block;color:var(--tui-negative);word-wrap:break-word}.t-message-text{margin-top:.25rem;white-space:pre-wrap}.t-message-text_light{color:var(--tui-negative-night)}"]
        }),
        __param(0, Inject(TUI_ANIMATION_OPTIONS)),
        __param(1, Inject(TUI_MODE)),
        __param(2, Inject(TUI_DEFAULT_ERROR_MESSAGE))
    ], TuiErrorComponent);
    return TuiErrorComponent;
}());
export { TuiErrorComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9lcnJvci8iLCJzb3VyY2VzIjpbImVycm9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBQyxjQUFjLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFDLFNBQVMsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3ZFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQ0gscUJBQXFCLEVBQ3JCLHlCQUF5QixFQUN6QixRQUFRLEdBQ1gsTUFBTSx1QkFBdUIsQ0FBQztBQUUvQixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBVWhDO0lBV0ksMkJBQ29ELE9BQXlCLEVBQzlDLEtBQXVDLEVBRXpELG9CQUF3QztRQUhELFlBQU8sR0FBUCxPQUFPLENBQWtCO1FBQzlDLFVBQUssR0FBTCxLQUFLLENBQWtDO1FBRXpELHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBb0I7UUFSckQsVUFBSyxHQUE4QixJQUFJLENBQUM7UUFFL0IsY0FBUyxHQUFHLFdBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSyxJQUFJLENBQUMsT0FBTyxDQUFVLENBQUM7SUFPeEQsQ0FBQztJQWJKLHNCQUFJLDBDQUFXO2FBQWYsVUFBZ0IsS0FBeUM7WUFDckQsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNuRixDQUFDOzs7T0FBQTs7Z0RBT0ksTUFBTSxTQUFDLHFCQUFxQjtnQkFDSyxVQUFVLHVCQUEzQyxNQUFNLFNBQUMsUUFBUTtnQkFFZSxVQUFVLHVCQUR4QyxNQUFNLFNBQUMseUJBQXlCOztJQVhyQztRQUZDLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFDZCxjQUFjLEVBQUU7d0RBR2hCO0lBTFEsaUJBQWlCO1FBUjdCLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxXQUFXO1lBQ3JCLG1ZQUFvQztZQUVwQyxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUM7WUFDMUIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsVUFBVSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsU0FBUyxDQUFDOztTQUM3QyxDQUFDO1FBYU8sV0FBQSxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQTtRQUM3QixXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoQixXQUFBLE1BQU0sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFBO09BZDdCLGlCQUFpQixDQWlCN0I7SUFBRCx3QkFBQztDQUFBLEFBakJELElBaUJDO1NBakJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QW5pbWF0aW9uT3B0aW9uc30gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlEZWZhdWx0UHJvcCwgVHVpVmFsaWRhdGlvbkVycm9yfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dHVpRmFkZUluLCB0dWlIZWlnaHRDb2xsYXBzZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge01PREVfUFJPVklERVJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Byb3ZpZGVycyc7XG5pbXBvcnQge1xuICAgIFRVSV9BTklNQVRJT05fT1BUSU9OUyxcbiAgICBUVUlfREVGQVVMVF9FUlJPUl9NRVNTQUdFLFxuICAgIFRVSV9NT0RFLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHtUdWlCcmlnaHRuZXNzfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1lcnJvcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Vycm9yLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Vycm9yLnN0eWxlLmxlc3MnXSxcbiAgICBwcm92aWRlcnM6IFtNT0RFX1BST1ZJREVSXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBhbmltYXRpb25zOiBbdHVpSGVpZ2h0Q29sbGFwc2UsIHR1aUZhZGVJbl0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUVycm9yQ29tcG9uZW50IHtcbiAgICBASW5wdXQoJ2Vycm9yJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNldCBlcnJvclNldHRlcihlcnJvcjogVHVpVmFsaWRhdGlvbkVycm9yIHwgc3RyaW5nIHwgbnVsbCkge1xuICAgICAgICB0aGlzLmVycm9yID0gdHlwZW9mIGVycm9yID09PSAnc3RyaW5nJyA/IG5ldyBUdWlWYWxpZGF0aW9uRXJyb3IoZXJyb3IpIDogZXJyb3I7XG4gICAgfVxuXG4gICAgZXJyb3I6IFR1aVZhbGlkYXRpb25FcnJvciB8IG51bGwgPSBudWxsO1xuXG4gICAgcmVhZG9ubHkgYW5pbWF0aW9uID0ge3ZhbHVlOiAnJywgLi4udGhpcy5vcHRpb25zfSBhcyBjb25zdDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9BTklNQVRJT05fT1BUSU9OUykgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBBbmltYXRpb25PcHRpb25zLFxuICAgICAgICBASW5qZWN0KFRVSV9NT0RFKSByZWFkb25seSBtb2RlJDogT2JzZXJ2YWJsZTxUdWlCcmlnaHRuZXNzIHwgbnVsbD4sXG4gICAgICAgIEBJbmplY3QoVFVJX0RFRkFVTFRfRVJST1JfTUVTU0FHRSlcbiAgICAgICAgcmVhZG9ubHkgZGVmYXVsdEVycm9yTWVzc2FnZSQ6IE9ic2VydmFibGU8c3RyaW5nPixcbiAgICApIHt9XG59XG4iXX0=