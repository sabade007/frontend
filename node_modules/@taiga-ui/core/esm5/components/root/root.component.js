import { __decorate, __param, __read, __spread } from "tslib";
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, ElementRef, Inject } from '@angular/core';
import { TUI_DIALOGS, TUI_IS_MOBILE, TUI_VERSION, tuiAssert } from '@taiga-ui/cdk';
import { TUI_IS_MOBILE_RES_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_ANIMATIONS_DURATION, TUI_ASSERT_ENABLED, TUI_IS_MOBILE_RES, TUI_THEME, } from '@taiga-ui/core/tokens';
import { combineLatest, Observable, of } from 'rxjs';
import { map } from 'rxjs/operators';
// @dynamic
var TuiRootComponent = /** @class */ (function () {
    function TuiRootComponent(duration, elementRef, dialogs, isMobile, enabled, isMobileRes$, _a, theme) {
        var body = _a.body;
        this.duration = duration;
        this.elementRef = elementRef;
        this.dialogs = dialogs;
        this.isMobile = isMobile;
        this.isMobileRes$ = isMobileRes$;
        this.scrollbars$ = this.dialogs.length && !this.isMobile
            ? combineLatest(__spread(this.dialogs)).pipe(map(function (dialogs) { return !dialogs.some(function (_a) {
                var length = _a.length;
                return length;
            }); }))
            : of(!this.isMobile);
        tuiAssert.enabled = enabled;
        body.setAttribute('data-tui-theme', theme.toLowerCase());
    }
    TuiRootComponent.ctorParameters = function () { return [
        { type: Number, decorators: [{ type: Inject, args: [TUI_ANIMATIONS_DURATION,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_DIALOGS,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_ASSERT_ENABLED,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_IS_MOBILE_RES,] }] },
        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: String, decorators: [{ type: Inject, args: [TUI_THEME,] }] }
    ]; };
    TuiRootComponent = __decorate([
        Component({
            selector: 'tui-root',
            template: "<tui-scroll-controls\n    *ngIf=\"scrollbars$ | async\"\n    class=\"t-scrollbar\"\n></tui-scroll-controls>\n<tui-svg-defs-host></tui-svg-defs-host>\n<tui-dropdown-host>\n    <div class=\"t-content\">\n        <ng-content></ng-content>\n    </div>\n    <ng-content select=\"tuiOverContent\"></ng-content>\n    <tui-dialog-host></tui-dialog-host>\n    <ng-content select=\"tuiOverDialogs\"></ng-content>\n    <tui-alert-host></tui-alert-host>\n    <ng-content select=\"tuiOverAlerts\"></ng-content>\n    <!-- TODO: 3.0 Remove-->\n    <ng-content select=\"tuiOverNotifications\"></ng-content>\n</tui-dropdown-host>\n<ng-content select=\"tuiOverPortals\"></ng-content>\n<tui-hints-host></tui-hints-host>\n<ng-content select=\"tuiOverHints\"></ng-content>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [TUI_IS_MOBILE_RES_PROVIDER],
            host: {
                'data-tui-version': TUI_VERSION,
                '[style.--tui-duration]': 'duration + "ms"',
                '($.class._mobile)': 'isMobileRes$',
            },
            styles: ["@keyframes tuiPresent{to{content:'1'}}:host{position:relative;display:block;flex:1;-webkit-tap-highlight-color:transparent}.t-scrollbar{position:fixed;top:0;left:0;bottom:0;right:0;margin:0}.t-content{position:relative;z-index:0;height:100%}"]
        }),
        __param(0, Inject(TUI_ANIMATIONS_DURATION)),
        __param(1, Inject(ElementRef)),
        __param(2, Inject(TUI_DIALOGS)),
        __param(3, Inject(TUI_IS_MOBILE)),
        __param(4, Inject(TUI_ASSERT_ENABLED)),
        __param(5, Inject(TUI_IS_MOBILE_RES)),
        __param(6, Inject(DOCUMENT)),
        __param(7, Inject(TUI_THEME))
    ], TuiRootComponent);
    return TuiRootComponent;
}());
export { TuiRootComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3Jvb3QvIiwic291cmNlcyI6WyJyb290LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUMsV0FBVyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3BFLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsa0JBQWtCLEVBQ2xCLGlCQUFpQixFQUNqQixTQUFTLEdBQ1osTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDbkQsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLFdBQVc7QUFhWDtJQVFJLDBCQUM4QyxRQUFnQixFQUM3QixVQUFtQyxFQUV2RCxPQUFzRCxFQUN2QixRQUFpQixFQUM3QixPQUFnQixFQUNSLFlBQWlDLEVBQ25ELEVBQWdCLEVBQ2YsS0FBYTtZQURiLGNBQUk7UUFQbUIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUM3QixlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUV2RCxZQUFPLEdBQVAsT0FBTyxDQUErQztRQUN2QixhQUFRLEdBQVIsUUFBUSxDQUFTO1FBRXJCLGlCQUFZLEdBQVosWUFBWSxDQUFxQjtRQWRoRSxnQkFBVyxHQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQ2pDLENBQUMsQ0FBQyxhQUFhLFVBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FDakMsR0FBRyxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQUMsRUFBUTtvQkFBUCxrQkFBTTtnQkFBTSxPQUFBLE1BQU07WUFBTixDQUFNLENBQUMsRUFBbkMsQ0FBbUMsQ0FBQyxDQUN0RDtZQUNILENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFhekIsU0FBUyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUM3RCxDQUFDOzs2Q0FaSSxNQUFNLFNBQUMsdUJBQXVCO2dCQUNVLFVBQVUsdUJBQWxELE1BQU0sU0FBQyxVQUFVO2dEQUNqQixNQUFNLFNBQUMsV0FBVzs4Q0FFbEIsTUFBTSxTQUFDLGFBQWE7OENBQ3BCLE1BQU0sU0FBQyxrQkFBa0I7Z0JBQ3dCLFVBQVUsdUJBQTNELE1BQU0sU0FBQyxpQkFBaUI7Z0JBQ0MsUUFBUSx1QkFBakMsTUFBTSxTQUFDLFFBQVE7NkNBQ2YsTUFBTSxTQUFDLFNBQVM7O0lBakJaLGdCQUFnQjtRQVo1QixTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsVUFBVTtZQUNwQiw2dkJBQWlDO1lBRWpDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFNBQVMsRUFBRSxDQUFDLDBCQUEwQixDQUFDO1lBQ3ZDLElBQUksRUFBRTtnQkFDRixrQkFBa0IsRUFBRSxXQUFXO2dCQUMvQix3QkFBd0IsRUFBRSxpQkFBaUI7Z0JBQzNDLG1CQUFtQixFQUFFLGNBQWM7YUFDdEM7O1NBQ0osQ0FBQztRQVVPLFdBQUEsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUE7UUFDL0IsV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbEIsV0FBQSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7UUFFbkIsV0FBQSxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDckIsV0FBQSxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtRQUMxQixXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO1FBQ3pCLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ2hCLFdBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFBO09BakJiLGdCQUFnQixDQXNCNUI7SUFBRCx1QkFBQztDQUFBLEFBdEJELElBc0JDO1NBdEJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RE9DVU1FTlR9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RVSV9ESUFMT0dTLCBUVUlfSVNfTU9CSUxFLCBUVUlfVkVSU0lPTiwgdHVpQXNzZXJ0fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX0lTX01PQklMRV9SRVNfUFJPVklERVJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Byb3ZpZGVycyc7XG5pbXBvcnQge1xuICAgIFRVSV9BTklNQVRJT05TX0RVUkFUSU9OLFxuICAgIFRVSV9BU1NFUlRfRU5BQkxFRCxcbiAgICBUVUlfSVNfTU9CSUxFX1JFUyxcbiAgICBUVUlfVEhFTUUsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge2NvbWJpbmVMYXRlc3QsIE9ic2VydmFibGUsIG9mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8vIEBkeW5hbWljXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1yb290JyxcbiAgICB0ZW1wbGF0ZVVybDogJ3Jvb3QudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcm9vdC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbVFVJX0lTX01PQklMRV9SRVNfUFJPVklERVJdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ2RhdGEtdHVpLXZlcnNpb24nOiBUVUlfVkVSU0lPTixcbiAgICAgICAgJ1tzdHlsZS4tLXR1aS1kdXJhdGlvbl0nOiAnZHVyYXRpb24gKyBcIm1zXCInLFxuICAgICAgICAnKCQuY2xhc3MuX21vYmlsZSknOiAnaXNNb2JpbGVSZXMkJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlSb290Q29tcG9uZW50IHtcbiAgICByZWFkb25seSBzY3JvbGxiYXJzJDogT2JzZXJ2YWJsZTxib29sZWFuPiA9XG4gICAgICAgIHRoaXMuZGlhbG9ncy5sZW5ndGggJiYgIXRoaXMuaXNNb2JpbGVcbiAgICAgICAgICAgID8gY29tYmluZUxhdGVzdChbLi4udGhpcy5kaWFsb2dzXSkucGlwZShcbiAgICAgICAgICAgICAgICAgIG1hcChkaWFsb2dzID0+ICFkaWFsb2dzLnNvbWUoKHtsZW5ndGh9KSA9PiBsZW5ndGgpKSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgOiBvZighdGhpcy5pc01vYmlsZSk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfQU5JTUFUSU9OU19EVVJBVElPTikgcmVhZG9ubHkgZHVyYXRpb246IG51bWJlcixcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUVUlfRElBTE9HUylcbiAgICAgICAgcmVhZG9ubHkgZGlhbG9nczogUmVhZG9ubHlBcnJheTxPYnNlcnZhYmxlPHJlYWRvbmx5IHVua25vd25bXT4+LFxuICAgICAgICBASW5qZWN0KFRVSV9JU19NT0JJTEUpIHByaXZhdGUgcmVhZG9ubHkgaXNNb2JpbGU6IGJvb2xlYW4sXG4gICAgICAgIEBJbmplY3QoVFVJX0FTU0VSVF9FTkFCTEVEKSBlbmFibGVkOiBib29sZWFuLFxuICAgICAgICBASW5qZWN0KFRVSV9JU19NT0JJTEVfUkVTKSByZWFkb25seSBpc01vYmlsZVJlcyQ6IE9ic2VydmFibGU8Ym9vbGVhbj4sXG4gICAgICAgIEBJbmplY3QoRE9DVU1FTlQpIHtib2R5fTogRG9jdW1lbnQsXG4gICAgICAgIEBJbmplY3QoVFVJX1RIRU1FKSB0aGVtZTogc3RyaW5nLFxuICAgICkge1xuICAgICAgICB0dWlBc3NlcnQuZW5hYmxlZCA9IGVuYWJsZWQ7XG4gICAgICAgIGJvZHkuc2V0QXR0cmlidXRlKCdkYXRhLXR1aS10aGVtZScsIHRoZW1lLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbn1cbiJdfQ==