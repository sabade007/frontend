import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, ViewChild, } from '@angular/core';
import { AbstractTuiInteractive, isNativeFocused, tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_SPIN_TEXTS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
// @dynamic
let TuiPrimitiveSpinButtonComponent = class TuiPrimitiveSpinButtonComponent extends AbstractTuiInteractive {
    constructor(spinTexts$) {
        super();
        this.spinTexts$ = spinTexts$;
        this.disabled = false;
        this.mode = "flat" /* Flat */;
        this.leftDisabled = false;
        this.rightDisabled = false;
        this.leftClick = new EventEmitter();
        this.rightClick = new EventEmitter();
    }
    get focused() {
        return !!this.wrapper && isNativeFocused(this.wrapper.nativeElement);
    }
    get leftComputedDisabled() {
        return this.computedDisabled || this.leftDisabled;
    }
    get rightComputedDisabled() {
        return this.computedDisabled || this.rightDisabled;
    }
    onLeftClick() {
        if (!this.leftComputedDisabled) {
            this.leftClick.emit();
        }
    }
    onRightClick() {
        if (!this.rightComputedDisabled) {
            this.rightClick.emit();
        }
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
};
TuiPrimitiveSpinButtonComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_SPIN_TEXTS,] }] }
];
__decorate([
    ViewChild('wrapper')
], TuiPrimitiveSpinButtonComponent.prototype, "wrapper", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "mode", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "leftDisabled", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "rightDisabled", void 0);
__decorate([
    Output()
], TuiPrimitiveSpinButtonComponent.prototype, "leftClick", void 0);
__decorate([
    Output()
], TuiPrimitiveSpinButtonComponent.prototype, "rightClick", void 0);
TuiPrimitiveSpinButtonComponent = __decorate([
    Component({
        selector: 'tui-primitive-spin-button',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<div\n    *ngIf=\"spinTexts$ | async as texts\"\n    #wrapper\n    tuiPreventDefault=\"mousedown\"\n    class=\"t-wrapper\"\n    [tuiFocusable]=\"computedFocusable\"\n    (tuiFocusedChange)=\"onFocused($event)\"\n    (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    (keydown.arrowLeft)=\"onLeftClick()\"\n    (keydown.arrowRight)=\"onRightClick()\"\n>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__left\"\n        icon=\"tuiIconChevronLeftLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"leftComputedDisabled\"\n        [title]=\"texts[0]\"\n        [focusable]=\"false\"\n        (click)=\"onLeftClick()\"\n    ></button>\n    <span class=\"t-content\">\n        <ng-content></ng-content>\n    </span>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__right\"\n        icon=\"tuiIconChevronRightLarge\"\n        class=\"t-arrow\"\n        [class.t-arrow_hidden]=\"rightComputedDisabled\"\n        [title]=\"texts[1]\"\n        [focusable]=\"false\"\n        (click)=\"onRightClick()\"\n    ></button>\n</div>\n",
        styles: [":host{display:block;font:var(--tui-font-text-l);text-align:center;font-weight:700}.t-wrapper{display:flex;align-items:center;justify-content:space-between;outline:0}.t-arrow{margin:0 .25rem}.t-arrow_hidden{visibility:hidden}.t-content{padding:0 .5rem}:host._focus-visible .t-content{box-shadow:0 0 0 1px var(--tui-focus)}"]
    }),
    __param(0, Inject(TUI_SPIN_TEXTS))
], TuiPrimitiveSpinButtonComponent);
export { TuiPrimitiveSpinButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbWl0aXZlLXNwaW4tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvcHJpbWl0aXZlLXNwaW4tYnV0dG9uLyIsInNvdXJjZXMiOlsicHJpbWl0aXZlLXNwaW4tYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsc0JBQXNCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV0RixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUVoQyxXQUFXO0FBT1gsSUFBYSwrQkFBK0IsR0FBNUMsTUFBYSwrQkFBZ0MsU0FBUSxzQkFBc0I7SUEwQnZFLFlBQ3FDLFVBQXdDO1FBRXpFLEtBQUssRUFBRSxDQUFDO1FBRnlCLGVBQVUsR0FBVixVQUFVLENBQThCO1FBckI3RSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBSWpCLFNBQUkscUJBQXFDO1FBSXpDLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBSXJCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBR2IsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFHckMsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7SUFNL0MsQ0FBQztJQUVELElBQUksT0FBTztRQUNQLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVELElBQUksb0JBQW9CO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDdEQsQ0FBQztJQUVELElBQUkscUJBQXFCO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDdkQsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1lBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDekI7SUFDTCxDQUFDO0lBRUQsWUFBWTtRQUNSLElBQUksQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUU7WUFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7SUFFRCxTQUFTLENBQUMsT0FBZ0I7UUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsY0FBYyxDQUFDLFlBQXFCO1FBQ2hDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMxQyxDQUFDO0NBQ0osQ0FBQTs7WUFwQ29ELFVBQVUsdUJBQXRELE1BQU0sU0FBQyxjQUFjOztBQXpCMUI7SUFEQyxTQUFTLENBQUMsU0FBUyxDQUFDO2dFQUM4QjtBQUluRDtJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTtpRUFDQTtBQUlqQjtJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTs2REFDd0I7QUFJekM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7cUVBQ0k7QUFJckI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7c0VBQ0s7QUFHdEI7SUFEQyxNQUFNLEVBQUU7a0VBQ3FDO0FBRzlDO0lBREMsTUFBTSxFQUFFO21FQUNzQztBQXhCdEMsK0JBQStCO0lBTjNDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSwyQkFBMkI7UUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0Msd3ZDQUFvRDs7S0FFdkQsQ0FBQztJQTRCTyxXQUFBLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQTtHQTNCbEIsK0JBQStCLENBK0QzQztTQS9EWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBFbGVtZW50UmVmLFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxuICAgIFZpZXdDaGlsZCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Fic3RyYWN0VHVpSW50ZXJhY3RpdmUsIGlzTmF0aXZlRm9jdXNlZCwgdHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlBcHBlYXJhbmNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9lbnVtcyc7XG5pbXBvcnQge1RVSV9TUElOX1RFWFRTfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuLy8gQGR5bmFtaWNcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByaW1pdGl2ZS1zcGluLWJ1dHRvbicsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3ByaW1pdGl2ZS1zcGluLWJ1dHRvbi50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcmltaXRpdmUtc3Bpbi1idXR0b24uc3R5bGUubGVzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQcmltaXRpdmVTcGluQnV0dG9uQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RUdWlJbnRlcmFjdGl2ZSB7XG4gICAgQFZpZXdDaGlsZCgnd3JhcHBlcicpXG4gICAgcHJpdmF0ZSByZWFkb25seSB3cmFwcGVyPzogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBtb2RlOiBUdWlBcHBlYXJhbmNlID0gVHVpQXBwZWFyYW5jZS5GbGF0O1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGxlZnREaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHJpZ2h0RGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IGxlZnRDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IHJpZ2h0Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfU1BJTl9URVhUUykgcmVhZG9ubHkgc3BpblRleHRzJDogT2JzZXJ2YWJsZTxbc3RyaW5nLCBzdHJpbmddPixcbiAgICApIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBnZXQgZm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy53cmFwcGVyICYmIGlzTmF0aXZlRm9jdXNlZCh0aGlzLndyYXBwZXIubmF0aXZlRWxlbWVudCk7XG4gICAgfVxuXG4gICAgZ2V0IGxlZnRDb21wdXRlZERpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wdXRlZERpc2FibGVkIHx8IHRoaXMubGVmdERpc2FibGVkO1xuICAgIH1cblxuICAgIGdldCByaWdodENvbXB1dGVkRGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXB1dGVkRGlzYWJsZWQgfHwgdGhpcy5yaWdodERpc2FibGVkO1xuICAgIH1cblxuICAgIG9uTGVmdENsaWNrKCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMubGVmdENvbXB1dGVkRGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMubGVmdENsaWNrLmVtaXQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uUmlnaHRDbGljaygpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLnJpZ2h0Q29tcHV0ZWREaXNhYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5yaWdodENsaWNrLmVtaXQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uRm9jdXNlZChmb2N1c2VkOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMudXBkYXRlRm9jdXNlZChmb2N1c2VkKTtcbiAgICB9XG5cbiAgICBvbkZvY3VzVmlzaWJsZShmb2N1c1Zpc2libGU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGVGb2N1c1Zpc2libGUoZm9jdXNWaXNpYmxlKTtcbiAgICB9XG59XG4iXX0=