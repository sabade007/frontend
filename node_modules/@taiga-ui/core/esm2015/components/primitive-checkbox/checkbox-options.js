import { InjectionToken } from '@angular/core';
/** Default values for the checkbox options. */
export const TUI_CHECKBOX_DEFAULT_OPTIONS = {
    size: `m`,
    appearances: {
        unchecked: "outline" /* Outline */,
        checked: "primary" /* Primary */,
        indeterminate: "primary" /* Primary */,
    },
    icons: {
        checked({ $implicit }) {
            return $implicit === `m` ? `tuiIconCheck` : `tuiIconCheckLarge`;
        },
        indeterminate({ $implicit }) {
            return $implicit === `m` ? `tuiIconMinus` : `tuiIconMinusLarge`;
        },
    },
};
export const TUI_CHECKBOX_OPTIONS = new InjectionToken(`Default parameters for checkbox component`, {
    factory: () => TUI_CHECKBOX_DEFAULT_OPTIONS,
});
export const tuiCheckboxOptionsProvider = (options) => ({
    provide: TUI_CHECKBOX_OPTIONS,
    useValue: Object.assign(Object.assign({}, TUI_CHECKBOX_DEFAULT_OPTIONS), options),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvcHJpbWl0aXZlLWNoZWNrYm94LyIsInNvdXJjZXMiOlsiY2hlY2tib3gtb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsY0FBYyxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQXlCNUQsK0NBQStDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUF1QjtJQUM1RCxJQUFJLEVBQUUsR0FBRztJQUNULFdBQVcsRUFBRTtRQUNULFNBQVMseUJBQXVCO1FBQ2hDLE9BQU8seUJBQXVCO1FBQzlCLGFBQWEseUJBQXVCO0tBQ3ZDO0lBQ0QsS0FBSyxFQUFFO1FBQ0gsT0FBTyxDQUFDLEVBQUMsU0FBUyxFQUFtQztZQUNqRCxPQUFPLFNBQVMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUM7UUFDcEUsQ0FBQztRQUNELGFBQWEsQ0FBQyxFQUFDLFNBQVMsRUFBbUM7WUFDdkQsT0FBTyxTQUFTLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDO1FBQ3BFLENBQUM7S0FDSjtDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxJQUFJLGNBQWMsQ0FDbEQsMkNBQTJDLEVBQzNDO0lBQ0ksT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLDRCQUE0QjtDQUM5QyxDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FFbEIsQ0FBQyxPQUFvQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVELE9BQU8sRUFBRSxvQkFBb0I7SUFDN0IsUUFBUSxrQ0FBTSw0QkFBNEIsR0FBSyxPQUFPLENBQUM7Q0FDMUQsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3Rpb25Ub2tlbiwgVmFsdWVQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUNvbnRleHRXaXRoSW1wbGljaXR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlBcHBlYXJhbmNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9lbnVtcyc7XG5pbXBvcnQge1R1aVNpemVMfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpQ2hlY2tib3hPcHRpb25zIHtcbiAgICByZWFkb25seSBzaXplOiBUdWlTaXplTDtcbiAgICByZWFkb25seSBhcHBlYXJhbmNlczogUmVhZG9ubHk8e1xuICAgICAgICB1bmNoZWNrZWQ6IHN0cmluZztcbiAgICAgICAgY2hlY2tlZDogc3RyaW5nO1xuICAgICAgICBpbmRldGVybWluYXRlOiBzdHJpbmc7XG4gICAgfT47XG4gICAgcmVhZG9ubHkgaWNvbnM6IFJlYWRvbmx5PHtcbiAgICAgICAgY2hlY2tlZDogUG9seW1vcnBoZXVzQ29udGVudDxUdWlDb250ZXh0V2l0aEltcGxpY2l0PFR1aVNpemVMPj47XG4gICAgICAgIGluZGV0ZXJtaW5hdGU6IFBvbHltb3JwaGV1c0NvbnRlbnQ8VHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUdWlTaXplTD4+O1xuICAgIH0+O1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkOiB1c2UgVHVpQ2hlY2tib3hPcHRpb25zIGluc3RlYWRcbiAqIHRvZG86IHJlbW92ZSBpbiAzLjBcbiAqL1xuZXhwb3J0IHR5cGUgQ2hlY2tib3hPcHRpb25zID0gVHVpQ2hlY2tib3hPcHRpb25zO1xuXG4vKiogRGVmYXVsdCB2YWx1ZXMgZm9yIHRoZSBjaGVja2JveCBvcHRpb25zLiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9DSEVDS0JPWF9ERUZBVUxUX09QVElPTlM6IFR1aUNoZWNrYm94T3B0aW9ucyA9IHtcbiAgICBzaXplOiBgbWAsXG4gICAgYXBwZWFyYW5jZXM6IHtcbiAgICAgICAgdW5jaGVja2VkOiBUdWlBcHBlYXJhbmNlLk91dGxpbmUsXG4gICAgICAgIGNoZWNrZWQ6IFR1aUFwcGVhcmFuY2UuUHJpbWFyeSxcbiAgICAgICAgaW5kZXRlcm1pbmF0ZTogVHVpQXBwZWFyYW5jZS5QcmltYXJ5LFxuICAgIH0sXG4gICAgaWNvbnM6IHtcbiAgICAgICAgY2hlY2tlZCh7JGltcGxpY2l0fTogVHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUdWlTaXplTD4pOiBzdHJpbmcge1xuICAgICAgICAgICAgcmV0dXJuICRpbXBsaWNpdCA9PT0gYG1gID8gYHR1aUljb25DaGVja2AgOiBgdHVpSWNvbkNoZWNrTGFyZ2VgO1xuICAgICAgICB9LFxuICAgICAgICBpbmRldGVybWluYXRlKHskaW1wbGljaXR9OiBUdWlDb250ZXh0V2l0aEltcGxpY2l0PFR1aVNpemVMPik6IHN0cmluZyB7XG4gICAgICAgICAgICByZXR1cm4gJGltcGxpY2l0ID09PSBgbWAgPyBgdHVpSWNvbk1pbnVzYCA6IGB0dWlJY29uTWludXNMYXJnZWA7XG4gICAgICAgIH0sXG4gICAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBUVUlfQ0hFQ0tCT1hfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlDaGVja2JveE9wdGlvbnM+KFxuICAgIGBEZWZhdWx0IHBhcmFtZXRlcnMgZm9yIGNoZWNrYm94IGNvbXBvbmVudGAsXG4gICAge1xuICAgICAgICBmYWN0b3J5OiAoKSA9PiBUVUlfQ0hFQ0tCT1hfREVGQVVMVF9PUFRJT05TLFxuICAgIH0sXG4pO1xuXG5leHBvcnQgY29uc3QgdHVpQ2hlY2tib3hPcHRpb25zUHJvdmlkZXI6IChcbiAgICBvcHRpb25zOiBQYXJ0aWFsPFR1aUNoZWNrYm94T3B0aW9ucz4sXG4pID0+IFZhbHVlUHJvdmlkZXIgPSAob3B0aW9uczogUGFydGlhbDxUdWlDaGVja2JveE9wdGlvbnM+KSA9PiAoe1xuICAgIHByb3ZpZGU6IFRVSV9DSEVDS0JPWF9PUFRJT05TLFxuICAgIHVzZVZhbHVlOiB7Li4uVFVJX0NIRUNLQk9YX0RFRkFVTFRfT1BUSU9OUywgLi4ub3B0aW9uc30sXG59KTtcbiJdfQ==