import { __decorate, __param } from "tslib";
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, } from '@angular/core';
import { blurNativeFocused, isNativeFocusedIn, isSafari, TUI_IS_IOS, tuiDefaultProp, tuiRequiredSetter, } from '@taiga-ui/cdk';
import { sizeBigger } from '@taiga-ui/core/utils/miscellaneous';
import { TUI_LOADER_OPTIONS } from './loader-options';
// @dynamic
let TuiLoaderComponent = class TuiLoaderComponent {
    constructor(documentRef, elementRef, isIos, options) {
        this.documentRef = documentRef;
        this.elementRef = elementRef;
        this.isIos = isIos;
        this.options = options;
        this.size = this.options.size;
        this.inheritColor = this.options.inheritColor;
        this.overlay = this.options.overlay;
        // TODO: 3.0 Remove null
        this.textContent = null;
        this.loading = true;
        this.isApple = isSafari(this.elementRef.nativeElement) || this.isIos;
    }
    set showLoader(value) {
        // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way
        if (value && this.focused) {
            blurNativeFocused(this.documentRef);
        }
        this.loading = value;
    }
    get hasOverlay() {
        return this.overlay && this.loading;
    }
    get hasText() {
        return !!this.textContent;
    }
    get isHorizontal() {
        return !sizeBigger(this.size);
    }
    get focused() {
        return isNativeFocusedIn(this.elementRef.nativeElement);
    }
};
TuiLoaderComponent.ctorParameters = () => [
    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_IOS,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_LOADER_OPTIONS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "inheritColor", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "overlay", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "textContent", void 0);
__decorate([
    Input(),
    tuiRequiredSetter()
], TuiLoaderComponent.prototype, "showLoader", null);
__decorate([
    HostBinding('class._loading')
], TuiLoaderComponent.prototype, "loading", void 0);
TuiLoaderComponent = __decorate([
    Component({
        selector: 'tui-loader',
        template: "<fieldset\n    class=\"t-content\"\n    [class.t-content_has-overlay]=\"hasOverlay\"\n    [class.t-content_loading]=\"loading\"\n    [disabled]=\"loading && !isApple\"\n>\n    <ng-content></ng-content>\n</fieldset>\n\n<div\n    *ngIf=\"loading\"\n    class=\"t-loader\"\n    [class.t-loader_horizontal]=\"isHorizontal\"\n    [class.t-loader_inherit-color]=\"inheritColor\"\n    [attr.data-tui-element-size]=\"size\"\n>\n    <svg\n        automation-id=\"tui-loader__loader\"\n        focusable=\"false\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"t-icon\"\n    >\n        <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            stroke-dasharray=\"314\"\n            class=\"t-circle\"\n        ></circle>\n    </svg>\n\n    <div\n        *ngIf=\"hasText\"\n        polymorpheus-outlet\n        automation-id=\"tui-loader__text\"\n        class=\"t-text\"\n        [class.t-text_horizontal]=\"isHorizontal\"\n        [content]=\"textContent\"\n    ></div>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: ["@keyframes tuiLoaderDashOffset{0%,100%{stroke-dashoffset:-66}50%{stroke-dashoffset:-314}}@keyframes tuiLoaderRotate{0%{transform:rotate(0)}50%{transform:rotate(1turn)}100%{transform:rotate(3turn)}}:host{position:relative;display:flex}:host._loading{overflow:hidden}.t-content{z-index:0;min-width:100%;height:100%;padding:0;margin:0;border:none}.t-content_has-overlay{opacity:.3}.t-content_loading{pointer-events:none}.t-loader{position:relative;left:-100%;display:flex;flex-direction:column;align-items:center;justify-content:center;min-width:100%;flex-shrink:0;align-self:center;color:var(--tui-text-01);stroke:var(--tui-primary);animation:tuiFadeIn var(--tui-duration)}.t-loader.t-loader_horizontal{flex-direction:row}.t-loader.t-loader_inherit-color{color:inherit;stroke:currentColor}.t-loader[data-tui-element-size=xs]{font-size:.75rem;stroke-width:38}.t-loader[data-tui-element-size='s']{font-size:1rem;stroke-width:25}.t-loader[data-tui-element-size='m']{font-size:1.5rem;stroke-width:17}.t-loader[data-tui-element-size='l']{font-size:2.5rem;stroke-width:15}.t-loader[data-tui-element-size=xl]{font-size:3.5rem;stroke-width:14}.t-loader[data-tui-element-size=xxl]{font-size:5rem;stroke-width:10}.t-text{font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:1rem;color:inherit;max-width:100%;text-align:center;stroke-width:0}.t-text_horizontal{margin:0 0 0 1rem}.t-icon{display:block;min-width:1em;max-width:1em;min-height:1em;max-height:1em;margin:.25rem -.5em;border-radius:100%;overflow:hidden;transform:scale(1,-1);animation:3s linear infinite tuiLoaderRotate}.t-circle{fill:none;stroke:inherit;stroke-width:inherit;animation:3s linear infinite tuiLoaderDashOffset}"]
    }),
    __param(0, Inject(DOCUMENT)),
    __param(1, Inject(ElementRef)),
    __param(2, Inject(TUI_IS_IOS)),
    __param(3, Inject(TUI_LOADER_OPTIONS))
], TuiLoaderComponent);
export { TuiLoaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvbG9hZGVyLyIsInNvdXJjZXMiOlsibG9hZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLGlCQUFpQixFQUNqQixRQUFRLEVBQ1IsVUFBVSxFQUNWLGNBQWMsRUFDZCxpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRzlELE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxrQkFBa0IsQ0FBQztBQUV0RSxXQUFXO0FBT1gsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBa0I7SUFrQzNCLFlBQ3VDLFdBQXFCLEVBQ25CLFVBQW1DLEVBQ25DLEtBQWMsRUFDTixPQUF5QjtRQUhuQyxnQkFBVyxHQUFYLFdBQVcsQ0FBVTtRQUNuQixlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUNuQyxVQUFLLEdBQUwsS0FBSyxDQUFTO1FBQ04sWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFuQzFFLFNBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUl6QixpQkFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1FBSXpDLFlBQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUUvQix3QkFBd0I7UUFHeEIsZ0JBQVcsR0FBK0IsSUFBSSxDQUFDO1FBYy9DLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFTixZQUFPLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztJQU90RSxDQUFDO0lBbkJKLElBQUksVUFBVSxDQUFDLEtBQWM7UUFDekIsbUZBQW1GO1FBQ25GLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDdkIsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ3ZDO1FBRUQsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQWNELElBQUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1AsT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzVELENBQUM7Q0FDSixDQUFBOztZQXJCdUQsUUFBUSx1QkFBdkQsTUFBTSxTQUFDLFFBQVE7WUFDaUMsVUFBVSx1QkFBMUQsTUFBTSxTQUFDLFVBQVU7MENBQ2pCLE1BQU0sU0FBQyxVQUFVOzRDQUNqQixNQUFNLFNBQUMsa0JBQWtCOztBQW5DOUI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7Z0RBQ1E7QUFJekI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7d0RBQ3dCO0FBSXpDO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO21EQUNjO0FBSy9CO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO3VEQUM4QjtBQUkvQztJQUZDLEtBQUssRUFBRTtJQUNQLGlCQUFpQixFQUFFO29EQVFuQjtBQUdEO0lBREMsV0FBVyxDQUFDLGdCQUFnQixDQUFDO21EQUNmO0FBOUJOLGtCQUFrQjtJQU45QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsWUFBWTtRQUN0QixzaUNBQXFDO1FBRXJDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNsRCxDQUFDO0lBb0NPLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBQ2hCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ2xCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ2xCLFdBQUEsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUE7R0F0Q3RCLGtCQUFrQixDQXdEOUI7U0F4RFksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtET0NVTUVOVH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgYmx1ck5hdGl2ZUZvY3VzZWQsXG4gICAgaXNOYXRpdmVGb2N1c2VkSW4sXG4gICAgaXNTYWZhcmksXG4gICAgVFVJX0lTX0lPUyxcbiAgICB0dWlEZWZhdWx0UHJvcCxcbiAgICB0dWlSZXF1aXJlZFNldHRlcixcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge3NpemVCaWdnZXJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1RVSV9MT0FERVJfT1BUSU9OUywgVHVpTG9hZGVyT3B0aW9uc30gZnJvbSAnLi9sb2FkZXItb3B0aW9ucyc7XG5cbi8vIEBkeW5hbWljXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1sb2FkZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2FkZXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbG9hZGVyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTG9hZGVyQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2l6ZSA9IHRoaXMub3B0aW9ucy5zaXplO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGluaGVyaXRDb2xvciA9IHRoaXMub3B0aW9ucy5pbmhlcml0Q29sb3I7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgb3ZlcmxheSA9IHRoaXMub3B0aW9ucy5vdmVybGF5O1xuXG4gICAgLy8gVE9ETzogMy4wIFJlbW92ZSBudWxsXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHRleHRDb250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50IHwgbnVsbCA9IG51bGw7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlSZXF1aXJlZFNldHRlcigpXG4gICAgc2V0IHNob3dMb2FkZXIodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgLy8gQGJhZCBUT0RPOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8zMjA4MyB0aGluayBvZiBhIGJldHRlciB3YXlcbiAgICAgICAgaWYgKHZhbHVlICYmIHRoaXMuZm9jdXNlZCkge1xuICAgICAgICAgICAgYmx1ck5hdGl2ZUZvY3VzZWQodGhpcy5kb2N1bWVudFJlZik7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmxvYWRpbmcgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9sb2FkaW5nJylcbiAgICBsb2FkaW5nID0gdHJ1ZTtcblxuICAgIHJlYWRvbmx5IGlzQXBwbGUgPSBpc1NhZmFyaSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkgfHwgdGhpcy5pc0lvcztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KERPQ1VNRU5UKSBwcml2YXRlIHJlYWRvbmx5IGRvY3VtZW50UmVmOiBEb2N1bWVudCxcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFRVSV9JU19JT1MpIHByaXZhdGUgcmVhZG9ubHkgaXNJb3M6IGJvb2xlYW4sXG4gICAgICAgIEBJbmplY3QoVFVJX0xPQURFUl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUxvYWRlck9wdGlvbnMsXG4gICAgKSB7fVxuXG4gICAgZ2V0IGhhc092ZXJsYXkoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLm92ZXJsYXkgJiYgdGhpcy5sb2FkaW5nO1xuICAgIH1cblxuICAgIGdldCBoYXNUZXh0KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gISF0aGlzLnRleHRDb250ZW50O1xuICAgIH1cblxuICAgIGdldCBpc0hvcml6b250YWwoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhc2l6ZUJpZ2dlcih0aGlzLnNpemUpO1xuICAgIH1cblxuICAgIGdldCBmb2N1c2VkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gaXNOYXRpdmVGb2N1c2VkSW4odGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cbn1cbiJdfQ==