import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { ALWAYS_FALSE_HANDLER, nullableSame, TuiDay, TuiDayRange, tuiDefaultProp, TuiMonth, } from '@taiga-ui/cdk';
import { TUI_DEFAULT_MARKER_HANDLER } from '@taiga-ui/core/constants';
import { TUI_ORDERED_SHORT_WEEK_DAYS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
// @dynamic
let TuiPrimitiveCalendarComponent = class TuiPrimitiveCalendarComponent {
    constructor(weekDays$) {
        this.weekDays$ = weekDays$;
        this.pressedItem = null;
        this.today = TuiDay.currentLocal();
        this.month = TuiMonth.currentLocal();
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;
        this.value = null;
        this.hoveredItem = null;
        this.showAdjacent = true;
        this.hoveredItemChange = new EventEmitter();
        this.dayClick = new EventEmitter();
        this.toMarkers = (day, today, inRange) => {
            if (today || inRange) {
                return null;
            }
            const markers = this.markerHandler(day);
            return markers.length === 0 ? null : markers;
        };
    }
    get isSingle() {
        return (this.value !== null &&
            (this.value instanceof TuiDay || this.value.isSingleDay));
    }
    getItemState(item) {
        const { disabledItemHandler, pressedItem, hoveredItem } = this;
        if (disabledItemHandler(item)) {
            return "disabled" /* Disabled */;
        }
        if (pressedItem === null || pressedItem === void 0 ? void 0 : pressedItem.daySame(item)) {
            return "pressed" /* Pressed */;
        }
        if (hoveredItem === null || hoveredItem === void 0 ? void 0 : hoveredItem.daySame(item)) {
            return "hovered" /* Hovered */;
        }
        return null;
    }
    getItemRange(item) {
        const { value, hoveredItem } = this;
        if (!value) {
            return null;
        }
        if (value instanceof TuiDay) {
            return value.daySame(item) ? "single" /* Single */ : null;
        }
        if ((value.from.daySame(item) && !value.isSingleDay) ||
            ((hoveredItem === null || hoveredItem === void 0 ? void 0 : hoveredItem.dayAfter(value.from)) &&
                value.from.daySame(item) &&
                value.isSingleDay) ||
            ((hoveredItem === null || hoveredItem === void 0 ? void 0 : hoveredItem.daySame(item)) &&
                hoveredItem.dayBefore(value.from) &&
                value.isSingleDay)) {
            return "start" /* Start */;
        }
        if ((value.to.daySame(item) && !value.isSingleDay) ||
            ((hoveredItem === null || hoveredItem === void 0 ? void 0 : hoveredItem.dayBefore(value.from)) &&
                value.from.daySame(item) &&
                value.isSingleDay) ||
            ((hoveredItem === null || hoveredItem === void 0 ? void 0 : hoveredItem.daySame(item)) &&
                hoveredItem.dayAfter(value.from) &&
                value.isSingleDay)) {
            return "end" /* End */;
        }
        return value.isSingleDay && value.from.daySame(item)
            ? "single" /* Single */
            : null;
    }
    itemIsToday(item) {
        return this.today.daySame(item);
    }
    itemIsUnavailable(item) {
        return !this.month.monthSame(item);
    }
    itemIsInterval(day) {
        const { value, hoveredItem } = this;
        if (value === null || value instanceof TuiDay) {
            return false;
        }
        if (!value.isSingleDay) {
            return value.from.daySameOrBefore(day) && value.to.dayAfter(day);
        }
        if (hoveredItem === null) {
            return false;
        }
        const range = TuiDayRange.sort(value.from, hoveredItem);
        return range.from.daySameOrBefore(day) && range.to.dayAfter(day);
    }
    onItemHovered(item) {
        this.updateHoveredItem(item || null);
    }
    onItemPressed(item) {
        this.pressedItem = item || null;
    }
    onItemClick(item) {
        this.dayClick.emit(item);
    }
    updateHoveredItem(day) {
        if (nullableSame(this.hoveredItem, day, (a, b) => a.daySame(b))) {
            return;
        }
        this.hoveredItem = day;
        this.hoveredItemChange.emit(day);
    }
};
TuiPrimitiveCalendarComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_ORDERED_SHORT_WEEK_DAYS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "month", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "disabledItemHandler", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "markerHandler", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "value", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "hoveredItem", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCalendarComponent.prototype, "showAdjacent", void 0);
__decorate([
    Output()
], TuiPrimitiveCalendarComponent.prototype, "hoveredItemChange", void 0);
__decorate([
    Output()
], TuiPrimitiveCalendarComponent.prototype, "dayClick", void 0);
__decorate([
    HostBinding('class._single')
], TuiPrimitiveCalendarComponent.prototype, "isSingle", null);
TuiPrimitiveCalendarComponent = __decorate([
    Component({
        selector: 'tui-primitive-calendar',
        template: "<div class=\"t-row t-row_weekday\">\n    <div\n        *ngFor=\"let day of weekDays$ | async\"\n        class=\"t-cell\"\n        [textContent]=\"day\"\n    ></div>\n</div>\n<div *tuiLet=\"month | tuiCalendarSheet: true as sheet\">\n    <div\n        *tuiRepeatTimes=\"let rowIndex of sheet.length\"\n        automation-id=\"tui-primitive-calendar__row\"\n        class=\"t-row\"\n    >\n        <ng-container *tuiRepeatTimes=\"let colIndex of sheet[rowIndex].length\">\n            <ng-container *tuiLet=\"sheet[rowIndex][colIndex] as item\">\n                <div\n                    *ngIf=\"!itemIsUnavailable(item) || showAdjacent\"\n                    automation-id=\"tui-primitive-calendar__cell\"\n                    class=\"t-cell\"\n                    [class.t-cell_weekend]=\"item.isWeekend\"\n                    [class.t-cell_today]=\"itemIsToday(item)\"\n                    [class.t-cell_interval]=\"itemIsInterval(item)\"\n                    [attr.data-range]=\"getItemRange(item)\"\n                    [attr.data-state]=\"getItemState(item)\"\n                    (tuiHoveredChange)=\"onItemHovered($event && item)\"\n                    (tuiPressedChange)=\"onItemPressed($event && item)\"\n                    (click)=\"onItemClick(item)\"\n                >\n                    <div\n                        automation-id=\"tui-primitive-calendar__item\"\n                        class=\"t-item\"\n                        [class.t-item_unavailable]=\"itemIsUnavailable(item)\"\n                    >\n                        {{ item.day }}\n                        <div\n                            *ngIf=\"item | tuiMapper: toMarkers:itemIsToday(item):!!getItemRange(item) as markers\"\n                            class=\"t-dots\"\n                        >\n                            <div\n                                class=\"t-dot\"\n                                [tuiBackground]=\"markers[0]\"\n                            ></div>\n                            <div\n                                *ngIf=\"markers.length > 1\"\n                                class=\"t-dot\"\n                                [tuiBackground]=\"markers[1] || ''\"\n                            ></div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{display:block;font:var(--tui-font-text-m)}.t-row{position:relative;z-index:0;display:flex;justify-content:space-between;height:2.25rem}.t-item{position:relative;flex:1;line-height:2rem;border-radius:var(--tui-radius-m)}.t-item:after,.t-item:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.t-cell{position:relative;display:flex;align-items:center;justify-content:center;width:2.25rem;text-align:center;outline:0;cursor:pointer;background-clip:content-box;box-sizing:border-box;border:2px solid transparent}.t-cell:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.t-cell_today:after{position:absolute;left:50%;transform:translate(-50%,0);content:'';bottom:.3125rem;height:.125rem;width:.75rem;border-radius:.375rem;background-color:var(--tui-text-02)}.t-cell_interval:before{background:var(--tui-base-02)}:host._single .t-cell_interval:before{background:var(--tui-secondary-hover)}.t-cell_interval:not(:last-child):before{right:-2.25rem}.t-cell_interval:last-child:first-child:before{right:0}.t-cell_interval:first-child>.t-item{border-top-left-radius:var(--tui-radius-m);border-bottom-left-radius:var(--tui-radius-m)}.t-cell_interval:last-child>.t-item{border-top-right-radius:var(--tui-radius-m);border-bottom-right-radius:var(--tui-radius-m)}.t-cell_interval>.t-item{border-radius:0}.t-cell[data-range]:after{background-color:var(--tui-primary-text)}.t-cell[data-range]>.t-item{color:var(--tui-primary-text)}.t-cell[data-range]>.t-item:after,.t-cell[data-range]>.t-item:before{background-color:var(--tui-primary)}.t-cell[data-range][data-state=hovered]>.t-item:after,.t-cell[data-range][data-state=hovered]>.t-item:before{background-color:var(--tui-primary-hover)}.t-cell[data-range][data-state=pressed]>.t-item:after,.t-cell[data-range][data-state=pressed]>.t-item:before{background-color:var(--tui-primary-active)}.t-cell[data-range=end]>.t-item:before{left:.25rem}.t-cell[data-range=end]>.t-item:after{left:-2rem;right:100%;transform:translateX(1.4375rem) scaleY(.6) scaleX(.4) rotate(45deg)}.t-cell[data-range=start]>.t-item:before{right:.25rem}.t-cell[data-range=start]>.t-item:after{left:100%;right:-2rem;transform:translateX(-1.4375rem) scaleY(.6) scaleX(.4) rotate(45deg)}.t-cell[data-state=disabled]{pointer-events:none}.t-cell[data-state=disabled]>.t-item{opacity:.36}.t-cell[data-state=hovered]:hover:not([data-range])>.t-item{background-color:var(--tui-secondary-hover)}.t-cell[data-state=pressed]:hover:not([data-range])>.t-item{background-color:var(--tui-secondary-active)}:host{width:15.75rem}.t-row{justify-content:flex-start}.t-row:first-child{justify-content:flex-end}.t-row_weekday{font:var(--tui-font-text-s);color:var(--tui-text-02);pointer-events:none}.t-item{display:flex;flex-direction:column}.t-cell_weekend{color:var(--tui-negative)}.t-item_unavailable{opacity:var(--tui-disabled-opacity)}.t-dots{display:flex;justify-content:center;margin-top:-.5rem;padding-bottom:.25rem}.t-dot{display:inline-block;width:.25rem;height:.25rem;border-radius:100%;margin:0 .0625rem}"]
    }),
    __param(0, Inject(TUI_ORDERED_SHORT_WEEK_DAYS))
], TuiPrimitiveCalendarComponent);
export { TuiPrimitiveCalendarComponent };
//# sourceMappingURL=data:application/json;base64,