import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, HostListener, Inject, Input, } from '@angular/core';
import { TUI_IS_MOBILE, tuiDefaultProp, TuiDestroyService } from '@taiga-ui/cdk';
import { TUI_HINT_OPTIONS } from '@taiga-ui/core/directives';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
let TuiTooltipComponent = class TuiTooltipComponent {
    constructor(destroy$, mode$, isMobile, options) {
        this.isMobile = isMobile;
        this.options = options;
        this.globalMode = null;
        this.content = '';
        this.mode = this.options.mode;
        this.direction = this.options.direction;
        this.showDelay = this.options.tuiHintShowDelay;
        this.hideDelay = this.options.tuiHintHideDelay;
        this.describeId = '';
        mode$.pipe(takeUntil(destroy$)).subscribe(mode => {
            this.globalMode = mode;
        });
    }
    // TODO: Simplify
    get computedMode() {
        return this.mode || (this.globalMode === 'onDark' ? 'onDark' : null);
    }
    stopOnMobile(event) {
        if (this.isMobile) {
            event.preventDefault();
            event.stopPropagation();
        }
    }
    get icon() {
        return this.options.tooltipIcon;
    }
};
TuiTooltipComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [TUI_HINT_OPTIONS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "content", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "mode", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "direction", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "showDelay", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "hideDelay", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "describeId", void 0);
__decorate([
    HostBinding('attr.data-mode')
], TuiTooltipComponent.prototype, "computedMode", null);
__decorate([
    HostListener('mousedown', ['$event']),
    HostListener('click', ['$event'])
], TuiTooltipComponent.prototype, "stopOnMobile", null);
TuiTooltipComponent = __decorate([
    Component({
        selector: 'tui-tooltip',
        template: "<span\n    polymorpheus-outlet\n    automation-id=\"tui-tooltip__icon\"\n    class=\"t-tooltip-icon\"\n    [content]=\"icon\"\n    [tuiHintId]=\"describeId\"\n    [tuiHint]=\"content\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintShowDelay]=\"showDelay\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintMode]=\"computedMode\"\n>\n    <ng-template let-icon>\n        <tui-svg [src]=\"icon\"></tui-svg>\n    </ng-template>\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [TuiDestroyService, MODE_PROVIDER],
        styles: [":host{transition-property:color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;position:relative;display:inline-block;width:1.5rem;height:1.5rem;vertical-align:middle;font-size:0;line-height:0;cursor:pointer;color:var(--tui-text-03)}:host:hover{color:var(--tui-text-02)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-mode=onLight]{color:var(--tui-text-01)}:host[data-mode=error]{color:var(--tui-error-fill)}.t-tooltip-icon{transition-property:opacity,color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:inline-block;width:100%;height:100%}:host:not([data-mode]) .t-tooltip-icon._hint_hovered{color:var(--tui-text-02)}:host[data-mode=onDark] .t-tooltip-icon,:host[data-mode=onLight] .t-tooltip-icon{opacity:var(--tui-disabled-opacity)}:host[data-mode=onDark] .t-tooltip-icon._hint_hovered,:host[data-mode=onDark] .t-tooltip-icon:hover,:host[data-mode=onLight] .t-tooltip-icon._hint_hovered,:host[data-mode=onLight] .t-tooltip-icon:hover{opacity:1}"]
    }),
    __param(0, Inject(TuiDestroyService)),
    __param(1, Inject(TUI_MODE)),
    __param(2, Inject(TUI_IS_MOBILE)),
    __param(3, Inject(TUI_HINT_OPTIONS))
], TuiTooltipComponent);
export { TuiTooltipComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3Rvb2x0aXAvIiwic291cmNlcyI6WyJ0b29sdGlwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxhQUFhLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBQyxnQkFBZ0IsRUFBaUIsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDaEMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBU3pDLElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0lBMkI1QixZQUMrQixRQUE2QixFQUN0QyxLQUF1QyxFQUNqQixRQUFpQixFQUNkLE9BQXVCO1FBRDFCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQTlCOUQsZUFBVSxHQUF5QixJQUFJLENBQUM7UUFJaEQsWUFBTyxHQUF3QixFQUFFLENBQUM7UUFJbEMsU0FBSSxHQUEyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUlqRCxjQUFTLEdBQWdDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBSWhFLGNBQVMsR0FBdUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUk5RSxjQUFTLEdBQXVDLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFJOUUsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQVFaLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzdDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGlCQUFpQjtJQUVqQixJQUFJLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBSUQsWUFBWSxDQUFDLEtBQWlCO1FBQzFCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDM0I7SUFDTCxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztJQUNwQyxDQUFDO0NBQ0osQ0FBQTs7WUE1QjRDLFVBQVUsdUJBQTlDLE1BQU0sU0FBQyxpQkFBaUI7WUFDQSxVQUFVLHVCQUFsQyxNQUFNLFNBQUMsUUFBUTswQ0FDZixNQUFNLFNBQUMsYUFBYTs0Q0FDcEIsTUFBTSxTQUFDLGdCQUFnQjs7QUExQjVCO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO29EQUNpQjtBQUlsQztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTtpREFDZ0M7QUFJakQ7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7c0RBQytDO0FBSWhFO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO3NEQUM2RDtBQUk5RTtJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTtzREFDNkQ7QUFJOUU7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7dURBQ0Q7QUFlaEI7SUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7dURBRzdCO0FBSUQ7SUFGQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3VEQU1qQztBQW5EUSxtQkFBbUI7SUFQL0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGFBQWE7UUFDdkIsb2NBQXNDO1FBRXRDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLFNBQVMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLGFBQWEsQ0FBQzs7S0FDaEQsQ0FBQztJQTZCTyxXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0lBQ3pCLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBQ2hCLFdBQUEsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0lBQ3JCLFdBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUE7R0EvQnBCLG1CQUFtQixDQXdEL0I7U0F4RFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSG9zdExpc3RlbmVyLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RVSV9JU19NT0JJTEUsIHR1aURlZmF1bHRQcm9wLCBUdWlEZXN0cm95U2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9ISU5UX09QVElPTlMsIFR1aUhpbnRPcHRpb25zfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzJztcbmltcG9ydCB7TU9ERV9QUk9WSURFUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvcHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX01PREV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3MsIFR1aUhpbnRNb2RlVH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXRvb2x0aXAnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90b29sdGlwLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Rvb2x0aXAuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlLCBNT0RFX1BST1ZJREVSXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVG9vbHRpcENvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBnbG9iYWxNb2RlOiBUdWlCcmlnaHRuZXNzIHwgbnVsbCA9IG51bGw7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgY29udGVudDogUG9seW1vcnBoZXVzQ29udGVudCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIG1vZGU6IFR1aUhpbnRPcHRpb25zWydtb2RlJ10gPSB0aGlzLm9wdGlvbnMubW9kZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBkaXJlY3Rpb246IFR1aUhpbnRPcHRpb25zWydkaXJlY3Rpb24nXSA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb247XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2hvd0RlbGF5OiBUdWlIaW50T3B0aW9uc1sndHVpSGludFNob3dEZWxheSddID0gdGhpcy5vcHRpb25zLnR1aUhpbnRTaG93RGVsYXk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaGlkZURlbGF5OiBUdWlIaW50T3B0aW9uc1sndHVpSGludEhpZGVEZWxheSddID0gdGhpcy5vcHRpb25zLnR1aUhpbnRIaWRlRGVsYXk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgZGVzY3JpYmVJZCA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHVua25vd24+LFxuICAgICAgICBASW5qZWN0KFRVSV9NT0RFKSBtb2RlJDogT2JzZXJ2YWJsZTxUdWlCcmlnaHRuZXNzIHwgbnVsbD4sXG4gICAgICAgIEBJbmplY3QoVFVJX0lTX01PQklMRSkgcHJpdmF0ZSByZWFkb25seSBpc01vYmlsZTogYm9vbGVhbixcbiAgICAgICAgQEluamVjdChUVUlfSElOVF9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUhpbnRPcHRpb25zLFxuICAgICkge1xuICAgICAgICBtb2RlJC5waXBlKHRha2VVbnRpbChkZXN0cm95JCkpLnN1YnNjcmliZShtb2RlID0+IHtcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsTW9kZSA9IG1vZGU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFRPRE86IFNpbXBsaWZ5XG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbW9kZScpXG4gICAgZ2V0IGNvbXB1dGVkTW9kZSgpOiBUdWlIaW50TW9kZVQgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSB8fCAodGhpcy5nbG9iYWxNb2RlID09PSAnb25EYXJrJyA/ICdvbkRhcmsnIDogbnVsbCk7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJywgWyckZXZlbnQnXSlcbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gICAgc3RvcE9uTW9iaWxlKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmlzTW9iaWxlKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgaWNvbigpOiBQb2x5bW9ycGhldXNDb250ZW50IHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy50b29sdGlwSWNvbjtcbiAgICB9XG59XG4iXX0=