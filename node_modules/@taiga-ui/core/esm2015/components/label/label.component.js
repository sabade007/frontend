import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChild, HostBinding, Inject, Input, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
let TuiLabelComponent = class TuiLabelComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        // TODO: 3.0 Rename to tuiLabel
        this.label = '';
        this.context = {
            $implicit: null,
        };
    }
};
TuiLabelComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLabelComponent.prototype, "label", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLabelComponent.prototype, "context", void 0);
__decorate([
    ContentChild(NgControl),
    HostBinding('class._control')
], TuiLabelComponent.prototype, "control", void 0);
TuiLabelComponent = __decorate([
    Component({
        selector: 'label[tuiLabel]',
        template: "<span\n    polymorpheus-outlet\n    class=\"t-label\"\n    [content]=\"label\"\n    [context]=\"context\"\n>\n    <ng-template let-text>\n        <span class=\"t-text\">{{ text }}</span>\n    </ng-template>\n</span>\n<span class=\"t-content\">\n    <ng-content></ng-content>\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
        styles: [":host{display:flex;min-height:2.75rem;justify-content:space-between;flex-direction:column;pointer-events:none}.t-label{font:var(--tui-font-text-s);max-width:100%;align-self:inherit;overflow:inherit;pointer-events:auto}.t-text{display:block;overflow:inherit;text-overflow:ellipsis}:host:not(._control) .t-text{color:var(--tui-text-02)}:host([data-mode=onDark]) .t-text{color:var(--tui-text-02-night)}.t-content{line-height:1.5rem;overflow:inherit;text-overflow:ellipsis;pointer-events:auto}"]
    }),
    __param(0, Inject(TUI_MODE))
], TuiLabelComponent);
export { TuiLabelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9sYWJlbC8iLCJzb3VyY2VzIjpbImxhYmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6QyxPQUFPLEVBQXlCLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFZaEMsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7SUFnQjFCLFlBQXVDLEtBQXVDO1FBQXZDLFVBQUssR0FBTCxLQUFLLENBQWtDO1FBZjlFLCtCQUErQjtRQUcvQixVQUFLLEdBQXdCLEVBQUUsQ0FBQztRQUloQyxZQUFPLEdBQXFDO1lBQ3hDLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUM7SUFNK0UsQ0FBQztDQUNyRixDQUFBOztZQURpRCxVQUFVLHVCQUEzQyxNQUFNLFNBQUMsUUFBUTs7QUFaNUI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7Z0RBQ2U7QUFJaEM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7a0RBR2Y7QUFJRjtJQUZDLFlBQVksQ0FBQyxTQUFTLENBQUM7SUFDdkIsV0FBVyxDQUFDLGdCQUFnQixDQUFDO2tEQUNEO0FBZHBCLGlCQUFpQjtJQVY3QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLHlTQUFvQztRQUVwQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUM7UUFDMUIsSUFBSSxFQUFFO1lBQ0Ysb0JBQW9CLEVBQUUsT0FBTztTQUNoQzs7S0FDSixDQUFDO0lBaUJlLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0dBaEJwQixpQkFBaUIsQ0FpQjdCO1NBakJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIENvbnRlbnRDaGlsZCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOZ0NvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VHVpQ29udGV4dFdpdGhJbXBsaWNpdCwgdHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtNT0RFX1BST1ZJREVSfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9wcm92aWRlcnMnO1xuaW1wb3J0IHtUVUlfTU9ERX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpQnJpZ2h0bmVzc30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdsYWJlbFt0dWlMYWJlbF0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sYWJlbC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9sYWJlbC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbTU9ERV9QUk9WSURFUl0sXG4gICAgaG9zdDoge1xuICAgICAgICAnKCQuZGF0YS1tb2RlLmF0dHIpJzogJ21vZGUkJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlMYWJlbENvbXBvbmVudDxUPiB7XG4gICAgLy8gVE9ETzogMy4wIFJlbmFtZSB0byB0dWlMYWJlbFxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBsYWJlbDogUG9seW1vcnBoZXVzQ29udGVudCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGNvbnRleHQ6IFR1aUNvbnRleHRXaXRoSW1wbGljaXQ8VCB8IG51bGw+ID0ge1xuICAgICAgICAkaW1wbGljaXQ6IG51bGwsXG4gICAgfTtcblxuICAgIEBDb250ZW50Q2hpbGQoTmdDb250cm9sKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2NvbnRyb2wnKVxuICAgIHJlYWRvbmx5IGNvbnRyb2w/OiBOZ0NvbnRyb2w7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFRVSV9NT0RFKSByZWFkb25seSBtb2RlJDogT2JzZXJ2YWJsZTxUdWlCcmlnaHRuZXNzIHwgbnVsbD4pIHt9XG59XG4iXX0=