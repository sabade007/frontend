import { __decorate, __param } from "tslib";
import { Inject, Injectable } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';
import { fromEvent, Observable } from 'rxjs';
import { map, share, startWith } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@ng-web-apis/common";
// @dynamic
let TuiNightThemeService = class TuiNightThemeService extends Observable {
    constructor(windowRef) {
        const media = windowRef.matchMedia(`(prefers-color-scheme: dark)`);
        const media$ = fromEvent(media, `change`).pipe(startWith(null), map(() => media.matches), share());
        super(subscriber => media$.subscribe(subscriber));
    }
};
TuiNightThemeService.ctorParameters = () => [
    { type: Window, decorators: [{ type: Inject, args: [WINDOW,] }] }
];
TuiNightThemeService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TuiNightThemeService_Factory() { return new TuiNightThemeService(i0.ɵɵinject(i1.WINDOW)); }, token: TuiNightThemeService, providedIn: "root" });
TuiNightThemeService = __decorate([
    Injectable({
        providedIn: `root`,
    }),
    __param(0, Inject(WINDOW))
], TuiNightThemeService);
export { TuiNightThemeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmlnaHQtdGhlbWUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL3NlcnZpY2VzLyIsInNvdXJjZXMiOlsibmlnaHQtdGhlbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7QUFFckQsV0FBVztBQUlYLElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQXFCLFNBQVEsVUFBbUI7SUFDekQsWUFBNEIsU0FBaUI7UUFDekMsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQ25FLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUMxQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQ2YsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFDeEIsS0FBSyxFQUFFLENBQ1YsQ0FBQztRQUVGLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0osQ0FBQTs7WUFWMEMsTUFBTSx1QkFBaEMsTUFBTSxTQUFDLE1BQU07OztBQURqQixvQkFBb0I7SUFIaEMsVUFBVSxDQUFDO1FBQ1IsVUFBVSxFQUFFLE1BQU07S0FDckIsQ0FBQztJQUVlLFdBQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0dBRGxCLG9CQUFvQixDQVdoQztTQVhZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7V0lORE9XfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7ZnJvbUV2ZW50LCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwLCBzaGFyZSwgc3RhcnRXaXRofSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8vIEBkeW5hbWljXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogYHJvb3RgLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlOaWdodFRoZW1lU2VydmljZSBleHRlbmRzIE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoV0lORE9XKSB3aW5kb3dSZWY6IFdpbmRvdykge1xuICAgICAgICBjb25zdCBtZWRpYSA9IHdpbmRvd1JlZi5tYXRjaE1lZGlhKGAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspYCk7XG4gICAgICAgIGNvbnN0IG1lZGlhJCA9IGZyb21FdmVudChtZWRpYSwgYGNoYW5nZWApLnBpcGUoXG4gICAgICAgICAgICBzdGFydFdpdGgobnVsbCksXG4gICAgICAgICAgICBtYXAoKCkgPT4gbWVkaWEubWF0Y2hlcyksXG4gICAgICAgICAgICBzaGFyZSgpLFxuICAgICAgICApO1xuXG4gICAgICAgIHN1cGVyKHN1YnNjcmliZXIgPT4gbWVkaWEkLnN1YnNjcmliZShzdWJzY3JpYmVyKSk7XG4gICAgfVxufVxuIl19