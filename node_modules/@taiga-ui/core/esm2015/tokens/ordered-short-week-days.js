import { inject, InjectionToken } from '@angular/core';
import { map } from 'rxjs/operators';
import { TUI_FIRST_DAY_OF_WEEK, TUI_SHORT_WEEK_DAYS } from './index';
// TODO: 3.0 Remove export in ivy compilation
export const convertToSundayFirstWeekFormat = (weekDaysNames) => {
    const sundayIndex = weekDaysNames.length - 1;
    return [
        weekDaysNames[sundayIndex],
        ...weekDaysNames.slice(0, sundayIndex),
    ];
};
export const TUI_ORDERED_SHORT_WEEK_DAYS = new InjectionToken(`Ordered calendars i18n texts`, {
    factory: () => {
        const firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);
        return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(weekDays => [
            ...weekDays.slice(firstDayOfWeekIndex),
            ...weekDays.slice(0, firstDayOfWeekIndex),
        ]));
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJlZC1zaG9ydC13ZWVrLWRheXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS90b2tlbnMvIiwic291cmNlcyI6WyJvcmRlcmVkLXNob3J0LXdlZWstZGF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsTUFBTSxFQUFFLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVyRCxPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkMsT0FBTyxFQUFDLHFCQUFxQixFQUFFLG1CQUFtQixFQUFDLE1BQU0sU0FBUyxDQUFDO0FBSW5FLDZDQUE2QztBQUM3QyxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxDQUMxQyxhQUE4QixFQUNmLEVBQUU7SUFDakIsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFN0MsT0FBTztRQUNILGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDMUIsR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUM7S0FDdEIsQ0FBQztBQUN6QixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxJQUFJLGNBQWMsQ0FFM0QsOEJBQThCLEVBQUU7SUFDOUIsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNWLE1BQU0sbUJBQW1CLEdBQUcsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFFMUQsT0FBTyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxJQUFJLENBQ25DLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQyxFQUNuQyxHQUFHLENBQ0MsUUFBUSxDQUFDLEVBQUUsQ0FDUDtZQUNJLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztZQUN0QyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLG1CQUFtQixDQUFDO1NBQ3pCLENBQzNCLENBQ0osQ0FBQztJQUNOLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2luamVjdCwgSW5qZWN0aW9uVG9rZW59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VFVJX0ZJUlNUX0RBWV9PRl9XRUVLLCBUVUlfU0hPUlRfV0VFS19EQVlTfSBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IHR5cGUgV0VFS19EQVlTX05BTUVTID0gW3N0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZ107XG5cbi8vIFRPRE86IDMuMCBSZW1vdmUgZXhwb3J0IGluIGl2eSBjb21waWxhdGlvblxuZXhwb3J0IGNvbnN0IGNvbnZlcnRUb1N1bmRheUZpcnN0V2Vla0Zvcm1hdCA9IChcbiAgICB3ZWVrRGF5c05hbWVzOiBXRUVLX0RBWVNfTkFNRVMsXG4pOiBXRUVLX0RBWVNfTkFNRVMgPT4ge1xuICAgIGNvbnN0IHN1bmRheUluZGV4ID0gd2Vla0RheXNOYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgcmV0dXJuIFtcbiAgICAgICAgd2Vla0RheXNOYW1lc1tzdW5kYXlJbmRleF0sXG4gICAgICAgIC4uLndlZWtEYXlzTmFtZXMuc2xpY2UoMCwgc3VuZGF5SW5kZXgpLFxuICAgIF0gYXMgV0VFS19EQVlTX05BTUVTO1xufTtcblxuZXhwb3J0IGNvbnN0IFRVSV9PUkRFUkVEX1NIT1JUX1dFRUtfREFZUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxcbiAgICBPYnNlcnZhYmxlPFdFRUtfREFZU19OQU1FUz5cbj4oYE9yZGVyZWQgY2FsZW5kYXJzIGkxOG4gdGV4dHNgLCB7XG4gICAgZmFjdG9yeTogKCkgPT4ge1xuICAgICAgICBjb25zdCBmaXJzdERheU9mV2Vla0luZGV4ID0gaW5qZWN0KFRVSV9GSVJTVF9EQVlfT0ZfV0VFSyk7XG5cbiAgICAgICAgcmV0dXJuIGluamVjdChUVUlfU0hPUlRfV0VFS19EQVlTKS5waXBlKFxuICAgICAgICAgICAgbWFwKGNvbnZlcnRUb1N1bmRheUZpcnN0V2Vla0Zvcm1hdCksXG4gICAgICAgICAgICBtYXAoXG4gICAgICAgICAgICAgICAgd2Vla0RheXMgPT5cbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4ud2Vla0RheXMuc2xpY2UoZmlyc3REYXlPZldlZWtJbmRleCksXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi53ZWVrRGF5cy5zbGljZSgwLCBmaXJzdERheU9mV2Vla0luZGV4KSxcbiAgICAgICAgICAgICAgICAgICAgXSBhcyBXRUVLX0RBWVNfTkFNRVMsXG4gICAgICAgICAgICApLFxuICAgICAgICApO1xuICAgIH0sXG59KTtcbiJdfQ==