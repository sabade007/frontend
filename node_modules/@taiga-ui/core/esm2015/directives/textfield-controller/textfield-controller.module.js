import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { TuiTextfieldAutocompleteDirective } from './textfield-autocomplete.directive';
import { TuiTextfieldCleanerDirective } from './textfield-cleaner.directive';
import { TuiTextfieldCustomContentDirective } from './textfield-custom-content.directive';
import { TuiTextfieldExampleTextDirective } from './textfield-example-text.directive';
import { TuiTextfieldInputModeDirective } from './textfield-input-mode.directive';
import { TuiTextfieldLabelOutsideDirective } from './textfield-label-outside.directive';
import { TuiTextfieldMaxLengthDirective } from './textfield-max-length.directive';
import { TuiTextfieldSizeDirective } from './textfield-size.directive';
import { TuiTextfieldTypeDirective } from './textfield-type.directive';
let TuiTextfieldControllerModule = class TuiTextfieldControllerModule {
};
TuiTextfieldControllerModule = __decorate([
    NgModule({
        declarations: [
            TuiTextfieldAutocompleteDirective,
            TuiTextfieldCleanerDirective,
            TuiTextfieldCustomContentDirective,
            TuiTextfieldExampleTextDirective,
            TuiTextfieldInputModeDirective,
            TuiTextfieldLabelOutsideDirective,
            TuiTextfieldMaxLengthDirective,
            TuiTextfieldSizeDirective,
            TuiTextfieldTypeDirective,
        ],
        exports: [
            TuiTextfieldAutocompleteDirective,
            TuiTextfieldCleanerDirective,
            TuiTextfieldCustomContentDirective,
            TuiTextfieldExampleTextDirective,
            TuiTextfieldInputModeDirective,
            TuiTextfieldLabelOutsideDirective,
            TuiTextfieldMaxLengthDirective,
            TuiTextfieldSizeDirective,
            TuiTextfieldTypeDirective,
        ],
    })
], TuiTextfieldControllerModule);
export { TuiTextfieldControllerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWNvbnRyb2xsZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1jb250cm9sbGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV2QyxPQUFPLEVBQUMsaUNBQWlDLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNyRixPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRSxPQUFPLEVBQUMsa0NBQWtDLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUN4RixPQUFPLEVBQUMsZ0NBQWdDLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRixPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNoRixPQUFPLEVBQUMsaUNBQWlDLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUN0RixPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNoRixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNyRSxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQTBCckUsSUFBYSw0QkFBNEIsR0FBekMsTUFBYSw0QkFBNEI7Q0FBRyxDQUFBO0FBQS9CLDRCQUE0QjtJQXhCeEMsUUFBUSxDQUFDO1FBQ04sWUFBWSxFQUFFO1lBQ1YsaUNBQWlDO1lBQ2pDLDRCQUE0QjtZQUM1QixrQ0FBa0M7WUFDbEMsZ0NBQWdDO1lBQ2hDLDhCQUE4QjtZQUM5QixpQ0FBaUM7WUFDakMsOEJBQThCO1lBQzlCLHlCQUF5QjtZQUN6Qix5QkFBeUI7U0FDNUI7UUFDRCxPQUFPLEVBQUU7WUFDTCxpQ0FBaUM7WUFDakMsNEJBQTRCO1lBQzVCLGtDQUFrQztZQUNsQyxnQ0FBZ0M7WUFDaEMsOEJBQThCO1lBQzlCLGlDQUFpQztZQUNqQyw4QkFBOEI7WUFDOUIseUJBQXlCO1lBQ3pCLHlCQUF5QjtTQUM1QjtLQUNKLENBQUM7R0FDVyw0QkFBNEIsQ0FBRztTQUEvQiw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtUdWlUZXh0ZmllbGRBdXRvY29tcGxldGVEaXJlY3RpdmV9IGZyb20gJy4vdGV4dGZpZWxkLWF1dG9jb21wbGV0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlUZXh0ZmllbGRDbGVhbmVyRGlyZWN0aXZlfSBmcm9tICcuL3RleHRmaWVsZC1jbGVhbmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRleHRmaWVsZEN1c3RvbUNvbnRlbnREaXJlY3RpdmV9IGZyb20gJy4vdGV4dGZpZWxkLWN1c3RvbS1jb250ZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRleHRmaWVsZEV4YW1wbGVUZXh0RGlyZWN0aXZlfSBmcm9tICcuL3RleHRmaWVsZC1leGFtcGxlLXRleHQuZGlyZWN0aXZlJztcbmltcG9ydCB7VHVpVGV4dGZpZWxkSW5wdXRNb2RlRGlyZWN0aXZlfSBmcm9tICcuL3RleHRmaWVsZC1pbnB1dC1tb2RlLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZX0gZnJvbSAnLi90ZXh0ZmllbGQtbGFiZWwtb3V0c2lkZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmV9IGZyb20gJy4vdGV4dGZpZWxkLW1heC1sZW5ndGguZGlyZWN0aXZlJztcbmltcG9ydCB7VHVpVGV4dGZpZWxkU2l6ZURpcmVjdGl2ZX0gZnJvbSAnLi90ZXh0ZmllbGQtc2l6ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlfSBmcm9tICcuL3RleHRmaWVsZC10eXBlLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFR1aVRleHRmaWVsZEF1dG9jb21wbGV0ZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ3VzdG9tQ29udGVudERpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkRXhhbXBsZVRleHREaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlLFxuICAgICAgICBUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZFR5cGVEaXJlY3RpdmUsXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFR1aVRleHRmaWVsZEF1dG9jb21wbGV0ZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ3VzdG9tQ29udGVudERpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkRXhhbXBsZVRleHREaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlLFxuICAgICAgICBUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZFR5cGVEaXJlY3RpdmUsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkQ29udHJvbGxlck1vZHVsZSB7fVxuIl19