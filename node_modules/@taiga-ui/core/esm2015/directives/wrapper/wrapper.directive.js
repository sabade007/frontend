import { __decorate, __param } from "tslib";
import { Directive, HostBinding, Inject, Input } from '@angular/core';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
// TODO: 3.0 remove `tui-wrapper` mode
let TuiWrapperDirective = class TuiWrapperDirective {
    constructor(mode$) {
        this.mode$ = mode$;
        this.disabled = false;
        this.readOnly = false;
        // TODO: 3.0 Rename to `hover`
        this.hovered = null;
        // TODO: 3.0 Rename to `active`
        this.pressed = null;
        this.focused = false;
        this.invalid = false;
        this.appearance = '';
    }
    get computedInvalid() {
        return !this.disabled && !this.readOnly && this.invalid;
    }
    get computedFocused() {
        return this.focused && !this.disabled;
    }
    get interactiveState() {
        if (this.disabled) {
            return "disabled" /* Disabled */;
        }
        if (this.readOnly) {
            return "readonly" /* Readonly */;
        }
        if (this.pressed) {
            return "pressed" /* Pressed */;
        }
        if (this.hovered) {
            return "hovered" /* Hovered */;
        }
        return null;
    }
    get noHover() {
        return this.readOnly || this.hovered === false;
    }
    get noActive() {
        return this.readOnly || this.pressed === false;
    }
};
TuiWrapperDirective.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input()
], TuiWrapperDirective.prototype, "disabled", void 0);
__decorate([
    Input()
], TuiWrapperDirective.prototype, "readOnly", void 0);
__decorate([
    Input()
], TuiWrapperDirective.prototype, "hovered", void 0);
__decorate([
    Input()
], TuiWrapperDirective.prototype, "pressed", void 0);
__decorate([
    Input()
], TuiWrapperDirective.prototype, "focused", void 0);
__decorate([
    Input()
], TuiWrapperDirective.prototype, "invalid", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-appearance')
], TuiWrapperDirective.prototype, "appearance", void 0);
__decorate([
    HostBinding('class._invalid')
], TuiWrapperDirective.prototype, "computedInvalid", null);
__decorate([
    HostBinding('class._focused')
], TuiWrapperDirective.prototype, "computedFocused", null);
__decorate([
    HostBinding('attr.data-state')
], TuiWrapperDirective.prototype, "interactiveState", null);
__decorate([
    HostBinding('class._no-hover')
], TuiWrapperDirective.prototype, "noHover", null);
__decorate([
    HostBinding('class._no-active')
], TuiWrapperDirective.prototype, "noActive", null);
TuiWrapperDirective = __decorate([
    Directive({
        selector: 'tui-wrapper, [tuiWrapper]',
        providers: [MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
    }),
    __param(0, Inject(TUI_MODE))
], TuiWrapperDirective);
export { TuiWrapperDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL3dyYXBwZXIvIiwic291cmNlcyI6WyJ3cmFwcGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVwRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFaEMsc0NBQXNDO0FBUXRDLElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0lBeUI1QixZQUF1QyxLQUF1QztRQUF2QyxVQUFLLEdBQUwsS0FBSyxDQUFrQztRQXZCOUUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLDhCQUE4QjtRQUU5QixZQUFPLEdBQW1CLElBQUksQ0FBQztRQUUvQiwrQkFBK0I7UUFFL0IsWUFBTyxHQUFtQixJQUFJLENBQUM7UUFHL0IsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUdoQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSWhCLGVBQVUsR0FBRyxFQUFFLENBQUM7SUFFaUUsQ0FBQztJQUdsRixJQUFJLGVBQWU7UUFDZixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUM1RCxDQUFDO0lBR0QsSUFBSSxlQUFlO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUMxQyxDQUFDO0lBR0QsSUFBSSxnQkFBZ0I7UUFDaEIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsaUNBQW9DO1NBQ3ZDO1FBRUQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsaUNBQW9DO1NBQ3ZDO1FBRUQsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2QsK0JBQW1DO1NBQ3RDO1FBRUQsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2QsK0JBQW1DO1NBQ3RDO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUdELElBQUksT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLEtBQUssQ0FBQztJQUNuRCxDQUFDO0lBR0QsSUFBSSxRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssS0FBSyxDQUFDO0lBQ25ELENBQUM7Q0FDSixDQUFBOztZQTFDaUQsVUFBVSx1QkFBM0MsTUFBTSxTQUFDLFFBQVE7O0FBdkI1QjtJQURDLEtBQUssRUFBRTtxREFDUztBQUdqQjtJQURDLEtBQUssRUFBRTtxREFDUztBQUlqQjtJQURDLEtBQUssRUFBRTtvREFDdUI7QUFJL0I7SUFEQyxLQUFLLEVBQUU7b0RBQ3VCO0FBRy9CO0lBREMsS0FBSyxFQUFFO29EQUNRO0FBR2hCO0lBREMsS0FBSyxFQUFFO29EQUNRO0FBSWhCO0lBRkMsS0FBSyxFQUFFO0lBQ1AsV0FBVyxDQUFDLHNCQUFzQixDQUFDO3VEQUNwQjtBQUtoQjtJQURDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzswREFHN0I7QUFHRDtJQURDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzswREFHN0I7QUFHRDtJQURDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQzsyREFtQjlCO0FBR0Q7SUFEQyxXQUFXLENBQUMsaUJBQWlCLENBQUM7a0RBRzlCO0FBR0Q7SUFEQyxXQUFXLENBQUMsa0JBQWtCLENBQUM7bURBRy9CO0FBbEVRLG1CQUFtQjtJQVAvQixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsMkJBQTJCO1FBQ3JDLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQztRQUMxQixJQUFJLEVBQUU7WUFDRixvQkFBb0IsRUFBRSxPQUFPO1NBQ2hDO0tBQ0osQ0FBQztJQTBCZSxXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtHQXpCcEIsbUJBQW1CLENBbUUvQjtTQW5FWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlJbnRlcmFjdGl2ZVN0YXRlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9lbnVtcyc7XG5pbXBvcnQge01PREVfUFJPVklERVJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Byb3ZpZGVycyc7XG5pbXBvcnQge1RVSV9NT0RFfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHtUdWlCcmlnaHRuZXNzfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG4vLyBUT0RPOiAzLjAgcmVtb3ZlIGB0dWktd3JhcHBlcmAgbW9kZVxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICd0dWktd3JhcHBlciwgW3R1aVdyYXBwZXJdJyxcbiAgICBwcm92aWRlcnM6IFtNT0RFX1BST1ZJREVSXSxcbiAgICBob3N0OiB7XG4gICAgICAgICcoJC5kYXRhLW1vZGUuYXR0ciknOiAnbW9kZSQnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVdyYXBwZXJEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpXG4gICAgZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgcmVhZE9ubHkgPSBmYWxzZTtcblxuICAgIC8vIFRPRE86IDMuMCBSZW5hbWUgdG8gYGhvdmVyYFxuICAgIEBJbnB1dCgpXG4gICAgaG92ZXJlZDogYm9vbGVhbiB8IG51bGwgPSBudWxsO1xuXG4gICAgLy8gVE9ETzogMy4wIFJlbmFtZSB0byBgYWN0aXZlYFxuICAgIEBJbnB1dCgpXG4gICAgcHJlc3NlZDogYm9vbGVhbiB8IG51bGwgPSBudWxsO1xuXG4gICAgQElucHV0KClcbiAgICBmb2N1c2VkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGludmFsaWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYXBwZWFyYW5jZScpXG4gICAgYXBwZWFyYW5jZSA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+KSB7fVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5faW52YWxpZCcpXG4gICAgZ2V0IGNvbXB1dGVkSW52YWxpZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmRpc2FibGVkICYmICF0aGlzLnJlYWRPbmx5ICYmIHRoaXMuaW52YWxpZDtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9mb2N1c2VkJylcbiAgICBnZXQgY29tcHV0ZWRGb2N1c2VkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5mb2N1c2VkICYmICF0aGlzLmRpc2FibGVkO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXN0YXRlJylcbiAgICBnZXQgaW50ZXJhY3RpdmVTdGF0ZSgpOiBUdWlJbnRlcmFjdGl2ZVN0YXRlIHwgc3RyaW5nIHwgbnVsbCB7XG4gICAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gVHVpSW50ZXJhY3RpdmVTdGF0ZS5EaXNhYmxlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnJlYWRPbmx5KSB7XG4gICAgICAgICAgICByZXR1cm4gVHVpSW50ZXJhY3RpdmVTdGF0ZS5SZWFkb25seTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnByZXNzZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBUdWlJbnRlcmFjdGl2ZVN0YXRlLlByZXNzZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5ob3ZlcmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gVHVpSW50ZXJhY3RpdmVTdGF0ZS5Ib3ZlcmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fbm8taG92ZXInKVxuICAgIGdldCBub0hvdmVyKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkT25seSB8fCB0aGlzLmhvdmVyZWQgPT09IGZhbHNlO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX25vLWFjdGl2ZScpXG4gICAgZ2V0IG5vQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkT25seSB8fCB0aGlzLnByZXNzZWQgPT09IGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==